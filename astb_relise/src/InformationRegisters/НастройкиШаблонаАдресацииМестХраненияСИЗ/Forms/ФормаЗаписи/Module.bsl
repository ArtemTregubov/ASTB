
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьФорму();
	УстановитьВидимость();
	УстановитьДоступность();
	ЗаполнитьРезультат();
	ОбновитьПредставления();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.НастройкиШаблонаАдресации	= Новый ХранилищеЗначения(СформироватьСтруктуруНастроек());	
	
КонецПроцедуры

&НаСервере
Функция СформироватьСтруктуруНастроек()
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ЭлементАдреса1",Новый Структура("Использовать_ЭлементАдреса1,ПредставлениеПустогоЗначения_ЭлементАдреса1,Представление_ЭлементАдреса1",Использовать_ЭлементАдреса1,ПредставлениеПустогоЗначения_ЭлементАдреса1,Представление_ЭлементАдреса1));
	СтруктураНастроек.Вставить("ЭлементАдреса2",Новый Структура("Использовать_ЭлементАдреса2,ПредставлениеПустогоЗначения_ЭлементАдреса2,Представление_ЭлементАдреса2",Использовать_ЭлементАдреса2,ПредставлениеПустогоЗначения_ЭлементАдреса2,Представление_ЭлементАдреса2));
	СтруктураНастроек.Вставить("ЭлементАдреса3",Новый Структура("Использовать_ЭлементАдреса3,ПредставлениеПустогоЗначения_ЭлементАдреса3,Представление_ЭлементАдреса3",Использовать_ЭлементАдреса3,ПредставлениеПустогоЗначения_ЭлементАдреса3,Представление_ЭлементАдреса3));
	СтруктураНастроек.Вставить("ЭлементАдреса4",Новый Структура("Использовать_ЭлементАдреса4,ПредставлениеПустогоЗначения_ЭлементАдреса4,Представление_ЭлементАдреса4",Использовать_ЭлементАдреса4,ПредставлениеПустогоЗначения_ЭлементАдреса4,Представление_ЭлементАдреса4));
	СтруктураНастроек.Вставить("ЭлементАдреса5",Новый Структура("Использовать_ЭлементАдреса5,ПредставлениеПустогоЗначения_ЭлементАдреса5,Представление_ЭлементАдреса5",Использовать_ЭлементАдреса5,ПредставлениеПустогоЗначения_ЭлементАдреса5,Представление_ЭлементАдреса5));
	СтруктураНастроек.Вставить("Разделитель",						Разделитель);
	СтруктураНастроек.Вставить("ИспользоватьПроизвольныйАдрес",		ИспользоватьПроизвольныйАдрес);
	СтруктураНастроек.Вставить("ОдинАдресДляНесколькихСотрудников",	ОдинАдресДляНесколькихСотрудников);
	
	Возврат СтруктураНастроек;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРезультат()
	
	Результат_ЭлементАдреса1 = ?(ПустаяСтрока(Результат_ЭлементАдреса1), ПредставлениеПустогоЗначения_ЭлементАдреса1, Результат_ЭлементАдреса1);
	Результат_ЭлементАдреса2 = ?(ПустаяСтрока(Результат_ЭлементАдреса2), ПредставлениеПустогоЗначения_ЭлементАдреса2, Результат_ЭлементАдреса2);
	Результат_ЭлементАдреса3 = ?(ПустаяСтрока(Результат_ЭлементАдреса3), ПредставлениеПустогоЗначения_ЭлементАдреса3, Результат_ЭлементАдреса3);
	Результат_ЭлементАдреса4 = ?(ПустаяСтрока(Результат_ЭлементАдреса4), ПредставлениеПустогоЗначения_ЭлементАдреса4, Результат_ЭлементАдреса4);
	Результат_ЭлементАдреса5 = ?(ПустаяСтрока(Результат_ЭлементАдреса5), ПредставлениеПустогоЗначения_ЭлементАдреса5, Результат_ЭлементАдреса5);
	
	Пример = СформироватьАдрес();
	
КонецПроцедуры

&НаСервере
Функция СформироватьАдрес()
	
	Если Разделитель = "П" Тогда
		РазделительСтрока = " ";	
	ИначеЕсли Разделитель = "Н"	Тогда
		РазделительСтрока = "";	
	Иначе
		РазделительСтрока = Разделитель;
	КонецЕсли;
	
	ЭлементАдреса1 = ?(Использовать_ЭлементАдреса1,СокрЛП(Результат_ЭлементАдреса1) + ?(ПустаяСтрока(Результат_ЭлементАдреса1), ПредставлениеПустогоЗначения_ЭлементАдреса1, РазделительСтрока),"");
	ЭлементАдреса2 = ?(Использовать_ЭлементАдреса2,СокрЛП(Результат_ЭлементАдреса2) + ?(ПустаяСтрока(Результат_ЭлементАдреса2), ПредставлениеПустогоЗначения_ЭлементАдреса2, РазделительСтрока),"");
	ЭлементАдреса3 = ?(Использовать_ЭлементАдреса3,СокрЛП(Результат_ЭлементАдреса3) + ?(ПустаяСтрока(Результат_ЭлементАдреса3), ПредставлениеПустогоЗначения_ЭлементАдреса3, РазделительСтрока),"");
	ЭлементАдреса4 = ?(Использовать_ЭлементАдреса4,СокрЛП(Результат_ЭлементАдреса4) + ?(ПустаяСтрока(Результат_ЭлементАдреса4), ПредставлениеПустогоЗначения_ЭлементАдреса4, РазделительСтрока),"");
	ЭлементАдреса5 = ?(Использовать_ЭлементАдреса5,СокрЛП(Результат_ЭлементАдреса5) + ?(ПустаяСтрока(Результат_ЭлементАдреса5), ПредставлениеПустогоЗначения_ЭлементАдреса5, РазделительСтрока),"");
	
	Адрес = ЭлементАдреса1 + ЭлементАдреса2 + ЭлементАдреса3 + ЭлементАдреса4 + ЭлементАдреса5;
	
	Если Прав(Адрес, 1) = РазделительСтрока Тогда
		Адрес = Лев(Адрес, СтрДлина(Адрес)-1);
	КонецЕсли;
	
	Возврат ?(ПустаяСтрока(Адрес),"Адрес не определен",Адрес);
	
КонецФункции
	
&НаСервере
Процедура ЗаполнитьФорму()
	
	НаборЗаписей = РегистрыСведений.НастройкиШаблонаАдресацииМестХраненияСИЗ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Запись.Организация);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		ИспользоватьПроизвольныйАдрес 		= Ложь;		
		ОдинАдресДляНесколькихСотрудников 	= Ложь;
		
		//включаем поля элементов адреса
		Использовать_ЭлементАдреса1 = Истина;
		Использовать_ЭлементАдреса2 = Истина;
		Использовать_ЭлементАдреса3 = Истина;
		Использовать_ЭлементАдреса4 = Истина;
		Использовать_ЭлементАдреса5 = Истина;
		
		//значения незаполненных полей
		ПредставлениеПустогоЗначения_ЭлементАдреса1 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса2 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса3 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса4 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса5 = "0";
		
		//заголовки элементов адреса
		Представление_ЭлементАдреса1 = "Помещение";
		Представление_ЭлементАдреса2 = "Секция";
		Представление_ЭлементАдреса3 = "Линия";
		Представление_ЭлементАдреса4 = "Стеллаж";
		Представление_ЭлементАдреса5 = "Полка";
		
		Разделитель = "-";
		
	Иначе
		
		СтруктураНастроек = НаборЗаписей[0].НастройкиШаблонаАдресации.Получить();
		
		ИспользоватьПроизвольныйАдрес 		= ?(СтруктураНастроек.Свойство("ИспользоватьПроизвольныйАдрес") = Ложь, Ложь, СтруктураНастроек.ИспользоватьПроизвольныйАдрес);		
		ОдинАдресДляНесколькихСотрудников 	= ?(СтруктураНастроек.Свойство("ОдинАдресДляНесколькихСотрудников") = Ложь, Ложь, СтруктураНастроек.ОдинАдресДляНесколькихСотрудников);
		
		СтруктураНастроек_ЭлементАдреса1 = СтруктураНастроек.ЭлементАдреса1;
		СтруктураНастроек_ЭлементАдреса2 = СтруктураНастроек.ЭлементАдреса2;
		СтруктураНастроек_ЭлементАдреса3 = СтруктураНастроек.ЭлементАдреса3;
		СтруктураНастроек_ЭлементАдреса4 = СтруктураНастроек.ЭлементАдреса4;
		СтруктураНастроек_ЭлементАдреса5 = СтруктураНастроек.ЭлементАдреса5;
		
		Использовать_ЭлементАдреса1 = СтруктураНастроек_ЭлементАдреса1.Использовать_ЭлементАдреса1;
		Использовать_ЭлементАдреса2 = СтруктураНастроек_ЭлементАдреса2.Использовать_ЭлементАдреса2;
		Использовать_ЭлементАдреса3 = СтруктураНастроек_ЭлементАдреса3.Использовать_ЭлементАдреса3;
		Использовать_ЭлементАдреса4 = СтруктураНастроек_ЭлементАдреса4.Использовать_ЭлементАдреса4;
		Использовать_ЭлементАдреса5 = СтруктураНастроек_ЭлементАдреса5.Использовать_ЭлементАдреса5;
		
		ПредставлениеПустогоЗначения_ЭлементАдреса1 = СтруктураНастроек_ЭлементАдреса1.ПредставлениеПустогоЗначения_ЭлементАдреса1;
		ПредставлениеПустогоЗначения_ЭлементАдреса2 = СтруктураНастроек_ЭлементАдреса2.ПредставлениеПустогоЗначения_ЭлементАдреса2;
		ПредставлениеПустогоЗначения_ЭлементАдреса3 = СтруктураНастроек_ЭлементАдреса3.ПредставлениеПустогоЗначения_ЭлементАдреса3;
		ПредставлениеПустогоЗначения_ЭлементАдреса4 = СтруктураНастроек_ЭлементАдреса4.ПредставлениеПустогоЗначения_ЭлементАдреса4;
		ПредставлениеПустогоЗначения_ЭлементАдреса5 = СтруктураНастроек_ЭлементАдреса5.ПредставлениеПустогоЗначения_ЭлементАдреса5;
		
		Представление_ЭлементАдреса1 = СтруктураНастроек_ЭлементАдреса1.Представление_ЭлементАдреса1;
		Представление_ЭлементАдреса2 = СтруктураНастроек_ЭлементАдреса2.Представление_ЭлементАдреса2;
		Представление_ЭлементАдреса3 = СтруктураНастроек_ЭлементАдреса3.Представление_ЭлементАдреса3;
		Представление_ЭлементАдреса4 = СтруктураНастроек_ЭлементАдреса4.Представление_ЭлементАдреса4;
		Представление_ЭлементАдреса5 = СтруктураНастроек_ЭлементАдреса5.Представление_ЭлементАдреса5;
		
		Разделитель = СтруктураНастроек.Разделитель;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставления()
	
	ЭтаФорма.Элементы.Результат_ЭлементАдреса1.Заголовок = ?(ПустаяСтрока(Представление_ЭлементАдреса1),"Помещение",Представление_ЭлементАдреса1);
	ЭтаФорма.Элементы.Результат_ЭлементАдреса2.Заголовок = ?(ПустаяСтрока(Представление_ЭлементАдреса2),"Секция",Представление_ЭлементАдреса2);
	ЭтаФорма.Элементы.Результат_ЭлементАдреса3.Заголовок = ?(ПустаяСтрока(Представление_ЭлементАдреса3),"Линия",Представление_ЭлементАдреса3);
	ЭтаФорма.Элементы.Результат_ЭлементАдреса4.Заголовок = ?(ПустаяСтрока(Представление_ЭлементАдреса4),"Стеллаж",Представление_ЭлементАдреса4);
	ЭтаФорма.Элементы.Результат_ЭлементАдреса5.Заголовок = ?(ПустаяСтрока(Представление_ЭлементАдреса5),"Полка",Представление_ЭлементАдреса5);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	ЭтаФорма.Элементы.Результат_ЭлементАдреса1.Видимость = Использовать_ЭлементАдреса1;
	ЭтаФорма.Элементы.Результат_ЭлементАдреса2.Видимость = Использовать_ЭлементАдреса2;
	ЭтаФорма.Элементы.Результат_ЭлементАдреса3.Видимость = Использовать_ЭлементАдреса3;
	ЭтаФорма.Элементы.Результат_ЭлементАдреса4.Видимость = Использовать_ЭлементАдреса4;
	ЭтаФорма.Элементы.Результат_ЭлементАдреса5.Видимость = Использовать_ЭлементАдреса5;
	
	ЭтаФорма.Элементы.Группа1.Видимость = НЕ ИспользоватьПроизвольныйАдрес;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность()
	
	ЭтаФорма.Элементы.ПредставлениеПустогоЗначения_ЭлементАдреса1.Доступность 	= Использовать_ЭлементАдреса1;
	ЭтаФорма.Элементы.Представление_ЭлементАдреса1.Доступность 					= Использовать_ЭлементАдреса1;
	ЭтаФорма.Элементы.ПредставлениеПустогоЗначения_ЭлементАдреса2.Доступность 	= Использовать_ЭлементАдреса2;
	ЭтаФорма.Элементы.Представление_ЭлементАдреса2.Доступность 					= Использовать_ЭлементАдреса2;
	ЭтаФорма.Элементы.ПредставлениеПустогоЗначения_ЭлементАдреса3.Доступность 	= Использовать_ЭлементАдреса3;
	ЭтаФорма.Элементы.Представление_ЭлементАдреса3.Доступность 					= Использовать_ЭлементАдреса3;
	ЭтаФорма.Элементы.ПредставлениеПустогоЗначения_ЭлементАдреса4.Доступность 	= Использовать_ЭлементАдреса4;
	ЭтаФорма.Элементы.Представление_ЭлементАдреса4.Доступность 					= Использовать_ЭлементАдреса4;
	ЭтаФорма.Элементы.ПредставлениеПустогоЗначения_ЭлементАдреса5.Доступность 	= Использовать_ЭлементАдреса5;
	ЭтаФорма.Элементы.Представление_ЭлементАдреса5.Доступность 					= Использовать_ЭлементАдреса5;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделительПриИзменении(Элемент)
	
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

#Область ИзменениеИспользованияЭлементаАдреса

&НаКлиенте
Процедура Использовать_ЭлементАдреса1ПриИзменении(Элемент)
	
	УстановитьВидимость();
	УстановитьДоступность();
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Использовать_ЭлементАдреса2ПриИзменении(Элемент)
	
	УстановитьВидимость();
	УстановитьДоступность();
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Использовать_ЭлементАдреса3ПриИзменении(Элемент)
	
	УстановитьВидимость();
	УстановитьДоступность();
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Использовать_ЭлементАдреса4ПриИзменении(Элемент)
	
	УстановитьВидимость();
	УстановитьДоступность();
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Использовать_ЭлементАдреса5ПриИзменении(Элемент)
	
	УстановитьВидимость();
	УстановитьДоступность();
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеПредставленияЭлементаАдреса

&НаКлиенте
Процедура Представление_ЭлементАдреса1ПриИзменении(Элемент)
	
	ОбновитьПредставления();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Представление_ЭлементАдреса2ПриИзменении(Элемент)
	
	ОбновитьПредставления();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Представление_ЭлементАдреса3ПриИзменении(Элемент)
	
	ОбновитьПредставления();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Представление_ЭлементАдреса4ПриИзменении(Элемент)
	
	ОбновитьПредставления();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Представление_ЭлементАдреса5ПриИзменении(Элемент)
	
	ОбновитьПредставления();
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеПредставленияПустогоЗначения

&НаКлиенте
Процедура ПредставлениеПустогоЗначения_ЭлементАдреса1ПриИзменении(Элемент)
	
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПустогоЗначения_ЭлементАдреса2ПриИзменении(Элемент)
	
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПустогоЗначения_ЭлементАдреса3ПриИзменении(Элемент)
	
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПустогоЗначения_ЭлементАдреса4ПриИзменении(Элемент)
	
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПустогоЗначения_ЭлементАдреса5ПриИзменении(Элемент)
	
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ИзменениеРезультатаЭлементаАдреса

&НаКлиенте
Процедура Результат_ЭлементАдреса1ПриИзменении(Элемент)
	
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Результат_ЭлементАдреса2ПриИзменении(Элемент)
	
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура Результат_ЭлементАдреса3ПриИзменении(Элемент)
	
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Результат_ЭлементАдреса4ПриИзменении(Элемент)
	
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Результат_ЭлементАдреса5ПриИзменении(Элемент)
	
	ЗаполнитьРезультат();
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ИспользоватьПроизвольныйАдресПриИзменении(Элемент)
	
	Если ИспользоватьПроизвольныйАдрес Тогда
		
		ОчиститьСтруктурыАдресов();
		
	Иначе
		
		//включаем поля элементов адреса
		Использовать_ЭлементАдреса1 = Истина;
		Использовать_ЭлементАдреса2 = Истина;
		Использовать_ЭлементАдреса3 = Истина;
		Использовать_ЭлементАдреса4 = Истина;
		Использовать_ЭлементАдреса5 = Истина;
		
		//значения незаполненных полей
		ПредставлениеПустогоЗначения_ЭлементАдреса1 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса2 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса3 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса4 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса5 = "0";
		
		//заголовки элементов адреса
		Представление_ЭлементАдреса1 = "Помещение";
		Представление_ЭлементАдреса2 = "Секция";
		Представление_ЭлементАдреса3 = "Линия";
		Представление_ЭлементАдреса4 = "Стеллаж";
		Представление_ЭлементАдреса5 = "Полка";
		
		Разделитель = "-";
		
	КонецЕсли;	
	
	ОбновитьПредставления();
	
	УстановитьВидимость();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСтруктурыАдресов()
	
	Использовать_ЭлементАдреса1 = Ложь;
	Использовать_ЭлементАдреса2 = Ложь;
	Использовать_ЭлементАдреса3 = Ложь;
	Использовать_ЭлементАдреса4 = Ложь;
	Использовать_ЭлементАдреса5 = Ложь;
	
	ПредставлениеПустогоЗначения_ЭлементАдреса1 = "";
	ПредставлениеПустогоЗначения_ЭлементАдреса2 = "";
	ПредставлениеПустогоЗначения_ЭлементАдреса3 = "";
	ПредставлениеПустогоЗначения_ЭлементАдреса4 = "";
	ПредставлениеПустогоЗначения_ЭлементАдреса5 = "";
	
	Представление_ЭлементАдреса1 = "";
	Представление_ЭлементАдреса2 = "";
	Представление_ЭлементАдреса3 = "";
	Представление_ЭлементАдреса4 = "";
	Представление_ЭлементАдреса5 = "";
	
	Разделитель = "";
	
КонецПроцедуры	

&НаКлиенте
Процедура ОдинАдресДляНесколькихСотрудниковПриИзменении(Элемент)
	
	Модифицированность = Истина;	
	
КонецПроцедуры
