#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Функция ПолучитьРаботу(КодРаботы, НаименованиеРаботы = Неопределено, ТекущийРодитель = Неопределено)
	
	ТекущаяРабота = Справочники.ВредныеИОпасныеПроизводственныеРаботы.НайтиПоКоду(КодРаботы);
	
	Если ТекущаяРабота.Пустая() И НЕ НаименованиеРаботы = Неопределено Тогда
		НоваяРабота 				= Справочники.ВредныеИОпасныеПроизводственныеРаботы.СоздатьЭлемент();
		НоваяРабота.Код 			= КодРаботы;
		НоваяРабота.Наименование 	= НаименованиеРаботы;
		НоваяРабота.Описание 		= НаименованиеРаботы;
		НоваяРабота.Родитель 		= ТекущийРодитель;
		НоваяРабота.Записать();
		ТекущаяРабота = НоваяРабота.Ссылка;		
	КонецЕсли;
	
	Возврат ТекущаяРабота;
	
КонецФункции

Функция ПолучитьВрача(НаименованиеВрача)
	
	ТекущийВрач = Справочники.Врачи.НайтиПоНаименованию(НаименованиеВрача,Истина);
	
	Если ТекущийВрач.Пустая() Тогда
		НовыйВрач 				= Справочники.Врачи.СоздатьЭлемент();
		НовыйВрач.Наименование 	= НаименованиеВрача;
		НовыйВрач.УстановитьНовыйКод();
		НовыйВрач.Записать();
		ТекущийВрач = НовыйВрач.Ссылка;		
	КонецЕсли;
	
	Возврат ТекущийВрач;
	
КонецФункции	

Функция ПолучитьИсследование(НаименованиеИсследования)
	
	ТекущееИсследование = Справочники.ЛабораторныеИФункциональныеИсследования.НайтиПоРеквизиту("Описание",НаименованиеИсследования);
	
	Если ТекущееИсследование.Пустая() Тогда
		НовоеИсследование 				= Справочники.ЛабораторныеИФункциональныеИсследования.СоздатьЭлемент();
		НовоеИсследование.Наименование 	= НаименованиеИсследования;
		НовоеИсследование.Описание 		= НаименованиеИсследования;
		НовоеИсследование.УстановитьНовыйКод();
		НовоеИсследование.Записать();
		ТекущееИсследование = НовоеИсследование.Ссылка;		
	КонецЕсли;
	
	Возврат ТекущееИсследование;
	
КонецФункции

Функция ПолучитьПротивопоказание(НаименованиеПротивопоказания)
	
	ТекущееПротивопоказание = Справочники.ДополнительныеМедицинскиеПротивопоказания.НайтиПоРеквизиту("Описание",НаименованиеПротивопоказания);
	
	Если ТекущееПротивопоказание.Пустая() Тогда
		НовоеПротивопоказание 				= Справочники.ДополнительныеМедицинскиеПротивопоказания.СоздатьЭлемент();
		НовоеПротивопоказание.Наименование 	= НаименованиеПротивопоказания;
		НовоеПротивопоказание.Описание 		= НаименованиеПротивопоказания;
		НовоеПротивопоказание.УстановитьНовыйКод();
		НовоеПротивопоказание.Записать();
		ТекущееПротивопоказание = НовоеПротивопоказание.Ссылка;		
	КонецЕсли;
	
	Возврат ТекущееПротивопоказание;
	
КонецФункции

Функция ПолучитьПериодичность(КоличествоЛет)
	
	Если КоличествоЛет = 0 Тогда
		Возврат Справочники.ПериодичностьВыдачиСИЗ.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодичностьВыдачиСИЗ.Ссылка КАК Периодичность
	|ИЗ
	|	Справочник.ПериодичностьВыдачиСИЗ КАК ПериодичностьВыдачиСИЗ
	|ГДЕ
	|	ПериодичностьВыдачиСИЗ.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|	И ПериодичностьВыдачиСИЗ.КоличествоВПериоде = 1
	|	И ПериодичностьВыдачиСИЗ.КоличествоПериодов = &КоличествоПериодов";
	
	Запрос.УстановитьПараметр("КоличествоПериодов",КоличествоЛет);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		НоваяПериодичность 						= Справочники.ПериодичностьВыдачиСИЗ.СоздатьЭлемент();
		НоваяПериодичность.КоличествоВПериоде 	= 1;
		НоваяПериодичность.КоличествоПериодов 	= КоличествоЛет;
		НоваяПериодичность.ТипПериода 			= Перечисления.ДоступныеПериодыОтчета.Год;
		НоваяПериодичность.Приоритет 			= Справочники.ПериодичностьВыдачиСИЗ.РассчитатьПриоритетПериодичности(НоваяПериодичность);
		НоваяПериодичность.Наименование 		= Справочники.ПериодичностьВыдачиСИЗ.СформироватьНаименованиеПериодичности(НоваяПериодичность);
		НоваяПериодичность.УстановитьНовыйКод();
		НоваяПериодичность.Записать();
		Возврат НоваяПериодичность.Ссылка;
	Иначе
		Возврат Результат.Выгрузить()[0].Периодичность;
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьИзКлассификатора() Экспорт	
	
	ВременныйФайлДанных 	= ПолучитьИмяВременногоФайла();
	МакетДанных 			= Справочники.ВредныеИОпасныеПроизводственныеРаботы.ПолучитьМакет("КлассификаторXML");
	МакетДанных.Записать(ВременныйФайлДанных);
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ВременныйФайлДанных);
	
	ТекущийРодитель = Справочники.ВредныеИОпасныеПроизводственныеРаботы.ПустаяСсылка();
	
	ТаблицаВрачей = НОВЫЙ ТаблицаЗначений;
	ТаблицаВрачей.Колонки.Добавить("Врач");
	ТаблицаВрачей.Колонки.Добавить("ПоРекомендации");
	ТаблицаВрачей.Колонки.Добавить("Периодичность");
	
	ТаблицаИсследований = НОВЫЙ ТаблицаЗначений;
	ТаблицаИсследований.Колонки.Добавить("Исследование");
	ТаблицаИсследований.Колонки.Добавить("ПоРекомендации");
	ТаблицаИсследований.Колонки.Добавить("Периодичность");
	
	ТаблицаПротивопоказаний = НОВЫЙ ТаблицаЗначений;
	ТаблицаПротивопоказаний.Колонки.Добавить("Противопоказание");
	
	Пока Чтение.Прочитать() Цикл
		
		Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			Если Чтение.ЛокальноеИмя = "danger_item" Тогда
				
				КодРаботы 			= СокрЛП(Чтение.ЗначениеАтрибута("danger_code"));
				НаименованиеРаботы	= СокрЛП(Чтение.ЗначениеАтрибута("danger_name"));
				
				ТекущийУровень 	= СтрЧислоВхождений(КодРаботы,".");
				
				Если ТекущийУровень = 1 Тогда
					ТекущийРодитель = Справочники.ВредныеИОпасныеПроизводственныеФакторы.ПустаяСсылка();
				Иначе
					ПозицияПредпоследнейТочки 	= СтрНайти(КодРаботы,".",НаправлениеПоиска.СКонца,СтрДлина(КодРаботы)-1);
					КодРодителя 				= Лев(КодРаботы,ПозицияПредпоследнейТочки);
					ТекущийРодитель 			= ПолучитьРаботу(КодРодителя);
				КонецЕсли;
				
				ТекущаяРабота = ПолучитьРаботу(КодРаботы, НаименованиеРаботы, ТекущийРодитель);
				
				ТаблицаВрачей.Очистить();
				ТаблицаИсследований.Очистить();
				ТаблицаПротивопоказаний.Очистить();
				
			КонецЕсли;
			
			Если Чтение.ЛокальноеИмя = "danger_doctor_item" Тогда
				
				Врач 			= СокрЛП(Чтение.ЗначениеАтрибута("danger_doctor_name"));
				Период			= Число(СокрЛП(Чтение.ЗначениеАтрибута("danger_doctor_period")));
				ПоРекомендации 	= ?(СокрЛП(Чтение.ЗначениеАтрибута("danger_doctor_recomended")) = "1", Истина, Ложь);
				
				НоваяСтрока 				= ТаблицаВрачей.Добавить();
				НоваяСтрока.Врач 			= ПолучитьВрача(Врач);
				НоваяСтрока.ПоРекомендации 	= ПоРекомендации;
				НоваяСтрока.Периодичность   = ПолучитьПериодичность(Период);
				
			КонецЕсли;
			
			Если Чтение.ЛокальноеИмя = "danger_research_item" Тогда
				
				Исследование 	= СокрЛП(Чтение.ЗначениеАтрибута("danger_research_name"));
				Период			= Число(СокрЛП(Чтение.ЗначениеАтрибута("danger_research_period")));
				ПоРекомендации 	= ?(СокрЛП(Чтение.ЗначениеАтрибута("danger_research_recomended")) = "1", Истина, Ложь);
				
				НоваяСтрока 				= ТаблицаИсследований.Добавить();
				НоваяСтрока.Исследование	= ПолучитьИсследование(Исследование);				
				НоваяСтрока.ПоРекомендации 	= ПоРекомендации;
				НоваяСтрока.Периодичность   = ПолучитьПериодичность(Период);
				
			КонецЕсли;
			
			Если Чтение.ЛокальноеИмя = "danger_contra_item" Тогда
				
				Противопоказание = СокрЛП(Чтение.ЗначениеАтрибута("danger_contra_name"));
				
				НоваяСтрока 					= ТаблицаПротивопоказаний.Добавить();
				НоваяСтрока.Противопоказание	= ПолучитьПротивопоказание(Противопоказание);
				
			КонецЕсли;			
			
			Если ЗначениеЗаполнено(ТекущаяРабота) Тогда
				
				РаботаОбъект = ТекущаяРабота.ПолучитьОбъект();
				РаботаОбъект.Врачи.Загрузить(ТаблицаВрачей);
				РаботаОбъект.ЛабораторныеИФункциональныеИсследования.Загрузить(ТаблицаИсследований);
				РаботаОбъект.ДополнительныеМедицинскиеПротивопоказания.Загрузить(ТаблицаПротивопоказаний);
				РаботаОбъект.Записать();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
	
	Чтение.Закрыть();
	
	УдалитьФайлы(ВременныйФайлДанных);
	
КонецПроцедуры	
	
#КонецЕсли	