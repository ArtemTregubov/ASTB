
&НаКлиенте
Процедура ЗагрузитьИзКлассификатора(Команда)
	
	ПрочитатьДанныеНаСервере();

	ОповеститьОбИзменении(Тип("СправочникСсылка.ГОСТы"));
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеНаСервере()
	
	//чтение схемы из макета
	ВременныйФайлСхемы = ПолучитьИмяВременногоФайла();
	
	МакетСхемы = Справочники.ГОСТы.ПолучитьМакет("СхемаXML");
	МакетСхемы.Записать(ВременныйФайлСхемы);
	
	ЧтениеСхемы = Новый ЧтениеXML;
	ЧтениеСхемы.ОткрытьФайл(ВременныйФайлСхемы);

	Построитель_DOM = Новый ПостроительDOM;
	Документ_DOM 	= Построитель_DOM.Прочитать(ЧтениеСхемы);
	
	ПостроительСхем_XML = Новый ПостроительСхемXML;
	Схема_XML 			= ПостроительСхем_XML.СоздатьСхемуXML(Документ_DOM);
	
	НаборСхем = Новый НаборСхемXML;
	НаборСхем.Добавить(Схема_XML);
	
	НоваяФабрика = Новый ФабрикаXDTO(НаборСхем);
	
	//чтение данных из макета
	ВременныйФайлДанных 	= ПолучитьИмяВременногоФайла();
	МакетДанных 			= Справочники.ГОСТы.ПолучитьМакет("ДанныеXML");
	МакетДанных.Записать(ВременныйФайлДанных);
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ВременныйФайлДанных);
	
	Попытка
		Данные = НоваяФабрика.ПрочитатьXML(Чтение);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаГОСТ = Новый ТаблицаЗначений;
	ТаблицаГОСТ.Колонки.Добавить("Код", 			Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
	ТаблицаГОСТ.Колонки.Добавить("Наименование", 	Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(150)));
	ТаблицаГОСТ.Колонки.Добавить("Действует", 		Новый ОписаниеТипов("Булево"));
	
	Для Каждого Элемент Из Данные.GOST_list Цикл
		
		НоваяСтрока 				= ТаблицаГОСТ.Добавить();
		НоваяСтрока.Код 			= Элемент.number;
		НоваяСтрока.Наименование 	= Элемент.name;
        НоваяСтрока.Действует 		= НЕ ЗначениеЗаполнено(Элемент.GOST_cancel);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаДляЗагрузки.Код,
	|	ТаблицаДляЗагрузки.Наименование,
	|	ТаблицаДляЗагрузки.Действует
	|ПОМЕСТИТЬ ТаблицаДляЗагрузки
	|ИЗ
	|	&ТаблицаДляЗагрузки КАК ТаблицаДляЗагрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляЗагрузки.Код,
	|	ТаблицаДляЗагрузки.Наименование,
	|	ТаблицаДляЗагрузки.Действует,
	|	ЕСТЬNULL(ГОСТы.Ссылка, ЗНАЧЕНИЕ(Справочник.ГОСТы.ПустаяСсылка)) КАК ГОСТ
	|ИЗ
	|	ТаблицаДляЗагрузки КАК ТаблицаДляЗагрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГОСТы КАК ГОСТы
	|		ПО ТаблицаДляЗагрузки.Код = ГОСТы.Код";
	
	Запрос.УстановитьПараметр("ТаблицаДляЗагрузки",ТаблицаГОСТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.ГОСТ) Тогда
			ОбъектГОСТ = Выборка.ГОСТ.ПолучитьОбъект();
		Иначе
			ОбъектГОСТ = Справочники.ГОСТы.СоздатьЭлемент();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОбъектГОСТ,Выборка);
		Попытка
			ОбъектГОСТ.Записать();
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры