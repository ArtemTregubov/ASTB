#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//механизм изменен - используется обработка "Печать сертификатов"
	//КомандаПечати 					= КомандыПечати.Добавить();
	//КомандаПечати.МенеджерПечати 	= "Справочник.СертификатыНоменклатуры";
	//КомандаПечати.Идентификатор 	= "ПечатьСертификата";
	//КомандаПечати.Представление 	= НСтр("ru = 'Печать файлов сертификата'");
	
КонецПроцедуры
	
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьСертификата") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм, 
		"ПечатьСертификата",
		"Печать сертификата",
		СформироватьПечатнуюФормуСертификата(МассивОбъектов, ОбъектыПечати),,"ПФ_MXL_Сертификат");
		//СформироватьПечатнуюФормуСертификатаРабочийТест(МассивОбъектов, ОбъектыПечати)  //подстановка в фцию выше для отладки
	КонецЕсли;	
	
КонецПроцедуры
	
Функция СформироватьПечатнуюФормуСертификата(МассивОбъектов, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ПутьКФайлам = ПолучитьПараметрыФТПСоединения();
	Если ПутьКФайлам = Неопределено Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	Соединение = УстановитьFTPСоединение(ПутьКФайлам);
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, );
	
	Если Соединение = Неопределено Тогда
		ПоместитьВоВременноеХранилище("Ошибка подключения к FTP.",АдресХранилища);
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	Для Каждого ЭлементМассива Из МассивОбъектов Цикл
		ПервыйДокумент = Истина;
		Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.СертификатыНоменклатуры.ПФ_MXL_Сертификат");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СертификатыНоменклатурыФайлыСертификата.ИмяФайла,
		|	СертификатыНоменклатурыФайлыСертификата.Описание
		|ИЗ
		|	Справочник.СертификатыНоменклатуры.ФайлыСертификата КАК СертификатыНоменклатурыФайлыСертификата
		|ГДЕ
		|	СертификатыНоменклатурыФайлыСертификата.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	СертификатыНоменклатурыФайлыСертификата.НомерСтроки
		|АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.УстановитьПараметр("Ссылка", ЭлементМассива.Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Найдено = Соединение.НайтиФайлы(ВыборкаДетальныеЗаписи.ИмяФайла);
			Если Найдено.Количество()= 0 Тогда
				ПоместитьВоВременноеХранилище("Файл не найден!", АдресХранилища);
				//	Продолжить;
				ФайлКартинка = Неопределено;
			Иначе
				ФайлКартинка = ПолучитьИмяВременногоФайла("jpg");
				Соединение.Получить(ВыборкаДетальныеЗаписи.ИмяФайла, ФайлКартинка);
			КонецЕсли;
							
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			//	
			ПервыйДокумент = Ложь;
			//	
			Область = Макет.ПолучитьОбласть("Заголовок");
			Область.Параметры.Сертификат = СокрЛП(ЭлементМассива);
			Область.Параметры.ИмяФайла = ВыборкаДетальныеЗаписи.ИмяФайла;
			Область.Параметры.Описание = ВыборкаДетальныеЗаписи.Описание;
			ТабличныйДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Картинка");
			Рисунок = Область.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
			
			Если ФайлКартинка = Неопределено Тогда
				Область.Параметры.НашлиФайл = "Файл не найден!";
				Рисунок.Верх = 3;
				Рисунок.Высота = 12;
				Рисунок.Ширина = 9;
				Рисунок.Лево = 5;
				Рисунок.Картинка = БиблиотекаКартинок.ДокументПомеченНаУдалениеКоннекторЛево;
				Рисунок.РазмерКартинки = РазмерКартинки.АвтоРазмер;
			Иначе
				Область.Параметры.НашлиФайл = "";
				Рисунок.Верх = 3;
				Рисунок.Высота = 290;
				Рисунок.Ширина = 200;
				Рисунок.Лево = 3;
				Рисунок.Картинка = Новый Картинка(ФайлКартинка);
				Рисунок.РазмерКартинки = РазмерКартинки.АвтоРазмер;
				Рисунок.Линия=Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии,,);
				УдалитьФайлы(ФайлКартинка);
			КонецЕсли;
			ТабличныйДокумент.Вывести(Область);
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	//
КонецФункции
	
Функция ПолучитьПараметрыФТПСоединения() Экспорт
	
	//скопирована и доработана функция ВосстановитьНастройкиПодключенияFTPНаСервере() из обработки ЗагрузкаСертификатовНоменклатурыВостокСервис
	
	ИдентификаторОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Обработка.ЗагрузкаСертификатовНоменклатурыВостокСервис");
	ПараметрыФТП = Новый Структура(
	"FTPСоединениеАдрес, FTPСоединениеПароль, FTPСоединениеПассивноеСоединение, FTPСоединениеПользователь, FTPСоединениеПорт, FTPСоединениеПуть, FTPСоединениеЗащищенноеСоединение");
	
	Если ЗначениеЗаполнено(ИдентификаторОбработки) Тогда
		
		НаборЗаписей = РегистрыСведений.НастройкиПодключенияFTPДляДополнительныхОбработок.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторОбъекта.Установить(ИдентификаторОбработки);
		НаборЗаписей.Прочитать();
		
		Если НЕ НаборЗаписей.Количество() = 0 Тогда
			
			СтруктураНастроек 								= НаборЗаписей[0].НастройкиПодключенияFTP.Получить();
			ПараметрыФТП.FTPСоединениеАдрес 				= СтруктураНастроек.FTPСоединениеАдрес;
			ПараметрыФТП.FTPСоединениеПароль 				= СтруктураНастроек.FTPСоединениеПароль;
			ПараметрыФТП.FTPСоединениеПассивноеСоединение 	= СтруктураНастроек.FTPСоединениеПассивноеСоединение;
			ПараметрыФТП.FTPСоединениеПользователь 			= СтруктураНастроек.FTPСоединениеПользователь;
			ПараметрыФТП.FTPСоединениеПорт 					= СтруктураНастроек.FTPСоединениеПорт;
			ПараметрыФТП.FTPСоединениеПуть 					= СтруктураНастроек.FTPСоединениеПуть;
			ПараметрыФТП.FTPСоединениеЗащищенноеСоединение 	= ?(СтруктураНастроек.Свойство("FTPСоединениеЗащищенноеСоединение"),СтруктураНастроек.FTPСоединениеЗащищенноеСоединение,Ложь);
			
		Иначе
			
			Возврат Неопределено;
			
		КонецЕсли;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Возврат ПараметрыФТП;
	
КонецФункции
	
Функция УстановитьFTPСоединение(ПараметрыЗагрузки) Экспорт
	
	Если ПараметрыЗагрузки.FTPСоединениеАдрес = Неопределено ТОгда
		Возврат Неопределено;
	КонецЕсли;
	
	НастройкаПроксиСервера = ПолучениеФайловИзИнтернета.НастройкиПроксиНаСервере();
	
	Если НастройкаПроксиСервера <> Неопределено Тогда
		
		ИспользоватьПрокси = НастройкаПроксиСервера.Получить("ИспользоватьПрокси");
		ИспользоватьСистемныеНастройки = НастройкаПроксиСервера.Получить("ИспользоватьСистемныеНастройки");
		
		Если ИспользоватьПрокси Тогда
			
			Если ИспользоватьСистемныеНастройки Тогда
				// Системные настройки прокси-сервера
				Прокси = Новый ИнтернетПрокси(Истина);
			Иначе
				// Ручные настройки прокси-сервера
				Прокси = Новый ИнтернетПрокси;
				Прокси.Установить("ftp", НастройкаПроксиСервера["Сервер"], НастройкаПроксиСервера["Порт"]);
				Прокси.Пользователь 							= НастройкаПроксиСервера["Пользователь"];
				Прокси.Пароль       							= НастройкаПроксиСервера["Пароль"];
				Прокси.НеИспользоватьПроксиДляЛокальныхАдресов 	= НастройкаПроксиСервера["НеИспользоватьПроксиДляЛокальныхАдресов"];
			КонецЕсли;
			
		Иначе
			
			// Не использовать прокси-сервер	
			Прокси = Новый ИнтернетПрокси(Ложь);
			
		КонецЕсли;
		
	Иначе
		
		Прокси = Неопределено;
		
	КонецЕсли;

	Если ПараметрыЗагрузки.FTPСоединениеЗащищенноеСоединение Тогда
		ssl = Новый ЗащищенноеСоединениеOpenSSL(Неопределено,Неопределено);
	Иначе
		ssl = Неопределено;
	КонецЕсли;
	
	Попытка
		FTPСоединение = Новый FTPСоединение(ПараметрыЗагрузки.FTPСоединениеАдрес,
										ПараметрыЗагрузки.FTPСоединениеПорт,
										ПараметрыЗагрузки.FTPСоединениеПользователь,
										ПараметрыЗагрузки.FTPСоединениеПароль,
										Прокси,
										ПараметрыЗагрузки.FTPСоединениеПассивноеСоединение,
										10,
										ssl,
										?(ПараметрыЗагрузки.FTPСоединениеЗащищенноеСоединение,УровеньИспользованияЗащищенногоСоединенияFTP.ИспользоватьЕслиВозможно,УровеньИспользованияЗащищенногоСоединенияFTP.Авто));
		FTPСоединение.УстановитьТекущийКаталог(СокрЛП(ПараметрыЗагрузки.FTPСоединениеПуть));
	Исключение
		FTPСоединение = Неопределено;
	КонецПопытки;
	
	Возврат FTPСоединение;
	
КонецФункции
	
#КонецЕсли


