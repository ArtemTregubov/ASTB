
&НаКлиенте
Процедура ОК(Команда)
	
	ОбработатьРезультатыПодбораНаСервере();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоКлассификатораВыбранПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоКлассификатора.ТекущиеДанные;
	ВыбранПриИзменении(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранПриИзменении(ТекущиеДанные)
	
	Если ТекущиеДанные.Использовать = 2 Тогда
		ТекущиеДанные.Использовать = 0;
	КонецЕсли;
	
	ПроцедурыРаботыСНормамиКлиент.ОбходДереваВверх(ТекущиеДанные);
	ПроцедурыРаботыСНормамиКлиент.ОбходДереваВниз(ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем КодЭлемента, КодРодителя, НаименованиеЭлемента, ТекущееЗначение;
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	Макет = Справочники.ВидыЭкономическойДеятельности.ПолучитьМакет("ОКВЭД");
	Макет.Записать(ИмяВременногоФайла);
	
	Дерево = Новый ДеревоЗначений;
	Дерево = РеквизитФормыВЗначение("ДеревоКлассификатора"); 
	
	Классификатор = Новый ЧтениеXML;
	Классификатор.ОткрытьФайл(ИмяВременногоФайла);
	
	//начало классификатора
	Классификатор.Прочитать();
	
	ЗаписыватьЗначение = Ложь;
	
	//цикл по классификатору
	Пока Классификатор.Прочитать() Цикл
		
		Если Классификатор.Имя = "ROW" И Классификатор.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда //добавляем строку классификатора в дерево
			
			Если Не ЗначениеЗаполнено(КодРодителя) Тогда //это корень дерева
				
				НоваяСтрока 				= Дерево.Строки.Добавить();
				НоваяСтрока.Код 			= КодЭлемента;
				НоваяСтрока.Наименование 	= НаименованиеЭлемента;
				НоваяСтрока.Использовать 	= Ложь;
				
			Иначе
				
				СтрокаДерева = Дерево.Строки.Найти(КодРодителя,"Код",Истина);
				Если СтрокаДерева = Неопределено Тогда
					НоваяСтрока = НоваяСтрока.Строки.Добавить();
				Иначе
					НоваяСтрока = СтрокаДерева.Строки.Добавить();
				КонецЕсли;
				
				НоваяСтрока.Код 			= КодЭлемента;
				НоваяСтрока.Наименование 	= НаименованиеЭлемента;
				НоваяСтрока.Использовать	= Ложь;
				
			КонецЕсли;
				
		КонецЕсли;
		
		Если Классификатор.Имя = "#text" И Классификатор.ТипУзла = ТипУзлаXML.Текст И ЗаписыватьЗначение Тогда 
			
			ТекущееЗначение = Классификатор.Значение;
			ЗаписыватьЗначение = Ложь;
			
		КонецЕсли;
		
		Если Классификатор.Имя = "OK_CODE" И Классификатор.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда 
			
			КодЭлемента 			= ТекущееЗначение;
			ТекущееЗначение 		= "";
			
		КонецЕсли;
		
		Если Классификатор.Имя = "OK_NAME" И Классификатор.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда 
			
			НаименованиеЭлемента 	= ТекущееЗначение;
			ТекущееЗначение 		= "";
			
		КонецЕсли;
		
		Если Классификатор.Имя = "PARENT_CODE" И Классификатор.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда 
			
			КодРодителя 			= ТекущееЗначение;
			ТекущееЗначение 		= "";
			
		КонецЕсли;
		
		Если (Классификатор.Имя = "C0" ИЛИ Классификатор.Имя = "OK_ID" ИЛИ Классификатор.Имя = "PARENT_ID" ИЛИ Классификатор.Имя = "NODE_COUNT") И Классификатор.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
			
			ЗаписыватьЗначение = Ложь;
			
		КонецЕсли;
		
		Если (Классификатор.Имя = "OK_CODE" ИЛИ Классификатор.Имя = "OK_NAME" ИЛИ Классификатор.Имя = "PARENT_CODE") И Классификатор.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
			
			ЗаписыватьЗначение = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Классификатор.Закрыть();
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоКлассификатора");
	
КонецПроцедуры

&НаСервере
Процедура СформироватьВспомогательныеМассивы(МассивВыбранныхСтрок,МассивКодов,Строки)
	
	Для Каждого СтрокаУровня из Строки Цикл
		
		Если СтрокаУровня.Использовать > 0 Тогда
		    МассивВыбранныхСтрок.Добавить(СтрокаУровня);
			МассивКодов.Добавить(СтрокаУровня.Код);
			СформироватьВспомогательныеМассивы(МассивВыбранныхСтрок,МассивКодов,СтрокаУровня.Строки);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ОбработатьРезультатыПодбораНаСервере()
	
	МассивВыбранныхСтрок 	= Новый Массив;
	МассивКодов 			= Новый Массив;
	
	Дерево = РеквизитФормыВЗначение("ДеревоКлассификатора");
	СформироватьВспомогательныеМассивы(МассивВыбранныхСтрок,МассивКодов,Дерево.Строки);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВидыЭкономическойДеятельности.Ссылка КАК Ссылка,
	|	ВидыЭкономическойДеятельности.Код КАК Код
	|ИЗ
	|	Справочник.ВидыЭкономическойДеятельности КАК ВидыЭкономическойДеятельности
	|ГДЕ
	|	ВидыЭкономическойДеятельности.Код В(&МассивКодов)";
	
	Запрос.УстановитьПараметр("МассивКодов", МассивКодов);
	
	ТаблицаВидовДеятельности = Запрос.Выполнить().Выгрузить();
	ТаблицаВидовДеятельности.Индексы.Добавить("Код");
	
	НачатьТранзакцию();
	
	Для каждого СтрокаДерева Из МассивВыбранныхСтрок Цикл
		
		Если ЗначениеЗаполнено(СтрокаДерева.Родитель) Тогда
			
			НайденныйРодитель = ТаблицаВидовДеятельности.Найти(СтрокаДерева.Родитель.Код, "Код");
			Если НайденныйРодитель = Неопределено Тогда //нужно создать родителя
				
				СправочникОбъект 					= Справочники.ВидыЭкономическойДеятельности.СоздатьЭлемент();
				СправочникОбъект.НаименованиеПолное = СокрЛП(СтрокаДерева.Родитель.Наименование);
				СправочникОбъект.Код                = СокрЛП(СтрокаДерева.Родитель.Код);
				СправочникОбъект.Записать();
				
				НайденныйРодитель = СправочникОбъект.Ссылка;
				
				//добавим в таблицу новый элемент справочника
				НоваяСтрока 		= ТаблицаВидовДеятельности.Добавить();
				НоваяСтрока.Ссылка 	= НайденныйРодитель;
				НоваяСтрока.Код 	= СокрЛП(НайденныйРодитель.Код);
				
			Иначе
				
				НайденныйРодитель = НайденныйРодитель.Ссылка;
				
			КонецЕсли;
			
		Иначе
			
			НайденныйРодитель = Справочники.ВидыЭкономическойДеятельности.ПустаяСсылка();
			
		КонецЕсли;
				
		НайденныйЭлемент = ТаблицаВидовДеятельности.Найти(СтрокаДерева.Код, "Код");
		
		Если НайденныйЭлемент <> Неопределено Тогда
			
			СправочникОбъект = НайденныйЭлемент.Ссылка.ПолучитьОбъект();
			СправочникОбъект.НаименованиеПолное = СокрЛП(СтрокаДерева.Наименование);
			СправочникОбъект.Код                = СокрЛП(СтрокаДерева.Код);
			СправочникОбъект.Родитель			= НайденныйРодитель;
			СправочникОбъект.Записать();
			
		Иначе
			
			СправочникОбъект = Справочники.ВидыЭкономическойДеятельности.СоздатьЭлемент();
			СправочникОбъект.НаименованиеПолное = СокрЛП(СтрокаДерева.Наименование);
			СправочникОбъект.Код                = СокрЛП(СтрокаДерева.Код);
			СправочникОбъект.Родитель			= НайденныйРодитель;
			СправочникОбъект.Записать();
			
			//добавим в таблицу новый элемент справочника
			НоваяСтрока 		= ТаблицаВидовДеятельности.Добавить();
			НоваяСтрока.Ссылка 	= СправочникОбъект.Ссылка;
			НоваяСтрока.Код 	= СокрЛП(СправочникОбъект.Код);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры
