#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ВыполнитьЗагрузкуРекомендуемыхПрограммОбучения() Экспорт
	
	СоответствияВидовИнструктажей = Новый Соответствие;
	СоответствияВидовИнструктажей.Вставить("Вводный",Перечисления.ВидыИнструктажей.Вводный);
	СоответствияВидовИнструктажей.Вставить("Первичный",Перечисления.ВидыИнструктажей.Первичный);
	СоответствияВидовИнструктажей.Вставить("Повторный",Перечисления.ВидыИнструктажей.Повторный);
	
	//чтение данных из макета
	ВременныйФайлДнных 	= ПолучитьИмяВременногоФайла();
	МакетДанных 		= Справочники.Инструктажи.ПолучитьМакет("РекомендуемыеПрограммыОбучения");
	МакетДанных.Записать(ВременныйФайлДнных);
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ВременныйФайлДнных);

	Пока Чтение.Прочитать() Цикл
		
		Если Чтение.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			
			Если Чтение.ЛокальноеИмя = "safety_precautions_training_item" Тогда //это инструктаж
				
				ТекущийВидИнструктажа 			= СоответствияВидовИнструктажей.Получить(СокрЛП(Чтение.ЗначениеАтрибута("type")));
				ТекущееНаименованиеИнструкажа 	= СокрЛП(Чтение.ЗначениеАтрибута("name"));
				ТекущееОписаниеИнструктажа 		= СокрЛП(Чтение.ЗначениеАтрибута("description"));
				ТекущийИнструктаж 				= ПолучитьИнструктаж(ТекущийВидИнструктажа,ТекущееНаименованиеИнструкажа,ТекущееОписаниеИнструктажа);
				
			КонецЕсли;	
			
			Если Чтение.ЛокальноеИмя = "programm_item" Тогда //это программа инструктажа
				
				ГлубинаКонтекста 			= Чтение.КонтекстПространствИмен.Глубина; //4 - это верхний уровень программы инструктажа, далее - подгуппы
				
				КодТекущейПрограммы 			= СокрЛП(Чтение.ЗначениеАтрибута("item_no"));
				НаименованиеТекущейПрограммы	= СокрЛП(Чтение.ЗначениеАтрибута("item_name"));
				ОписаниеТекущейПрограммы 		= СокрЛП(Чтение.ЗначениеАтрибута("item_description"));
				
				Если ГлубинаКонтекста = 4 Тогда //это верхний уровень программы
					
					ТекущаяПрограмма = Справочники.ПрограммыИнструктажей.НайтиПоКоду(КодТекущейПрограммы,,,ТекущийИнструктаж);
					
					Если ТекущаяПрограмма.Пустая() Тогда
						
						НоваяПрограмма 				= Справочники.ПрограммыИнструктажей.СоздатьЭлемент();
						НоваяПрограмма.Владелец 	= ТекущийИнструктаж;
						НоваяПрограмма.Код 			= КодТекущейПрограммы;
						НоваяПрограмма.Описание 	= ОписаниеТекущейПрограммы;
						НоваяПрограмма.Наименование	= НаименованиеТекущейПрограммы;
						НоваяПрограмма.Записать();
						
						ТекущаяПрограмма = НоваяПрограмма.Ссылка;
						
					КонецЕсли;
					
					ИерархияПрограммы = Новый Соответствие;
					ИерархияПрограммы.Вставить(ГлубинаКонтекста,ТекущаяПрограмма);
					
				Иначе  //нужно использовать родителя
					
					ТекущаяПрограмма = Справочники.ПрограммыИнструктажей.НайтиПоКоду(КодТекущейПрограммы,,,ТекущийИнструктаж);
					
					Если ТекущаяПрограмма.Пустая() Тогда
						
						НоваяПрограмма 				= Справочники.ПрограммыИнструктажей.СоздатьЭлемент();
						НоваяПрограмма.Владелец 	= ТекущийИнструктаж;
						НоваяПрограмма.Код 			= КодТекущейПрограммы;
						НоваяПрограмма.Описание 	= ОписаниеТекущейПрограммы;
						НоваяПрограмма.Родитель 	= ИерархияПрограммы.Получить(ГлубинаКонтекста - 1);
						НоваяПрограмма.Наименование	= НаименованиеТекущейПрограммы;
						НоваяПрограмма.Записать();
						
						ТекущаяПрограмма = НоваяПрограмма.Ссылка;
						
					КонецЕсли;
					
					ИерархияПрограммы.Вставить(ГлубинаКонтекста,ТекущаяПрограмма);
					
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

Функция ПолучитьИнструктаж(ТекущийВидИнструктажа,ТекущееНаименованиеИнструкажа,ТекущееОписаниеИнструктажа)
	
	ТекущийИнструктаж = Справочники.Инструктажи.НайтиПоНаименованию(ТекущееНаименованиеИнструкажа);
	
	Если ТекущийИнструктаж.Пустая() Тогда
		
		НовыйИнструктаж 				= Справочники.Инструктажи.СоздатьЭлемент();
		НовыйИнструктаж.Наименование 	= ТекущееНаименованиеИнструкажа;
		НовыйИнструктаж.ВидИнструктажа 	= ТекущийВидИнструктажа;
		НовыйИнструктаж.Описание 		= ТекущееОписаниеИнструктажа;
		НовыйИнструктаж.УстановитьНовыйКод();
		НовыйИнструктаж.Записать();
		
		ТекущийИнструктаж = НовыйИнструктаж.Ссылка;
		
	КонецЕсли;
	
	Возврат ТекущийИнструктаж;	
	
КонецФункции	

#КонецЕсли