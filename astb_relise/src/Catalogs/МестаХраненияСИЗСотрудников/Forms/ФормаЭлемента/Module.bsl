
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПрочитатьНастройкиШаблонаАдресации();
	
	ОбновитьПредставления();
	
	УстановитьВидимость();
	
	УстановитьЗаголовокНадписи();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокНадписи()
	
	Если ОдинАдресДляНесколькихСотрудников Тогда
		ЭтаФорма.Элементы.ДекорацияОдинАдресДляНесколькихСотрудников.Заголовок = "Возможно использование одного адреса хранения СИЗ для нескольких сотрудников.";
	Иначе
		ЭтаФорма.Элементы.ДекорацияОдинАдресДляНесколькихСотрудников.Заголовок = "Использование одного адреса хранения СИЗ допустимо только для одного сотрудника.";
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьПредставления()
	
	ЭтаФорма.Элементы.ЭлементАдреса1.Заголовок = ?(ПустаяСтрока(Представление_ЭлементАдреса1),"Помещение",Представление_ЭлементАдреса1);
	ЭтаФорма.Элементы.ЭлементАдреса2.Заголовок = ?(ПустаяСтрока(Представление_ЭлементАдреса2),"Секция",Представление_ЭлементАдреса2);
	ЭтаФорма.Элементы.ЭлементАдреса3.Заголовок = ?(ПустаяСтрока(Представление_ЭлементАдреса3),"Линия",Представление_ЭлементАдреса3);
	ЭтаФорма.Элементы.ЭлементАдреса4.Заголовок = ?(ПустаяСтрока(Представление_ЭлементАдреса4),"Стеллаж",Представление_ЭлементАдреса4);
	ЭтаФорма.Элементы.ЭлементАдреса5.Заголовок = ?(ПустаяСтрока(Представление_ЭлементАдреса5),"Полка",Представление_ЭлементАдреса5);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	ЭтаФорма.Элементы.ЭлементАдреса1.Видимость = Использовать_ЭлементАдреса1;
	ЭтаФорма.Элементы.ЭлементАдреса2.Видимость = Использовать_ЭлементАдреса2;
	ЭтаФорма.Элементы.ЭлементАдреса3.Видимость = Использовать_ЭлементАдреса3;
	ЭтаФорма.Элементы.ЭлементАдреса4.Видимость = Использовать_ЭлементАдреса4;
	ЭтаФорма.Элементы.ЭлементАдреса5.Видимость = Использовать_ЭлементАдреса5;
	
	ЭтаФорма.Элементы.ГруппаАдресация.Видимость = НЕ ИспользоватьПроизвольныйАдрес;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройкиШаблонаАдресации()
	
	НаборЗаписей = РегистрыСведений.НастройкиШаблонаАдресацииМестХраненияСИЗ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Объект.Владелец);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		//включаем поля элементов адреса
		Использовать_ЭлементАдреса1 = Истина;
		Использовать_ЭлементАдреса2 = Истина;
		Использовать_ЭлементАдреса3 = Истина;
		Использовать_ЭлементАдреса4 = Истина;
		Использовать_ЭлементАдреса5 = Истина;
		
		//значения незаполненных полей
		ПредставлениеПустогоЗначения_ЭлементАдреса1 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса2 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса3 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса4 = "0";
		ПредставлениеПустогоЗначения_ЭлементАдреса5 = "0";
		
		//заголовки элементов адреса
		Представление_ЭлементАдреса1 = "Помещение";
		Представление_ЭлементАдреса2 = "Секция";
		Представление_ЭлементАдреса3 = "Линия";
		Представление_ЭлементАдреса4 = "Стеллаж";
		Представление_ЭлементАдреса5 = "Полка";
		
		Разделитель = "-";
		
		ИспользоватьПроизвольныйАдрес 		= Ложь;		
		ОдинАдресДляНесколькихСотрудников 	= Ложь;
		
	Иначе
		
		СтруктураНастроек = НаборЗаписей[0].НастройкиШаблонаАдресации.Получить();
		
		СтруктураНастроек_ЭлементАдреса1 = СтруктураНастроек.ЭлементАдреса1;
		СтруктураНастроек_ЭлементАдреса2 = СтруктураНастроек.ЭлементАдреса2;
		СтруктураНастроек_ЭлементАдреса3 = СтруктураНастроек.ЭлементАдреса3;
		СтруктураНастроек_ЭлементАдреса4 = СтруктураНастроек.ЭлементАдреса4;
		СтруктураНастроек_ЭлементАдреса5 = СтруктураНастроек.ЭлементАдреса5;
		
		Использовать_ЭлементАдреса1 = СтруктураНастроек_ЭлементАдреса1.Использовать_ЭлементАдреса1;
		Использовать_ЭлементАдреса2 = СтруктураНастроек_ЭлементАдреса2.Использовать_ЭлементАдреса2;
		Использовать_ЭлементАдреса3 = СтруктураНастроек_ЭлементАдреса3.Использовать_ЭлементАдреса3;
		Использовать_ЭлементАдреса4 = СтруктураНастроек_ЭлементАдреса4.Использовать_ЭлементАдреса4;
		Использовать_ЭлементАдреса5 = СтруктураНастроек_ЭлементАдреса5.Использовать_ЭлементАдреса5;
		
		ПредставлениеПустогоЗначения_ЭлементАдреса1 = СтруктураНастроек_ЭлементАдреса1.ПредставлениеПустогоЗначения_ЭлементАдреса1;
		ПредставлениеПустогоЗначения_ЭлементАдреса2 = СтруктураНастроек_ЭлементАдреса2.ПредставлениеПустогоЗначения_ЭлементАдреса2;
		ПредставлениеПустогоЗначения_ЭлементАдреса3 = СтруктураНастроек_ЭлементАдреса3.ПредставлениеПустогоЗначения_ЭлементАдреса3;
		ПредставлениеПустогоЗначения_ЭлементАдреса4 = СтруктураНастроек_ЭлементАдреса4.ПредставлениеПустогоЗначения_ЭлементАдреса4;
		ПредставлениеПустогоЗначения_ЭлементАдреса5 = СтруктураНастроек_ЭлементАдреса5.ПредставлениеПустогоЗначения_ЭлементАдреса5;
		
		Представление_ЭлементАдреса1 = СтруктураНастроек_ЭлементАдреса1.Представление_ЭлементАдреса1;
		Представление_ЭлементАдреса2 = СтруктураНастроек_ЭлементАдреса2.Представление_ЭлементАдреса2;
		Представление_ЭлементАдреса3 = СтруктураНастроек_ЭлементАдреса3.Представление_ЭлементАдреса3;
		Представление_ЭлементАдреса4 = СтруктураНастроек_ЭлементАдреса4.Представление_ЭлементАдреса4;
		Представление_ЭлементАдреса5 = СтруктураНастроек_ЭлементАдреса5.Представление_ЭлементАдреса5;
		
		Разделитель = СтруктураНастроек.Разделитель;
		
		ИспользоватьПроизвольныйАдрес 		= ?(СтруктураНастроек.Свойство("ИспользоватьПроизвольныйАдрес") = Ложь, Ложь, СтруктураНастроек.ИспользоватьПроизвольныйАдрес);		
		ОдинАдресДляНесколькихСотрудников 	= ?(СтруктураНастроек.Свойство("ОдинАдресДляНесколькихСотрудников") = Ложь, Ложь, СтруктураНастроек.ОдинАдресДляНесколькихСотрудников);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Функция СформироватьАдрес()
	
	Если ИспользоватьПроизвольныйАдрес Тогда
		Возврат "";
	КонецЕсли;	
	
	Если Разделитель = "П" Тогда
		РазделительСтрока = " ";	
	ИначеЕсли Разделитель = "Н"	Тогда
		РазделительСтрока = "";	
	Иначе
		РазделительСтрока = Разделитель;
	КонецЕсли;
	
	_ЭлементАдреса1 = ?(Использовать_ЭлементАдреса1,СокрЛП(Объект.ЭлементАдреса1) + ?(ПустаяСтрока(Объект.ЭлементАдреса1), ПредставлениеПустогоЗначения_ЭлементАдреса1, РазделительСтрока),"");
	_ЭлементАдреса2 = ?(Использовать_ЭлементАдреса2,СокрЛП(Объект.ЭлементАдреса2) + ?(ПустаяСтрока(Объект.ЭлементАдреса2), ПредставлениеПустогоЗначения_ЭлементАдреса2, РазделительСтрока),"");
	_ЭлементАдреса3 = ?(Использовать_ЭлементАдреса3,СокрЛП(Объект.ЭлементАдреса3) + ?(ПустаяСтрока(Объект.ЭлементАдреса3), ПредставлениеПустогоЗначения_ЭлементАдреса3, РазделительСтрока),"");
	_ЭлементАдреса4 = ?(Использовать_ЭлементАдреса4,СокрЛП(Объект.ЭлементАдреса4) + ?(ПустаяСтрока(Объект.ЭлементАдреса4), ПредставлениеПустогоЗначения_ЭлементАдреса4, РазделительСтрока),"");
	_ЭлементАдреса5 = ?(Использовать_ЭлементАдреса5,СокрЛП(Объект.ЭлементАдреса5) + ?(ПустаяСтрока(Объект.ЭлементАдреса5), ПредставлениеПустогоЗначения_ЭлементАдреса5, РазделительСтрока),"");
	
	Адрес = _ЭлементАдреса1 + _ЭлементАдреса2 + _ЭлементАдреса3 + _ЭлементАдреса4 + _ЭлементАдреса5;
	
	Если Прав(Адрес, 1) = РазделительСтрока Тогда
		Адрес = Лев(Адрес, СтрДлина(Адрес)-1);
	КонецЕсли;
	
	Возврат ?(ПустаяСтрока(Адрес),"Адрес не определен",Адрес);
	
КонецФункции

&НаКлиенте
Процедура СформироватьСпискиВыбора()
	
	ТекущийАдрес = СформироватьАдрес();
	
	ЭтаФорма.Элементы.Наименование.СписокВыбора.Очистить();
	ЭтаФорма.Элементы.Наименование.СписокВыбора.Добавить(ТекущийАдрес);
	
	ЭтаФорма.Элементы.Код.СписокВыбора.Очистить();
	ЭтаФорма.Элементы.Код.СписокВыбора.Добавить(ТекущийАдрес);
	
КонецПроцедуры

&НаКлиенте
Процедура КодПриИзменении(Элемент)
	
	Если ПустаяСтрока(Объект.Наименование) Тогда
		Объект.Наименование = СокрЛП(Объект.Код);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеПриИзменении(Элемент)
	
	СформироватьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура СекцияПриИзменении(Элемент)
	
	СформироватьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛинияПриИзменении(Элемент)
	
	СформироватьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура СтеллажПриИзменении(Элемент)
	
	СформироватьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолкаПриИзменении(Элемент)
	
	СформироватьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура РазделительПриИзменении(Элемент)
	
	СформироватьСпискиВыбора();
	
КонецПроцедуры
