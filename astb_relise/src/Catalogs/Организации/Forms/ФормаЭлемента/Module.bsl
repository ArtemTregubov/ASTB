
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		МодульУправлениеПечатью = ОбщегоНазначения.ОбщийМодуль("УправлениеПечатью");
		МодульУправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект,НОВЫЙ Структура("ИмяЭлементаДляРазмещения","ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства

	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Ссылка));
	
	УстановитьВидимость();
	УстановитьДоступность();
	
	Если НЕ ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации") И (Объект.ИспользоватьАлгоритм_0_0_0_3 ИЛИ Объект.ИспользоватьАлгоритм_0_0_0_4) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.ДискретностьРасчетаПроцентаИзноса) Тогда
			Объект.ДискретностьРасчетаПроцентаИзноса = Перечисления.ДоступныеПериодыОтчета.День;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Если Объект.ИспользоватьАлгоритм_0_0_0_3 ИЛИ
		Объект.ИспользоватьАлгоритм_0_0_0_4 ИЛИ
		Объект.ИспользоватьАлгоритм_0_0_1_2 ИЛИ
		Объект.ИспользоватьАлгоритм_1_0_1_1 Тогда
		
		Выборка = Справочники.НормыВыдачиСИЗ.Выбрать(,Объект.Ссылка);
		
		Если Выборка.Следующий() Тогда
			
			ЭтаФорма.Элементы.ВыбратьАлгоритм.Видимость = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВозможноУстановитьПроцентИзноса() ИЛИ (Объект.ИспользоватьАлгоритм_0_0_0_3 ИЛИ Объект.ИспользоватьАлгоритм_0_0_0_4) Тогда
		ЭтаФорма.Элементы.ГруппаПроцентИзноса.Видимость = Истина;
	Иначе
		ЭтаФорма.Элементы.ГруппаПроцентИзноса.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.SMSШаблонОВозвратеИзЧистки.Видимость 			= Объект.SMSИнформированиеОВозвратеИзЧистки;
	Элементы.SMSШаблонОПолученииСредствЗащиты.Видимость 	= Объект.SMSИнформированиеОПолученииСредствЗащиты;
	Элементы.SMSШаблонОПоступленииНаСклад.Видимость 		= Объект.SMSИнформированиеОПоступленииНаСклад;
	Элементы.EmailШаблонОВозвратеИзЧистки.Видимость 		= Объект.EmailИнформированиеОВозвратеИзЧистки;
	Элементы.EmailШаблонОПолученииСредствЗащиты.Видимость 	= Объект.EmailИнформированиеОПолученииСредствЗащиты;
	Элементы.EmailШаблонОПоступленииНаСклад.Видимость 		= Объект.EmailИнформированиеОПоступленииНаСклад;
	
КонецПроцедуры

&НаСервере
Функция ВозможноУстановитьПроцентИзноса()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ЧастичнаяВыдача = 3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ЧастичнаяВыдача = 4
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ЧастичнаяВыдача = 3
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ЧастичнаяВыдача = 4";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ОрганизацииНе0003 	= Результат[0].Выгрузить();
	ОрганизацииНе0004 	= Результат[1].Выгрузить();
	Организации0003 	= Результат[2].Выгрузить();
	Организации0004 	= Результат[3].Выгрузить();
	
	Если Организации0003.Количество() = 0 И Организации0004.Количество() = 0 Тогда
		Возврат Ложь;
	Иначе
		Если ОрганизацииНе0003.Количество() = 0 И ОрганизацииНе0004.Количество() = 0 Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции	

&НаСервере
Функция ВозможноУстановитьАлгоритм()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ИспользоватьПроцентИзноса";
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность()
	
	ЭтаФорма.Элементы.ИспользоватьРабочиеМеста.Доступность 								= НЕ ЕстьУстановленныеНормы();
	ЭтаФорма.Элементы.ИспользоватьПредварительныеЗаявкиНаКоллективнуюВыдачу.Доступность = НЕ ЕстьПереходПраваСобственности();
	//+++АСТБ_Горюшин_Алексей_17125
	ЭтаФорма.Элементы.ЗаполнениеППСприКоллетивнойВыдаче.Доступность                     = НЕ ЕстьПереходПраваСобственности();
	//---АСТБ_Горюшин_Алексей_17125
	
КонецПроцедуры

&НаСервере
Функция ЕстьУстановленныеНормы()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	//Танцюра А.Н. -- Оптимизация запроса -- 06.10.2021 <<<
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	УстановленныеНормыВыдачиСИЗ.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.УстановленныеНормыВыдачиСИЗ КАК УстановленныеНормыВыдачиСИЗ
	|ГДЕ
	|	УстановленныеНормыВыдачиСИЗ.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация",Объект.Ссылка);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	//Танцюра А.Н. -- Оптимизация запроса -- 06.10.2021 >>>
	
КонецФункции

&НаСервере
Функция ЕстьПереходПраваСобственности()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СобственныеСИЗОбороты.Организация
	|ИЗ
	|	РегистрНакопления.СобственныеСИЗ.Обороты(, , Авто, Организация = &Организация) КАК СобственныеСИЗОбороты";
	
	Запрос.УстановитьПараметр("Организация",Объект.Ссылка);
	
	Возврат Запрос.Выполнить().Выбрать().Следующий();	
	
КонецФункции

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация

	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	ОбновитьИнтерфейс = ТекущийОбъект.ЭтоНовый() И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	
	Если НЕ Объект.ПрефиксШтрихкодаНоменклатуры = 0 И СтрДлина(Строка(Объект.ПрефиксШтрихкодаНоменклатуры)) < 3 Тогда
		
		Отказ = Истина;
		
		Сообщение 		= Новый СообщениеПользователю;
		Сообщение.Поле 	= "ПрефиксШтрихкодаНоменклатуры";
		Сообщение.Текст = "Префикс штрихкода должен быть трехзначный. Задайте другой.";
		Сообщение.УстановитьДанные(ТекущийОбъект);
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	Если НЕ Объект.ПрефиксШтрихкодаНоменклатуры = 0 И ЕстьТакойПрефиксШтрихкода() Тогда
		
		Отказ = Истина;
		
		Сообщение 		= Новый СообщениеПользователю;
		Сообщение.Поле 	= "ПрефиксШтрихкодаНоменклатуры";
		Сообщение.Текст = "Такой префикс штрихкода уже существует. Задайте другой.";
		Сообщение.УстановитьДанные(ТекущийОбъект);
		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ОбновитьИнтерфейс Тогда
		ОбновитьИнтерфейс();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Ссылка));
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	Если Объект.ОрганизацияПоУмолчанию Тогда
	
		ТекущаяОрганизацияПоУмолчанию = ПроцедурыРаботыСНормамиСервер.ПолучитьОрганизациюПоУмолчанию(Объект.Ссылка);
	
		Если НЕ ТекущаяОрганизацияПоУмолчанию = Справочники.Организации.ПустаяСсылка() Тогда
		
			СброситьПризнакПоУмолчанию(ТекущаяОрганизацияПоУмолчанию);
		
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПрефиксПриИзменении(Элемент)
	Если Найти(Объект.Префикс, "-") > 0 Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Нельзя в префиксе организации использовать символ ""-"".'"));
		Объект.Префикс = СтрЗаменить(Объект.Префикс, "-", "");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ...
// СтандартныеПодсистемы.Свойства
 &НаКлиенте
 Процедура Подключаемый_РедактироватьСоставСвойств()
	 
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ...
// СтандартныеПодсистемы.Свойства
&НаСервере
 Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	 
	 УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	 
 КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	УправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат )
	УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
		МодульУправлениеПечатьюКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеПечатьюКлиент");
		МодульУправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьАлгоритм(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация",Объект.Ссылка);
	
	ОткрытьФорму("Обработка.ВыборАлгоритмаФормированияПотребности.Форма.Форма",ПараметрыФормы,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ВыборАлгоритмаФормированияПотребности.Форма.Форма" Тогда
		
		Если ВозможноУстановитьАлгоритм() И (НЕ ВыбранноеЗначение.ЧастичнаяВыдача = 3 И НЕ ВыбранноеЗначение.ЧастичнаяВыдача = 4) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Допустимо выбрать только алгоритм с частичной выдачей: 3 (вилка с % износа) или 4 (вилка без % износа)";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;	
		
		Объект.ИспользоватьГруппыИЛИ 					= ВыбранноеЗначение.ИспользоватьГруппыИЛИ;
		Объект.НеИзменятьСрокНоскиВыданныхСИЗ 			= ВыбранноеЗначение.НеИзменятьСрокНоскиВыданныхСИЗ;
		Объект.СверткаПотребностиПоНоменклатуреНормы 	= ВыбранноеЗначение.СверткаПотребностиПоНоменклатуреНормы;
		Объект.ЧастичнаяВыдача 							= ВыбранноеЗначение.ЧастичнаяВыдача;
		Объект.ОписаниеАлгоритмаФормированияПотребности	= ВыбранноеЗначение.Описание;
		
		ПроцедурыРаботыСНормамиКлиент.ИнициализироватьАлгоритмФормированияПотребности(Объект,ВыбранноеЗначение.НаименованиеАлгоритма);
		
		Если Объект.ЧастичнаяВыдача = 1 Тогда
			ПредставлениеЧастичнойВыдачи = "(пропорция)";
		ИначеЕсли Объект.ЧастичнаяВыдача = 2 Тогда
			ПредставлениеЧастичнойВыдачи = "(суммирование)";
		ИначеЕсли Объект.ЧастичнаяВыдача = 3 Тогда
			ПредставлениеЧастичнойВыдачи = "(вилка с % износа)";
		ИначеЕсли Объект.ЧастичнаяВыдача = 4 Тогда
			ПредставлениеЧастичнойВыдачи = "(вилка без % износа)";	
		Иначе
			ПредставлениеЧастичнойВыдачи = "(не определена)";
		КонецЕсли;
		
		Если НЕ Объект.ИспользоватьАлгоритм_0_0_0_3 И НЕ Объект.ИспользоватьАлгоритм_0_0_0_4 Тогда
			Объект.ИспользоватьПроцентИзноса = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;

	Модифицированность = Истина;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ЧастичнаяВыдача = 1 Тогда
		ПредставлениеЧастичнойВыдачи = "(пропорция)";
	ИначеЕсли Объект.ЧастичнаяВыдача = 2 Тогда
		ПредставлениеЧастичнойВыдачи = "(суммирование)";
	ИначеЕсли Объект.ЧастичнаяВыдача = 3 Тогда
		ПредставлениеЧастичнойВыдачи = "(вилка с % износа)";
	ИначеЕсли Объект.ЧастичнаяВыдача = 4 Тогда
		ПредставлениеЧастичнойВыдачи = "(вилка без % износа)";
	Иначе
		ПредставлениеЧастичнойВыдачи = "(не определена)";
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ЕстьТакойПрефиксШтрихкода()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.Ссылка = &Ссылка
	|	И Организации.ПрефиксШтрихкодаНоменклатуры = &ПрефиксШтрихкодаНоменклатуры";
	
	Запрос.УстановитьПараметр("Ссылка",							Объект.Ссылка);
	Запрос.УстановитьПараметр("ПрефиксШтрихкодаНоменклатуры",	Объект.ПрефиксШтрихкодаНоменклатуры);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Следующий();
	
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура SMSИнформированиеОВозвратеИзЧисткиПриИзменении(Элемент)
	
	Элементы.SMSШаблонОВозвратеИзЧистки.Видимость = Объект.SMSИнформированиеОВозвратеИзЧистки;
	
КонецПроцедуры

&НаКлиенте
Процедура SMSИнформированиеОПолученииСредствЗащитыПриИзменении(Элемент)
	
	Элементы.SMSШаблонОПолученииСредствЗащиты.Видимость = Объект.SMSИнформированиеОПолученииСредствЗащиты;
	
КонецПроцедуры

&НаКлиенте
Процедура SMSИнформированиеОПоступленииНаСкладПриИзменении(Элемент)
	
	Элементы.SMSШаблонОПоступленииНаСклад.Видимость = Объект.SMSИнформированиеОПоступленииНаСклад;
	
КонецПроцедуры

&НаКлиенте
Процедура EmailИнформированиеОВозвратеИзЧисткиПриИзменении(Элемент)
	
	Элементы.EmailШаблонОВозвратеИзЧистки.Видимость = Объект.EmailИнформированиеОВозвратеИзЧистки;
	
КонецПроцедуры

&НаКлиенте
Процедура EmailИнформированиеОПолученииСредствЗащитыПриИзменении(Элемент)
	
	Элементы.EmailШаблонОПолученииСредствЗащиты.Видимость = Объект.EmailИнформированиеОПолученииСредствЗащиты;
	
КонецПроцедуры

&НаКлиенте
Процедура EmailИнформированиеОПоступленииНаСкладПриИзменении(Элемент)
	
	Элементы.EmailШаблонОПоступленииНаСклад.Видимость = Объект.EmailИнформированиеОПоступленииНаСклад;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.НаименованиеПолное) Тогда
		Объект.НаименованиеПолное = Объект.Наименование;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СброситьПризнакПоУмолчанию(ТекущаяОрганизацияПоУмолчанию)
	
	ОрганизацияОбъект = ТекущаяОрганизацияПоУмолчанию.ПолучитьОбъект();
	ОрганизацияОбъект.ОрганизацияПоУмолчанию = Ложь;
	ОрганизацияОбъект.Записать();
	
КонецПроцедуры	

//+++АСТБ_Горюшин_Алексей_32324
&НаКлиенте
Процедура SMSШаблонОВозвратеИзЧисткиСоздание(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыДляФормы = Новый Структура("ВидСообщения", "СообщениеSMS");
    ОткрытьФорму("Справочник.ШаблоныСообщений.ФормаОбъекта",ПараметрыДляФормы, ЭтаФорма,,,,Новый ОписаниеОповещения("SMSШаблонОВозвратеИзЧисткиВозврат", ЭтотОбъект));
КонецПроцедуры //---АСТБ_Горюшин_Алексей_32324

//+++АСТБ_Горюшин_Алексей_32324
&НаКлиенте
Процедура SMSШаблонОВозвратеИзЧисткиВозврат(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = Неопределено Тогда
        Возврат;
	КонецЕсли;
	Объект.SMSШаблонОВозвратеИзЧистки = Результат;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_32324	

//+++АСТБ_Горюшин_Алексей_32324
&НаКлиенте
Процедура SMSШаблонОПолученииСредствЗащитыСоздание(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыДляФормы = Новый Структура("ВидСообщения", "СообщениеSMS");
    ОткрытьФорму("Справочник.ШаблоныСообщений.ФормаОбъекта",ПараметрыДляФормы, ЭтаФорма,,,,Новый ОписаниеОповещения("SMSШаблонОПолученииСредствЗащитыВозврат", ЭтотОбъект));
КонецПроцедуры //---АСТБ_Горюшин_Алексей_32324

//+++АСТБ_Горюшин_Алексей_32324
&НаКлиенте
Процедура SMSШаблонОПолученииСредствЗащитыВозврат(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = Неопределено Тогда
        Возврат;
	КонецЕсли;
	Объект.SMSШаблонОПолученииСредствЗащиты = Результат;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_32324

//+++АСТБ_Горюшин_Алексей_32324
&НаКлиенте
Процедура SMSШаблонОПоступленииНаСкладСоздание(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыДляФормы = Новый Структура("ВидСообщения", "СообщениеSMS");
    ОткрытьФорму("Справочник.ШаблоныСообщений.ФормаОбъекта",ПараметрыДляФормы, ЭтаФорма,,,,Новый ОписаниеОповещения("SMSШаблонОПоступленииНаСкладВозврат", ЭтотОбъект));
КонецПроцедуры //---АСТБ_Горюшин_Алексей_32324

//+++АСТБ_Горюшин_Алексей_32324
&НаКлиенте
Процедура SMSШаблонОПоступленииНаСкладВозврат(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = Неопределено Тогда
        Возврат;
	КонецЕсли;
	Объект.SMSШаблонОПоступленииНаСклад = Результат;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_32324

//+++АСТБ_Горюшин_Алексей_20659
// Включена видимость кнопки "Выбрать алгоритм" для роли "Полные права"
//---АСТБ_Горюшин_Алексей_20659