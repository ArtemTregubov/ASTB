#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Если СоставНормы.Количество() > 1 Тогда
		
		//проверка заполнения периодичности
		ШаблонСообщения = НСтр("ru='Не заполнена колонка периодичность выдачи в строке %НомерСтроки%.'");
		Для Каждого СтрокаСостава Из СоставНормы Цикл
			Если (ВидРасчета = Перечисления.ВидыРасчетаНорм.Период) И (НЕ ЗначениеЗаполнено(СтрокаСостава.ПериодичностьВыдачи)) Тогда
				ТекстСообщения 	= СтрЗаменить(ШаблонСообщения, "%НомерСтроки%", СтрокаСостава.НомерСтроки);
				Поле 			= ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("СоставНормы", СтрокаСостава.НомерСтроки, "ПериодичностьВыдачи");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			КонецЕсли;
		КонецЦикла;
		
		//проверка дублей номенклатуры нормы
		ТаблицаДляПроверки = СоставНормы.Выгрузить(,"НоменклатураНормы");
		ТаблицаДляПроверки.Колонки.Добавить("КоличествоДублей");
		ТаблицаДляПроверки.ЗаполнитьЗначения(1,"КоличествоДублей");
		ТаблицаДляПроверки.Свернуть("НоменклатураНормы","КоличествоДублей");
		
		Для Каждого СтрокаТаблицы Из ТаблицаДляПроверки Цикл
			
			Если СтрокаТаблицы.КоличествоДублей = 1 Тогда
				Продолжить;
			КонецЕсли;
						
			ТекстСообщения = "Значение номенклатуры нормы: " + СтрокаТаблицы.НоменклатураНормы + " не уникально.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,,"Объект",Отказ);
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого СтрокаСостава Из СоставНормы Цикл
			Если (ВидРасчета = Перечисления.ВидыРасчетаНорм.Период) И (НЕ ЗначениеЗаполнено(СтрокаСостава.ПериодичностьВыдачи)) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнена периодичность выдачи.'"),КлючДанных,"ПериодичностьВыдачи","Объект",Отказ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;

	//проверка дублей норм выдачи СИЗ
	ТаблицаДляПроверки = СоставНормы.Выгрузить(,"НомерСтроки, НоменклатураНормы, ПериодичностьВыдачи, УчитыватьВПотребности");
	
	Массив = Новый Массив; 
	Если ТипЗнч(ЭтотОбъект.ОснованиеНормы) = Тип("Строка") Тогда
		Массив.Добавить(Тип("Строка"));
		КвалификаторСтроки = Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная);
		ТаблицаДляПроверки.Колонки.Добавить("Основание",Новый ОписаниеТипов(Массив, , КвалификаторСтроки));
	Иначе
		Массив.Добавить(Тип("СправочникСсылка.ПунктыТОН"));
		ТаблицаДляПроверки.Колонки.Добавить("Основание",Новый ОписаниеТипов(Массив));
	КонецЕсли;
	ТаблицаДляПроверки.ЗаполнитьЗначения(ЭтотОбъект.ОснованиеНормы,"Основание");
	
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.Организации"));
	ТаблицаДляПроверки.Колонки.Добавить("Владелец",Новый ОписаниеТипов(Массив));
	ТаблицаДляПроверки.ЗаполнитьЗначения(ЭтотОбъект.Владелец,"Владелец");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДляПроверки.Основание,
	|	ТаблицаДляПроверки.Владелец,
	|	ТаблицаДляПроверки.НоменклатураНормы,
	|	ТаблицаДляПроверки.ПериодичностьВыдачи,
	|	ТаблицаДляПроверки.УчитыватьВПотребности,
	|	ТаблицаДляПроверки.НомерСтроки
	|ПОМЕСТИТЬ ТаблицаДляПроверки
	|ИЗ
	|	&ТаблицаДляПроверки КАК ТаблицаДляПроверки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.НормаВыдачи,
	|	ВложенныйЗапрос.КоличествоСовпадений
	|ИЗ
	|	(ВЫБРАТЬ
	|		НормыВыдачиСИЗСоставНормы.Ссылка КАК НормаВыдачи,
	|		СУММА(1) КАК КоличествоСовпадений
	|	ИЗ
	|		ТаблицаДляПроверки КАК ТаблицаДляПроверки
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|			ПО ТаблицаДляПроверки.НоменклатураНормы = НормыВыдачиСИЗСоставНормы.НоменклатураНормы
	|				И ТаблицаДляПроверки.ПериодичностьВыдачи = НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи
	|				И ТаблицаДляПроверки.НомерСтроки = НормыВыдачиСИЗСоставНормы.НомерСтроки
	|				И ТаблицаДляПроверки.УчитыватьВПотребности = НормыВыдачиСИЗСоставНормы.УчитыватьВПотребности
	|				И ТаблицаДляПроверки.Основание = НормыВыдачиСИЗСоставНормы.Ссылка.ОснованиеНормы
	|				И ТаблицаДляПроверки.Владелец = НормыВыдачиСИЗСоставНормы.Ссылка.Владелец
	|	ГДЕ
	|		НормыВыдачиСИЗСоставНормы.Ссылка В
	|				(ВЫБРАТЬ
	|					ВложенныйЗапрос.Ссылка КАК НормаВыдачи
	|				ИЗ
	|					(ВЫБРАТЬ
	|						НормыВыдачиСИЗСоставНормы.Ссылка КАК Ссылка,
	|						СУММА(1) КАК КоличествоСтрок
	|					ИЗ
	|						Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|					СГРУППИРОВАТЬ ПО
	|						НормыВыдачиСИЗСоставНормы.Ссылка) КАК ВложенныйЗапрос
	|				ГДЕ
	|					ВложенныйЗапрос.КоличествоСтрок = &КоличествоСтрок)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НормыВыдачиСИЗСоставНормы.Ссылка) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.КоличествоСовпадений = &КоличествоСтрок
	|	И ВложенныйЗапрос.НормаВыдачи <> &НормаВыдачи
	|	И ВложенныйЗапрос.НормаВыдачи.ВидВыдачиСИЗ = &ВидВыдачиСИЗ
	|	И ВложенныйЗапрос.НормаВыдачи.ВидРасчета = &ВидРасчета";
	
	Запрос.УстановитьПараметр("КоличествоСтрок",	СоставНормы.Количество());
	Запрос.УстановитьПараметр("ТаблицаДляПроверки",	ТаблицаДляПроверки);
	Запрос.УстановитьПараметр("НормаВыдачи",		Ссылка);
	Запрос.УстановитьПараметр("ВидВыдачиСИЗ",		ВидВыдачиСИЗ);
	Запрос.УстановитьПараметр("ВидРасчета",			ВидРасчета);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекстСообщения = "Норма выдачи СИЗ с такими данными уже существует.";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,,"Объект",Отказ);
	КонецЕсли;
	
КонецПроцедуры	

#КонецЕсли