
// Функция формирует массив имен регистров, по которым документ имеет движения.
// Вызывается при подготовке записей к регистрации движений.
//
Функция ПолучитьМассивИспользуемыхРегистров(Регистратор, Движения, МассивИсключаемыхРегистров = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);

	Результат = Новый Массив;
	МаксимумТаблицВЗапросе = 256;

	СчетчикТаблиц   = 0;
	СчетчикДвижений = 0;

	ВсегоДвижений = Движения.Количество();
	ТекстЗапроса  = "";
	Для Каждого Движение Из Движения Цикл

		СчетчикДвижений = СчетчикДвижений + 1;

		ПропуститьРегистр = МассивИсключаемыхРегистров <> Неопределено
							И МассивИсключаемыхРегистров.Найти(Движение.Имя) <> Неопределено;

		Если Не ПропуститьРегистр Тогда

			Если СчетчикТаблиц > 0 Тогда

				ТекстЗапроса = ТекстЗапроса + "
				|ОБЪЕДИНИТЬ ВСЕ
				|";

			КонецЕсли;

			СчетчикТаблиц = СчетчикТаблиц + 1;

			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|""" + Движение.Имя + """ КАК ИмяРегистра
			|
			|ИЗ " + Движение.ПолноеИмя() + "
			|
			|ГДЕ Регистратор = &Регистратор
			|";

		КонецЕсли;

		Если СчетчикТаблиц = МаксимумТаблицВЗапросе Или СчетчикДвижений = ВсегоДвижений Тогда

			Запрос.Текст  = ТекстЗапроса;
			ТекстЗапроса  = "";
			СчетчикТаблиц = 0;

			Если Результат.Количество() = 0 Тогда

				Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИмяРегистра");

			Иначе

				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					Результат.Добавить(Выборка.ИмяРегистра);
				КонецЦикла;

			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;

КонецФункции


//Andrey_NSK***********************************************************************

Процедура ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства) Экспорт

	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();

КонецПроцедуры

// Процедура инициализирует общие структуры, используемые при проведении документов.
// Вызывается из модуля документов при проведении.
//
Процедура ИнициализироватьДополнительныеСвойстваДляПроведения(ДокументСсылка, ДополнительныеСвойства, РежимПроведения = Неопределено) Экспорт

	// В структуре "ДополнительныеСвойства" создаются свойства с ключами "ТаблицыДляДвижений", "ДляПроведения".

	// "ТаблицыДляДвижений" - структура, которая будет содержать таблицы значений с данными для выполнения движений.
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);

	// "ДляПроведения" - структура, содержащая свойства и реквизиты документа, необходимые для проведения.
	ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура);
	
	// Структура, содержащая ключ с именем "МенеджерВременныхТаблиц", в значении которого хранится менеджер временных таблиц.
	// Содержит для каждой временной таблицы ключ (имя временной таблицы) и значение (признак наличия записей во временной таблице).
	ДополнительныеСвойства.ДляПроведения.Вставить("СтруктураВременныеТаблицы", Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц));
	ДополнительныеСвойства.ДляПроведения.Вставить("РежимПроведения",           РежимПроведения);
	ДополнительныеСвойства.ДляПроведения.Вставить("МетаданныеДокумента",       ДокументСсылка.Метаданные());
	ДополнительныеСвойства.ДляПроведения.Вставить("Ссылка",                    ДокументСсылка);

КонецПроцедуры

// Функция проверяет наличие изменений в таблице регистра.
//
Функция ЕстьИзмененияВТаблице(СтруктураДанных, Ключ)
	Перем ЕстьИзменения;

	Возврат СтруктураДанных.Свойство(Ключ, ЕстьИзменения) И ЕстьИзменения;

КонецФункции

// Процедура выполняет пордготовку наборов записей документа к записи движений.
// 1. Очищает наборы записей от "старых записей" (ситуация возможна только в толстом клиенте)
// 2. Взводит флаг записи у наборов, по которым документ имеет движения
// Вызывается из модуля документов при проведении.
//
Процедура ПодготовитьНаборыЗаписейКРегистрацииДвижений(Объект) Экспорт

	Для Каждого НаборЗаписей Из Объект.Движения Цикл

		Если НаборЗаписей.Количество() > 0 Тогда
			НаборЗаписей.Очистить();
		КонецЕсли;

	КонецЦикла;

	Если Не Объект.ДополнительныеСвойства.ЭтоНовый Тогда

		// Регистры, движения по которым формируются не из модуля менеджера документа.
		ИсключаемыеРегистры = Новый Массив;

		МассивИменРегистров = ПолучитьМассивИспользуемыхРегистров(Объект.Ссылка,
				Объект.ДополнительныеСвойства.ДляПроведения.МетаданныеДокумента.Движения,
				ИсключаемыеРегистры);

		Для Каждого ИмяРегистра Из МассивИменРегистров Цикл
			Объект.Движения[ИмяРегистра].Записывать = Истина;
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

// Процедура записывает движения документа. Дополнительно происходит копирование параметров
// в модули наборов записей для выполнения регистрации изменений в движениях.
// Процедура вызывается из модуля документов при проведении.
//
Процедура ЗаписатьНаборыЗаписей(Объект) Экспорт
	Перем РегистрыДляКонтроля;

	// Регистры, для которых будут рассчитаны таблицы изменений движений.
	Если Объект.ДополнительныеСвойства.ДляПроведения.Свойство("РегистрыДляКонтроля", РегистрыДляКонтроля) Тогда
		Для Каждого НаборЗаписей Из РегистрыДляКонтроля Цикл
			Если НаборЗаписей.Записывать Тогда

				// Установка флага регистрации изменений в наборе записей.
				НаборЗаписей.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", Истина);
				НаборЗаписей.ДополнительныеСвойства.Вставить("ЭтоНовый", Объект.ДополнительныеСвойства.ЭтоНовый);

				// Структура для передачи данных в модули наборов записей.
				НаборЗаписей.ДополнительныеСвойства.Вставить("ДляПроведения", 
						Новый Структура("СтруктураВременныеТаблицы", Объект.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы));

			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Объект.Движения.Записать();
КонецПроцедуры

// Процедура выполняет контроль результатов проведения.
// Процедура вызывается из модуля документов при проведении.
//
Процедура ВыполнитьКонтрольРезультатовПроведения(Объект, Отказ) Экспорт

	Если Объект.ДополнительныеСвойства.ДляПроведения.РегистрыДляКонтроля.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ДанныеТаблиц    = Объект.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	ПакетЗапросов   = Новый Запрос;
	МассивКонтролей = Новый Массив;
	ТекстЗапроса    = "";

	// Контроль остатков по регистру "Остатки номенклатуры" 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияОстаткиНоменклатурыИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ОстаткиНоменклатуры"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Организация КАК Организация,
		|	ОстаткиНоменклатурыОстатки.Склад КАК Склад,
		|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК Количество,
		|	ОстаткиНоменклатурыОстатки.ПроцентИзноса КАК ПроцентИзноса
		|ИЗ
		|	ДвиженияОстаткиНоменклатурыИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				,
		|				(Организация, Склад, Номенклатура, ХарактеристикаНоменклатуры, ПроцентИзноса) В
		|					(ВЫБРАТЬ
		|						Таблица.Организация,
		|						Таблица.Склад,
		|						Таблица.Номенклатура,
		|						Таблица.ХарактеристикаНоменклатуры,
		|						Таблица.ПроцентИзноса
		|					ИЗ
		|						ДвиженияОстаткиНоменклатурыИзменение КАК Таблица)) КАК ОстаткиНоменклатурыОстатки
		|		ПО ТаблицаИзменений.Организация = ОстаткиНоменклатурыОстатки.Организация
		|			И ТаблицаИзменений.Склад = ОстаткиНоменклатурыОстатки.Склад
		|			И ТаблицаИзменений.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
		|			И ТаблицаИзменений.ХарактеристикаНоменклатуры = ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры
		|			И ТаблицаИзменений.ПроцентИзноса = ОстаткиНоменклатурыОстатки.ПроцентИзноса
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиНоменклатурыОстатки.Организация,
		|	ОстаткиНоменклатурыОстатки.Склад,
		|	ОстаткиНоменклатурыОстатки.Номенклатура,
		|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры,
		|	ОстаткиНоменклатурыОстатки.ПроцентИзноса
		|
		|ИМЕЮЩИЕ
		|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) < 0;
		|///////////////////////////////////////////////////////////////////
		|";

	КонецЕсли;
	
	// Контроль остатков по регистру "Занятые рабочие места" 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияЗанятыеРабочиеМестаИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ЗанятыеРабочиеМеста"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ЗанятыеРабочиеМестаОстатки.Организация КАК Организация,
		|	ЗанятыеРабочиеМестаОстатки.Подразделение,
		|	ЗанятыеРабочиеМестаОстатки.Должность,
		|	ЗанятыеРабочиеМестаОстатки.РабочееМесто,
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник,
		|	СУММА(ЗанятыеРабочиеМестаОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	ДвиженияЗанятыеРабочиеМестаИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|				,
		|				(Организация, Подразделение, Должность, РабочееМесто, Сотрудник) В
		|					(ВЫБРАТЬ
		|						Таблица.Организация,
		|						Таблица.Подразделение,
		|						Таблица.Должность,
		|						Таблица.РабочееМесто,
		|						Таблица.Сотрудник
		|					ИЗ
		|						ДвиженияЗанятыеРабочиеМестаИзменение КАК Таблица)) КАК ЗанятыеРабочиеМестаОстатки
		|		ПО ТаблицаИзменений.Организация = ЗанятыеРабочиеМестаОстатки.Организация
		|			И ТаблицаИзменений.Подразделение = ЗанятыеРабочиеМестаОстатки.Подразделение
		|			И ТаблицаИзменений.Должность = ЗанятыеРабочиеМестаОстатки.Должность
		|			И ТаблицаИзменений.РабочееМесто = ЗанятыеРабочиеМестаОстатки.РабочееМесто
		|			И ТаблицаИзменений.Сотрудник = ЗанятыеРабочиеМестаОстатки.Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Организация,
		|	ЗанятыеРабочиеМестаОстатки.Подразделение,
		|	ЗанятыеРабочиеМестаОстатки.Должность,
		|	ЗанятыеРабочиеМестаОстатки.РабочееМесто,
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник
		|
		|ИМЕЮЩИЕ
		|	СУММА(ЗанятыеРабочиеМестаОстатки.КоличествоОстаток) < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	// Контроль остатков по регистру "Выданные средства защиты" 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияВыданныеСредстваЗащитыИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ВыданныеСредстваЗащиты"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ВыданныеСредстваЗащитыОстатки.Организация КАК Организация,
		|	ВыданныеСредстваЗащитыОстатки.Сотрудник КАК Сотрудник,
		|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи КАК НормаВыдачи,
		|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы КАК НоменклатураНормы,
		|	ВыданныеСредстваЗащитыОстатки.Номенклатура КАК Номенклатура,
		|	ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи КАК ДатаВыдачи,
		|	ВыданныеСредстваЗащитыОстатки.ПроцентИзноса КАК ПроцентИзноса,
		|	СУММА(ВыданныеСредстваЗащитыОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	ДвиженияВыданныеСредстваЗащитыИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыданныеСредстваЗащиты.Остатки(
		|				,
		|				(Организация, Сотрудник, НормаВыдачи, НоменклатураНормы, Номенклатура, ХарактеристикаНоменклатуры, ДатаВыдачи, ПроцентИзноса) В
		|					(ВЫБРАТЬ
		|						Таблица.Организация,
		|						Таблица.Сотрудник,
		|						Таблица.НормаВыдачи,
		|						Таблица.НоменклатураНормы,
		|						Таблица.Номенклатура,
		|						Таблица.ХарактеристикаНоменклатуры,
		|						Таблица.ДатаВыдачи,
		|						Таблица.ПроцентИзноса
		|					ИЗ
		|						ДвиженияВыданныеСредстваЗащитыИзменение КАК Таблица)) КАК ВыданныеСредстваЗащитыОстатки
		|		ПО ТаблицаИзменений.Организация = ВыданныеСредстваЗащитыОстатки.Организация
		|			И ТаблицаИзменений.Сотрудник = ВыданныеСредстваЗащитыОстатки.Сотрудник
		|			И ТаблицаИзменений.НормаВыдачи = ВыданныеСредстваЗащитыОстатки.НормаВыдачи
		|			И ТаблицаИзменений.НоменклатураНормы = ВыданныеСредстваЗащитыОстатки.НоменклатураНормы
		|			И ТаблицаИзменений.Номенклатура = ВыданныеСредстваЗащитыОстатки.Номенклатура
		|			И ТаблицаИзменений.ХарактеристикаНоменклатуры = ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры
		|			И ТаблицаИзменений.ДатаВыдачи = ВыданныеСредстваЗащитыОстатки.ДатаВыдачи
		|			И ТаблицаИзменений.ПроцентИзноса = ВыданныеСредстваЗащитыОстатки.ПроцентИзноса
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыданныеСредстваЗащитыОстатки.Организация,
		|	ВыданныеСредстваЗащитыОстатки.Сотрудник,
		|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи,
		|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы,
		|	ВыданныеСредстваЗащитыОстатки.Номенклатура,
		|	ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры,
		|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи,
		|	ВыданныеСредстваЗащитыОстатки.ПроцентИзноса
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВыданныеСредстваЗащитыОстатки.КоличествоОстаток) < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;

	// Контроль остатков по регистру "Заказы поставщику" 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияЗаказыПоставщикуИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ЗаказыПоставщику"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ЗаказыПоставщикуОстатки.Организация КАК Организация,
		|	ЗаказыПоставщикуОстатки.ЗаказПоставщику,
		|	ЗаказыПоставщикуОстатки.Номенклатура,
		|	ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры,
		|	ЗаказыПоставщикуОстатки.ДокументВыдачи,
		|	СУММА(ЗаказыПоставщикуОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	ДвиженияЗаказыПоставщикуИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщику.Остатки(
		|				,
		|				(Организация, ЗаказПоставщику, Номенклатура, ХарактеристикаНоменклатуры, ДокументВыдачи) В
		|					(ВЫБРАТЬ
		|						Таблица.Организация,
		|						Таблица.ЗаказПоставщику,
		|						Таблица.Номенклатура,
		|						Таблица.ХарактеристикаНоменклатуры,
		|						Таблица.ДокументВыдачи
		|					ИЗ
		|						ДвиженияЗаказыПоставщикуИзменение КАК Таблица)) КАК ЗаказыПоставщикуОстатки
		|		ПО ТаблицаИзменений.Организация = ЗаказыПоставщикуОстатки.Организация
		|			И ТаблицаИзменений.ЗаказПоставщику = ЗаказыПоставщикуОстатки.ЗаказПоставщику
		|			И ТаблицаИзменений.Номенклатура = ЗаказыПоставщикуОстатки.Номенклатура
		|			И ТаблицаИзменений.ХарактеристикаНоменклатуры = ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры
		|			И ТаблицаИзменений.ДокументВыдачи = ЗаказыПоставщикуОстатки.ДокументВыдачи
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикуОстатки.Организация,
		|	ЗаказыПоставщикуОстатки.ЗаказПоставщику,
		|	ЗаказыПоставщикуОстатки.Номенклатура,
		|	ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры,
		|	ЗаказыПоставщикуОстатки.ДокументВыдачи
		|
		|ИМЕЮЩИЕ
		|	СУММА(ЗаказыПоставщикуОстатки.КоличествоОстаток) < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	// Контроль остатков по регистру "Потребность выдачи СИЗ" 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияПотребностьВыдачиСИЗИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ПотребностьВыдачиСИЗ"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ПотребностьВыдачиСИЗОстатки.Организация КАК Организация,
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник КАК Сотрудник,
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы КАК НоменклатураНормы,
		|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи КАК НормаВыдачи,
		|	ПотребностьВыдачиСИЗОстатки.ДатаПотребности КАК ДатаПотребности,
		|	СУММА(ПотребностьВыдачиСИЗОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	ДвиженияПотребностьВыдачиСИЗИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
		|				,
		|				(Организация, Сотрудник, НоменклатураНормы, НормаВыдачи, ДатаПотребности) В
		|					(ВЫБРАТЬ
		|						Таблица.Организация,
		|						Таблица.Сотрудник,
		|						Таблица.НоменклатураНормы,
		|						Таблица.НормаВыдачи,
		|						Таблица.ДатаПотребности
		|					ИЗ
		|						ДвиженияПотребностьВыдачиСИЗИзменение КАК Таблица)) КАК ПотребностьВыдачиСИЗОстатки
		|		ПО ТаблицаИзменений.Организация = ПотребностьВыдачиСИЗОстатки.Организация
		|			И ТаблицаИзменений.Сотрудник = ПотребностьВыдачиСИЗОстатки.Сотрудник
		|			И ТаблицаИзменений.НормаВыдачи = ПотребностьВыдачиСИЗОстатки.НормаВыдачи
		|			И ТаблицаИзменений.ДатаПотребности = ПотребностьВыдачиСИЗОстатки.ДатаПотребности
		|			И ТаблицаИзменений.НоменклатураНормы = ПотребностьВыдачиСИЗОстатки.НоменклатураНормы
		|
		|СГРУППИРОВАТЬ ПО
		|	ПотребностьВыдачиСИЗОстатки.Организация,
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы,
		|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи,
		|	ПотребностьВыдачиСИЗОстатки.ДатаПотребности
		|
		|ИМЕЮЩИЕ
		|	СУММА(ПотребностьВыдачиСИЗОстатки.КоличествоОстаток) < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	// Контроль остатков по регистру "Средства защиты в чистке" 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияСредстваЗащитыВЧисткеИзменение") Тогда

		МассивКонтролей.Добавить(Врег("СредстваЗащитыВЧистке"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	СредстваЗащитыВЧисткеОстатки.Организация КАК Организация,
		|	СредстваЗащитыВЧисткеОстатки.Контрагент КАК Контрагент,
		|	СредстваЗащитыВЧисткеОстатки.Сотрудник КАК Сотрудник,
		|	СредстваЗащитыВЧисткеОстатки.Номенклатура КАК Номенклатура,
		|	СредстваЗащитыВЧисткеОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	СредстваЗащитыВЧисткеОстатки.Штрихкод КАК Штрихкод,
		|	СУММА(СредстваЗащитыВЧисткеОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	ДвиженияСредстваЗащитыВЧисткеИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СредстваЗащитыВЧистке.Остатки(
		|				,
		|				(Организация, Контрагент, Сотрудник, Номенклатура, ХарактеристикаНоменклатуры, Штрихкод) В
		|					(ВЫБРАТЬ
		|						Таблица.Организация,
		|						Таблица.Контрагент,
		|						Таблица.Сотрудник,
		|						Таблица.Номенклатура,
		|						Таблица.ХарактеристикаНоменклатуры,
		|						Таблица.Штрихкод
		|					ИЗ
		|						ДвиженияСредстваЗащитыВЧисткеИзменение КАК Таблица)) КАК СредстваЗащитыВЧисткеОстатки
		|		ПО ТаблицаИзменений.Организация = СредстваЗащитыВЧисткеОстатки.Организация
		|			И ТаблицаИзменений.Контрагент = СредстваЗащитыВЧисткеОстатки.Контрагент
		|			И ТаблицаИзменений.Сотрудник = СредстваЗащитыВЧисткеОстатки.Сотрудник
		|			И ТаблицаИзменений.Номенклатура = СредстваЗащитыВЧисткеОстатки.Номенклатура
		|			И ТаблицаИзменений.ХарактеристикаНоменклатуры = СредстваЗащитыВЧисткеОстатки.ХарактеристикаНоменклатуры
		|			И ТаблицаИзменений.Штрихкод = СредстваЗащитыВЧисткеОстатки.Штрихкод
		|
		|СГРУППИРОВАТЬ ПО
		|	СредстваЗащитыВЧисткеОстатки.Организация,
		|	СредстваЗащитыВЧисткеОстатки.Контрагент,
		|	СредстваЗащитыВЧисткеОстатки.Сотрудник,
		|	СредстваЗащитыВЧисткеОстатки.Номенклатура,
		|	СредстваЗащитыВЧисткеОстатки.ХарактеристикаНоменклатуры,
		|	СредстваЗащитыВЧисткеОстатки.Штрихкод
		|
		|ИМЕЮЩИЕ
		|	СУММА(СредстваЗащитыВЧисткеОстатки.КоличествоОстаток) < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	// Контроль остатков по регистру "Выдача по потребности" 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияВыдачаПоПотребностиИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ВыдачаПоПотребности"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ВыдачаПоПотребностиОстатки.Организация КАК Организация,
		|	ВыдачаПоПотребностиОстатки.Сотрудник,
		|	ВыдачаПоПотребностиОстатки.НормаВыдачи,
		|	ВыдачаПоПотребностиОстатки.НоменклатураНормы,
		|	ВыдачаПоПотребностиОстатки.ДатаПотребности,
		|	ВыдачаПоПотребностиОстатки.ДатаВыдачи,
		|	ВыдачаПоПотребностиОстатки.ПроцентИзноса,
		|	СУММА(ВыдачаПоПотребностиОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	ДвиженияВыдачаПоПотребностиИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыдачаПоПотребности.Остатки(
		|				,
		|				(Организация, Сотрудник, НормаВыдачи, НоменклатураНормы, ДатаПотребности, ДатаВыдачи, ПроцентИзноса) В
		|					(ВЫБРАТЬ
		|						Таблица.Организация,
		|						Таблица.Сотрудник,
		|						Таблица.НормаВыдачи,
		|						Таблица.НоменклатураНормы,
		|						Таблица.ДатаПотребности,
		|						Таблица.ДатаВыдачи,
		|						Таблица.ПроцентИзноса
		|					ИЗ
		|						ДвиженияВыдачаПоПотребностиИзменение КАК Таблица)) КАК ВыдачаПоПотребностиОстатки
		|		ПО ТаблицаИзменений.Организация = ВыдачаПоПотребностиОстатки.Организация
		|			И ТаблицаИзменений.Сотрудник = ВыдачаПоПотребностиОстатки.Сотрудник
		|			И ТаблицаИзменений.НормаВыдачи = ВыдачаПоПотребностиОстатки.НормаВыдачи
		|			И ТаблицаИзменений.НоменклатураНормы = ВыдачаПоПотребностиОстатки.НоменклатураНормы
		|			И ТаблицаИзменений.ДатаПотребности = ВыдачаПоПотребностиОстатки.ДатаПотребности
		|			И ТаблицаИзменений.ДатаВыдачи = ВыдачаПоПотребностиОстатки.ДатаВыдачи
		|			И ТаблицаИзменений.ПроцентИзноса = ВыдачаПоПотребностиОстатки.ПроцентИзноса
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыдачаПоПотребностиОстатки.Организация,
		|	ВыдачаПоПотребностиОстатки.Сотрудник,
		|	ВыдачаПоПотребностиОстатки.НормаВыдачи,
		|	ВыдачаПоПотребностиОстатки.НоменклатураНормы,
		|	ВыдачаПоПотребностиОстатки.ДатаПотребности,
		|	ВыдачаПоПотребностиОстатки.ДатаВыдачи,
		|	ВыдачаПоПотребностиОстатки.ПроцентИзноса
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВыдачаПоПотребностиОстатки.КоличествоОстаток) < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	// Контроль остатков по регистру "Заявки на выдачу" 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияЗаявкиНаВыдачуИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ЗаявкиНаВыдачу"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ЗаявкиНаВыдачуОстатки.Заявка,
		|	ЗаявкиНаВыдачуОстатки.Организация КАК Организация,
		|	ЗаявкиНаВыдачуОстатки.МВЗ,
		|	ЗаявкиНаВыдачуОстатки.Номенклатура,
		|	ЗаявкиНаВыдачуОстатки.ХарактеристикаНоменклатуры,
		|	СУММА(ЗаявкиНаВыдачуОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	ДвиженияЗаявкиНаВыдачуИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаявкиНаВыдачу.Остатки(
		|				,
		|				(Заявка, Организация, МВЗ, Номенклатура, ХарактеристикаНоменклатуры) В
		|					(ВЫБРАТЬ
		|						Таблица.Заявка,
		|						Таблица.Организация,
		|						Таблица.МВЗ,
		|						Таблица.Номенклатура,
		|						Таблица.ХарактеристикаНоменклатуры
		|					ИЗ
		|						ДвиженияЗаявкиНаВыдачуИзменение КАК Таблица)) КАК ЗаявкиНаВыдачуОстатки
		|		ПО ТаблицаИзменений.Организация = ЗаявкиНаВыдачуОстатки.Организация
		|			И ТаблицаИзменений.Заявка = ЗаявкиНаВыдачуОстатки.Заявка
		|			И ТаблицаИзменений.МВЗ = ЗаявкиНаВыдачуОстатки.МВЗ
		|			И ТаблицаИзменений.Номенклатура = ЗаявкиНаВыдачуОстатки.Номенклатура
		|			И ТаблицаИзменений.ХарактеристикаНоменклатуры = ЗаявкиНаВыдачуОстатки.ХарактеристикаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкиНаВыдачуОстатки.Организация,
		|	ЗаявкиНаВыдачуОстатки.Заявка,
		|	ЗаявкиНаВыдачуОстатки.МВЗ,
		|	ЗаявкиНаВыдачуОстатки.Номенклатура,
		|	ЗаявкиНаВыдачуОстатки.ХарактеристикаНоменклатуры
		|
		|ИМЕЮЩИЕ
		|	СУММА(ЗаявкиНаВыдачуОстатки.КоличествоОстаток) < 0;
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	// Контроль остатков по регистру "Средства защиты на хранении" 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияСредстваЗащитыНаХраненииИзменение") Тогда

		МассивКонтролей.Добавить(Врег("СредстваЗащитыНаХранении"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	СредстваЗащитыНаХраненииОстатки.Организация КАК Организация,
		|	СредстваЗащитыНаХраненииОстатки.Склад КАК Склад,
		|	СредстваЗащитыНаХраненииОстатки.Сотрудник КАК Сотрудник,
		|	СредстваЗащитыНаХраненииОстатки.Номенклатура КАК Номенклатура,
		|	СредстваЗащитыНаХраненииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	СредстваЗащитыНаХраненииОстатки.ТочкаХранения КАК ТочкаХранения,
		|	СУММА(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	ДвиженияСредстваЗащитыНаХраненииИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СредстваЗащитыНаХранении.Остатки(
		|				,
		|				(Организация, Склад, Сотрудник, Номенклатура, ХарактеристикаНоменклатуры, ТочкаХранения) В
		|					(ВЫБРАТЬ
		|						Таблица.Организация,
		|						Таблица.Склад,
		|						Таблица.Сотрудник,
		|						Таблица.Номенклатура,
		|						Таблица.ХарактеристикаНоменклатуры,
		|						Таблица.ТочкаХранения
		|					ИЗ
		|						ДвиженияСредстваЗащитыНаХраненииИзменение КАК Таблица)) КАК СредстваЗащитыНаХраненииОстатки
		|		ПО ТаблицаИзменений.Организация = СредстваЗащитыНаХраненииОстатки.Организация
		|			И ТаблицаИзменений.Склад = СредстваЗащитыНаХраненииОстатки.Склад
		|			И ТаблицаИзменений.Сотрудник = СредстваЗащитыНаХраненииОстатки.Сотрудник
		|			И ТаблицаИзменений.Номенклатура = СредстваЗащитыНаХраненииОстатки.Номенклатура
		|			И ТаблицаИзменений.ХарактеристикаНоменклатуры = СредстваЗащитыНаХраненииОстатки.ХарактеристикаНоменклатуры
		|			И ТаблицаИзменений.ТочкаХранения = СредстваЗащитыНаХраненииОстатки.ТочкаХранения
		|
		|СГРУППИРОВАТЬ ПО
		|	СредстваЗащитыНаХраненииОстатки.Организация,
		|	СредстваЗащитыНаХраненииОстатки.Склад,
		|	СредстваЗащитыНаХраненииОстатки.Сотрудник,
		|	СредстваЗащитыНаХраненииОстатки.Номенклатура,
		|	СредстваЗащитыНаХраненииОстатки.ХарактеристикаНоменклатуры,
		|	СредстваЗащитыНаХраненииОстатки.ТочкаХранения
		|
		|ИМЕЮЩИЕ
		|	СУММА(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток) < 0;
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	//+++АСТБ_Горюшин_Алексей_17125
	// Контроль остатков по регистру "Реализованные СИЗ" 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияРеализованныеСИЗИзменение") Тогда

		МассивКонтролей.Добавить(Врег("РеализованныеСИЗ"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	РеализованныеСИЗОстатки.Организация КАК Организация,
		|	РеализованныеСИЗОстатки.Номенклатура КАК Номенклатура,
		|	РеализованныеСИЗОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	СУММА(РеализованныеСИЗОстатки.КоличествоОстаток) КАК Количество,
		|	РеализованныеСИЗОстатки.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
		|	РеализованныеСИЗОстатки.СкладВыдачи КАК СкладВыдачи,
		|	РеализованныеСИЗОстатки.СкладОтправитель КАК СкладОтправитель,
		|	РеализованныеСИЗОстатки.МВЗ КАК МВЗ,
		|	РеализованныеСИЗОстатки.Поставщик КАК Поставщик,
		|	РеализованныеСИЗОстатки.ДокументВыдачи КАК ДокументВыдачи,
		|	РеализованныеСИЗОстатки.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности
		|ИЗ
		|	ДвиженияРеализованныеСИЗИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РеализованныеСИЗ.Остатки(
		|				,
		|				(Организация, Номенклатура, ХарактеристикаНоменклатуры, ВидВыдачиСИЗ, СкладВыдачи, СкладОтправитель, МВЗ, Поставщик, ДокументВыдачи, ПредварительныйПереходПраваСобственности) В
		|					(ВЫБРАТЬ
		|						Таблица.Организация,
		|						Таблица.Номенклатура,
		|						Таблица.ХарактеристикаНоменклатуры,
		|						Таблица.ВидВыдачиСИЗ,
		|						Таблица.СкладВыдачи,
		|						Таблица.СкладОтправитель,
		|						Таблица.МВЗ,
		|						Таблица.Поставщик,
		|						Таблица.ДокументВыдачи,
		|						Таблица.ПредварительныйПереходПраваСобственности
		|					ИЗ
		|						ДвиженияРеализованныеСИЗИзменение КАК Таблица)) КАК РеализованныеСИЗОстатки
		|		ПО ТаблицаИзменений.Организация = РеализованныеСИЗОстатки.Организация
		|			И ТаблицаИзменений.Номенклатура = РеализованныеСИЗОстатки.Номенклатура
		|			И ТаблицаИзменений.ХарактеристикаНоменклатуры = РеализованныеСИЗОстатки.ХарактеристикаНоменклатуры
		|			И ТаблицаИзменений.ВидВыдачиСИЗ = РеализованныеСИЗОстатки.ВидВыдачиСИЗ
		|			И ТаблицаИзменений.СкладВыдачи = РеализованныеСИЗОстатки.СкладВыдачи
		|			И ТаблицаИзменений.СкладОтправитель = РеализованныеСИЗОстатки.СкладОтправитель
		|			И ТаблицаИзменений.МВЗ = РеализованныеСИЗОстатки.МВЗ
		|			И ТаблицаИзменений.Поставщик = РеализованныеСИЗОстатки.Поставщик
		|			И ТаблицаИзменений.ДокументВыдачи = РеализованныеСИЗОстатки.ДокументВыдачи
		|			И ТаблицаИзменений.ПредварительныйПереходПраваСобственности = РеализованныеСИЗОстатки.ПредварительныйПереходПраваСобственности
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализованныеСИЗОстатки.Организация,
		|	РеализованныеСИЗОстатки.Номенклатура,
		|	РеализованныеСИЗОстатки.ХарактеристикаНоменклатуры,
		|	РеализованныеСИЗОстатки.ВидВыдачиСИЗ,
		|	РеализованныеСИЗОстатки.СкладВыдачи,
		|	РеализованныеСИЗОстатки.СкладОтправитель,
		|	РеализованныеСИЗОстатки.МВЗ,
		|	РеализованныеСИЗОстатки.Поставщик,
		|	РеализованныеСИЗОстатки.ДокументВыдачи,
		|	РеализованныеСИЗОстатки.ПредварительныйПереходПраваСобственности
		|
		|ИМЕЮЩИЕ
		|	СУММА(РеализованныеСИЗОстатки.КоличествоОстаток) < 0";
	//---АСТБ_Горюшин_Алексей_17125
	
	КонецЕсли;
	
	//АсТБ_Alexey_72252_********************************************************************
	// Контроль остатков по регистру "Ремонт средств защиты" 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияРемонтСредствЗащитыИзменение") Тогда

		МассивКонтролей.Добавить(Врег("РемонтСредствЗащиты"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	РемонтСредствЗащитыОстатки.Организация КАК Организация,
		|	РемонтСредствЗащитыОстатки.Контрагент КАК Контрагент,
		|	РемонтСредствЗащитыОстатки.ВидРемонта КАК ВидРемонта,
		|	СУММА(РемонтСредствЗащитыОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	ДвиженияРемонтСредствЗащитыИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РемонтСредствЗащиты.Остатки(
		|				,
		|				(Организация, Контрагент, ВидРемонта) В
		|					(ВЫБРАТЬ
		|						Таблица.Организация,
		|						Таблица.Контрагент,
		|						Таблица.ВидРемонта
		|					ИЗ
		|						ДвиженияРемонтСредствЗащитыИзменение КАК Таблица)) КАК РемонтСредствЗащитыОстатки
		|		ПО ТаблицаИзменений.Организация = РемонтСредствЗащитыОстатки.Организация
		|			И ТаблицаИзменений.Контрагент = РемонтСредствЗащитыОстатки.Контрагент
		|			И ТаблицаИзменений.ВидРемонта = РемонтСредствЗащитыОстатки.ВидРемонта
		|
		|СГРУППИРОВАТЬ ПО
		|	РемонтСредствЗащитыОстатки.Организация,
		|	РемонтСредствЗащитыОстатки.Контрагент,
		|	РемонтСредствЗащитыОстатки.ВидРемонта
		|
		|ИМЕЮЩИЕ
		|	СУММА(РемонтСредствЗащитыОстатки.КоличествоОстаток) < 0;
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	//АсТБ_Alexey_72252_********************************************************************
	
	Если МассивКонтролей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПакетЗапросов.Текст = ТекстЗапроса;
	ПакетЗапросов.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	МассивРезультатов = ПакетЗапросов.ВыполнитьПакет();

	Итератор = -1;
	Для Каждого Результат Из МассивРезультатов Цикл

		Итератор = Итератор + 1;
		Если Результат.Пустой() Тогда
			Продолжить;
		КонецЕсли;

		ИмяКонтроля = МассивКонтролей[Итератор];

		Если ИмяКонтроля = Врег("ОстаткиНоменклатуры") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструОстаткиНоменклатуры(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ЗанятыеРабочиеМеста") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструЗанятыеРабочиеМеста(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ВыданныеСредстваЗащиты") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструВыданныеСредстваЗащиты(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ЗаказыПоставщику") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструЗаказыПоставщику(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ПотребностьВыдачиСИЗ") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструПотребностьВыдачиСИЗ(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("СредстваЗащитыВЧистке") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструСредстваЗащитыВЧистке(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ВыдачаПоПотребности") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструВыдачаПоПотребности(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ЗаявкиНаВыдачу") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструЗаявкиНаВыдачу(Объект, Отказ, Результат);	
			
		ИначеЕсли ИмяКонтроля = Врег("СредстваЗащитыНаХранении") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструСредстваЗащитыНаХранении(Объект, Отказ, Результат);	
			
		//+++АСТБ_Горюшин_Алексей_17125	
		ИначеЕсли ИмяКонтроля = Врег("РеализованныеСИЗ") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструРеализованныеСИЗ(Объект, Отказ, Результат);	
		//---АСТБ_Горюшин_Алексей_17125
		
		//АсТБ_Alexey_72252_********************************************************************
		ИначеЕсли ИмяКонтроля = Врег("РемонтСредствЗащиты") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструРемонтСредствЗащиты(Объект, Отказ, Результат);
		//АсТБ_Alexey_72252_********************************************************************
		
		Иначе

			ВызватьИсключение НСтр("ru = 'Ошибка контроля проведения!'");

		КонецЕсли;
		
	КонецЦикла;

	Если Отказ Тогда

		Если Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ТекстСообщения = НСтр("ru = 'Проведение не выполнено '");
		Иначе
			ТекстСообщения = НСтр("ru = 'Отмена проведения не выполнена '");
		КонецЕсли;

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения + Строка(Объект), Объект);

	КонецЕсли;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструОстаткиНоменклатуры(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% %ПроцентИзноса%
		|Для организации ""%Организация%"" превышен оперативный складской остаток на складе ""%Склад%"" на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%НоменклатураХарактеристика%",	ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.ХарактеристикаНоменклатуры));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ПроцентИзноса%",  			?(ЗначениеЗаполнено(Выборка.ПроцентИзноса)," (износ " + Выборка.ПроцентИзноса.Код + "%) ",""));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Организация%",  				Строка(Выборка.Организация));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Склад%",  					Строка(Выборка.Склад));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Количество%", 				Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Единица%",    				Строка(Выборка.Номенклатура.ЕдиницаИзмерения));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструЗанятыеРабочиеМеста(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'У сотрудника: %Сотрудник% (%Подразделение%%Должность%%РабочееМесто%) 
		|Для организации ""%Организация%"" превышено количество занимаемых ставок на %Количество%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Сотрудник%", 	Строка(Выборка.Сотрудник));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Подразделение%", Строка(Выборка.Подразделение) + ", ");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Должность%", 	Строка(Выборка.Должность));
		ТекстСообщения = ?(ЗначениеЗаполнено(Выборка.РабочееМесто),		СтрЗаменить(ТекстСообщения, "%РабочееМесто%",", " + Строка(Выборка.РабочееМесто)),СтрЗаменить(ТекстСообщения, "%РабочееМесто%",""));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%",	Строка(Выборка.Организация));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", 	Строка(-Выборка.Количество));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструВыданныеСредстваЗащиты(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'У сотрудника: %Сотрудник% (%НоменклатураНормы%) 
		|Для организации ""%Организация%"" превышен остаток выданных СИЗ %НоменклатураХарактеристика% %ПроцентИзноса% на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%Сотрудник%", 					Строка(Выборка.Сотрудник));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%НоменклатураНормы%", 			Строка(Выборка.НоменклатураНормы));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Организация%",  				Строка(Выборка.Организация));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%НоменклатураХарактеристика%", ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.ХарактеристикаНоменклатуры));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ПроцентИзноса%",  			?(ЗначениеЗаполнено(Выборка.ПроцентИзноса)," (износ " + Выборка.ПроцентИзноса.Код + "%) ",""));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Количество%", 				Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Единица%",    				Строка(Выборка.Номенклатура.ЕдиницаИзмерения));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструЗаказыПоставщику(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
		|Для организации ""%Организация%"" превышен остаток по документу %ЗаказПоставщику% на %Количество% %Единица% %ДокументВыдачи%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%НоменклатураХарактеристика%",	ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.ХарактеристикаНоменклатуры));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Организация%",  				Строка(Выборка.Организация));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ЗаказПоставщику%",			Строка(Выборка.ЗаказПоставщику));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Количество%", 				Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Единица%",    				Строка(Выборка.Номенклатура.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ДокументВыдачи%",    			?(ЗначениеЗаполнено(Выборка.ДокументВыдачи),"(" + Строка(Выборка.ДокументВыдачи) + ")",""));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструПотребностьВыдачиСИЗ(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Норма выдачи ""%НормаВыдачи%""
		|Для организации ""%Организация%""
		|превышен остаток по потребности для сотрудника %Сотрудник% (дата потребности: %ДатаПотребности%) на %Количество%'");
		
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Количество < 0 Тогда
			ТекстСообщения = СтрЗаменить(ШаблонСообщения,"%НормаВыдачи%",	Строка(Выборка.НормаВыдачи));		
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%",  	Строка(Выборка.Организация));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сотрудник%",  	Строка(Выборка.Сотрудник));	
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДатаПотребности%",  	Формат(Выборка.ДатаПотребности,"ДФ=dd.MM.yyyy"));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", 	Строка(-Выборка.Количество));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструСредстваЗащитыВЧистке(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% (штрихкод: %ШтрихКод%)
		|Для организации ""%Организация%"" превышен оперативный остаток у отправителя ""%Отправитель%"" по сотруднику %Сотрудник% на 1 %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%НоменклатураХарактеристика%",	ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.ХарактеристикаНоменклатуры));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ШтрихКод%",  					Выборка.Штрихкод);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Организация%",  				Строка(Выборка.Организация));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Отправитель%",  				Строка(Выборка.Контрагент));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Сотрудник%",  				Строка(Выборка.Сотрудник));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Единица%",    				Строка(Выборка.Номенклатура.ЕдиницаИзмерения));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструВыдачаПоПотребности(Объект, Отказ, РезультатЗапроса)

	Если Объект.Организация.ИспользоватьПроцентИзноса Тогда
		
		ШаблонСообщения = НСтр("ru = 'У сотрудника: %Сотрудник% (%НормаВыдачи%, %НоменклатураНормы%, %ДатаПотребности%, %ДатаВыдачи%, процент износа: %ПроцентИзноса%) 
			|Для организации ""%Организация%"" превышен остаток на %Количество%'");
			
	Иначе
	
		ШаблонСообщения = НСтр("ru = 'У сотрудника: %Сотрудник% (%НормаВыдачи%, %НоменклатураНормы%, %ДатаПотребности%, %ДатаВыдачи%) 
			|Для организации ""%Организация%"" превышен остаток на %Количество%'");

	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%Сотрудник%", 			Строка(Выборка.Сотрудник));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%НоменклатураНормы%", 	Строка(Выборка.НоменклатураНормы));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Организация%",  		Строка(Выборка.Организация));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%НормаВыдачи%", 		Строка(Выборка.НормаВыдачи));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ДатаПотребности%", 	Строка(Выборка.ДатаПотребности));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ДатаВыдачи%", 		Строка(Выборка.ДатаВыдачи));
		
		//Если Объект.Организация.ИспользоватьПроцентИзноса Тогда
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ПроцентИзноса%", 		Строка(Выборка.ПроцентИзноса));
		//КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Количество%", 		Строка(-Выборка.Количество));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструЗаявкиНаВыдачу(Объект, Отказ, РезультатЗапроса)

	
	ШаблонСообщения = НСтр("ru = 'По заявке на выдачу: %Заявка% (%Номенклатура%, %ХарактеристикаНоменклатуры%) 
			|Для организации ""%Организация%"" превышен остаток на %Количество%'");

	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%Заявка%", 					Строка(Выборка.Заявка));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Номенклатура%", 				Строка(Выборка.Номенклатура));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Организация%",  				Строка(Выборка.Организация));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ХарактеристикаНоменклатуры%",	Строка(Выборка.ХарактеристикаНоменклатуры));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Количество%", 				Строка(-Выборка.Количество));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструСредстваЗащитыНаХранении(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
		|Для сотрудника ""%Сотрудник%"" превышен оперативный остаток средств защиты на хранении на складе ""%Склад%"" на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%НоменклатураХарактеристика%",	ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.ХарактеристикаНоменклатуры));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Склад%",  					Строка(Выборка.Склад));	
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Сотрудник%",  				Строка(Выборка.Сотрудник));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Количество%", 				Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Единица%",    				Строка(Выборка.Номенклатура.ЕдиницаИзмерения));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;

КонецПроцедуры

//+++АСТБ_Горюшин_Алексей_17125
Процедура СообщитьОбОшибкахПроведенияПоРегиструРеализованныеСИЗ(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
		|Для организации ""%Организация%"" превышен остаток на %Количество% %Единица% по измерениям:
		|Вид выдачи СИЗ ""%ВидВыдачиСИЗ%"", Склад выдачи ""%СкладВыдачи%"", Склад отправитель ""%СкладОтправитель%"", МВЗ ""%МВЗ%"", Поставщик ""%Поставщик%"", Документ выдачи ""%ДокументВыдачи%"", Предварительный переход права собственности ""%ПредварительныйПереходПраваСобственности%""'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%НоменклатураХарактеристика%",					ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.ХарактеристикаНоменклатуры));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Организация%",  								Строка(Выборка.Организация));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Количество%", 								Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Единица%",    								Строка(Выборка.Номенклатура.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ВидВыдачиСИЗ%",								Строка(Выборка.ВидВыдачиСИЗ));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%СкладВыдачи%",								Строка(Выборка.СкладВыдачи));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%СкладОтправитель%",							Строка(Выборка.СкладОтправитель));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%МВЗ%",										Строка(Выборка.МВЗ));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Поставщик%",									Строка(Выборка.Поставщик));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ДокументВыдачи%",								Строка(Выборка.ДокументВыдачи));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ПредварительныйПереходПраваСобственности%",	Строка(Выборка.ПредварительныйПереходПраваСобственности));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;

КонецПроцедуры //---АСТБ_Горюшин_Алексей_17125

//АсТБ_Alexey_72252_********************************************************************
Процедура СообщитьОбОшибкахПроведенияПоРегиструРемонтСредствЗащиты(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Для вида ремонта %ВидРемонта% превышен оперативный остаток на %Количество%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%ВидРемонта%",	Строка(Выборка.ВидРемонта));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Количество%", Строка(-Выборка.Количество));
	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;

КонецПроцедуры
//АсТБ_Alexey_72252_********************************************************************

// Функция вызывается из модулей наборов записей для проверки необходимости
// контроля изменений движений в регистре.
//
Функция РассчитыватьИзменения(ДополнительныеСвойстваНабораЗаписей) Экспорт
	Перем РассчитыватьИзменения;

	Возврат ДополнительныеСвойстваНабораЗаписей.Свойство("РассчитыватьИзменения", РассчитыватьИзменения)
		И РассчитыватьИзменения;

КонецФункции

//Andrey_NSK***********************************************************************

//АсТБ_Alexey_********************************************************************

Процедура ПроверитьПриоритет(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.УстановкаСоответствийНоменклатурыВыдачи") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаСоотвествия.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСоотвествия.НоменклатураНормы КАК НоменклатураНормы,
		|	ТаблицаСоотвествия.Приоритет КАК Приоритет,
		|	ТаблицаСоотвествия.Сотрудник КАК Сотрудник,
		|	ТаблицаСоотвествия.Подразделение КАК Подразделение,
		|	ТаблицаСоотвествия.Должность КАК Должность,
		|	ТаблицаСоотвествия.Использовать КАК Использовать
		|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
		|ИЗ
		|	&ТаблицаСоотвествия КАК ТаблицаСоотвествия
		|ГДЕ
		|	ТаблицаСоотвествия.Использовать
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДокумента.НоменклатураНормы КАК НоменклатураНормы,
		|	ВТ_ТаблицаДокумента.Приоритет КАК Приоритет,
		|	СУММА(1) КАК КоличествоДублей,
		|	ВТ_ТаблицаДокумента.Сотрудник КАК Сотрудник,
		|	ВТ_ТаблицаДокумента.Подразделение КАК Подразделение,
		|	ВТ_ТаблицаДокумента.Должность КАК Должность
		|ПОМЕСТИТЬ ВТ_ИтогПоТаблице
		|ИЗ
		|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаДокумента.НоменклатураНормы,
		|	ВТ_ТаблицаДокумента.Приоритет,
		|	ВТ_ТаблицаДокумента.Сотрудник,
		|	ВТ_ТаблицаДокумента.Подразделение,
		|	ВТ_ТаблицаДокумента.Должность
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИтогПоТаблице.НоменклатураНормы КАК НоменклатураНормы,
		|	ВТ_ИтогПоТаблице.Приоритет КАК Приоритет,
		|	ВТ_ИтогПоТаблице.Сотрудник КАК Сотрудник,
		|	ВТ_ИтогПоТаблице.Подразделение КАК Подразделение,
		|	ВТ_ИтогПоТаблице.Должность КАК Должность
		|ПОМЕСТИТЬ ВТ_Результат
		|ИЗ
		|	ВТ_ИтогПоТаблице КАК ВТ_ИтогПоТаблице
		|ГДЕ
		|	ВТ_ИтогПоТаблице.КоличествоДублей > 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДокумента.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	ВТ_Результат КАК ВТ_Результат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
		|		ПО ВТ_Результат.НоменклатураНормы = ВТ_ТаблицаДокумента.НоменклатураНормы
		|			И ВТ_Результат.Приоритет = ВТ_ТаблицаДокумента.Приоритет
		|			И ВТ_Результат.Сотрудник = ВТ_ТаблицаДокумента.Сотрудник
		|			И ВТ_Результат.Подразделение = ВТ_ТаблицаДокумента.Подразделение
		|			И ВТ_Результат.Должность = ВТ_ТаблицаДокумента.Должность";
		
		Запрос.УстановитьПараметр("ТаблицаСоотвествия",Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки,НоменклатураНормы,Сотрудник,Подразделение,Должность,Использовать,Приоритет"));
		
		КлючДанных 			= ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		ШаблонСообщения 	= НСтр("ru='В строке %НомерСтроки% таблицы ""%ТаблицаСоответствия%"" указан одинаковый приоритет.'");
		МетаданныеОбъекта 	= Объект.Метаданные();
		ПредставлениеТЧ 	= МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ТаблицаСоответствия%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "Приоритет");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеКодовМаркировки(Объект,Отказ) Экспорт
	
	ТаблицаКодовМаркировки = Объект.КодыМаркировки.Выгрузить();
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаДежурныхСредствЗащиты") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ТаблицаНоменклатуры.Количество КАК Количество,
		|	ТаблицаНоменклатуры.ПроцентИзноса КАК ПроцентИзноса
		|ПОМЕСТИТЬ ВТ_ТаблицаНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|ГДЕ
		|	ТаблицаНоменклатуры.ПроцентИзноса = ЗНАЧЕНИЕ(Справочник.ПроцентыИзноса.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	Номенклатура.ВидМаркированнойНоменклатуры КАК ВидМаркированнойНоменклатуры,
		|	Номенклатура.ВидМаркированнойНоменклатуры.ДатаНачалаОбязательнойМаркировки КАК ДатаНачалаОбязательнойМаркировки
		|ПОМЕСТИТЬ ВТ_Номенклатура
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ЭтоГруппа
		|	И НЕ Номенклатура.ВидМаркированнойНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыМаркированнойНоменклатуры.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	GTINНоменклатуры.GTIN КАК GTIN,
		|	GTINНоменклатуры.Номенклатура КАК Номенклатура,
		|	GTINНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
		|ПОМЕСТИТЬ ВТ_GTIN
		|ИЗ
		|	РегистрСведений.GTINНоменклатуры КАК GTINНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
		|	ВТ_Номенклатура.ДатаНачалаОбязательнойМаркировки КАК ДатаНачалаОбязательнойМаркировки,
		|	ВТ_ТаблицаНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ВТ_ТаблицаНоменклатуры.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_ТаблицаДокументаДляАнализа
		|ИЗ
		|	ВТ_ТаблицаНоменклатуры КАК ВТ_ТаблицаНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
		|		ПО ВТ_ТаблицаНоменклатуры.Номенклатура = ВТ_Номенклатура.Номенклатура
		|ГДЕ
		|	НЕ ВТ_Номенклатура.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаКодовМаркировки.КодМаркировки КАК КодМаркировки,
		|	ТаблицаКодовМаркировки.Номенклатура КАК Номенклатура,
		|	ТаблицаКодовМаркировки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
		|ПОМЕСТИТЬ ВТ_ТаблицаКодовМаркировки
		|ИЗ
		|	&ТаблицаКодовМаркировки КАК ТаблицаКодовМаркировки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДокументаДляАнализа.Номенклатура КАК Номенклатура,
		|	ВТ_ТаблицаДокументаДляАнализа.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ВТ_ТаблицаДокументаДляАнализа.ДатаНачалаОбязательнойМаркировки КАК ДатаНачалаОбязательнойМаркировки,
		|	СУММА(ВТ_ТаблицаДокументаДляАнализа.Количество) КАК Количество,
		|	ЕСТЬNULL(ВТ_GTIN.GTIN, """") КАК GTIN
		|ИЗ
		|	ВТ_ТаблицаДокументаДляАнализа КАК ВТ_ТаблицаДокументаДляАнализа
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_GTIN КАК ВТ_GTIN
		|		ПО ВТ_ТаблицаДокументаДляАнализа.Номенклатура = ВТ_GTIN.Номенклатура
		|			И ВТ_ТаблицаДокументаДляАнализа.ХарактеристикаНоменклатуры = ВТ_GTIN.ХарактеристикаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаДокументаДляАнализа.Номенклатура,
		|	ВТ_ТаблицаДокументаДляАнализа.ДатаНачалаОбязательнойМаркировки,
		|	ВТ_ТаблицаДокументаДляАнализа.ХарактеристикаНоменклатуры,
		|	ЕСТЬNULL(ВТ_GTIN.GTIN, """")
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	ХарактеристикаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПОДСТРОКА(ВТ_ТаблицаКодовМаркировки.КодМаркировки, 4, 13) КАК GTIN,
		|	СУММА(1) КАК КоличествоGTIN
		|ИЗ
		|	ВТ_ТаблицаКодовМаркировки КАК ВТ_ТаблицаКодовМаркировки
		|ГДЕ
		|	ВТ_ТаблицаКодовМаркировки.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПОДСТРОКА(ВТ_ТаблицаКодовМаркировки.КодМаркировки, 4, 13)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(1) КАК КоличествоПромаркированнойНоменклатуры,
		|	ВТ_ТаблицаКодовМаркировки.Номенклатура КАК Номенклатура,
		|	ВТ_ТаблицаКодовМаркировки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
		|ИЗ
		|	ВТ_ТаблицаКодовМаркировки КАК ВТ_ТаблицаКодовМаркировки
		|ГДЕ
		|	НЕ ВТ_ТаблицаКодовМаркировки.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаКодовМаркировки.Номенклатура,
		|	ВТ_ТаблицаКодовМаркировки.ХарактеристикаНоменклатуры";
		
		Запрос.УстановитьПараметр("ТаблицаНоменклатуры",	Объект.Товары.Выгрузить(,"Номенклатура,ХарактеристикаНоменклатуры,Количество,ПроцентИзноса"));
		Запрос.УстановитьПараметр("ТаблицаКодовМаркировки",	ТаблицаКодовМаркировки);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаСредствЗащитыСотруднику") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНоменклатуры.НеВыдано КАК НеВыдано,
		|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ТаблицаНоменклатуры.Количество КАК Количество,
		|	ТаблицаНоменклатуры.ПроцентИзноса КАК ПроцентИзноса
		|ПОМЕСТИТЬ ВТ_ТаблицаНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|ГДЕ
		|	НЕ ТаблицаНоменклатуры.НеВыдано
		|	И ТаблицаНоменклатуры.ПроцентИзноса = ЗНАЧЕНИЕ(Справочник.ПроцентыИзноса.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	Номенклатура.ВидМаркированнойНоменклатуры КАК ВидМаркированнойНоменклатуры,
		|	Номенклатура.ВидМаркированнойНоменклатуры.ДатаНачалаОбязательнойМаркировки КАК ДатаНачалаОбязательнойМаркировки
		|ПОМЕСТИТЬ ВТ_Номенклатура
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ЭтоГруппа
		|	И НЕ Номенклатура.ВидМаркированнойНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыМаркированнойНоменклатуры.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	GTINНоменклатуры.GTIN КАК GTIN,
		|	GTINНоменклатуры.Номенклатура КАК Номенклатура,
		|	GTINНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
		|ПОМЕСТИТЬ ВТ_GTIN
		|ИЗ
		|	РегистрСведений.GTINНоменклатуры КАК GTINНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
		|	ВТ_Номенклатура.ДатаНачалаОбязательнойМаркировки КАК ДатаНачалаОбязательнойМаркировки,
		|	ВТ_ТаблицаНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ВТ_ТаблицаНоменклатуры.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_ТаблицаДокументаДляАнализа
		|ИЗ
		|	ВТ_ТаблицаНоменклатуры КАК ВТ_ТаблицаНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
		|		ПО ВТ_ТаблицаНоменклатуры.Номенклатура = ВТ_Номенклатура.Номенклатура
		|ГДЕ
		|	НЕ ВТ_Номенклатура.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаКодовМаркировки.КодМаркировки КАК КодМаркировки,
		|	ТаблицаКодовМаркировки.Номенклатура КАК Номенклатура,
		|	ТаблицаКодовМаркировки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
		|ПОМЕСТИТЬ ВТ_ТаблицаКодовМаркировки
		|ИЗ
		|	&ТаблицаКодовМаркировки КАК ТаблицаКодовМаркировки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДокументаДляАнализа.Номенклатура КАК Номенклатура,
		|	ВТ_ТаблицаДокументаДляАнализа.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ВТ_ТаблицаДокументаДляАнализа.ДатаНачалаОбязательнойМаркировки КАК ДатаНачалаОбязательнойМаркировки,
		|	СУММА(ВТ_ТаблицаДокументаДляАнализа.Количество) КАК Количество,
		|	ЕСТЬNULL(ВТ_GTIN.GTIN, """") КАК GTIN
		|ИЗ
		|	ВТ_ТаблицаДокументаДляАнализа КАК ВТ_ТаблицаДокументаДляАнализа
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_GTIN КАК ВТ_GTIN
		|		ПО ВТ_ТаблицаДокументаДляАнализа.Номенклатура = ВТ_GTIN.Номенклатура
		|			И ВТ_ТаблицаДокументаДляАнализа.ХарактеристикаНоменклатуры = ВТ_GTIN.ХарактеристикаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаДокументаДляАнализа.Номенклатура,
		|	ВТ_ТаблицаДокументаДляАнализа.ДатаНачалаОбязательнойМаркировки,
		|	ВТ_ТаблицаДокументаДляАнализа.ХарактеристикаНоменклатуры,
		|	ЕСТЬNULL(ВТ_GTIN.GTIN, """")
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	ХарактеристикаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПОДСТРОКА(ВТ_ТаблицаКодовМаркировки.КодМаркировки, 4, 13) КАК GTIN,
		|	СУММА(1) КАК КоличествоGTIN
		|ИЗ
		|	ВТ_ТаблицаКодовМаркировки КАК ВТ_ТаблицаКодовМаркировки
		|ГДЕ
		|	ВТ_ТаблицаКодовМаркировки.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПОДСТРОКА(ВТ_ТаблицаКодовМаркировки.КодМаркировки, 4, 13)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(1) КАК КоличествоПромаркированнойНоменклатуры,
		|	ВТ_ТаблицаКодовМаркировки.Номенклатура КАК Номенклатура,
		|	ВТ_ТаблицаКодовМаркировки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
		|ИЗ
		|	ВТ_ТаблицаКодовМаркировки КАК ВТ_ТаблицаКодовМаркировки
		|ГДЕ
		|	НЕ ВТ_ТаблицаКодовМаркировки.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаКодовМаркировки.Номенклатура,
		|	ВТ_ТаблицаКодовМаркировки.ХарактеристикаНоменклатуры";
		
		Запрос.УстановитьПараметр("ТаблицаНоменклатуры",	Объект.Товары.Выгрузить(,"Номенклатура,ХарактеристикаНоменклатуры,НеВыдано,Количество,ПроцентИзноса"));
		Запрос.УстановитьПараметр("ТаблицаКодовМаркировки",	ТаблицаКодовМаркировки);
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаНоменклатуры 				= Результат[5].Выгрузить();
	ТаблицаGTIN 						= Результат[6].Выгрузить();
    ТаблицаПромаркированнойНоменклатуры = Результат[7].Выгрузить();	
	
	КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
	
	//проверка выдаваемой номенклатуры
	
	ШаблонСообщения = НСтр("ru='Для номенклатуры выдачи: %Номенклатура% %ТекстОшибки%.'");
	
	Для Каждого СтрокаТаблицыНоменклатуры Из ТаблицаНоменклатуры Цикл
		
		ПредставлениеНоменклатуры = ?(ЗначениеЗаполнено(СтрокаТаблицыНоменклатуры.ХарактеристикаНоменклатуры),СтрокаТаблицыНоменклатуры.Номенклатура.Наименование + " (" + СтрокаТаблицыНоменклатуры.ХарактеристикаНоменклатуры.Наименование + ")",СтрокаТаблицыНоменклатуры.Номенклатура.Наименование);
		
		//задан вид маркированной номенклатуры, а GTIN - нет
		//Если СтрокаТаблицыНоменклатуры.GTIN = "" Тогда
		//	
		//	ПредставлениеОшибки = "не установлен GTIN.";
		//	
		//	ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Номенклатура%", 	ПредставлениеНоменклатуры);
		//	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТекстОшибки%", 		ПредставлениеОшибки);
		//	
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,,"Объект",Отказ);
		//	
		//	Продолжить;
		//	
		//КонецЕсли;	
		
		//установлена дата обязательной маркировки
		Если ЗначениеЗаполнено(СтрокаТаблицыНоменклатуры.ДатаНачалаОбязательнойМаркировки) Тогда
			
			Если ЗначениеЗаполнено(Объект.Дата) Тогда 
				ДатаАнализа = НачалоДня(Объект.Дата);
			Иначе
				ДатаАнализа = НачалоДня(ТекущаяДата());
			КонецЕсли;	
			
			//считаем сколько экземпляров отсканикровано и сколько должно быть отсканировано
			Если ДатаАнализа >= СтрокаТаблицыНоменклатуры.ДатаНачалаОбязательнойМаркировки Тогда
				
				НайденныеСтроки = ТаблицаGTIN.НайтиСтроки(Новый Структура("GTIN",СтрокаТаблицыНоменклатуры.GTIN));
				
				Если НайденныеСтроки.Количество() = 0 Тогда
					
					КоличествоGTIN = 0;
					
				Иначе
					
					КоличествоGTIN = НайденныеСтроки[0].КоличествоGTIN;
					
				КонецЕсли;
				
				НайденныеСтроки = ТаблицаПромаркированнойНоменклатуры.НайтиСтроки(Новый Структура("Номенклатура, ХарактеристикаНоменклатуры",СтрокаТаблицыНоменклатуры.Номенклатура, СтрокаТаблицыНоменклатуры.ХарактеристикаНоменклатуры));
				
				Если НайденныеСтроки.Количество() = 0 Тогда
					
					КоличествоПромаркированнойНоменклатуры = 0;
					
				Иначе
				
					КоличествоПромаркированнойНоменклатуры = НайденныеСтроки[0].КоличествоПромаркированнойНоменклатуры;
					
				КонецЕсли;
				
				КоличествоКодовМаркировки = КоличествоGTIN + КоличествоПромаркированнойНоменклатуры;
				
				Если КоличествоКодовМаркировки = 0 Тогда
					
					ПредставлениеОшибки = "не отсканированы коды маркировки";
					
					ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Номенклатура%", 	ПредставлениеНоменклатуры);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТекстОшибки%", 		ПредставлениеОшибки);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,,"Объект",Отказ);
					
				Иначе
					
					Если НЕ СтрокаТаблицыНоменклатуры.Количество = КоличествоКодовМаркировки Тогда
						
						ПредставлениеОшибки = "количество выданных не соответствует количеству отсканированных кодов маркировки";
					
						ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Номенклатура%", 	ПредставлениеНоменклатуры);
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТекстОшибки%", 		ПредставлениеОшибки);
					
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,,"Объект",Отказ);
						
					КонецЕсли;
					
				КонецЕсли;	
				
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЦикла;
		
	//проверка отсканированных кодов маркировки
	
	ШаблонСообщения = НСтр("ru='Строка %НомерСтроки% код маркировки: %КодМаркировки% не соответсвует выдаваемой номенклатуре.'");
	
	Для Каждого СтрокаТаблицыКодовМаркировки Из ТаблицаКодовМаркировки Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицыКодовМаркировки.Номенклатура) Тогда //это универсальный код или код стороннего поставщика
			Продолжить;
		КонецЕсли;	
		
		НайденныеСтроки = ТаблицаНоменклатуры.НайтиСтроки(НОВЫЙ Структура("GTIN", Сред(СтрокаТаблицыКодовМаркировки.КодМаркировки,4,13)));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%КодМаркировки%", 	СтрокаТаблицыКодовМаркировки.КодМаркировки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%НомерСтроки%", 	СтрокаТаблицыКодовМаркировки.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("КодыМаркировки", СтрокаТаблицыКодовМаркировки.НомерСтроки, "КодМаркировки");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеХарактеристик(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ОбменСредствЗащитыСотрудника") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.НоменклатураДляВыдачи,
		|	ТаблицаНоменклатуры.ХарактеристикаНоменклатурыДляВыдачи
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|ГДЕ
		|	ТаблицаНоменклатуры.ХарактеристикаНоменклатурыДляВыдачи = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.НоменклатураДляВыдачи
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ПО ТаблицаНоменклатуры.НоменклатураДляВыдачи = ХарактеристикиНоменклатуры.Владелец
		|ГДЕ
		|	НЕ ХарактеристикиНоменклатуры.Ссылка ЕСТЬ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.НоменклатураДляВыдачи";
		
		Запрос.УстановитьПараметр("ТаблицаНоменклатуры",Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки,НоменклатураДляВыдачи,ХарактеристикаНоменклатурыДляВыдачи"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Не заполнена колонка ""%ХарактеристикаНоменклатурыДляВыдачи%"" в строке %НомерСтроки% таблицы ""%ТаблицаТовары%"".'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ                      = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		ПредставлениеРеквизитаХарактеристика = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.ХарактеристикаНоменклатурыДляВыдачи.Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ХарактеристикаНоменклатурыДляВыдачи%", ПредставлениеРеквизитаХарактеристика);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТаблицаТовары%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "ХарактеристикаНоменклатурыДляВыдачи");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаСредствЗащитыСотруднику") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.Номенклатура,
		|	ТаблицаНоменклатуры.ХарактеристикаНоменклатуры,
		|	ТаблицаНоменклатуры.НеВыдано
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|ГДЕ
		|	ТаблицаНоменклатуры.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|	И ТаблицаНоменклатуры.НеВыдано = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.Номенклатура
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ПО ТаблицаНоменклатуры.Номенклатура = ХарактеристикиНоменклатуры.Владелец
		|ГДЕ
		|	НЕ ХарактеристикиНоменклатуры.Ссылка ЕСТЬ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.Номенклатура";
		
		Запрос.УстановитьПараметр("ТаблицаНоменклатуры",Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки,Номенклатура,ХарактеристикаНоменклатуры,НеВыдано"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Не заполнена колонка ""%ХарактеристикаНоменклатуры%"" в строке %НомерСтроки% списка ""%ТаблицаТовары%"".'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ                      = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		ПредставлениеРеквизитаХарактеристика = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.ХарактеристикаНоменклатуры.Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ХарактеристикаНоменклатуры%", ПредставлениеРеквизитаХарактеристика);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТаблицаТовары%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "ХарактеристикаНоменклатуры");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.Номенклатура,
		|	ТаблицаНоменклатуры.ХарактеристикаНоменклатуры
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|ГДЕ
		|	ТаблицаНоменклатуры.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.Номенклатура
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ПО ТаблицаНоменклатуры.Номенклатура = ХарактеристикиНоменклатуры.Владелец
		|ГДЕ
		|	НЕ ХарактеристикиНоменклатуры.Ссылка ЕСТЬ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.Номенклатура";
		
		Запрос.УстановитьПараметр("ТаблицаНоменклатуры",Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки,Номенклатура,ХарактеристикаНоменклатуры"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Не заполнена колонка ""%ХарактеристикаНоменклатуры%"" в строке %НомерСтроки% списка ""%ТаблицаТовары%"".'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ                      = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		ПредставлениеРеквизитаХарактеристика = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.ХарактеристикаНоменклатуры.Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ХарактеристикаНоменклатуры%", ПредставлениеРеквизитаХарактеристика);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТаблицаТовары%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "ХарактеристикаНоменклатуры");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьЗаполнениеКоличества(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаСредствЗащитыСотруднику") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.НормаВыдачи,
		|	ТаблицаДокумента.Количество,
		|	ТаблицаДокумента.КоличествоПотребность,
		|	ТаблицаДокумента.НомерСтроки,
		|	ТаблицаДокумента.НеВыдано,
		|	ТаблицаДокумента.КоличествоВКомплекте
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ТаблицаДокумента КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.НеВыдано = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.НормаВыдачи,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.КоличествоПотребность,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.КоличествоПотребностьСумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДокумента.НормаВыдачи КАК НормаВыдачи,
		|		СУММА(ТаблицаДокумента.Количество) КАК Количество,
		|		МАКСИМУМ(ТаблицаДокумента.КоличествоПотребность) КАК КоличествоПотребность,
		|		МИНИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
		|		СУММА(ТаблицаДокумента.КоличествоПотребность) КАК КоличествоПотребностьСумма
		|	ИЗ
		|		ТаблицаДокумента КАК ТаблицаДокумента
		|	ГДЕ
		|		ТаблицаДокумента.КоличествоВКомплекте = 0
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДокумента.НормаВыдачи) КАК ТабличнаяЧасть
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ЧастичнаяВыдача = 3 ИЛИ &ЧастичнаяВыдача = 4
		|				ТОГДА ТабличнаяЧасть.Количество > ТабличнаяЧасть.КоличествоПотребностьСумма
		|			ИНАЧЕ ТабличнаяЧасть.Количество > ТабличнаяЧасть.КоличествоПотребность
		|		КОНЕЦ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.НормаВыдачи,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.КоличествоПотребность,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.КоличествоПотребностьСумма
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДокумента.НормаВыдачи КАК НормаВыдачи,
		|		МАКСИМУМ(ТаблицаДокумента.Количество) КАК Количество,
		|		МАКСИМУМ(ТаблицаДокумента.КоличествоПотребность) КАК КоличествоПотребность,
		|		МИНИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
		|		СУММА(ТаблицаДокумента.КоличествоПотребность) КАК КоличествоПотребностьСумма
		|	ИЗ
		|		ТаблицаДокумента КАК ТаблицаДокумента
		|	ГДЕ
		|		НЕ ТаблицаДокумента.КоличествоВКомплекте = 0
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДокумента.НормаВыдачи) КАК ТабличнаяЧасть
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ЧастичнаяВыдача = 3 ИЛИ &ЧастичнаяВыдача = 4
		|				ТОГДА ТабличнаяЧасть.Количество > ТабличнаяЧасть.КоличествоПотребностьСумма
		|			ИНАЧЕ ТабличнаяЧасть.Количество > ТабличнаяЧасть.КоличествоПотребность
		|		КОНЕЦ";
		
		Запрос.УстановитьПараметр("ТаблицаДокумента",Объект[ИмяТабличнойЧасти].Выгрузить(,"НормаВыдачи,Количество,КоличествоПотребность,КоличествоВКомплекте,НомерСтроки,НеВыдано"));
		Запрос.УстановитьПараметр("ЧастичнаяВыдача",Объект.Организация.ЧастичнаяВыдача);
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Для нормы выдачи ""%НормаВыдачи%"" задано количество к выдаче (%Количество%) большее количества по потребности (%КоличествоПотребность%).'");
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%НормаВыдачи%", 			Выборка.НормаВыдачи);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Количество%", 			Выборка.Количество);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%КоличествоПотребность%", 	?((Объект.Организация.ЧастичнаяВыдача = 3 ИЛИ Объект.Организация.ЧастичнаяВыдача = 4),Выборка.КоличествоПотребностьСумма,Выборка.КоличествоПотребность));
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "НормаВыдачи");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьНулевоеКоличество(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаСредствЗащитыСотруднику") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Количество КАК Количество,
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.НеВыдано КАК НеВыдано
		|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
		|ИЗ
		|	&ТаблицаДокумента КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.НеВыдано = ЛОЖЬ
		|	И ТаблицаДокумента.Количество = 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДокумента.Количество КАК Количество,
		|	ВТ_ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ВТ_ТаблицаДокумента.НеВыдано КАК НеВыдано
		|ИЗ
		|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента";
		
		Запрос.УстановитьПараметр("ТаблицаДокумента",Объект[ИмяТабличнойЧасти].Выгрузить(,"Количество,НомерСтроки,НеВыдано"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Строке ""%НомерСтроки%"" не указано количество'");
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "Количество");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьСоответствиеКоличестваЗаявкеНаПроизвольнуюВыдачу(Объект,Отказ) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаСредствЗащитыСотруднику") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.НоменклатураНормы,
		|	ТаблицаДокумента.Количество,
		|	ТаблицаДокумента.НеВыдано,
		|	ТаблицаДокумента.НомерСтроки,
		|	ТаблицаДокумента.Комплект
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ТаблицаДокумента КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.НеВыдано = ЛОЖЬ
		|	И НЕ ТаблицаДокумента.НоменклатураНормы = ЗНАЧЕНИЕ(Справочник.НоменклатураНормОрганизации.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаявкаНаПроизвольнуюВыдачуСИЗТовары.НоменклатураНормы,
		|	ЗаявкаНаПроизвольнуюВыдачуСИЗТовары.Количество
		|ПОМЕСТИТЬ ВТ_Заявки
		|ИЗ
		|	Документ.ЗаявкаНаПроизвольнуюВыдачуСИЗ.Товары КАК ЗаявкаНаПроизвольнуюВыдачуСИЗТовары
		|ГДЕ
		|	ЗаявкаНаПроизвольнуюВыдачуСИЗТовары.Ссылка = &Заявка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НоменклатураНормы,
		|	ТаблицаДокумента.Комплект,
		|	МАКСИМУМ(ТаблицаДокумента.Количество) КАК Количество,
		|	МИНИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ВыдачаПоКомплектам
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|ГДЕ
		|	НЕ ТаблицаДокумента.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.НоменклатураНормы,
		|	ТаблицаДокумента.Комплект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НоменклатураНормы,
		|	СУММА(ТаблицаДокумента.Количество) КАК Количество,
		|	МИНИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
		|	ТаблицаДокумента.Комплект
		|ПОМЕСТИТЬ ВТ_ВыдачаБезКомплектов
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.НоменклатураНормы,
		|	ТаблицаДокумента.Комплект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_ВыдачаБезКомплектов.НоменклатураНормы, ВТ_ВыдачаПоКомплектам.НоменклатураНормы) КАК НоменклатураНормы,
		|	ЕСТЬNULL(ВТ_ВыдачаБезКомплектов.НомерСтроки, ВТ_ВыдачаПоКомплектам.НомерСтроки) КАК НомерСтроки,
		|	СУММА(ЕСТЬNULL(ВТ_ВыдачаБезКомплектов.Количество, 0) + ЕСТЬNULL(ВТ_ВыдачаПоКомплектам.Количество, 0)) КАК КоличествоВыдано
		|ПОМЕСТИТЬ ВТ_ИтоговаяВыдача
		|ИЗ
		|	ВТ_ВыдачаПоКомплектам КАК ВТ_ВыдачаПоКомплектам
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ВыдачаБезКомплектов КАК ВТ_ВыдачаБезКомплектов
		|		ПО ВТ_ВыдачаПоКомплектам.НоменклатураНормы = ВТ_ВыдачаБезКомплектов.НоменклатураНормы
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(ВТ_ВыдачаБезКомплектов.НоменклатураНормы, ВТ_ВыдачаПоКомплектам.НоменклатураНормы),
		|	ЕСТЬNULL(ВТ_ВыдачаБезКомплектов.НомерСтроки, ВТ_ВыдачаПоКомплектам.НомерСтроки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИтоговаяВыдача.НоменклатураНормы,
		|	ЕСТЬNULL(ВТ_Заявки.Количество, 0) КАК КоличествоПоЗаявке,
		|	ВТ_ИтоговаяВыдача.НомерСтроки,
		|	ВТ_ИтоговаяВыдача.КоличествоВыдано
		|ИЗ
		|	ВТ_ИтоговаяВыдача КАК ВТ_ИтоговаяВыдача
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заявки КАК ВТ_Заявки
		|		ПО ВТ_ИтоговаяВыдача.НоменклатураНормы = ВТ_Заявки.НоменклатураНормы
		|ГДЕ
		|	ВТ_ИтоговаяВыдача.КоличествоВыдано > ВТ_Заявки.Количество";
		
		Запрос.УстановитьПараметр("ТаблицаДокумента",Объект.Товары.Выгрузить(,"НоменклатураНормы, Количество, НеВыдано, НомерСтроки, Комплект"));
		Запрос.УстановитьПараметр("Заявка",Объект.ДокументОснование);
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Для номенклатуры нормы ""%НоменклатураНормы%"" количество к выдаче (%КоличествоВыдано%) превышает количество по заявке (%КоличествоПоЗаявке%).'");
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%НоменклатураНормы%", 		Выборка.НоменклатураНормы);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%КоличествоВыдано%", 		Выборка.КоличествоВыдано);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%КоличествоПоЗаявке%", 	Выборка.КоличествоПоЗаявке);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "НоменклатураНормы");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, "Объект", Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеНоменклатуры(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаСредствЗащитыСотруднику") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Номенклатура,
		|	ТаблицаДокумента.НомерСтроки,
		|	ТаблицаДокумента.НеВыдано
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ТаблицаДокумента КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.НеВыдано = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.НомерСтроки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДокумента.Номенклатура КАК Номенклатура,
		|		МИНИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки
		|	ИЗ
		|		ТаблицаДокумента КАК ТаблицаДокумента
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДокумента.Номенклатура) КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
		
		Запрос.УстановитьПараметр("ТаблицаДокумента",Объект[ИмяТабличнойЧасти].Выгрузить(,"Номенклатура,НомерСтроки,НеВыдано"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Не заполнена колонка ""%Номенклатура%"" в строке %НомерСтроки% списка ""%ТаблицаТовары%"".'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ                    = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		ПредставлениеРеквизитаНоменклатура = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.Номенклатура.Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Номенклатура%", ПредставлениеРеквизитаНоменклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТаблицаТовары%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "Номенклатура");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьРежимПроведения(ДокументОбъект, РежимЗаписи, РежимПроведения) Экспорт

	Если ДокументОбъект.Проведен И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		РежимПроведения = РежимПроведенияДокумента.Неоперативный;
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьЗаполнениеПричиныНевыдачи(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаСредствЗащитыСотруднику") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.НеВыданоПоПричине,
		|	ТаблицаНоменклатуры.НеВыдано
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|ГДЕ
		|	ТаблицаНоменклатуры.НеВыданоПоПричине = ЗНАЧЕНИЕ(Справочник.ПричиныНевыдачиСИЗ.ПустаяСсылка)
		|	И ТаблицаНоменклатуры.НеВыдано = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.НеВыданоПоПричине
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.НеВыданоПоПричине";
		
		Запрос.УстановитьПараметр("ТаблицаНоменклатуры",Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки,НеВыдано,НеВыданоПоПричине"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Не заполнена причина невыдачи в строке %НомерСтроки% списка ""%ТаблицаТовары%"".'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ТаблицаТовары%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "НеВыданоПоПричине");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьЗаполнениеТабельныхНомеров(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПриемНаРаботу") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаРаботников.НомерСтроки,
		|	ТаблицаРаботников.Сотрудник
		|ПОМЕСТИТЬ ТаблицаРаботников
		|ИЗ
		|	&ТаблицаРаботников КАК ТаблицаРаботников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сотрудники.Ссылка КАК Сотрудник,
		|	Сотрудники.ТабельныйНомер
		|ПОМЕСТИТЬ ВТ_СотрудникиБезТабельныхНомеров
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.ТабельныйНомер = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ТаблицаРаботников.НомерСтроки) КАК НомерСтроки,
		|	ТаблицаРаботников.Сотрудник
		|ИЗ
		|	ТаблицаРаботников КАК ТаблицаРаботников
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СотрудникиБезТабельныхНомеров КАК ВТ_СотрудникиБезТабельныхНомеров
		|		ПО ТаблицаРаботников.Сотрудник = ВТ_СотрудникиБезТабельныхНомеров.Сотрудник
		|ГДЕ
		|	НЕ ВТ_СотрудникиБезТабельныхНомеров.ТабельныйНомер ЕСТЬ NULL 
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаРаботников.Сотрудник";
		
		Запрос.УстановитьПараметр("ТаблицаРаботников",Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки,Сотрудник"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Не заполнен табельный номер сотрудника %Сотрудник% в строке %НомерСтроки% списка ""%ТаблицаРаботники%"".'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ТаблицаРаботники%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сотрудник%", Выборка.Сотрудник);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "НомерСтроки");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьЗанятыеРабочиеМеста(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.УстановкаУсловийРаботыСотрудника") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаУсловияРаботы.Подразделение,
		|	ТаблицаУсловияРаботы.Должность,
		|	ТаблицаУсловияРаботы.РабочееМесто,
		|	ТаблицаУсловияРаботы.НомерСтроки
		|ПОМЕСТИТЬ ВТ_ТаблицаУсловияРаботы
		|ИЗ
		|	&ТаблицаУсловияРаботы КАК ТаблицаУсловияРаботы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗанятыеРабочиеМестаОстатки.Подразделение,
		|	ЗанятыеРабочиеМестаОстатки.Должность,
		|	ЗанятыеРабочиеМестаОстатки.РабочееМесто,
		|	ВТ_ТаблицаУсловияРаботы.НомерСтроки
		|ИЗ
		|	ВТ_ТаблицаУсловияРаботы КАК ВТ_ТаблицаУсловияРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|				&ПериодАнализа,
		|				Организация = &Организация
		|					И Сотрудник = &Сотрудник) КАК ЗанятыеРабочиеМестаОстатки
		|		ПО ВТ_ТаблицаУсловияРаботы.Подразделение = ЗанятыеРабочиеМестаОстатки.Подразделение
		|			И ВТ_ТаблицаУсловияРаботы.Должность = ЗанятыеРабочиеМестаОстатки.Должность
		|			И ВТ_ТаблицаУсловияРаботы.РабочееМесто = ЗанятыеРабочиеМестаОстатки.РабочееМесто
		|ГДЕ
		|	ЗанятыеРабочиеМестаОстатки.Подразделение ЕСТЬ NULL ";
		
		Запрос.УстановитьПараметр("ТаблицаУсловияРаботы",	Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки, Подразделение, Должность, РабочееМесто"));
		Запрос.УстановитьПараметр("ПериодАнализа",			ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Объект.Ссылка));
		Запрос.УстановитьПараметр("Организация",			Объект.Организация);
		Запрос.УстановитьПараметр("Сотрудник",				Объект.Сотрудник);
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Нет информации по занятым рабочим местам сотрудника %Сотрудник% в строке %НомерСтроки% списка ""%ТаблицаУсловияРаботы%"".'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%ТаблицаУсловияРаботы%", 	ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%НомерСтроки%", 			Выборка.НомерСтроки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Сотрудник%", 				Объект.Сотрудник);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "НомерСтроки");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьНормы(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПриказПоНормамВыдачиСИЗ") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНорм.НомерСтроки КАК НомерСтроки,
		|	ТаблицаНорм.Подразделение КАК Подразделение,
		|	ТаблицаНорм.Должность КАК Должность,
		|	ТаблицаНорм.РабочееМесто КАК РабочееМесто,
		|	ТаблицаНорм.УсловиеНормы КАК УсловиеНормы,
		|	ТаблицаНорм.НормаВыдачи КАК НормаВыдачи,
		|	ТаблицаНорм.Использовать КАК Использовать
		|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
		|ИЗ
		|	&ТаблицаНорм КАК ТаблицаНорм
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УсловияНорм.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА УсловияНорм.ТипУсловия = ЗНАЧЕНИЕ(Перечисление.ТипыУсловийНорм.Всегда)
		|				ИЛИ УсловияНорм.ТипУсловия = ЗНАЧЕНИЕ(Перечисление.ТипыУсловийНорм.ПриУсловии)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЭтоЗима
		|ПОМЕСТИТЬ ВТ_УсловияНорм
		|ИЗ
		|	Справочник.УсловияНорм КАК УсловияНорм
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ВТ_ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
		|	ВТ_ТаблицаДокумента.Подразделение КАК Подразделение,
		|	ВТ_ТаблицаДокумента.Должность КАК Должность,
		|	ВТ_ТаблицаДокумента.РабочееМесто КАК РабочееМесто,
		|	ВТ_ТаблицаДокумента.НормаВыдачи КАК НормаВыдачи,
		|	ВТ_УсловияНорм.ЭтоЗима КАК ЭтоЗима,
		|	ВТ_ТаблицаДокумента.Использовать КАК Использовать
		|ПОМЕСТИТЬ ВТ_Результат
		|ИЗ
		|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УсловияНорм КАК ВТ_УсловияНорм
		|		ПО ВТ_ТаблицаДокумента.УсловиеНормы = ВТ_УсловияНорм.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ТаблицаДокумента.НормаВыдачи,
		|	ВТ_ТаблицаДокумента.РабочееМесто,
		|	ВТ_ТаблицаДокумента.Подразделение,
		|	ВТ_ТаблицаДокумента.Должность,
		|	ВТ_ТаблицаДокумента.Использовать,
		|	ВТ_УсловияНорм.ЭтоЗима
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Результат.НомерСтроки КАК НомерСтроки,
		|	ВТ_Результат.НормаВыдачи КАК НормаВыдачи,
		|	ВТ_Результат.РабочееМесто КАК РабочееМесто,
		|	ВТ_Результат.Подразделение КАК Подразделение,
		|	ВТ_Результат.Должность КАК Должность,
		|	ВТ_Результат.Использовать КАК Использовать
		|ИЗ
		|	ВТ_Результат КАК ВТ_Результат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Результат КАК ВТ_Результат1
		|		ПО ВТ_Результат.Подразделение = ВТ_Результат1.Подразделение
		|			И ВТ_Результат.Должность = ВТ_Результат1.Должность
		|			И ВТ_Результат.РабочееМесто = ВТ_Результат1.РабочееМесто
		|			И ВТ_Результат.НормаВыдачи = ВТ_Результат1.НормаВыдачи
		|			И ВТ_Результат.Использовать = ВТ_Результат1.Использовать
		|			И ВТ_Результат.ЭтоЗима <> ВТ_Результат1.ЭтоЗима
		|ГДЕ
		|	НЕ ВТ_Результат1.НормаВыдачи ЕСТЬ NULL
		|	И ВТ_Результат.Использовать";
		
		Запрос.УстановитьПараметр("ТаблицаНорм",Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки,Подразделение,Должность,РабочееМесто,УсловиеНормы,НормаВыдачи,Использовать"));
		
		КлючДанных 			= ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		ШаблонСообщения 	= НСтр("ru='В строке %НомерСтроки% таблицы ""%ТаблицаНорм%"" указана одинаковая норма выдачи %НормаВыдачи% для летнего и зимнего условий.'");
		МетаданныеОбъекта 	= Объект.Метаданные();
		ПредставлениеТЧ 	= МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ТаблицаНорм%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НормаВыдачи%", Выборка.НормаВыдачи);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "НормаВыдачи");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКоличествоЦикловЧистки(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПередачаВЧистку") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаШтрихкодов.НомерСтроки,
		|	ТаблицаШтрихкодов.Сотрудник,
		|	ТаблицаШтрихкодов.Номенклатура КАК НоменклатураДокумента,
		|	ТаблицаШтрихкодов.ХарактеристикаНоменклатуры,
		|	ТаблицаШтрихкодов.Штрихкод
		|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
		|ИЗ
		|	&ТаблицаШтрихкодов КАК ТаблицаШтрихкодов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДокумента.НомерСтроки,
		|	ВТ_ТаблицаДокумента.Сотрудник,
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	ВТ_ТаблицаДокумента.ХарактеристикаНоменклатуры,
		|	ВТ_ТаблицаДокумента.Штрихкод
		|ПОМЕСТИТЬ ВТ_ТаблицаДокументаСНоменклатурой
		|ИЗ
		|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ВТ_ТаблицаДокумента.НоменклатураДокумента = Номенклатура.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СредстваЗащитыВЧисткеОбороты.Штрихкод,
		|	СУММА(СредстваЗащитыВЧисткеОбороты.КоличествоПриход) КАК КоличествоПриход
		|ПОМЕСТИТЬ ВТ_ПередачаВЧистку
		|ИЗ
		|	РегистрНакопления.СредстваЗащитыВЧистке.Обороты(
		|			,
		|			&ПериодАнализа,
		|			Регистратор,
		|			Организация = &Организация
		|				И Штрихкод В (&МассивШтрихкодов)) КАК СредстваЗащитыВЧисткеОбороты
		|ГДЕ
		|	СредстваЗащитыВЧисткеОбороты.КоличествоПриход > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	СредстваЗащитыВЧисткеОбороты.Штрихкод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДокументаСНоменклатурой.НомерСтроки КАК НомерСтроки,
		|	ВТ_ТаблицаДокументаСНоменклатурой.Номенклатура,
		|	ВТ_ТаблицаДокументаСНоменклатурой.ХарактеристикаНоменклатуры,
		|	ВТ_ТаблицаДокументаСНоменклатурой.Штрихкод,
		|	ВТ_ТаблицаДокументаСНоменклатурой.Номенклатура.ДопустимоеКоличествоЦикловЧистки КАК ДопустимоеКоличество,
		|	ЕСТЬNULL(ВТ_ПередачаВЧистку.КоличествоПриход, 0) + 1 - ВТ_ТаблицаДокументаСНоменклатурой.Номенклатура.ДопустимоеКоличествоЦикловЧистки КАК Превышение
		|ИЗ
		|	ВТ_ТаблицаДокументаСНоменклатурой КАК ВТ_ТаблицаДокументаСНоменклатурой
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПередачаВЧистку КАК ВТ_ПередачаВЧистку
		|		ПО ВТ_ТаблицаДокументаСНоменклатурой.Штрихкод = ВТ_ПередачаВЧистку.Штрихкод
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВТ_ТаблицаДокументаСНоменклатурой.Номенклатура.ДопустимоеКоличествоЦикловЧистки = 0
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ВТ_ТаблицаДокументаСНоменклатурой.Номенклатура.ДопустимоеКоличествоЦикловЧистки < ЕСТЬNULL(ВТ_ПередачаВЧистку.КоличествоПриход, 0) + 1
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		Запрос.УстановитьПараметр("ТаблицаШтрихкодов",	Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки,Сотрудник,Номенклатура,ХарактеристикаНоменклатуры,Штрихкод"));
		Запрос.УстановитьПараметр("МассивШтрихкодов",	Объект[ИмяТабличнойЧасти].ВыгрузитьКолонку("Штрихкод"));
		Запрос.УстановитьПараметр("Организация",		Объект.Организация);
		Запрос.УстановитьПараметр("ПериодАнализа",		ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Объект.Ссылка));
		
		КлючДанных 			= ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		ШаблонСообщения 	= НСтр("ru='Для номенклатуры %Номенклатура% в строке %НомерСтроки% таблицы ""%ТаблицаШтрихкодов%"" превышено допустимое (%ДопустимоеКоличество%) количество циклов чистки на %Превышение%.'");
		МетаданныеОбъекта 	= Объект.Метаданные();
		ПредставлениеТЧ 	= МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%ТаблицаШтрихкодов%", 		ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%НомерСтроки%", 			Выборка.НомерСтроки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Номенклатура%", 			Выборка.Номенклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ДопустимоеКоличество%", 	Выборка.ДопустимоеКоличество);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Превышение%", 			Выборка.Превышение);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "Штрихкод");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ВозвратИзЧистки") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаШтрихкодов.НомерСтроки,
		|	ТаблицаШтрихкодов.Сотрудник,
		|	ТаблицаШтрихкодов.Номенклатура КАК НоменклатураДокумента,
		|	ТаблицаШтрихкодов.ХарактеристикаНоменклатуры,
		|	ТаблицаШтрихкодов.Штрихкод
		|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
		|ИЗ
		|	&ТаблицаШтрихкодов КАК ТаблицаШтрихкодов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДокумента.НомерСтроки,
		|	ВТ_ТаблицаДокумента.Сотрудник,
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	ВТ_ТаблицаДокумента.ХарактеристикаНоменклатуры,
		|	ВТ_ТаблицаДокумента.Штрихкод
		|ПОМЕСТИТЬ ВТ_ТаблицаДокументаСНоменклатурой
		|ИЗ
		|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ВТ_ТаблицаДокумента.НоменклатураДокумента = Номенклатура.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СредстваЗащитыВЧисткеОбороты.Штрихкод,
		|	СУММА(СредстваЗащитыВЧисткеОбороты.КоличествоПриход) КАК КоличествоПриход
		|ПОМЕСТИТЬ ВТ_ПередачаВЧистку
		|ИЗ
		|	РегистрНакопления.СредстваЗащитыВЧистке.Обороты(
		|			,
		|			&ПериодАнализа,
		|			Регистратор,
		|			Организация = &Организация
		|				И Штрихкод В (&МассивШтрихкодов)) КАК СредстваЗащитыВЧисткеОбороты
		|ГДЕ
		|	СредстваЗащитыВЧисткеОбороты.КоличествоПриход > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	СредстваЗащитыВЧисткеОбороты.Штрихкод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДокументаСНоменклатурой.НомерСтроки КАК НомерСтроки,
		|	ВТ_ТаблицаДокументаСНоменклатурой.Номенклатура,
		|	ВТ_ТаблицаДокументаСНоменклатурой.ХарактеристикаНоменклатуры,
		|	ВТ_ТаблицаДокументаСНоменклатурой.Штрихкод,
		|	ВТ_ТаблицаДокументаСНоменклатурой.Номенклатура.ДопустимоеКоличествоЦикловЧистки КАК ДопустимоеКоличество,
		|	ЕСТЬNULL(ВТ_ПередачаВЧистку.КоличествоПриход, 0) - ВТ_ТаблицаДокументаСНоменклатурой.Номенклатура.ДопустимоеКоличествоЦикловЧистки КАК Превышение
		|ИЗ
		|	ВТ_ТаблицаДокументаСНоменклатурой КАК ВТ_ТаблицаДокументаСНоменклатурой
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПередачаВЧистку КАК ВТ_ПередачаВЧистку
		|		ПО ВТ_ТаблицаДокументаСНоменклатурой.Штрихкод = ВТ_ПередачаВЧистку.Штрихкод
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВТ_ТаблицаДокументаСНоменклатурой.Номенклатура.ДопустимоеКоличествоЦикловЧистки = 0
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ВТ_ТаблицаДокументаСНоменклатурой.Номенклатура.ДопустимоеКоличествоЦикловЧистки < ЕСТЬNULL(ВТ_ПередачаВЧистку.КоличествоПриход, 0)
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		Запрос.УстановитьПараметр("ТаблицаШтрихкодов",	Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки,Сотрудник,Номенклатура,ХарактеристикаНоменклатуры,Штрихкод"));
		Запрос.УстановитьПараметр("МассивШтрихкодов",	Объект[ИмяТабличнойЧасти].ВыгрузитьКолонку("Штрихкод"));
		Запрос.УстановитьПараметр("Организация",		Объект.Организация);
		Запрос.УстановитьПараметр("ПериодАнализа",		ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Объект.Ссылка));
		
		КлючДанных 			= ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		ШаблонСообщения 	= НСтр("ru='Для номенклатуры %Номенклатура% в строке %НомерСтроки% таблицы ""%ТаблицаШтрихкодов%"" превышено допустимое (%ДопустимоеКоличество%) количество циклов чистки на %Превышение%.'");
		МетаданныеОбъекта 	= Объект.Метаданные();
		ПредставлениеТЧ 	= МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%ТаблицаШтрихкодов%", 		ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%НомерСтроки%", 			Выборка.НомерСтроки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Номенклатура%", 			Выборка.Номенклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%ДопустимоеКоличество%", 	Выборка.ДопустимоеКоличество);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Превышение%", 			Выборка.Превышение);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "Штрихкод");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	//не отказываемся от проведения - только информируем
	Отказ = Ложь;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеНоменклатурыНормыПоПотребности(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаСредствЗащитыПоВедомости") Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.НоменклатураНормы,
		|	ТаблицаДокумента.НомерСтроки,
		|	ТаблицаДокумента.Сотрудник
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ТаблицаДокумента КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы
		|ПОМЕСТИТЬ ВТ_Потребность
		|ИЗ
		|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки КАК ПотребностьВыдачиСИЗОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.НоменклатураНормы,
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Сотрудник
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Потребность КАК ВТ_Потребность
		|		ПО ТаблицаДокумента.НоменклатураНормы = ВТ_Потребность.НоменклатураНормы
		|			И ТаблицаДокумента.Сотрудник = ВТ_Потребность.Сотрудник
		|ГДЕ
		|	НЕ ВТ_Потребность.НоменклатураНормы ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		Запрос.УстановитьПараметр("ТаблицаДокумента",Объект[ИмяТабличнойЧасти].Выгрузить(,"НоменклатураНормы,НомерСтроки,Сотрудник"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Номенклатура нормы ""%НоменклатураНормы%"" в строке %НомерСтроки% списка ""%ТаблицаТовары%"" используется в потребности.'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ                    		= МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		ПредставлениеРеквизитаНоменклатураНормы = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.НоменклатураНормы.Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураНормы%", ПредставлениеРеквизитаНоменклатураНормы);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТаблицаТовары%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "НоменклатураНормы");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьСоответствиеВыдачиПотребности(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаСредствЗащитыСотруднику") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
		|	ТаблицаНоменклатуры.НеВыдано КАК НеВыдано,
		|	ТаблицаНоменклатуры.Сотрудник КАК Сотрудник,
		|	ТаблицаНоменклатуры.НормаВыдачи КАК НормаВыдачи,
		|	ТаблицаНоменклатуры.НоменклатураНормы КАК НоменклатураНормы,
		|	ТаблицаНоменклатуры.Комплект КАК Комплект,
		|	ТаблицаНоменклатуры.Количество КАК Количество
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|ГДЕ
		|	НЕ ТаблицаНоменклатуры.НеВыдано
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Сотрудник КАК Сотрудник,
		|	ТаблицаНоменклатуры.НормаВыдачи КАК НормаВыдачи,
		|	ТаблицаНоменклатуры.НоменклатураНормы КАК НоменклатураНормы,
		|	СУММА(ТаблицаНоменклатуры.Количество) КАК КоличествоСумма,
		|	МАКСИМУМ(ТаблицаНоменклатуры.Количество) КАК КоличествоМаксимум,
		|	ТаблицаНоменклатуры.Комплект КАК Комплект
		|ПОМЕСТИТЬ ВТ_ГруппировкаТаблицыДокумента
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатуры.Сотрудник,
		|	ТаблицаНоменклатуры.НормаВыдачи,
		|	ТаблицаНоменклатуры.НоменклатураНормы,
		|	ТаблицаНоменклатуры.Комплект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ГруппировкаТаблицыДокумента.Сотрудник КАК Сотрудник,
		|	ВТ_ГруппировкаТаблицыДокумента.НормаВыдачи КАК НормаВыдачи,
		|	ВТ_ГруппировкаТаблицыДокумента.НоменклатураНормы КАК НоменклатураНормы,
		|	ВЫБОР
		|		КОГДА ВТ_ГруппировкаТаблицыДокумента.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА ВТ_ГруппировкаТаблицыДокумента.КоличествоСумма
		|		ИНАЧЕ ВТ_ГруппировкаТаблицыДокумента.КоличествоМаксимум
		|	КОНЕЦ КАК Количество
		|ПОМЕСТИТЬ ВТ_ОбработаннаяТаблицаДокумента
		|ИЗ
		|	ВТ_ГруппировкаТаблицыДокумента КАК ВТ_ГруппировкаТаблицыДокумента
		|ГДЕ
		|	НЕ ВТ_ГруппировкаТаблицыДокумента.НормаВыдачи = ЗНАЧЕНИЕ(Справочник.НормыВыдачиСИЗ.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник КАК Сотрудник,
		|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи КАК НормаВыдачи,
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы КАК НоменклатураНормы,
		|	СУММА(ПотребностьВыдачиСИЗОстатки.КоличествоОстаток) КАК Потребность
		|ПОМЕСТИТЬ ВТ_Потребность
		|ИЗ
		|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
		|			&ПериодРасчета,
		|			Организация = &Организация
		|				И Сотрудник В (&МассивСотрудников)
		|				И НАЧАЛОПЕРИОДА(ДатаПотребности, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&ДатаВыдачи, МЕСЯЦ)) КАК ПотребностьВыдачиСИЗОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
		|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи,
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОбработаннаяТаблицаДокумента.Сотрудник КАК Сотрудник,
		|	ВТ_ОбработаннаяТаблицаДокумента.НормаВыдачи КАК НормаВыдачи,
		|	ВТ_ОбработаннаяТаблицаДокумента.НоменклатураНормы КАК НоменклатураНормы
		|ПОМЕСТИТЬ ВТ_Результат
		|ИЗ
		|	ВТ_ОбработаннаяТаблицаДокумента КАК ВТ_ОбработаннаяТаблицаДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Потребность КАК ВТ_Потребность
		|		ПО ВТ_ОбработаннаяТаблицаДокумента.Сотрудник = ВТ_Потребность.Сотрудник
		|			И ВТ_ОбработаннаяТаблицаДокумента.НормаВыдачи = ВТ_Потребность.НормаВыдачи
		|			И ВТ_ОбработаннаяТаблицаДокумента.НоменклатураНормы = ВТ_Потребность.НоменклатураНормы
		|ГДЕ
		|	ВТ_ОбработаннаяТаблицаДокумента.Количество > ЕСТЬNULL(ВТ_Потребность.Потребность, 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Результат.Сотрудник КАК Сотрудник,
		|	ВТ_Результат.НормаВыдачи КАК НормаВыдачи,
		|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
		|	ТаблицаНоменклатуры.Количество КАК Количество
		|ИЗ
		|	ВТ_Результат КАК ВТ_Результат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ПО ВТ_Результат.Сотрудник = ТаблицаНоменклатуры.Сотрудник
		|			И ВТ_Результат.НормаВыдачи = ТаблицаНоменклатуры.НормаВыдачи
		|			И ВТ_Результат.НоменклатураНормы = ТаблицаНоменклатуры.НоменклатураНормы";
		
		Запрос.УстановитьПараметр("ТаблицаНоменклатуры",Объект[ИмяТабличнойЧасти].Выгрузить(,"НомерСтроки,НеВыдано,Сотрудник,НормаВыдачи,НоменклатураНормы,Комплект,Количество"));
		Запрос.УстановитьПараметр("ПериодРасчета",		ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Объект.Ссылка));
		Запрос.УстановитьПараметр("Организация",		Объект.Организация);
		Запрос.УстановитьПараметр("ДатаВыдачи",			Объект.Дата);
		Запрос.УстановитьПараметр("МассивСотрудников",	Объект[ИмяТабличнойЧасти].ВыгрузитьКолонку("Сотрудник"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='В строке %НомерСтроки% для сотрудника %Сотрудник% по норме %НормаВыдачи% списка ""%ТаблицаТовары%"" количество %Количество% не соответствует потребности.'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения,"%ТаблицаТовары%",	ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", 	Выборка.НомерСтроки);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сотрудник%", 	Выборка.Сотрудник);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НормаВыдачи%",	Выборка.НормаВыдачи);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", 	Выборка.Количество);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "Количество");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПроверитьНаличиеЗаявок(Объект,Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаВыдачу.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаВыдачу КАК ЗаявкаНаВыдачу
	|ГДЕ
	|	ЗаявкаНаВыдачу.Проведен
	|	И ЗаявкаНаВыдачу.Организация = &Организация
	|	И ЗаявкаНаВыдачу.НачалоПериодаВыдачи = &НачалоПериодаВыдачи
	|	И ЗаявкаНаВыдачу.КонецПериодаВыдачи = &КонецПериодаВыдачи
	|	И НЕ ЗаявкаНаВыдачу.Ссылка = &Заявка
	|	И ЗаявкаНаВыдачу.Склад = &Склад";
	
	Запрос.УстановитьПараметр("НачалоПериодаВыдачи",Объект.НачалоПериодаВыдачи);
	Запрос.УстановитьПараметр("КонецПериодаВыдачи",	Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("Организация",		Объект.Организация);
	Запрос.УстановитьПараметр("Заявка",				Объект.Ссылка);
	Запрос.УстановитьПараметр("Склад",				Объект.Склад);
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ПериодВыдачи = Новый СтандартныйПериод;
		ПериодВыдачи.ДатаНачала 	= Объект.НачалоПериодаВыдачи;
		ПериодВыдачи.ДатаОкончания 	= Объект.КонецПериодаВыдачи;
		
		ШаблонСообщения = НСтр("ru='Для организации %Организация% за период %ПериодВыдачи% уже существуют заявки на выдачу.'");
		ТекстСообщения 	= СтрЗаменить(ШаблонСообщения,"%Организация%",	Объект.Организация);
		ТекстСообщения 	= СтрЗаменить(ТекстСообщения, "%ПериодВыдачи%", ПериодВыдачи);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,"Организация","Объект",Отказ);
		
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьСоответствиеДатыПеремещенияПериодуЗаявки(Объект,Отказ) Экспорт
	
	КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
	
	Если ОБъект.Дата > Объект.ДокументОснование.КонецПериодаВыдачи 
		ИЛИ ОБъект.Дата < Объект.ДокументОснование.НачалоПериодаВыдачи Тогда
		
		ПериодВыдачи = Новый СтандартныйПериод;
		ПериодВыдачи.ДатаНачала 	= Объект.ДокументОснование.НачалоПериодаВыдачи;
		ПериодВыдачи.ДатаОкончания 	= Объект.ДокументОснование.КонецПериодаВыдачи;
		
		ШаблонСообщения = НСтр("ru='Дата перемещения %Дата% не соответствует периоду заявки %ПериодВыдачи%.'");
		ТекстСообщения 	= СтрЗаменить(ШаблонСообщения,"%Дата%",	Объект.Дата);
		ТекстСообщения 	= СтрЗаменить(ТекстСообщения, "%ПериодВыдачи%", ПериодВыдачи);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеНоменклатурыНормы(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаСредствЗащитыСотруднику") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.НоменклатураНормы КАК НоменклатураНормы,
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ТаблицаДокумента КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.НоменклатураНормы КАК НоменклатураНормы,
		|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДокумента.НоменклатураНормы КАК НоменклатураНормы,
		|		МИНИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки
		|	ИЗ
		|		ТаблицаДокумента КАК ТаблицаДокумента
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДокумента.НоменклатураНормы) КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.НоменклатураНормы = ЗНАЧЕНИЕ(Справочник.НоменклатураНормОрганизации.ПустаяСсылка)";
		
		Запрос.УстановитьПараметр("ТаблицаДокумента",Объект[ИмяТабличнойЧасти].Выгрузить(,"НоменклатураНормы,НомерСтроки"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Не заполнена колонка ""%НоменклатураНормы%"" в строке ""%НомерСтроки%"" списка ""%ТаблицаТовары%"".'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ                    = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		ПредставлениеРеквизитаНоменклатура = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.НоменклатураНормы.Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураНормы%", ПредставлениеРеквизитаНоменклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТаблицаТовары%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "НоменклатураНормы");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПериодичностиВыдачи(Объект,Отказ,ИмяТабличнойЧасти) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыдачаСредствЗащитыСотруднику") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.ПериодичностьВыдачи,
		|	ТаблицаДокумента.НомерСтроки
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ТаблицаДокумента КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.ПериодичностьВыдачи,
		|	ТабличнаяЧасть.НомерСтроки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДокумента.ПериодичностьВыдачи КАК ПериодичностьВыдачи,
		|		МИНИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки
		|	ИЗ
		|		ТаблицаДокумента КАК ТаблицаДокумента
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДокумента.ПериодичностьВыдачи) КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.ПериодичностьВыдачи = ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)";
		
		Запрос.УстановитьПараметр("ТаблицаДокумента",Объект[ИмяТабличнойЧасти].Выгрузить(,"ПериодичностьВыдачи,НомерСтроки"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Не заполнена колонка ""%ПериодичностьВыдачи%"" в строке %НомерСтроки% списка ""%ТаблицаТовары%"".'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ                    			= МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		ПредставлениеРеквизитаПериодичностьВыдачи 	= МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.ПериодичностьВыдачи.Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ПериодичностьВыдачи%", ПредставлениеРеквизитаПериодичностьВыдачи);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТаблицаТовары%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "ПериодичностьВыдачи");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ПриказНаПроведениеИнструктажей") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Инструктаж КАК Инструктаж,
		|	ТаблицаДокумента.Периодичность КАК Периодичность,
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ТаблицаДокумента КАК ТаблицаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Инструктажи.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Инструктажи
		|ИЗ
		|	Справочник.Инструктажи КАК Инструктажи
		|ГДЕ
		|	НЕ Инструктажи.ЭтоГруппа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.Инструктаж КАК Инструктаж,
		|	ТабличнаяЧасть.Периодичность КАК Периодичность,
		|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаДокумента.Инструктаж КАК Инструктаж,
		|		ТаблицаДокумента.Периодичность КАК Периодичность,
		|		МИНИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки
		|	ИЗ
		|		ТаблицаДокумента КАК ТаблицаДокумента
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаДокумента.Инструктаж,
		|		ТаблицаДокумента.Периодичность) КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Инструктажи КАК ВТ_Инструктажи
		|		ПО ТабличнаяЧасть.Инструктаж = ВТ_Инструктажи.Ссылка
		|ГДЕ
		|	ТабличнаяЧасть.Периодичность = ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)
		|	И ВТ_Инструктажи.Ссылка.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)";
		
		Запрос.УстановитьПараметр("ТаблицаДокумента",Объект[ИмяТабличнойЧасти].Выгрузить(,"Инструктаж,Периодичность,НомерСтроки"));
		
		КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
		
		ШаблонСообщения = НСтр("ru='Не заполнена колонка ""%Периодичность%"" в строке %НомерСтроки% списка ""%ТаблицаРабочиеМеста%"".'");
		
		МетаданныеОбъекта = Объект.Метаданные();
		
		ПредставлениеТЧ                    	= МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Синоним;
		ПредставлениеРеквизитаПериодичность	= МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.Периодичность.Синоним;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Периодичность%", 		ПредставлениеРеквизитаПериодичность);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТаблицаРабочиеМеста%", 	ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", 			Выборка.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабличнойЧасти, Выборка.НомерСтроки, "Периодичность");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЕстьДвиженияПоПотребностиВБудущем(НаборЗаписей) Экспорт 
	
	ЕстьПотребность = Ложь;
	
	Если НаборЗаписей.Количество() = 0 Тогда
	    Возврат ЕстьПотребность;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНабораЗаписей.Период КАК Период,
	|	ТаблицаНабораЗаписей.Активность КАК Активность,
	|	ТаблицаНабораЗаписей.Сотрудник КАК Сотрудник,
	|	ТаблицаНабораЗаписей.НоменклатураНормы КАК НоменклатураНормы
	|ПОМЕСТИТЬ ВТ_ТаблицаНабораЗаписей
	|ИЗ
	|	&ТаблицаНабораЗаписей КАК ТаблицаНабораЗаписей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПотребностьВыдачиСИЗ.Период КАК Период,
	|	ПотребностьВыдачиСИЗ.Сотрудник КАК Сотрудник,
	|	ПотребностьВыдачиСИЗ.Активность КАК Активность,
	|	ПотребностьВыдачиСИЗ.НоменклатураНормы КАК НоменклатураНормы
	|ПОМЕСТИТЬ ВТ_Потребность
	|ИЗ
	|	РегистрНакопления.ПотребностьВыдачиСИЗ КАК ПотребностьВыдачиСИЗ
	|ГДЕ
	|	ПотребностьВыдачиСИЗ.Активность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ТаблицаНабораЗаписей.Период КАК Период,
	|	ВТ_ТаблицаНабораЗаписей.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаНабораЗаписей.НоменклатураНормы КАК НоменклатураНормы
	|ИЗ
	|	ВТ_ТаблицаНабораЗаписей КАК ВТ_ТаблицаНабораЗаписей
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Потребность КАК ВТ_Потребность
	|		ПО ВТ_ТаблицаНабораЗаписей.Период < ВТ_Потребность.Период
	|			И ВТ_ТаблицаНабораЗаписей.Сотрудник = ВТ_Потребность.Сотрудник
	|			И ВТ_ТаблицаНабораЗаписей.НоменклатураНормы = ВТ_Потребность.НоменклатураНормы
	|ГДЕ
	|	НЕ ВТ_Потребность.НоменклатураНормы ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ТаблицаНабораЗаписей.Сотрудник,
	|	ВТ_ТаблицаНабораЗаписей.НоменклатураНормы";
	
	Запрос.УстановитьПараметр("ТаблицаНабораЗаписей",НаборЗаписей.Выгрузить());
	
	ШаблонСообщения = НСтр("ru='У сотрудника ""%Сотрудник%"" существует потребность по номенклатуре нормы ""%НоменклатураНормы%"" позже ""%Период%"".'");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%НоменклатураНормы%", 	Выборка.НоменклатураНормы);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Сотрудник%", 			Выборка.Сотрудник);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Период%", 			Выборка.Период);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ЕстьПотребность = Истина;
		
	КонецЦикла;
	
	Возврат ЕстьПотребность;
	
КонецФункции	

Процедура ПроверитьПериодыЗимы(Объект,Отказ) Экспорт
	
	КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПериодыЗимыСрезПоследних.Подразделение КАК Подразделение,
	|	ПериодыЗимыСрезПоследних.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТ_ПериодыЗимы
	|ИЗ
	|	РегистрСведений.ПериодыЗимы.СрезПоследних(
	|			&ПериодАнализа,
	|			Организация = &Организация
	|				И НЕ Регистратор = &Регистратор) КАК ПериодыЗимыСрезПоследних
	|ГДЕ
	|	ПериодыЗимыСрезПоследних.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ВТ_ТаблицаДокумента.Подразделение КАК Подразделение,
	|	ВТ_ПериодыЗимы.Регистратор КАК Регистратор
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыЗимы КАК ВТ_ПериодыЗимы
	|		ПО (ВЫБОР
	|				КОГДА ВТ_ТаблицаДокумента.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВТ_ТаблицаДокумента.Подразделение = ВТ_ПериодыЗимы.Подразделение
	|						ИЛИ ВТ_ПериодыЗимы.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|			КОНЕЦ)
	|ГДЕ
	|	НЕ ВТ_ПериодыЗимы.Регистратор ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Организация",		Объект.Организация);
	Запрос.УстановитьПараметр("ПериодАнализа",		?(ЗначениеЗаполнено(Объект.Ссылка),Объект.Дата,ТекущаяДата()));
	Запрос.УстановитьПараметр("Регистратор",		Объект.Ссылка);
	Запрос.УстановитьПараметр("ТаблицаДокумента",	Объект.ПериодыЗимы.Выгрузить());
	
	ШаблонСообщения = НСтр("ru='В строке %НомерСтроки% период зимы для подразделения %Подразделение% пересекается с установленным по документу %Регистратор%. Необходимо отменить старый период зимы перед установкой нового.'");
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%Подразделение%", 	?(ЗначениеЗаполнено(СтрокаТаблицыЗапроса.Подразделение),СтрокаТаблицыЗапроса.Подразделение, "<все подразделения>"));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%НомерСтроки%", 	СтрокаТаблицыЗапроса.НомерСтроки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, 	"%Регистратор%", 	СтрокаТаблицыЗапроса.Регистратор);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ПериодыЗимы", СтрокаТаблицыЗапроса.НомерСтроки, "Подразделение");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
		
	КонецЦикла;	
	
КонецПроцедуры	

//АсТБ_Alexey_********************************************************************

//АсТБ_Alexey_60996_********************************************************************

Процедура ПроверитьМВЗПодразделений(Объект,Отказ) Экспорт
	
	КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДокумента.Подразделение КАК Подразделение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ТаблицаДокумента.НомерСтроки) КАК КоличествоПодразделений,
	|	МАКСИМУМ(ВТ_ТаблицаДокумента.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаДокумента.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Результат.Подразделение КАК Подразделение,
	|	ВТ_Результат.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|ГДЕ
	|	ВТ_Результат.КоличествоПодразделений > 1";
	
	Запрос.УстановитьПараметр("ТаблицаДокумента", Объект.МВЗПодразделений.Выгрузить());
	
	ШаблонСообщения = НСтр("ru='Для подразделения %Подразделение% установлено несколько МВЗ.'");
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%Подразделение%", 	СтрокаТаблицыЗапроса.Подразделение);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("МВЗПодразделений", СтрокаТаблицыЗапроса.НомерСтроки, "Подразделение");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
		
	КонецЦикла;	
	
КонецПроцедуры

//АсТБ_Alexey_60996_********************************************************************

//АсТБ_Alexey_71263_********************************************************************

Процедура ПроверитьМВЗДолжностей(Объект,Отказ) Экспорт
	
	КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(Объект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Должность КАК Должность
	|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДокумента.Должность КАК Должность,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ТаблицаДокумента.НомерСтроки) КАК КоличествоДолжностей,
	|	МАКСИМУМ(ВТ_ТаблицаДокумента.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаДокумента.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Результат.Должность КАК Должность,
	|	ВТ_Результат.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|ГДЕ
	|	ВТ_Результат.КоличествоДолжностей > 1";
	
	Запрос.УстановитьПараметр("ТаблицаДокумента", Объект.МВЗДолжностей.Выгрузить());
	
	ШаблонСообщения = НСтр("ru='Для должности %Должность% установлено несколько МВЗ.'");
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, 	"%Должность%", 	СтрокаТаблицыЗапроса.Должность);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("МВЗДолжностей", СтрокаТаблицыЗапроса.НомерСтроки, "Должность");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
		
	КонецЦикла;	
	
КонецПроцедуры

//АсТБ_Alexey_71263_********************************************************************

//***НСК Трегубов А.А.*** -- №90515 --  28.06.2021 <<<
//
Процедура ПроверитьДатыПодчиненныхДокументовУстановкиУсловий(ВыдачаСсылка,ДополнительныеСвойства,Отказ) Экспорт
	
	Если ДополнительныеСвойства.РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстановкаУсловийРаботыСотрудника.Ссылка КАК Ссылка,
	|	УстановкаУсловийРаботыСотрудника.Дата КАК Дата
	|ИЗ
	|	Документ.УстановкаУсловийРаботыСотрудника КАК УстановкаУсловийРаботыСотрудника
	|ГДЕ
	|	УстановкаУсловийРаботыСотрудника.Дата >= &ДатаВыдачи
	|	И УстановкаУсловийРаботыСотрудника.Проведен
	|	И УстановкаУсловийРаботыСотрудника.ДокументОснование = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДатаВыдачи", ВыдачаСсылка.Дата);
	Запрос.УстановитьПараметр("ДокументОснование", ВыдачаСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаРезультат = РезультатЗапроса.Выбрать();
	Пока ВыборкаРезультат.Следующий() Цикл 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Обнаружены подчиненные документы установки условий с датой большей или равной дате выдачи!" + ВыборкаРезультат.Ссылка,,,,Отказ);				
	КонецЦикла;
	
КонецПроцедуры //***НСК Трегубов А.А.*** -- 90515 --  28.06.2021 >>>

