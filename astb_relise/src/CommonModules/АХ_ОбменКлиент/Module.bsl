
#Область ПрограммныйИнтерфейс

функция ПередатьДанныеВАдресноеХранение(МассивДанных,Модифицированность,СтруктураОбработкиОшибок,Источник = Неопределено) экспорт
	
	Отказ = Ложь;
	
	Если Модифицированность Тогда
		
		ТекстСообщения = нСтр("ru='Документ модифицирован. Необходимо записать или провести.'", "ru");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		
	иначе
		
		АХ_ОбменВызовСервера.ПередатьДанныеВАдресноеХранение(МассивДанных,СтруктураОбработкиОшибок);
		
		РазобратьСтруктуруОбработкиОшибок(СтруктураОбработкиОшибок,Источник);
		
		Отказ = СтруктураОбработкиОшибок.ЕстьОшибки;
		
	КонецЕсли;
	
	Возврат Отказ
	
КонецФункции // СформироватьПланСнятия()

Функция СформироватьПечатныеФормыАдресногоХранения(ПараметрыПечати) экспорт
	
	Если ПараметрыПечати.ОбъектыПечати.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	МассивТабличныхДокументов = АХ_ОбменВызовСервера.ПечатныеФормыАдресногоХранения(ПараметрыПечати.ОбъектыПечати[0]);
	
	Если МассивТабличныхДокументов.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(нСтр("ru='Нет печатных форм'", "ru"));
		Возврат Неопределено;
	КонецЕсли;
	
	Нумератор = 1;
	
	МассивПечатныхФорм = Новый Массив;
	
	Для Каждого ТабличныйДокумент из МассивТабличныхДокументов Цикл
		
		ИмяМакета = "ПланСнятия" + Нумератор;
		
		МассивКоллекций = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(ИмяМакета);
		
		КоллекцияПечатныхФорм = МассивКоллекций[0];
		
		КоллекцияПечатныхФорм.ИмяМакета = ИмяМакета;
		КоллекцияПечатныхФорм.ИмяВРЕГ = ВРег(ИмяМакета);
		КоллекцияПечатныхФорм.ТабличныйДокумент = ТабличныйДокумент;
		КоллекцияПечатныхФорм.Экземпляров = 1;
		КоллекцияПечатныхФорм.СинонимМакета = "ПланСнятия №" + Нумератор;
		
		Нумератор = Нумератор + 1;
		
		МассивПечатныхФорм.Добавить(КоллекцияПечатныхФорм);
		
	КонецЦикла;
	
	УправлениеПечатьюКлиент.ПечатьДокументов(МассивПечатныхФорм,Неопределено);	
	
КонецФункции // СформироватьПечатныеФормыАдресногоХранения()

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИнициализироватьСтруктуруОбработкиОшибок() экспорт
	
	СтруктураОбработкиОшибок = Новый Структура;
	СтруктураОбработкиОшибок.Вставить("ЕстьОшибки",Ложь);
	СтруктураОбработкиОшибок.Вставить("МассивТабличныхДокументов",Новый Массив);
	СтруктураОбработкиОшибок.Вставить("ОповеститьСообщением",Ложь);
	СтруктураОбработкиОшибок.Вставить("ОповещатьОбУспешнойОтправке",Истина);
	СтруктураОбработкиОшибок.Вставить("ТекстСообщенияУспешнойОтправки",нСтр("ru='Документ успешно передан в базу адресного хранения'", "ru"));
	
	Возврат СтруктураОбработкиОшибок;
	
КонецФункции // ИнициализироватьСтруктуруОбработкиОшибок()

Процедура РазобратьСтруктуруОбработкиОшибок(СтруктураОбработкиОшибок,Источник = Неопределено) экспорт
	
	//на данном этапе обрабатываем табличные документы	
	МассивТабличныхДокументов =  СтруктураОбработкиОшибок.МассивТабличныхДокументов;
	
	Для Каждого ТабличныйДокумент из МассивТабличныхДокументов цикл
		
		//если есть ошибки, значит печатные формы с ошибками и их нужно показать пользователю
		//если без ошибок, то это могут быть планы снятия, которые в зависимости от определенного типа документа, можно не показывать пользователю
		//и сохранить их в регистре
		
		Если СтруктураОбработкиОшибок.ЕстьОшибки ИЛИ Источник = Неопределено Тогда
			
			КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ОшибкиАдресногоХранения");		
			КоллекцияПечатныхФорм[0].Табличныйдокумент = ТабличныйДокумент;
			
			УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Новый СписокЗначений);
			
		Иначе
			
			АХ_ОбменВызовСервера.ПривязатьТабличныеДокументыКДокументу(Источник,МассивТабличныхДокументов);			
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ СтруктураОбработкиОшибок.ЕстьОшибки и СтруктураОбработкиОшибок.ОповещатьОбУспешнойОтправке Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтруктураОбработкиОшибок.ТекстСообщенияУспешнойОтправки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти