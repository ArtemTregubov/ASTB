//АСТБ_Горюшин_Алексей_33597

Процедура ВыгрузкаФизическихЛицВ_БазуКонсолидации() Экспорт
	
	СтрокаСоединенияИБ = СтрокаСоединенияИнформационнойБазы();
	Если СтрНайти(СтрокаСоединенияИБ, "File") > 0 Тогда
		ЗаписьЖурналаРегистрации("ВыгрузкаФизическихЛицВ_БазуКонсолидации",УровеньЖурналаРегистрации.Предупреждение,,,"Выгрузка возможна только из серверной базы данных!");
		Возврат;
	КонецЕсли;
	
	//АсТБ_Alexey_85046_********************************************************************
	//АдресОсновнойБазыАСТБ 		= "https://astb.vostok.ru/serial_num_base";
	//URIПространстваИменСервиса	= "https://astb.vostok.ru";
	АдресОсновнойБазыАСТБ 		= "https://astb2.vostok.ru/serial_num_base";
	URIПространстваИменСервиса	= "https://astb.vostok.ru";
	//АсТБ_Alexey_85046_********************************************************************
	
	Пользователь				= "mobile_user";
	Пароль						= "group_access";
	
	ВыборкаУзлов = ПланыОбмена.ОбменС_Консолидацией.Выбрать();
	
	//Узел должен быть один, но на всякий случай
	Пока ВыборкаУзлов.Следующий() Цикл
		
		Если ВыборкаУзлов.Ссылка = ПланыОбмена.ОбменС_Консолидацией.ЭтотУзел() Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписьЖурналаРегистрации("ВыгрузкаФизическихЛицВ_БазуКонсолидации",УровеньЖурналаРегистрации.Информация,,,"Узел " + ВыборкаУзлов.Ссылка + ". Начало выгрузки.");
		
		ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(ВыборкаУзлов.Ссылка,1);
		
		МассивФизическихЛиц = Новый Массив;
		
		Пока ВыборкаИзменений.Следующий() Цикл
			
			ДанныеВыборки = ВыборкаИзменений.Получить();
			
			Если ТипЗнч(ДанныеВыборки) = Тип("СправочникОбъект.ФизическиеЛица") Тогда
				МассивФизическихЛиц.Добавить(ДанныеВыборки.Ссылка);
			КонецЕсли;
			
		КонецЦикла;
		
		ПредставлениеИнформационнойБазы = ОбщегоНазначения.ПолучитьПредставлениеИнформационнойБазы();
		ПозицияРазделителя = СтрНайти(ПредставлениеИнформационнойБазы, "/ ");
		ДлинаСтроки = СтрДлина(ПредставлениеИнформационнойБазы);
		БазаАСТБ_Наименование = Сред(ПредставлениеИнформационнойБазы, ПозицияРазделителя + 2, ДлинаСтроки - ПозицияРазделителя - 1);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		//вариант не подходит, так как прием или увольнение может быть не текущим днём
		//"ВЫБРАТЬ
		//|	ФизическиеЛица.Наименование КАК Наименование,
		//|	ФизическиеЛица.КодСинхронизации КАК КодСинхронизации,
		//|	ФизическиеЛица.Ссылка КАК Ссылка
		//|ПОМЕСТИТЬ ВТ_ФизическиеЛица
		//|ИЗ
		//|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		//|ГДЕ
		//|	ФизическиеЛица.Ссылка В(&МассивФизическихЛиц)
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	ВТ_ФизическиеЛица.Наименование КАК Наименование,
		//|	ВТ_ФизическиеЛица.КодСинхронизации КАК КодСинхронизации,
		//|	ВТ_ФизическиеЛица.Ссылка КАК ФизическоеЛицо_Ссылка,
		//|	ФизическиеЛицаКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
		//|	ФизическиеЛицаКонтактнаяИнформация1.АдресЭП КАК АдресЭП,
		//|	&БазаАСТБ_Наименование КАК БазаАСТБ_Наименование
		//|ПОМЕСТИТЬ ВТ_ФизическиеЛицаИ_Телефоны
		//|ИЗ
		//|	ВТ_ФизическиеЛица КАК ВТ_ФизическиеЛица
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		//|		ПО ВТ_ФизическиеЛица.Ссылка = ФизическиеЛицаКонтактнаяИнформация.Ссылка
		//|			И (ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
		//|			И (ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизическиеЛица))
		//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация1
		//|		ПО ВТ_ФизическиеЛица.Ссылка = ФизическиеЛицаКонтактнаяИнформация1.Ссылка
		//|			И (ФизическиеЛицаКонтактнаяИнформация1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		//|			И (ФизическиеЛицаКонтактнаяИнформация1.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизическиеЛица))
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//|	ОсновноеМестоРаботыСотрудника.Период КАК Период,
		//|	ОсновноеМестоРаботыСотрудника.Организация КАК Организация,
		//|	ОсновноеМестоРаботыСотрудника.Сотрудник КАК Сотрудник,
		//|	ОсновноеМестоРаботыСотрудника.ОсновноеМестоРаботы КАК ОсновноеМестоРаботы,
		//|	ОсновноеМестоРаботыСотрудника.Подразделение КАК Подразделение_,
		//|	ОсновноеМестоРаботыСотрудника.Должность КАК Должность,
		//|	ОсновноеМестоРаботыСотрудника.РабочееМесто КАК РабочееМесто,
		//|	ОсновноеМестоРаботыСотрудника.МоментВремени КАК МоментВремени
		//|ПОМЕСТИТЬ ВТ_ОсновноеМестоРаботы
		//|ИЗ
		//|	РегистрСведений.ОсновноеМестоРаботыСотрудника КАК ОсновноеМестоРаботыСотрудника
		//|ГДЕ
		//|	ОсновноеМестоРаботыСотрудника.Активность
		//|	И ОсновноеМестоРаботыСотрудника.Сотрудник.ФизическоеЛицо.Ссылка В(&МассивФизическихЛиц)
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//|	ВложенныйЗапрос.Организация КАК Организация,
		//|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
		//|	ВложенныйЗапрос.Подразделение_ КАК Подразделение_,
		//|	ВложенныйЗапрос.Должность КАК Должность,
		//|	ВложенныйЗапрос.РабочееМесто КАК РабочееМесто,
		//|	ВложенныйЗапрос.Период КАК НачалоРаботы,
		//|	МИНИМУМ(ЕСТЬNULL(ВТ_ОсновноеМестоРаботы.Период, ДАТАВРЕМЯ(2050, 1, 1))) КАК ОкончаниеРаботы
		//|ПОМЕСТИТЬ ВТ_ПериодыОсновногоМестаРаботы
		//|ИЗ
		//|	(ВЫБРАТЬ
		//|		ВТ_ОсновноеМестоРаботы.Период КАК Период,
		//|		ВТ_ОсновноеМестоРаботы.Организация КАК Организация,
		//|		ВТ_ОсновноеМестоРаботы.Сотрудник КАК Сотрудник,
		//|		ВТ_ОсновноеМестоРаботы.Подразделение_ КАК Подразделение_,
		//|		ВТ_ОсновноеМестоРаботы.Должность КАК Должность,
		//|		ВТ_ОсновноеМестоРаботы.РабочееМесто КАК РабочееМесто,
		//|		ВТ_ОсновноеМестоРаботы.МоментВремени КАК МоментВремени
		//|	ИЗ
		//|		ВТ_ОсновноеМестоРаботы КАК ВТ_ОсновноеМестоРаботы
		//|	ГДЕ
		//|		ВТ_ОсновноеМестоРаботы.ОсновноеМестоРаботы) КАК ВложенныйЗапрос
		//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновноеМестоРаботы КАК ВТ_ОсновноеМестоРаботы
		//|		ПО ВложенныйЗапрос.Организация = ВТ_ОсновноеМестоРаботы.Организация
		//|			И ВложенныйЗапрос.Сотрудник = ВТ_ОсновноеМестоРаботы.Сотрудник
		//|			И ВложенныйЗапрос.МоментВремени < ВТ_ОсновноеМестоРаботы.МоментВремени
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	ВложенныйЗапрос.Организация,
		//|	ВложенныйЗапрос.Сотрудник,
		//|	ВложенныйЗапрос.Подразделение_,
		//|	ВложенныйЗапрос.Должность,
		//|	ВложенныйЗапрос.РабочееМесто,
		//|	ВложенныйЗапрос.Период
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	МАКСИМУМ(ВТ_ПериодыОсновногоМестаРаботы.НачалоРаботы) КАК НачалоРаботы,
		//|	ВТ_ПериодыОсновногоМестаРаботы.Сотрудник.ФизическоеЛицо КАК СотрудникФизическоеЛицо
		//|ПОМЕСТИТЬ ВТ_СотрудникРаботает
		//|ИЗ
		//|	ВТ_ПериодыОсновногоМестаРаботы КАК ВТ_ПериодыОсновногоМестаРаботы
		//|ГДЕ
		//|	ВТ_ПериодыОсновногоМестаРаботы.ОкончаниеРаботы > &ДатаПроверки
		//|	И ВТ_ПериодыОсновногоМестаРаботы.НачалоРаботы < &ДатаПроверки
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	ВТ_ПериодыОсновногоМестаРаботы.Сотрудник.ФизическоеЛицо
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	ВТ_ФизическиеЛицаИ_Телефоны.Наименование КАК Наименование,
		//|	ВТ_ФизическиеЛицаИ_Телефоны.КодСинхронизации КАК КодСинхронизации,
		//|	ВТ_ФизическиеЛицаИ_Телефоны.ФизическоеЛицо_Ссылка КАК ФизическоеЛицо_Ссылка,
		//|	ВТ_ФизическиеЛицаИ_Телефоны.НомерТелефона КАК НомерТелефона,
		//|	ВТ_ФизическиеЛицаИ_Телефоны.АдресЭП КАК АдресЭП,
		//|	ВТ_ФизическиеЛицаИ_Телефоны.БазаАСТБ_Наименование КАК БазаАСТБ_Наименование,
		//|	ВЫБОР
		//|		КОГДА ВТ_СотрудникРаботает.НачалоРаботы ЕСТЬ NULL
		//|			ТОГДА ЛОЖЬ
		//|		ИНАЧЕ ИСТИНА
		//|	КОНЕЦ КАК ДоступРазрешён,
		//|   ""00000000-0000-0000-0000-000000000000"" КАК GUID_ФЛ 
		//|ИЗ
		//|	ВТ_ФизическиеЛицаИ_Телефоны КАК ВТ_ФизическиеЛицаИ_Телефоны
		//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СотрудникРаботает КАК ВТ_СотрудникРаботает
		//|		ПО ВТ_ФизическиеЛицаИ_Телефоны.ФизическоеЛицо_Ссылка = ВТ_СотрудникРаботает.СотрудникФизическоеЛицо";
		
		"ВЫБРАТЬ
		|	ФизическиеЛица.Наименование КАК Наименование,
		|	ФизическиеЛица.КодСинхронизации КАК КодСинхронизации,
		|	ФизическиеЛица.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ФизическиеЛица
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&МассивФизическихЛиц)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ФизическиеЛица.Наименование КАК Наименование,
		|	ВТ_ФизическиеЛица.КодСинхронизации КАК КодСинхронизации,
		|	ВТ_ФизическиеЛица.Ссылка КАК ФизическоеЛицо_Ссылка,
		|	ФизическиеЛицаКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
		|	ФизическиеЛицаКонтактнаяИнформация1.АдресЭП КАК АдресЭП,
		|	&БазаАСТБ_Наименование КАК БазаАСТБ_Наименование
		|ПОМЕСТИТЬ ВТ_ФизическиеЛицаИ_Телефоны
		|ИЗ
		|	ВТ_ФизическиеЛица КАК ВТ_ФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|		ПО ВТ_ФизическиеЛица.Ссылка = ФизическиеЛицаКонтактнаяИнформация.Ссылка
		|			И (ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
		|			И (ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизическиеЛица))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация1
		|		ПО ВТ_ФизическиеЛица.Ссылка = ФизическиеЛицаКонтактнаяИнформация1.Ссылка
		|			И (ФизическиеЛицаКонтактнаяИнформация1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		|			И (ФизическиеЛицаКонтактнаяИнформация1.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизическиеЛица))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МАКСИМУМ(ЗанятыеРабочиеМестаОстатки.Сотрудник) КАК Сотрудник,
		|	МАКСИМУМ(ЗанятыеРабочиеМестаОстатки.Сотрудник.ФизическоеЛицо) КАК СотрудникФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ЗанятыеРабочиеМестаОстатки
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			,
		|			Сотрудник.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					ВТ_ФизическиеЛица.Ссылка
		|				ИЗ
		|					ВТ_ФизическиеЛица)) КАК ЗанятыеРабочиеМестаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ФизическиеЛицаИ_Телефоны.Наименование КАК Наименование,
		|	ВТ_ФизическиеЛицаИ_Телефоны.КодСинхронизации КАК КодСинхронизации,
		|	ВТ_ФизическиеЛицаИ_Телефоны.ФизическоеЛицо_Ссылка КАК ФизическоеЛицо_Ссылка,
		|	ВТ_ФизическиеЛицаИ_Телефоны.НомерТелефона КАК НомерТелефона,
		|	ВТ_ФизическиеЛицаИ_Телефоны.АдресЭП КАК АдресЭП,
		|	ВТ_ФизическиеЛицаИ_Телефоны.БазаАСТБ_Наименование КАК БазаАСТБ_Наименование,
		|	ВЫБОР
		|		КОГДА ВТ_ЗанятыеРабочиеМестаОстатки.Сотрудник ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ДоступРазрешён,
		|	""00000000-0000-0000-0000-000000000000"" КАК GUID_ФЛ
		|ИЗ
		|	ВТ_ФизическиеЛицаИ_Телефоны КАК ВТ_ФизическиеЛицаИ_Телефоны
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗанятыеРабочиеМестаОстатки КАК ВТ_ЗанятыеРабочиеМестаОстатки
		|		ПО ВТ_ФизическиеЛицаИ_Телефоны.ФизическоеЛицо_Ссылка = ВТ_ЗанятыеРабочиеМестаОстатки.СотрудникФизическоеЛицо";
		
		Запрос.УстановитьПараметр("МассивФизическихЛиц",	МассивФизическихЛиц);
		Запрос.УстановитьПараметр("БазаАСТБ_Наименование",	БазаАСТБ_Наименование);
		//Запрос.УстановитьПараметр("ДатаПроверки",			КонецДня(ТекущаяДата())); //если увольнять будущим числом, то не будет ограничен доступ
		
		ТаблицаФизическихЛиц_Промежуточная = Запрос.Выполнить().Выгрузить();
		
		Если ТаблицаФизическихЛиц_Промежуточная.Количество() = 0 Тогда
			ЗаписьЖурналаРегистрации("ВыгрузкаФизическихЛицВ_БазуКонсолидации",УровеньЖурналаРегистрации.Информация,,,"Узел " + ВыборкаУзлов.Ссылка + ". Нет данных для отправки.");
			Продолжить;
		КонецЕсли;
		
		ТаблицаФизическихЛиц = ТаблицаФизическихЛиц_Промежуточная.СкопироватьКолонки();
		
		Для Каждого Строка ИЗ ТаблицаФизическихЛиц_Промежуточная Цикл
			
			Если ТелефонСоответствуетФормату(Строка.НомерТелефона) Тогда
				НоваяСтрока = ТаблицаФизическихЛиц.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				НоваяСтрока.GUID_ФЛ = Строка.ФизическоеЛицо_Ссылка.УникальныйИдентификатор();
			КонецЕсли;
	
		КонецЦикла;
	
	    Если ТаблицаФизическихЛиц.Количество() = 0 Тогда
			ЗаписьЖурналаРегистрации("ВыгрузкаФизическихЛицВ_БазуКонсолидации",УровеньЖурналаРегистрации.Информация,,,"Узел " + ВыборкаУзлов.Ссылка + ". Нет данных для отправки.");
			Продолжить;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&БазаАСТБ_Наименование КАК Наименование,
		|	&URIПространстваИменСервиса + ""/"" + &БазаАСТБ_Наименование КАК АдресОсновнойБазыАСТБ,
		|	&URIПространстваИменСервиса КАК URIПространстваИменСервиса,
		|	&Пользователь КАК Пользователь,
		|	&Пароль КАК Пароль";
		
		Запрос.УстановитьПараметр("БазаАСТБ_Наименование",		БазаАСТБ_Наименование);
		Запрос.УстановитьПараметр("URIПространстваИменСервиса",	URIПространстваИменСервиса);
		Запрос.УстановитьПараметр("Пользователь",				Пользователь);
		Запрос.УстановитьПараметр("Пароль",						Пароль);
		
		ТаблицаБазаАСТБ = Запрос.Выполнить().Выгрузить();
		
		//вызов веб-сервиса базы консолидации
		ASTB_DBs = СериализаторXDTO.ЗаписатьXDTO(ТаблицаБазаАСТБ);
		ASTB_Persons = СериализаторXDTO.ЗаписатьXDTO(ТаблицаФизическихЛиц);
		
		//подключение без защищенного соединения
		ТекстОшибки = "";
		ЕстьПодключение = Истина;
		Попытка
			Определение = Новый WSОпределения(АдресОсновнойБазыАСТБ + "/ws/ws_FL_IN_ASTB.1cws?wsdl", Пользователь, Пароль,,60);
			Прокси 		= Новый WSПрокси(Определение, URIПространстваИменСервиса, "FL_IN", "FL_INSoap");       
		Исключение
			ТекстОшибки = "Не удалось установить соединение с сервером." + ОписаниеОшибки();
			ЕстьПодключение = Ложь;
		КонецПопытки;
		
		Если НЕ ЕстьПодключение Тогда //подключение с защищенным соединением
			Попытка
				Определение = Новый WSОпределения(АдресОсновнойБазыАСТБ + "/ws/ws_FL_IN_ASTB.1cws?wsdl", Пользователь, Пароль,,60,Новый ЗащищенноеСоединениеOpenSSL(Неопределено,Неопределено));
				Прокси 		= Новый WSПрокси(Определение, URIПространстваИменСервиса, "FL_IN", "FL_INSoap",,,Новый ЗащищенноеСоединениеOpenSSL(Неопределено,Неопределено));
				ТекстОшибки = "";
			Исключение
				ТекстОшибки = "Не удалось установить соединение с сервером." + ОписаниеОшибки();
			КонецПопытки;
		КонецЕсли;	
		
		Если НЕ ТекстОшибки = "" Тогда
			ЗаписьЖурналаРегистрации("ВыгрузкаФизическихЛицВ_БазуКонсолидации",УровеньЖурналаРегистрации.Информация,,,"Узел " + ВыборкаУзлов.Ссылка + ". " + ТекстОшибки);
			Продолжить;
		КонецЕсли;
		
		Прокси.Пользователь = Пользователь;
		Прокси.Пароль 		= Пароль;
		
		ErrorMessage = "";
		
		ОтветXDTO = Прокси.FL_Download(ASTB_DBs, ASTB_Persons, ErrorMessage);
		Структура_Ответ = СериализаторXDTO.ПрочитатьXDTO(ОтветXDTO);
		ЗагрузкаУспешна = Структура_Ответ.ЗагрузкаУспешна;
		
		Если ЗагрузкаУспешна Тогда
			//очистка регистрации
			ПланыОбмена.УдалитьРегистрациюИзменений(ВыборкаУзлов.Ссылка);
			ЗаписьЖурналаРегистрации("ВыгрузкаФизическихЛицВ_БазуКонсолидации",УровеньЖурналаРегистрации.Информация,,,"Узел " + ВыборкаУзлов.Ссылка + ". Выгрузка завершена.");
		Иначе	
			ЗаписьЖурналаРегистрации("ВыгрузкаФизическихЛицВ_БазуКонсолидации",УровеньЖурналаРегистрации.Информация,,,"Узел " + ВыборкаУзлов.Ссылка + ". Ошибка выгрузки: " + ErrorMessage);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнениеПланаОбменаДляВыгрузкиВ_КонсолидациюСправочникиПриЗаписи(Источник, Отказ) Экспорт
	
	//Танцюра А.Н. -- №136977 Ошибка при записи физического лица -- 21.10.2021 <<<
	УстановитьПривилегированныйРежим(Истина);
	//Танцюра А.Н. -- №136977 Ошибка при записи физического лица -- 21.10.2021 >>>
	
	Если Не Отказ Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФизическиеЛицаКонтактнаяИнформация.НомерТелефона КАК НомерТелефона
		|ИЗ
		|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|ГДЕ
		|	ФизическиеЛицаКонтактнаяИнформация.Ссылка = &Ссылка
		|	И ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
		|	И ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизическиеЛица)";
		
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		Если РезультатЗапроса.Количество() > 0
			И ТелефонСоответствуетФормату(РезультатЗапроса[0].НомерТелефона) Тогда
			
			ВыборкаУзлов = ПланыОбмена.ОбменС_Консолидацией.Выбрать();
			
			Пока ВыборкаУзлов.Следующий() Цикл
				
				Если ВыборкаУзлов.Ссылка = ПланыОбмена.ОбменС_Консолидацией.ЭтотУзел() Тогда
					Продолжить;
				КонецЕсли;
				
				ПланыОбмена.ЗарегистрироватьИзменения(ВыборкаУзлов.Ссылка,Источник);
				
			КонецЦикла;
		
		КонецЕсли;
		
	КонецЕсли;	
	
	//Танцюра А.Н. -- №136977 Ошибка при записи физического лица -- 21.10.2021 <<<
	УстановитьПривилегированныйРежим(Ложь);
	//Танцюра А.Н. -- №136977 Ошибка при записи физического лица -- 21.10.2021 >>>
	
КонецПроцедуры

// Проверка на формат "749501234567" (строка, 11 символов, без "+")
Функция ТелефонСоответствуетФормату(НомерТелефона) Экспорт

	ДлинаСтроки = СтрДлина(СокрЛП(НомерТелефона));
	Если ДлинаСтроки <> 11 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Сч = 1 По ДлинаСтроки Цикл
		
		Символ = Сред(НомерТелефона,Сч,1);
		//Если Сч = 1 Тогда
		//	Если НЕ Символ = "+" Тогда
		//		Возврат Ложь;
		//	КонецЕсли;
		//Иначе	
			Если СтрНайти("0123456789", Символ) = 0 Тогда
				Возврат Ложь;
			КонецЕсли;
		//КонецЕсли;
		
	КонецЦикла;	
	
	Возврат Истина;
	
КонецФункции

Процедура ЗаполнениеПланаОбменаДляВыгрузкиВ_КонсолидациюРегистрыНакопленияПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	//Танцюра А.Н. -- №136977 Ошибка при записи физического лица -- 21.10.2021 <<<
	УстановитьПривилегированныйРежим(Истина);
	//Танцюра А.Н. -- №136977 Ошибка при записи физического лица -- 21.10.2021 >>>
	
	Если Не Отказ Тогда
		
		Регистратор = Источник.Отбор.Регистратор.Значение;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМеста.Сотрудник.ФизическоеЛицо КАК СотрудникФизическоеЛицо
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста КАК ЗанятыеРабочиеМеста
		|ГДЕ
		|	ЗанятыеРабочиеМеста.Регистратор = &Регистратор";
		
		Запрос.УстановитьПараметр("Регистратор", Регистратор);
		
		Таблица_ФизЛица = Запрос.Выполнить().Выгрузить();
		
		Массив_ФизЛица = Таблица_ФизЛица.ВыгрузитьКолонку("СотрудникФизическоеЛицо");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФизическиеЛицаКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
		|	ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
		|ГДЕ
		|	ФизическиеЛицаКонтактнаяИнформация.Ссылка В(&Ссылки)
		|	И ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
		|	И ФизическиеЛицаКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизическиеЛица)";
		
		Запрос.УстановитьПараметр("Ссылки", Массив_ФизЛица);
		
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		Для Каждого Строка ИЗ РезультатЗапроса Цикл
			
			Если ТелефонСоответствуетФормату(Строка.НомерТелефона) Тогда
				
				ВыборкаУзлов = ПланыОбмена.ОбменС_Консолидацией.Выбрать();
				
				Пока ВыборкаУзлов.Следующий() Цикл
					
					Если ВыборкаУзлов.Ссылка = ПланыОбмена.ОбменС_Консолидацией.ЭтотУзел() Тогда
						Продолжить;
					КонецЕсли;
					
					ПланыОбмена.ЗарегистрироватьИзменения(ВыборкаУзлов.Ссылка,Строка.Ссылка);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	//Танцюра А.Н. -- №136977 Ошибка при записи физического лица -- 21.10.2021 <<<
	УстановитьПривилегированныйРежим(Ложь);
	//Танцюра А.Н. -- №136977 Ошибка при записи физического лица -- 21.10.2021 >>>
	
КонецПроцедуры
