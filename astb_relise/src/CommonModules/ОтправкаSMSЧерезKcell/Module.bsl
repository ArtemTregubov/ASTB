////////////////////////////////////////////////////////////////////////////////
// Подсистема "Отправка SMS"
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Отправляет SMS через Kcell	.
//
// Параметры:
//  НомераПолучателей - Массив - номера получателей в формате +7ХХХХХХХХХХ;
//  Текст 			  - Строка - текст сообщения, длиной не более 480 символов;
//  ИмяОтправителя 	  - Строка - имя отправителя, которое будет отображаться вместо номера входящего SMS;
//  Логин			  - Строка - логин пользователя услуги отправки sms;
//  Пароль			  - Строка - пароль пользователя услуги отправки sms.
//
// Возвращаемое значение:
//  Структура: ОтправленныеСообщения - Массив структур: НомерОтправителя.
//                                                  ИдентификаторСообщения.
//             ОписаниеОшибки        - Строка - пользовательское представление ошибки, если пустая строка,
//                                          то ошибки нет.
Функция ОтправитьSMS(НомераПолучателей, Текст, ИмяОтправителя, Логин, Пароль) Экспорт
	
	Результат = Новый Структура("ОтправленныеСообщения,ОписаниеОшибки", Новый Массив, "");
	
	Для Каждого НомерПолучателя Из НомераПолучателей Цикл
		
		
		// Подготовка строки получателей.
		Номер = ФорматироватьНомер(НомерПолучателя);
		
		// Проверка на заполнение обязательных параметров.
		Если ПустаяСтрока(Номер) Или ПустаяСтрока(Текст) Тогда
			Результат.ОписаниеОшибки = НСтр("ru = 'Неверные параметры сообщения'");
			Возврат Результат;
		КонецЕсли;
		
		хСоединение =   Новый HTTPСоединение("msg.kcell.kz",,Логин,Пароль,,,Новый ЗащищенноеСоединениеOpenSSL);
		хЗапрос     =   Новый HTTPЗапрос;
		
		ЗаголовокHTTP = Новый Соответствие();
		ЗаголовокHTTP.Вставить("Content-Type", "application/json; charset=utf-8");
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.ПроверятьСтруктуру = Истина;
		
		ПараметрыЗаписиJSON = Новый  ПараметрыЗаписиJSON(,Символы.Таб);
		ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
		
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		//id
		ЗаписьJSON.ЗаписатьИмяСвойства("client_message_id");
		ЗаписьJSON.ЗаписатьЗначение("123");
		//recipient
		ЗаписьJSON.ЗаписатьИмяСвойства("recipient");
		ЗаписьJSON.ЗаписатьЗначение(Номер);
		
		//sender
		ЗаписьJSON.ЗаписатьИмяСвойства("sender");
		ЗаписьJSON.ЗаписатьЗначение("AMOZ");
		
		//message_text
		ЗаписьJSON.ЗаписатьИмяСвойства("message_text");
		ЗаписьJSON.ЗаписатьЗначение(Текст);
		//priority
		ЗаписьJSON.ЗаписатьИмяСвойства("priority");
		ЗаписьJSON.ЗаписатьЗначение(2);
		
		//tag
		ЗаписьJSON.ЗаписатьИмяСвойства("tag");
		ЗаписьJSON.ЗаписатьЗначение("test_clnt_msg_id_1");
		
		//expire_time
		ЗаписьJSON.ЗаписатьИмяСвойства("expire_time");
		ЗаписьJSON.ЗаписатьЗначение(Неопределено);
		
		//schedule_time
		ЗаписьJSON.ЗаписатьИмяСвойства("schedule_time");
		ЗаписьJSON.ЗаписатьЗначение(Неопределено);
		
		//callback_url
		ЗаписьJSON.ЗаписатьИмяСвойства("callback_url");
		ЗаписьJSON.ЗаписатьЗначение(Неопределено);
		
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
		СтрокаJSON = ЗаписьJSON.Закрыть();
		
		хЗапрос.Заголовки = ЗаголовокHTTP;
		хЗапрос.УстановитьТелоИзСтроки(СтрокаJSON);
		хЗапрос.АдресРесурса    = "/api/v3/messages";
		
		Ответ       = хСоединение.ВызватьHTTPМетод("POST",хЗапрос);
		
		ИдентификаторСообщения = "";
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
		ЭтоID = Ложь;
		Пока ЧтениеJSON.Прочитать()   Цикл
			Если ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.НачалоОбъекта ИЛИ ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.КонецОбъекта Тогда
				Продолжить;
			Иначе
				Если ЧтениеJSON.ТекущееЗначение = "message_id" И ЧтениеJSON.ТипТекущегоЗначения=ТипЗначенияJSON.ИмяСвойства Тогда
					ЭтоID = Истина;
				ИначеЕсли ЧтениеJSON.ТипТекущегоЗначения=ТипЗначенияJSON.Строка И ЭтоID Тогда
					ИдентификаторСообщения = ЧтениеJSON.ТекущееЗначение;
					ЭтоID = Ложь;
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
		КОнецЦикла;
		Статус = "Не доставлено";
		Если Ответ.КодСостояния = 200 ИЛИ Ответ.КодСостояния = 201  Тогда
			Статус = "Доставлено";
		КонецЕсли;
		
		Сообщить(Ответ.ПолучитьТелоКакСтроку());
		
		Если Не ПустаяСтрока(Номер) Тогда
			ОтправленноеСообщение = Новый Структура("НомерПолучателя,ИдентификаторСообщения",
			"+"+Номер,ИдентификаторСообщения);
			Результат.ОтправленныеСообщения.Добавить(ОтправленноеСообщение);
		КонецЕсли;
		
		Результат.ОписаниеОшибки = Ответ.КодСостояния;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает текстовое представление статуса доставки сообщения.
//
// Параметры:
//  ИдентификаторСообщения - Строка - идентификатор, присвоенный sms при отправке;
//  НастройкиОтправкиSMS   - Структура - см. ОтправкаSMSПовтИсп.НастройкиОтправкиSMS;
//
// Возвращаемое значение:
//  Строка - статус доставки. См. описание функции ОтправкаSMS.СтатусДоставки.
Функция СтатусДоставки(ИдентификаторСообщения, НастройкиОтправкиSMS) Экспорт
	
	Логин = НастройкиОтправкиSMS.Логин;
	Пароль = НастройкиОтправкиSMS.Пароль;
	
	хСоединение =   Новый HTTPСоединение("msg.kcell.kz",,Логин,Пароль,,,Новый ЗащищенноеСоединениеOpenSSL);
	
	
	ЗаголовокHTTP = Новый Соответствие();
	ЗаголовокHTTP.Вставить("Content-Type", "application/json; charset=utf-8");

	хЗапрос     =   Новый HTTPЗапрос("/api/v3/messages/"+ИдентификаторСообщения,ЗаголовокHTTP);

	Ответ       = хСоединение.Получить(хЗапрос);
	
		
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
	ЭтоStatus = Ложь;
	Пока ЧтениеJSON.Прочитать()   Цикл
		Если ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.НачалоОбъекта ИЛИ ЧтениеJSON.ТипТекущегоЗначения = ТипЗначенияJSON.КонецОбъекта Тогда
			Продолжить;
		Иначе
			Если ЧтениеJSON.ТекущееЗначение = "status" И ЧтениеJSON.ТипТекущегоЗначения=ТипЗначенияJSON.ИмяСвойства Тогда
				ЭтоStatus = Истина;
			ИначеЕсли ЧтениеJSON.ТипТекущегоЗначения=ТипЗначенияJSON.Строка И ЭтоStatus Тогда
				Статус = ЧтениеJSON.ТекущееЗначение;
				ЭтоStatus = Ложь;
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
	КОнецЦикла;
		
	Возврат СтатусДоставкиSMS(Статус);  
	
КонецФункции

Функция СтатусДоставкиSMS(СтатусСтрокой)
	
	СоответствиеСтатусов = Новый Соответствие;
	СоответствиеСтатусов.Вставить("", "НеОтправлялось");
	СоответствиеСтатусов.Вставить("queued", "НеОтправлялось");
	СоответствиеСтатусов.Вставить("s", "Отправляется");
	СоответствиеСтатусов.Вставить("accepted", "Отправлено");
	СоответствиеСтатусов.Вставить("d", "Доставлено");
	СоответствиеСтатусов.Вставить("failed", "НеДоставлено");
	
	Результат = СоответствиеСтатусов[НРег(СтатусСтрокой)];
	Возврат ?(Результат = Неопределено, "Ошибка", Результат);
	
КонецФункции

Функция ВыполнитьЗапрос(ПараметрыЗапроса)
	
	//Результат = "";
	//
	//ИмяФайлаЗапроса = СформироватьФайлДляPOSTЗапроса(ПараметрыЗапроса);
	//ИмяФайлаОтвета = ПолучитьИмяВременногоФайла("xml");
	//
	//// формирование заголовка
	//Заголовок = Новый Соответствие;
	//Заголовок.Вставить("Content-Type", "application/x-www-form-urlencoded");
	//Заголовок.Вставить("Content-Length", XMLСтрока(РазмерФайла(ИмяФайлаЗапроса)));
	//
	//// Отправка запроса и получение ответа.
	//Попытка
	//	Соединение = Новый HTTPСоединение("msg.kcell.kz", , , , ПолучениеФайловИзИнтернетаКлиентСервер.ПолучитьПрокси("http"), 60);
	//	Соединение.ОтправитьДляОбработки(ИмяФайлаЗапроса, "/sendsms/", ИмяФайлаОтвета, Заголовок);
	//	Результат = ИмяФайлаОтвета;
	//Исключение
	//	ЗаписьЖурналаРегистрации(
	//		НСтр("ru = 'Отправка SMS'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
	//		УровеньЖурналаРегистрации.Ошибка,
	//		,
	//		,
	//		ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	//КонецПопытки;
	//
	//УдалитьФайлы(ИмяФайлаЗапроса);
	//
	//Возврат Результат;
	
КонецФункции

Функция РазмерФайла(ИмяФайла)
    Файл = Новый Файл(ИмяФайла);
    Возврат Файл.Размер();
КонецФункции

Функция МассивПолучателейСтрокой(Массив)
	Результат = "";
	Для Каждого Элемент Из Массив Цикл
		Номер = ФорматироватьНомер(Элемент);
		Если НЕ ПустаяСтрока(Номер) Тогда 
			Если Не ПустаяСтрока(Результат) Тогда
				Результат = Результат + ",";
			КонецЕсли;
			Результат = Результат + Номер;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

Функция ФорматироватьНомер(Номер)
	Результат = "";
	ДопустимыеСимволы = "1234567890";
	Для Позиция = 1 По СтрДлина(Номер) Цикл
		Символ = Сред(Номер,Позиция,1);
		Если СтрНайти(ДопустимыеСимволы, Символ) > 0 Тогда
			Результат = Результат + Символ;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;	
КонецФункции

// Возвращает список разрешений для отправки SMS с использованием всех доступных провайдеров.
//
// Возвращаемое значение:
//  Массив.
//
Функция Разрешения() Экспорт
	
	Протокол = "HTTP";
	Адрес = "msg.kcell.kz";
	Порт = Неопределено;
	Описание = НСтр("ru = 'Отправка SMS через Kcell.'");
	
	Разрешения = Новый Массив;
	Разрешения.Добавить(
		РаботаВБезопасномРежиме.РазрешениеНаИспользованиеИнтернетРесурса(Протокол, Адрес, Порт, Описание));
	
	Возврат Разрешения;
КонецФункции

#КонецОбласти
