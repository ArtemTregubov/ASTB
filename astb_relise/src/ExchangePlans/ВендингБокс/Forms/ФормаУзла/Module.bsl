
&НаКлиенте
Процедура ВыгрузитьНСИ(Команда)
	ВыгрузитьНСИНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьНСИНаСервере()
	
	ОбменДаннымиВендингБокс.ВыгрузитьНСИ();
	
КонецПроцедуры

&НаСервере
функция ТабличныеДокументыНСИ()
	
	Если Объект.ЭтотУзел Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	МассивНоменклатуры = Новый Массив;
	
	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Объект.Ссылка,1);
	
	Пока ВыборкаИзменений.Следующий() Цикл
		
		ДанныеВыборки = ВыборкаИзменений.Получить();
		
		Если ТипЗнч(ДанныеВыборки) = Тип("СправочникОбъект.Номенклатура") Тогда
			МассивНоменклатуры.Добавить(ДанныеВыборки.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
		
	СтруктураТаблиц = ОбменДаннымиВендингБокс.СтруктураТаблицДляОбработкиНСИ(МассивНоменклатуры);
	
	ПреобразоватьТаблицыПодТабличныеДокументы(СтруктураТаблиц);
	
	СтруктураТабдоков = Новый Структура;
	СтруктураТабдоков.Вставить("ТабличныйДокументНоменклатура",ПолучитьТабличныйДокумент(СтруктураТаблиц.ТаблицаНоменклатуры));
	СтруктураТабдоков.Вставить("ТабличныйДокументГруппыНоменклатуры",ПолучитьТабличныйДокумент(СтруктураТаблиц.ТаблицаГруппНоменклатуры));
	СтруктураТабдоков.Вставить("ТабличныйДокументЕдиницыИзмерения",ПолучитьТабличныйДокумент(СтруктураТаблиц.ТаблицаЕдиницИзмерения));
	
	Возврат СтруктураТабдоков;
	
КонецФункции

&НаКлиенте
Процедура РучноеФормированиеНСИ(Команда)
	
	СтруктураТабличныхДокументовНСИ = ТабличныеДокументыНСИ();
	Если ТипЗнч(СтруктураТабличныхДокументовНСИ) = Тип("Структура") Тогда
		
		КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ПечатьКомплектаНСИ");
		
		Итератор = 1;
		
		Для Каждого КлючИЗначение из СтруктураТабличныхДокументовНСИ Цикл
			
			СтруктураДанных = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(КоллекцияПечатныхФорм[0]);
			
			СтруктураДанных.ИмяМакета = СтруктураДанных.ИмяМакета + Итератор;
			СтруктураДанных.ИмяВРЕГ = СтруктураДанных.ИмяВРЕГ + Итератор;
			
			СтруктураДанных.СинонимМакета = КлючИЗначение.Ключ;
			СтруктураДанных.ТабличныйДокумент = КлючИЗначение.Значение;
			
			Итератор = Итератор + 1;
			
			КоллекцияПечатныхФорм.Добавить(СтруктураДанных);
			
		КонецЦикла;
		
		//очищаем первый элемент
		КоллекцияПечатныхФорм.Удалить(0);
		
		УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Новый СписокЗначений,ЭтаФорма);
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТабличныйДокумент(Таблица) Экспорт
    ТабДокумент = Новый ТабличныйДокумент;
    
    // Выводим заголовок таблицы
    КолонкаИндекс = 0;
    Пока КолонкаИндекс < Таблица.Колонки.Количество() Цикл
        Колонка = Таблица.Колонки[КолонкаИндекс];
        ТабДокумент.Область(1, КолонкаИндекс + 1, 1, КолонкаИндекс + 1).Текст = Колонка.Имя;  
        КолонкаИндекс = КолонкаИндекс + 1;
    КонецЦикла;
    
    // Выводим строки таблицы
    СтрокаИндекс = 0;
    Пока СтрокаИндекс < Таблица.Количество() Цикл
        Таблица_Строка = Таблица[СтрокаИндекс];
        КолонкаИндекс = 0;
        Пока КолонкаИндекс < Таблица.Колонки.Количество() Цикл
            Колонка = Таблица.Колонки[КолонкаИндекс];
            ТабДокумент.Область(СтрокаИндекс + 2, КолонкаИндекс + 1, СтрокаИндекс + 2, КолонкаИндекс + 1).Текст = Формат(Таблица_Строка[Колонка.Имя], "ЧГ=0");
            КолонкаИндекс = КолонкаИндекс + 1;
        КонецЦикла;        
        СтрокаИндекс = СтрокаИндекс + 1;
	КонецЦикла;
	
	ТабДокумент.ОтображатьСетку = Истина;
    
    Возврат ТабДокумент;
КонецФункции

&НаСервере
Процедура ПреобразоватьТаблицыПодТабличныеДокументы(СтруктураТаблиц)
	
	ТаблицаНоменклатурыПреобразованная = Новый ТаблицаЗначений;
	ТаблицаНоменклатурыПреобразованная.Колонки.Добавить("Артикул");
	ТаблицаНоменклатурыПреобразованная.Колонки.Добавить("КодНоменклатуры");
	ТаблицаНоменклатурыПреобразованная.Колонки.Добавить("НаименованиеКраткое");
	ТаблицаНоменклатурыПреобразованная.Колонки.Добавить("НаименованиеПолное");
	ТаблицаНоменклатурыПреобразованная.Колонки.Добавить("Описание");
	ТаблицаНоменклатурыПреобразованная.Колонки.Добавить("КодГруппы");
	ТаблицаНоменклатурыПреобразованная.Колонки.Добавить("ИзображениеНоменклатуры");
	ТаблицаНоменклатурыПреобразованная.Колонки.Добавить("ПризнакСИЗ");
	ТаблицаНоменклатурыПреобразованная.Колонки.Добавить("КодЕИ");
	ТаблицаНоменклатурыПреобразованная.Колонки.Добавить("ПометкаУдаления");

	ТаблицаГруппНоменклатурыПреобразованная = Новый ТаблицаЗначений;
	ТаблицаГруппНоменклатурыПреобразованная.Колонки.Добавить("КодГруппы");
	ТаблицаГруппНоменклатурыПреобразованная.Колонки.Добавить("НаименованиеГруппы");
	ТаблицаГруппНоменклатурыПреобразованная.Колонки.Добавить("КодРодителя");
	ТаблицаГруппНоменклатурыПреобразованная.Колонки.Добавить("Изображение");
	
	ТаблицаЕдиницИзмеренияПреобразованная = Новый ТаблицаЗначений;
	ТаблицаЕдиницИзмеренияПреобразованная.Колонки.Добавить("КодЕИ");
	ТаблицаЕдиницИзмеренияПреобразованная.Колонки.Добавить("НаименованиеЕИ");

	Для Каждого СтрокаТаблицы из СтруктураТаблиц.ТаблицаНоменклатуры Цикл 
		
		НоваяСтрока = ТаблицаНоменклатурыПреобразованная.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
		
		//код номенклатуры
		Если ЗначениеЗаполнено(СтрокаТаблицы.ХарактеристикаНоменклатуры) Тогда 
			Ссылка = СтрокаТаблицы.ХарактеристикаНоменклатуры;
		Иначе
			Ссылка = СтрокаТаблицы.Номенклатура;
		КонецЕсли;
		
		НоваяСтрока.КодНоменклатуры = Строка(Ссылка.УникальныйИдентификатор());
		
		//наименование краткое
		НаименованиеКраткое = СтрокаТаблицы.НаименованиеКраткое;
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ХарактеристикаНоменклатуры) Тогда 					
			НаименованиеКраткое = НаименованиеКраткое + " р. " + СтрокаТаблицы.НаименованиеХарактеристики;
		КонецЕсли;
		
		НоваяСтрока.НаименованиеКраткое = НаименованиеКраткое;
		
		//наименование полное
		НаименованиеПолное = СтрокаТаблицы.НаименованиеПолное;
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ХарактеристикаНоменклатуры) Тогда 					
			НаименованиеПолное = НаименованиеПолное + " р. " + СтрокаТаблицы.НаименованиеХарактеристики;
		КонецЕсли;
		
		НоваяСтрока.НаименованиеПолное = НаименованиеПолное;
		
		//пометка удаления
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ХарактеристикаНоменклатуры) Тогда 
			ПометкаУдаления = СтрокаТаблицы.ПометкаУдаленияХарактеристики;
		Иначе
			ПометкаУдаления = СтрокаТаблицы.ПометкаУдаленияНоменклатуры;
		КонецЕсли;
		
		НоваяСтрока.ПометкаУдаления = ПометкаУдаления;
		
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы из СтруктураТаблиц.ТаблицаГруппНоменклатуры Цикл 
		
		НоваяСтрока = ТаблицаГруппНоменклатурыПреобразованная.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
		
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы из СтруктураТаблиц.ТаблицаЕдиницИзмерения Цикл 
		
		НоваяСтрока = ТаблицаЕдиницИзмеренияПреобразованная.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
		
	КонецЦикла;
	
	СтруктураТаблиц.ТаблицаНоменклатуры      = ТаблицаНоменклатурыПреобразованная; 
	СтруктураТаблиц.ТаблицаГруппНоменклатуры = ТаблицаГруппНоменклатурыПреобразованная; 
	СтруктураТаблиц.ТаблицаЕдиницИзмерения   = ТаблицаЕдиницИзмеренияПреобразованная; 

КонецПроцедуры // ПреобразоватьТаблицыПодТабличныеДокументы()

&НаСервере
Процедура ЗаписатьИзображенияВКаталогНаСервере()
	
	Если Объект.ЭтотУзел Тогда 
		Возврат;
	КонецЕсли;
	
	МассивНоменклатуры = Новый Массив;
	
	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Объект.Ссылка,1);
	
	Пока ВыборкаИзменений.Следующий() Цикл
		
		ДанныеВыборки = ВыборкаИзменений.Получить();
		
		Если ТипЗнч(ДанныеВыборки) = Тип("СправочникОбъект.Номенклатура") Тогда
			МассивНоменклатуры.Добавить(ДанныеВыборки.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
		
	Если НЕ ЗначениеЗаполнено(Объект.ПутьККаталогуКартинок) Тогда 
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен каталог выгрузки картинок");		
		Возврат;
		
	КонецЕсли;
	
	СтруктураТаблиц = ОбменДаннымиВендингБокс.СтруктураТаблицДляОбработкиНСИ(МассивНоменклатуры);
		
	ОбменДаннымиВендингБокс.ЗаписатьИзображенияВКаталог(СтруктураТаблиц.ТаблицаФайлов,Объект.ПутьККаталогуКартинок);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИзображенияВКаталог(Команда)
	ЗаписатьИзображенияВКаталогНаСервере();
КонецПроцедуры
