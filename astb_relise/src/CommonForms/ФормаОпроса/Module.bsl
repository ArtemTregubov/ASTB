&НаСервере
Процедура ОтправитьНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НовоеПисьмо = Документы.ЭлектронноеПисьмоИсходящее.СоздатьДокумент();
	НовоеПисьмо.Заполнить(Неопределено);
	
	НовоеПисьмо.Дата 					= ТекущаяДата();
	НовоеПисьмо.Ответственный 			= ПараметрыСеанса.ТекущийПользователь;
	НовоеПисьмо.Тема 					= "Опрос";
	НовоеПисьмо.Текст 					= Пожелания;
	НовоеПисьмо.ТипТекста 				= Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст;
	
	Если НЕ ЗначениеЗаполнено(НовоеПисьмо.УчетнаяЗапись) Тогда
		НовоеПисьмо.УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	КонецЕсли;
	
	НовоеПисьмо.ОтправительПредставление = НовоеПисьмо.УчетнаяЗапись.АдресЭлектроннойПочты;
	
	//1-й получатель
	Получатель = НовоеПисьмо.ПолучателиПисьма.Добавить();
	Получатель.Представление 	= "Шулаев Данил Владиславович"; 
	Получатель.Адрес 			= "dshulaev@vostok.ru"; 
	Получатель.Контакт			= Справочники.Пользователи.НайтиПоНаименованию("Шулаев Данил Владиславович");
	
	НовоеПисьмо.СписокПолучателейПисьма = НовоеПисьмо.СписокПолучателейПисьма + Получатель.Представление + " <" + Получатель.Адрес + ">" + "; ";  
	
	//2-й получатель
	Получатель = НовоеПисьмо.ПолучателиПисьма.Добавить();
	Получатель.Представление 	= "Пелых София Вадимовна"; 
	Получатель.Адрес 			= "spelyh@vostok.ru"; 
	Получатель.Контакт			= Справочники.Пользователи.НайтиПоНаименованию("Пелых София Вадимовна");
	
	НовоеПисьмо.СписокПолучателейПисьма = НовоеПисьмо.СписокПолучателейПисьма + Получатель.Представление + " <" + Получатель.Адрес + ">" + "; ";
	
	//3-й получатель
	Получатель = НовоеПисьмо.ПолучателиПисьма.Добавить();
	Получатель.Представление 	= "Надеин Алексей Андреевич"; 
	Получатель.Адрес 			= "anadein@vostok.ru"; 
	Получатель.Контакт			= Справочники.Пользователи.НайтиПоНаименованию("Надеин Алексей Андреевич");
	
	НовоеПисьмо.СписокПолучателейПисьма = НовоеПисьмо.СписокПолучателейПисьма + Получатель.Представление + " <" + Получатель.Адрес + ">" + "; ";
	
	Попытка
		ИдентификаторПисьма = Взаимодействия.ВыполнитьОтправкуПисьма(НовоеПисьмо);
	Исключение
		ЗаписьЖурналаРегистрации("Опрос.",УровеньЖурналаРегистрации.Ошибка,Метаданные.Документы.ЭлектронноеПисьмоИсходящее,НовоеПисьмо,ОписаниеОшибки(),РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
	КонецПопытки;
	
	НовоеПисьмо.ИдентификаторСообщения 	= ИдентификаторПисьма;
	НовоеПисьмо.СтатусПисьма    		= Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Отправлено;
	НовоеПисьмо.ДатаОтправления 		= ТекущаяДатаСеанса();
	НовоеПисьмо.УстановитьНовыйНомер();
	
	Попытка 
		НовоеПисьмо.Записать(РежимЗаписиДокумента.Запись);
		ЗаписьЖурналаРегистрации("Опрос.",УровеньЖурналаРегистрации.Информация,Метаданные.Документы.ЭлектронноеПисьмоИсходящее,НовоеПисьмо,"Документ сформирован.",РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
	Исключение
		ЗаписьЖурналаРегистрации("Опрос.",УровеньЖурналаРегистрации.Ошибка,Метаданные.Документы.ЭлектронноеПисьмоИсходящее,НовоеПисьмо,ОписаниеОшибки(),РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
	КонецПопытки;
	
	ВзаимодействияВызовСервера.УстановитьПапкуЭлектронногоПисьма(НовоеПисьмо.Ссылка, Взаимодействия.ОпределитьПапкуДляПисьма(НовоеПисьмо.Ссылка));
		
	УстановитьПривилегированныйРежим(Ложь);	
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	ТекстПожелания = СокрЛП(Пожелания);
	
	Если НЕ ЗначениеЗаполнено(ТекстПожелания) Тогда  
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Пожалуйста, заполните пожелания!"; 
		СообщениеПользователю.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	ОтправитьНаСервере(); 
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеОК(Команда)
	
    ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
    ЭтаФорма.Закрыть();
	
КонецПроцедуры
