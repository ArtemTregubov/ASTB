#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВозвратСредствЗащитыСХраненияТовары.Ссылка.Дата КАК Период,
	|	ВозвратСредствЗащитыСХраненияТовары.Ссылка.Организация КАК Организация,
	|	ВозвратСредствЗащитыСХраненияТовары.Ссылка.Склад КАК Склад,
	|	ВозвратСредствЗащитыСХраненияТовары.Ссылка.ТочкаХранения КАК ТочкаХранения,
	|	ВозвратСредствЗащитыСХраненияТовары.Ссылка.Сотрудник КАК Сотрудник,
	|	ВозвратСредствЗащитыСХраненияТовары.НомерСтроки КАК НомерСтроки,
	|	ВозвратСредствЗащитыСХраненияТовары.Номенклатура КАК Номенклатура,
	|	ВозвратСредствЗащитыСХраненияТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВозвратСредствЗащитыСХраненияТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ВозвратСредствЗащитыСХранения.Товары КАК ВозвратСредствЗащитыСХраненияТовары
	|ГДЕ
	|	ВозвратСредствЗащитыСХраненияТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	ТаблицыДляДвижений.Вставить("ТаблицаСредстваЗащитыНаХранении", Результат);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"Накладная",
			"Накладная",
			СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати),,"Документ.ВозвратСредствЗащитыСХранения.ПФ_MXL_Накладная");
				
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МХ3") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"МХ3",
			"МХ-3",
			СформироватьПечатнуюФормуМХ3(МассивОбъектов, ОбъектыПечати),,"Документ.ВозвратСредствЗащитыСХранения.ПФ_MXL_МХ3");
				
	КонецЕсли;
		
КонецПроцедуры

Функция СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратСредствЗащитыСХранения_ПФ_MXL_Накладная";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.Сотрудник.Наименование КАК ПредставлениеПолучателя,
	|	Документы.Склад.Наименование КАК ПредставлениеСклада,
	|	Документы.МОЛ.Наименование КАК ПредставлениеМОЛ,
	|	Документы.Организация.Префикс КАК Префикс,
	|	Документы.ТочкаХранения.Наименование КАК ПредставлениеТочкиХранения
	|ИЗ
	|	Документ.ВозвратСредствЗащитыСХранения КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.Цена КАК Цена,
	|	СУММА(Товары.Сумма) КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.Наименование
	|		ИНАЧЕ Товары.Номенклатура.Наименование + "" ("" + Товары.ХарактеристикаНоменклатуры.Наименование + "")""
	|	КОНЕЦ КАК НаименованиеТовара,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА Товары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА Товары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование
	|ИЗ
	|	Документ.ВозвратСредствЗащитыСХранения.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|		ПО Товары.Ссылка.Организация = НоменклатурныеНомераОрганизаций.Организация
	|			И Товары.Номенклатура = НоменклатурныеНомераОрганизаций.Номенклатура
	|			И Товары.ХарактеристикаНоменклатуры = НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.Цена,
	|	ВЫБОР
	|		КОГДА Товары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.Наименование
	|		ИНАЧЕ Товары.Номенклатура.Наименование + "" ("" + Товары.ХарактеристикаНоменклатуры.Наименование + "")""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА Товары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА Товары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВозвратСредствЗащитыСХранения.ПФ_MXL_Накладная");
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
			
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(ДанныеПечати);
		
		Область.Параметры.ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата, Префикс", ДанныеПечати.Номер, ДанныеПечати.Дата, ДанныеПечати.Префикс), "Накладная");
		Область.Параметры.ПредставлениеОтправителя = "Склад: " + ДанныеПечати.ПредставлениеСклада + " МОЛ: " + ДанныеПечати.ПредставлениеМОЛ + " точка хранения: " + ДанныеПечати.ПредставлениеТочкиХранения;
		
		ТабличныйДокумент.Вывести(Область);
			
		СчетСтрок = 1;
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
			Область.Параметры.Заполнить(ВыборкаПоТоварам);
			Область.Параметры.НомерСтроки = СчетСтрок;
			ТабличныйДокумент.Вывести(Область);
			
			СчетСтрок = СчетСтрок + 1;
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований передано на хранение: %ВсегоНаименований%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
		Область.Параметры.ИтоговаяСтрока 	= ТекстИтоговойСтроки;
		Область.Параметры.ФИОПолучателя 	= ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставлениеПолучателя);
		Область.Параметры.ФИООтправителя 	= ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставлениеМОЛ);
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуМХ3(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб 			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратСредствЗащитыСХранения_ПФ_MXL_МХ3";
	ТабличныйДокумент.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВозвратСредствЗащитыСХранения.ПФ_MXL_МХ3");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация.НаименованиеПолное КАК ПредставлениеПоклажедателя,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.Сотрудник.Наименование КАК ФИОПоклажедателя,
	|	Документы.Склад.Наименование КАК ПредставлениеСклада,
	|	Документы.МОЛ.Наименование КАК ПредставлениеМОЛ,
	|	Документы.Организация.Префикс КАК Префикс,
	|	Документы.ДляПечатиПоклажедержатель.НаименованиеПолное КАК ПредставлениеПоклажедержателя,
	|	Документы.ДляПечатиПодразделениеПоклажедержателя КАК ПредставлениеПодразделения,
	|	Документы.ДляПечатиНомерДоговора КАК ДоговорНомер,
	|	Документы.ДляПечатиДатаДоговора КАК ДоговорДата,
	|	Документы.ДляПечатиПоклажедержатель.ОКПО КАК ПоклажедержательПоОКПО,
	|	Документы.Организация.ОКПО КАК ПоклажедательПоОКПО
	|ИЗ
	|	Документ.ВозвратСредствЗащитыСХранения КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура.Наименование КАК ПредставлениеНоменклатуры,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА Товары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА Товары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НоменклатураКод,
	|	ВЫБОР
	|		КОГДА Товары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА """"
	|		ИНАЧЕ Товары.ХарактеристикаНоменклатуры.Наименование
	|	КОНЕЦ КАК ПредставлениеХарактеристики,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.Цена КАК Цена,
	|	СУММА(Товары.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ВозвратСредствЗащитыСХранения.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|		ПО Товары.Ссылка.Организация = НоменклатурныеНомераОрганизаций.Организация
	|			И Товары.Номенклатура = НоменклатурныеНомераОрганизаций.Номенклатура
	|			И Товары.ХарактеристикаНоменклатуры = НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.Цена,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА Товары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА Товары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	Товары.Номенклатура.Наименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код,
	|	ВЫБОР
	|		КОГДА Товары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА """"
	|		ИНАЧЕ Товары.ХарактеристикаНоменклатуры.Наименование
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ПредставлениеНоменклатуры,
	|	ПредставлениеХарактеристики
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		//выводим шапку документа
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.Заполнить(ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть документа
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		ОбластьОсобыеОтметки    = Макет.ПолучитьОбласть("ОсобыеОтметки");
			
		НомерСтраницы = 1;
		
		НомерСтроки = 0;
		
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		
		КоличествоСтрок = ВыборкаПоТоварам.Количество();
		
		// Инициализация итогов в документе
		ИтоговыеСуммы = СтруктураИтоговыеСуммы();
			
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			СтруктураПараметров = Новый Структура("НомерСтроки", НомерСтроки);
			ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоТоварам);
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			
			Если НомерСтроки = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьВсего);
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
				МассивВыводимыхОбластей.Добавить(ОбластьОсобыеОтметки);
			КонецЕсли;
			
			Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				
				ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
				ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
				
				ОбнулитьИтогиПоСтранице(ИтоговыеСуммы);
				
				НомерСтраницы = НомерСтраницы + 1;
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				УстановитьПараметр(ЗаголовокТаблицы, "НомерСтраницы", "Страница " + НомерСтраницы);
				
				ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			РассчитатьИтоговыеСуммы(ИтоговыеСуммы, ВыборкаПоТоварам);
			
		КонецЦикла;
		
		// Выводим итоги по последней странице
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
		
		// Выводим итоги по документу в целом
		ОбластьВсего = Макет.ПолучитьОбласть("Всего");
		ОбластьВсего.Параметры.Заполнить(ИтоговыеСуммы);
		ТабличныйДокумент.Вывести(ОбластьВсего);
		
		//особые отметки
		ОбластьОсобыеОтметки = Макет.ПолучитьОбласть("ОсобыеОтметки");
		ТабличныйДокумент.Вывести(ОбластьОсобыеОтметки);
		
		// Выводим итоги по документу
	    УстановитьПараметр(ОбластьПодвала, "Мол",  ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставлениеМОЛ));
		ТабличныйДокумент.Вывести(ОбластьПодвала);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура УстановитьПараметр(ОбластьМакета, ИмяПараметра, ЗначениеПараметра)
	
	ОбластьМакета.Параметры.Заполнить(Новый Структура(ИмяПараметра, ЗначениеПараметра));
	
КонецПроцедуры

Функция СтруктураИтоговыеСуммы()
	
	Структура = Новый Структура;
	Структура.Вставить("ИтогоКоличествоНаСтранице", 0);
	Структура.Вставить("ИтогоКоличество", 0);
	Структура.Вставить("ИтогоСуммаНаСтранице", 0);
	Структура.Вставить("ИтогоСумма", 0);
	
	Возврат Структура;
	
КонецФункции

Процедура ОбнулитьИтогиПоСтранице(ИтоговыеСуммы)
	
	ИтоговыеСуммы.Вставить("ИтогоКоличествоНаСтранице", 0);
	ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
	
КонецПроцедуры

Процедура РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары)
	
	ИтоговыеСуммы["ИтогоКоличествоНаСтранице"] 	= ИтоговыеСуммы["ИтогоКоличествоНаСтранице"] 	+ СтрокаТовары.Количество;
	ИтоговыеСуммы["ИтогоКоличество"] 			= ИтоговыеСуммы["ИтогоКоличество"] 				+ СтрокаТовары.Количество;
	ИтоговыеСуммы["ИтогоСуммаНаСтранице"] 		= ИтоговыеСуммы["ИтогоСуммаНаСтранице"] 		+ СтрокаТовары.Сумма;
	ИтоговыеСуммы["ИтогоСумма"] 				= ИтоговыеСуммы["ИтогоСумма"] 					+ СтрокаТовары.Сумма;
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//Накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ВозвратСредствЗащитыСХранения";
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//МХ-3
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ВозвратСредствЗащитыСХранения";
	КомандаПечати.Идентификатор = "МХ3";
	КомандаПечати.Представление = НСтр("ru = 'МХ-3'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоОснованию(ТекущийОбъект,Основание) Экспорт
	
	ТекущийОбъект.Организация 		= Основание.Организация;
	ТекущийОбъект.Сотрудник 		= Основание.Сотрудник;
	ТекущийОбъект.ДокументОснование	= Основание;
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПриемСредствЗащитыНаХранение") Тогда
		
		ТекущийОбъект.Склад 		= Основание.Склад;
		ТекущийОбъект.ТочкаХранения = Основание.ТочкаХранения;
		ТекущийОбъект.МОЛ 			= Основание.МОЛ;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПриемСредствЗащитыНаХранениеТовары.Номенклатура КАК Номенклатура,
		|	ПриемСредствЗащитыНаХранениеТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ЕСТЬNULL(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток, 0) КАК Количество,
		|	ПриемСредствЗащитыНаХранениеТовары.Цена КАК Цена,
		|	ЕСТЬNULL(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток, 0) * ПриемСредствЗащитыНаХранениеТовары.Цена КАК Сумма
		|ИЗ
		|	Документ.ПриемСредствЗащитыНаХранение.Товары КАК ПриемСредствЗащитыНаХранениеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СредстваЗащитыНаХранении.Остатки(
		|				&ДатаАнализа,
		|				Организация = &Организация
		|					И Склад = &Склад И ТочкаХранения = &ТочкаХранения) КАК СредстваЗащитыНаХраненииОстатки
		|		ПО ПриемСредствЗащитыНаХранениеТовары.Ссылка.Сотрудник = СредстваЗащитыНаХраненииОстатки.Сотрудник
		|			И ПриемСредствЗащитыНаХранениеТовары.Номенклатура = СредстваЗащитыНаХраненииОстатки.Номенклатура
		|			И ПриемСредствЗащитыНаХранениеТовары.ХарактеристикаНоменклатуры = СредстваЗащитыНаХраненииОстатки.ХарактеристикаНоменклатуры
		|ГДЕ
		|	ПриемСредствЗащитыНаХранениеТовары.Ссылка = &ДокументОснование
		|	И НЕ ЕСТЬNULL(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток, 0) = 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПриемСредствЗащитыНаХранениеТовары.Номенклатура.Наименование,
		|	ПриемСредствЗащитыНаХранениеТовары.ХарактеристикаНоменклатуры.КодSAP";
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка));
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("Склад",				ТекущийОбъект.Склад);
		Запрос.УстановитьПараметр("ТочкаХранения",		ТекущийОбъект.ТочкаХранения);
		Запрос.УстановитьПараметр("ДокументОснование",	Основание);
		
		ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеСредствЗащитыНаХранении") Тогда
		
		ТекущийОбъект.Склад 		= Основание.СкладПолучатель;
		ТекущийОбъект.ТочкаХранения = Основание.ТочкаХраненияПолучатель;
		ТекущийОбъект.МОЛ 			= Основание.МОЛПолучателя;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеСредствЗащитыНаХраненииТовары.Номенклатура КАК Номенклатура,
		|	ПеремещениеСредствЗащитыНаХраненииТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ЕСТЬNULL(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток, 0) КАК Количество,
		|	ПеремещениеСредствЗащитыНаХраненииТовары.Цена КАК Цена,
		|	ЕСТЬNULL(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток, 0) * ПеремещениеСредствЗащитыНаХраненииТовары.Цена КАК Сумма
		|ИЗ
		|	Документ.ПеремещениеСредствЗащитыНаХранении.Товары КАК ПеремещениеСредствЗащитыНаХраненииТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СредстваЗащитыНаХранении.Остатки(
		|				&ДатаАнализа,
		|				Организация = &Организация
		|					И Склад = &Склад И ТочкаХранения = &ТочкаХранения) КАК СредстваЗащитыНаХраненииОстатки
		|		ПО ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка.Сотрудник = СредстваЗащитыНаХраненииОстатки.Сотрудник
		|			И ПеремещениеСредствЗащитыНаХраненииТовары.Номенклатура = СредстваЗащитыНаХраненииОстатки.Номенклатура
		|			И ПеремещениеСредствЗащитыНаХраненииТовары.ХарактеристикаНоменклатуры = СредстваЗащитыНаХраненииОстатки.ХарактеристикаНоменклатуры
		|ГДЕ
		|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка = &ДокументОснование
		|	И НЕ ЕСТЬNULL(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток, 0) = 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПеремещениеСредствЗащитыНаХраненииТовары.Номенклатура.Наименование,
		|	ПеремещениеСредствЗащитыНаХраненииТовары.ХарактеристикаНоменклатуры.КодSAP";
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка));
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("Склад",				ТекущийОбъект.Склад);
		Запрос.УстановитьПараметр("ТочкаХранения",		ТекущийОбъект.ТочкаХранения);
		Запрос.УстановитьПараметр("ДокументОснование",	Основание);
		
		ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
	ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
	
КонецПроцедуры	

Процедура ЗаполнитьДокумент(ТекущийОбъект,МассивСотрудников = Неопределено) Экспорт
	
	Если МассивСотрудников = Неопределено Тогда
		
		МассивСотрудников = Новый Массив;
		МассивСотрудников.Добавить(ТекущийОбъект.Сотрудник);
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ ВТ_Цены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СредстваЗащитыНаХраненииОстатки.Сотрудник КАК Сотрудник,
	|	СредстваЗащитыНаХраненииОстатки.Номенклатура КАК Номенклатура,
	|	СредстваЗащитыНаХраненииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток) КАК Количество,
	|	ЕСТЬNULL(ВТ_Цены.Цена, 0) КАК Цена,
	|	СУММА(ЕСТЬNULL(ВТ_Цены.Цена, 0) * СредстваЗащитыНаХраненииОстатки.КоличествоОстаток) КАК Сумма
	|ИЗ
	|	РегистрНакопления.СредстваЗащитыНаХранении.Остатки(
	|			&ДатаАнализа,
	|			Организация = &Организация
	|				И Сотрудник В (&МассивСотрудников)
	|				И Склад = &Склад
	|				И ТочкаХранения = &ТочкаХранения) КАК СредстваЗащитыНаХраненииОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
	|		ПО СредстваЗащитыНаХраненииОстатки.Номенклатура = ВТ_Цены.Номенклатура
	|			И СредстваЗащитыНаХраненииОстатки.Номенклатура.Поставщик = ВТ_Цены.Поставщик
	|
	|СГРУППИРОВАТЬ ПО
	|	СредстваЗащитыНаХраненииОстатки.Номенклатура,
	|	СредстваЗащитыНаХраненииОстатки.ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ВТ_Цены.Цена, 0),
	|	СредстваЗащитыНаХраненииОстатки.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	СредстваЗащитыНаХраненииОстатки.Сотрудник.Наименование,
	|	СредстваЗащитыНаХраненииОстатки.Номенклатура.Наименование,
	|	СредстваЗащитыНаХраненииОстатки.ХарактеристикаНоменклатуры.КодSAP";
	
	Запрос.УстановитьПараметр("ДатаАнализа",		ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка));
	Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
	Запрос.УстановитьПараметр("МассивСотрудников",	МассивСотрудников);
	Запрос.УстановитьПараметр("Склад",				ТекущийОбъект.Склад);
	Запрос.УстановитьПараметр("ТочкаХранения",		ТекущийОбъект.ТочкаХранения);
	Запрос.УстановитьПараметр("ТекущаяДата",		?(ЗначениеЗаполнено(ТекущийОбъект.Ссылка),ТекущийОбъект.Дата,ТекущаяДата()));
	
	ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой ЗапретРедактированияРеквизитовОбъектов.

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//     Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//              где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы, связанного с
//              реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
    //Результат.Добавить("ВходящийНомер");
    Возврат Результат;
	
КонецФункции

#КонецЕсли