#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Дата КАК Период,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Организация КАК Организация,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.ПричинаСписания КАК ПричинаСписания,
	|	СписаниеСредствЗащитыСотрудникаУточненныеПричиныСписания.УточненнаяПричинаСписания КАК УточненнаяПричинаСписания,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Сотрудник КАК Сотрудник,
	|	СписаниеСредствЗащитыСотрудникаТовары.НоменклатураНормы КАК НоменклатураНормы,
	|	СписаниеСредствЗащитыСотрудникаТовары.Номенклатура КАК Номенклатура,
	|	СписаниеСредствЗащитыСотрудникаТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СписаниеСредствЗащитыСотрудникаТовары.ДатаВыдачи КАК ДатаВыдачи,
	|	СписаниеСредствЗащитыСотрудникаТовары.ПроцентИзноса КАК ПроцентИзноса,
	|	СписаниеСредствЗащитыСотрудникаТовары.Количество КАК Количество
	|ИЗ
	|	Документ.СписаниеСредствЗащитыСотрудника.УточненныеПричиныСписания КАК СписаниеСредствЗащитыСотрудникаУточненныеПричиныСписания
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеСредствЗащитыСотрудника.Товары КАК СписаниеСредствЗащитыСотрудникаТовары
	|		ПО СписаниеСредствЗащитыСотрудникаУточненныеПричиныСписания.Ключ = СписаниеСредствЗащитыСотрудникаТовары.Ключ
	|ГДЕ
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка = &Ссылка
	|	И СписаниеСредствЗащитыСотрудникаУточненныеПричиныСписания.Ссылка = &Ссылка";	
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	//движения по регистру "Уточненные причины списания"
	ТаблицыДляДвижений.Вставить("ТаблицаУточненныеПричиныСписания", Запрос.Выполнить().Выгрузить());
	
	//движения по регистру "Выданные средства защиты"
	ТаблицыДляДвижений.Вставить("ТаблицаВыданныеСредстваЗащиты", ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуДвиженийПоВыданнымСИЗ(ДокументСсылка));
	
	Если ДокументСсылка.ВидВыдачиСИЗ = Перечисления.ВидыВыдачиСИЗ.ПроизвольнаяВыдача ИЛИ ДокументСсылка.ВидВыдачиСИЗ = Перечисления.ВидыВыдачиСИЗ.УпрощеннаяВыдача Тогда //больше движений быть не должно
		Возврат;
	КонецЕсли;
	
	Если (НЕ (ДокументСсылка.ПричинаСписания = Перечисления.ПричиныСписания.Увольнение 
		ИЛИ ДокументСсылка.ПричинаСписания = Перечисления.ПричиныСписания.ОкончаниеСрокаНоски
		ИЛИ ДокументСсылка.ПричинаСписания = Перечисления.ПричиныСписания.ОтменаНорм)) Тогда
		
		//по регистру "ПотребностьВыдачиСИЗ"
		ТаблицыДляДвижений.Вставить("ТаблицаПотребностьВыдачиСИЗ", ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуДвиженийПоПотребности(ДокументСсылка));
		
		//по регистру "ВыдачаПоПотребности"
		ТаблицыДляДвижений.Вставить("ТаблицаВыдачаПоПотребности", ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуДвиженийВыдачиПоПотребности(ДокументСсылка,ТаблицыДляДвижений.ТаблицаПотребностьВыдачиСИЗ,ТаблицыДляДвижений.ТаблицаВыданныеСредстваЗащиты));
		
	Иначе
		
		//по регистру "ВыдачаПоПотребности"
		ТаблицыДляДвижений.Вставить("ТаблицаВыдачаПоПотребности", ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуДвиженийВыдачиПоПотребности(ДокументСсылка,,ТаблицыДляДвижений.ТаблицаВыданныеСредстваЗащиты));
		
	КонецЕсли;
		
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МБ8") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"МБ8",
			"Форма МБ-8",
			СформироватьПечатнуюФормуМБ8(МассивОбъектов, ОбъектыПечати),,"Документ.СписаниеСредствЗащитыСотрудника.ПФ_MXL_МБ8");
				
	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПриложениеКЛичнойКарточке") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм, 
		"ПриложениеКЛичнойКарточке",
		"Приложение к оборотной стороне личной карточки",
		СформироватьПечатнуюФормуПриложенияКЛичнойКарточке(МассивОбъектов, ОбъектыПечати),,"Документ.СписаниеСредствЗащитыСотрудника.ПФ_MXL_ПриложениеКОборотнойСторонеЛичнойКарточки");
		
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьВозвратСИЗ(Списание,ВозвратСИЗ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВозвратСредствЗащитыОтСотрудника.Ссылка
	|ИЗ
	|	Документ.ВозвратСредствЗащитыОтСотрудника КАК ВозвратСредствЗащитыОтСотрудника
	|ГДЕ
	|	ВозвратСредствЗащитыОтСотрудника.ДокументОснование = &ДокументОснование
	|	И ВозвратСредствЗащитыОтСотрудника.Проведен = ИСТИНА
	|	И ВозвратСредствЗащитыОтСотрудника.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("ДокументОснование",Списание);
	Запрос.УстановитьПараметр("Ссылка",ВозвратСИЗ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Документы.ВозвратСредствЗащитыОтСотрудника.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьДокумент(ДанныеЗаполнения,Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("Сотрудник") Тогда
			Основание = ДанныеЗаполнения.Сотрудник;
		Иначе
			Возврат;
		КонецЕсли;
		
	Иначе
		
		Основание = ДанныеЗаполнения.Ссылка;
		
	КонецЕсли;
	
	Объект.Сотрудник 	= Основание;
	Объект.Организация 	= Основание.Владелец;	
	
	Если НЕ ЗначениеЗаполнено(Объект.ПричинаСписания) Тогда
	    Объект.ПричинаСписания 	= Перечисления.ПричиныСписания.Износ;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидВыдачиСИЗ) Тогда
	    Объект.ВидВыдачиСИЗ	= Перечисления.ВидыВыдачиСИЗ.ПерсональнаяВыдача;
	КонецЕсли;
	
	Если Объект.ВидВыдачиСИЗ = Перечисления.ВидыВыдачиСИЗ.ПроизвольнаяВыдача Тогда
		ЗапонитьДокументПоПроизвольнойВыдаче(Объект);
	ИначеЕсли Объект.ВидВыдачиСИЗ = Перечисления.ВидыВыдачиСИЗ.УпрощеннаяВыдача Тогда
		ЗапонитьДокументПоУпрощеннойВыдаче(Объект);
	Иначе
		АлгоритмФормированияПотребности = ПроцедурыРаботыСНормамиСервер.ПолучитьАлгоритмФормированияПотребности(Объект.Организация);
		Если АлгоритмФормированияПотребности = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Выполнить("Алгоритм_" + АлгоритмФормированияПотребности + "_Сервер.СписаниеСредствЗащитыСотрудника_ЗаполнитьТаблицуДокумента(Объект)");
	КонецЕсли;

	УточнитьЦеныПоДатеВыдачи(Объект);
	
	Если Объект.ПричинаСписания = Перечисления.ПричиныСписания.Износ 
		ИЛИ Объект.ПричинаСписания = Перечисления.ПричиныСписания.Брак Тогда
		Для Каждого СтрокаТовары Из Объект.Товары Цикл
			СтрокаТовары.Ключ = СтрокаТовары.НомерСтроки;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

Процедура УточнитьЦеныПоДатеВыдачи(ТекущийОбъект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦеныНоменклатуры.Период КАК Период,
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ЦеныНоменклатуры.МоментВремени КАК МоментВремени
	|ПОМЕСТИТЬ ВТ_ЦеныНоменклатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|ГДЕ
	|	ЦеныНоменклатуры.Активность
	|	И ЦеныНоменклатуры.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Период КАК НачалоПериода,
	|	МИНИМУМ(ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Период, &КонецПериода)) КАК КонецПериода,
	|	ВложенныйЗапрос.Цена КАК Цена
	|ПОМЕСТИТЬ ВТ_ПериодыЦен
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_ЦеныНоменклатуры.Период КАК Период,
	|		ВТ_ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|		ВТ_ЦеныНоменклатуры.Цена КАК Цена,
	|		ВТ_ЦеныНоменклатуры.МоментВремени КАК МоментВремени
	|	ИЗ
	|		ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
	|		ПО ВложенныйЗапрос.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
	|			И ВложенныйЗапрос.МоментВремени < ВТ_ЦеныНоменклатуры.МоментВремени
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Цена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НормаВыдачи КАК НормаВыдачи,
	|	ТаблицаДокумента.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаДокумента.ДатаВыдачи КАК ДатаВыдачи,
	|	ТаблицаДокумента.ПроцентИзноса КАК ПроцентИзноса,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.Ключ КАК Ключ
	|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДокумента.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ТаблицаДокумента.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаДокумента.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаДокумента.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ТаблицаДокумента.Количество КАК Количество,
	|	ВТ_ТаблицаДокумента.Ключ КАК Ключ,
	|	ЕСТЬNULL(ВТ_ПериодыЦен.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(ВТ_ПериодыЦен.Цена, 0) * ВТ_ТаблицаДокумента.Количество КАК Сумма,
	|	ВТ_ТаблицаДокумента.ПроцентИзноса КАК ПроцентИзноса
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыЦен КАК ВТ_ПериодыЦен
	|		ПО ВТ_ТаблицаДокумента.Номенклатура = ВТ_ПериодыЦен.Номенклатура
	|			И ВТ_ТаблицаДокумента.ДатаВыдачи <= ВТ_ПериодыЦен.КонецПериода
	|			И ВТ_ТаблицаДокумента.ДатаВыдачи > ВТ_ПериодыЦен.НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Результат.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_Результат.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_Результат.Номенклатура КАК Номенклатура,
	|	ВТ_Результат.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_Результат.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_Результат.Количество КАК Количество,
	|	ВТ_Результат.Ключ КАК Ключ,
	|	МАКСИМУМ(ВТ_Результат.Цена) КАК Цена,
	|	МАКСИМУМ(ВТ_Результат.Сумма) КАК Сумма,
	|	ВТ_Результат.ПроцентИзноса КАК ПроцентИзноса
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Результат.НормаВыдачи,
	|	ВТ_Результат.НоменклатураНормы,
	|	ВТ_Результат.Номенклатура,
	|	ВТ_Результат.ХарактеристикаНоменклатуры,
	|	ВТ_Результат.ДатаВыдачи,
	|	ВТ_Результат.Количество,
	|	ВТ_Результат.Ключ,
	|	ВТ_Результат.ПроцентИзноса";
	
	Запрос.УстановитьПараметр("КонецПериода",		ТекущийОбъект.Дата);
	Запрос.УстановитьПараметр("ТаблицаДокумента",	ТекущийОбъект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
	
	ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
	
КонецПроцедуры	

Процедура ЗапонитьДокументПоПроизвольнойВыдаче(ТекущийОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ ВТ_ЦеныНоменклатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ПериодРасчета, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы КАК НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОстатки.Номенклатура КАК Номенклатура,
	|	ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи КАК ДатаВыдачи,
	|	СУММА(ВыданныеСредстваЗащитыОстатки.КоличествоОстаток) КАК Количество,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) КАК Цена,
	|	СУММА(ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) * ВыданныеСредстваЗащитыОстатки.КоличествоОстаток) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ВыданныеСредстваЗащиты.Остатки(
	|			&ПериодРасчета,
	|			Организация = &Организация
	|				И Сотрудник = &Сотрудник
	|				И НормаВыдачи = ЗНАЧЕНИЕ(Справочник.НормыВыдачиСИЗ.ПустаяСсылка)) КАК ВыданныеСредстваЗащитыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
	|		ПО ВыданныеСредстваЗащитыОстатки.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
	|			И ВыданныеСредстваЗащитыОстатки.Номенклатура.Поставщик = ВТ_ЦеныНоменклатуры.Поставщик
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиНоскиПоУпрощеннойВыдаче КАК СрокиНоскиПоУпрощеннойВыдаче
	|		ПО ВыданныеСредстваЗащитыОстатки.Организация = СрокиНоскиПоУпрощеннойВыдаче.Организация
	|			И ВыданныеСредстваЗащитыОстатки.Сотрудник = СрокиНоскиПоУпрощеннойВыдаче.Сотрудник
	|			И ВыданныеСредстваЗащитыОстатки.НоменклатураНормы = СрокиНоскиПоУпрощеннойВыдаче.НоменклатураНормы
	|			И ВыданныеСредстваЗащитыОстатки.Номенклатура = СрокиНоскиПоУпрощеннойВыдаче.Номенклатура
	|			И ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры = СрокиНоскиПоУпрощеннойВыдаче.ХарактеристикаНоменклатуры
	|			И ВыданныеСредстваЗащитыОстатки.ДатаВыдачи = СрокиНоскиПоУпрощеннойВыдаче.ДатаВыдачи
	|ГДЕ
	|	СрокиНоскиПоУпрощеннойВыдаче.ПериодичностьВыдачи ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОстатки.Номенклатура,
	|	ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы.Наименование,
	|	ВыданныеСредстваЗащитыОстатки.Номенклатура.Наименование,
	|	ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры.КодSAP,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи";
	
	Запрос.УстановитьПараметр("Сотрудник",		ТекущийОбъект.Сотрудник);
	Запрос.УстановитьПараметр("ПериодРасчета",	ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка));
	Запрос.УстановитьПараметр("Организация",	ТекущийОбъект.Организация);
	
	ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
	
КонецПроцедуры

Процедура ЗапонитьДокументПоУпрощеннойВыдаче(ТекущийОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ ВТ_ЦеныНоменклатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ПериодРасчета, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы КАК НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОстатки.Номенклатура КАК Номенклатура,
	|	ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи КАК ДатаВыдачи,
	|	СУММА(ВыданныеСредстваЗащитыОстатки.КоличествоОстаток) КАК Количество,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) КАК Цена,
	|	СУММА(ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) * ВыданныеСредстваЗащитыОстатки.КоличествоОстаток) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ВыданныеСредстваЗащиты.Остатки(
	|			&ПериодРасчета,
	|			Организация = &Организация
	|				И Сотрудник = &Сотрудник
	|				И НормаВыдачи = ЗНАЧЕНИЕ(Справочник.НормыВыдачиСИЗ.ПустаяСсылка)) КАК ВыданныеСредстваЗащитыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
	|		ПО ВыданныеСредстваЗащитыОстатки.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
	|			И ВыданныеСредстваЗащитыОстатки.Номенклатура.Поставщик = ВТ_ЦеныНоменклатуры.Поставщик
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиНоскиПоУпрощеннойВыдаче КАК СрокиНоскиПоУпрощеннойВыдаче
	|		ПО ВыданныеСредстваЗащитыОстатки.Организация = СрокиНоскиПоУпрощеннойВыдаче.Организация
	|			И ВыданныеСредстваЗащитыОстатки.Сотрудник = СрокиНоскиПоУпрощеннойВыдаче.Сотрудник
	|			И ВыданныеСредстваЗащитыОстатки.НоменклатураНормы = СрокиНоскиПоУпрощеннойВыдаче.НоменклатураНормы
	|			И ВыданныеСредстваЗащитыОстатки.Номенклатура = СрокиНоскиПоУпрощеннойВыдаче.Номенклатура
	|			И ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры = СрокиНоскиПоУпрощеннойВыдаче.ХарактеристикаНоменклатуры
	|			И ВыданныеСредстваЗащитыОстатки.ДатаВыдачи = СрокиНоскиПоУпрощеннойВыдаче.ДатаВыдачи
	|ГДЕ
	|	НЕ СрокиНоскиПоУпрощеннойВыдаче.ПериодичностьВыдачи ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОстатки.Номенклатура,
	|	ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы.Наименование,
	|	ВыданныеСредстваЗащитыОстатки.Номенклатура.Наименование,
	|	ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры.КодSAP,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи";
	
	Запрос.УстановитьПараметр("Сотрудник",		ТекущийОбъект.Сотрудник);
	Запрос.УстановитьПараметр("ПериодРасчета",	ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка));
	Запрос.УстановитьПараметр("Организация",	ТекущийОбъект.Организация);
	
	ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуМБ8(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб        = Истина;
	ТабличныйДокумент.ПолеСверху         = 0;
	ТабличныйДокумент.ПолеСнизу          = 0;
	ТабличныйДокумент.ПолеСправа         = 0;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеСредствЗащитыСотрудника_МБ8";
	
	СисИнфо = Новый СистемнаяИнформация;
	Если ПустаяСтрока(СисИнфо.ИнформацияПрограммыПросмотра) Тогда 
		ТабличныйДокумент.ПолеСлева = 0;
	Иначе
		ТабличныйДокумент.ПолеСлева = 10;
	КонецЕсли;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеСредствЗащитыСотрудника.ПФ_MXL_МБ8");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("Период", 		ТекущаяДата());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатурныеНомераОрганизаций.Организация,
	|	НоменклатурныеНомераОрганизаций.Номенклатура,
	|	НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры,
	|	НоменклатурныеНомераОрганизаций.НоменклатурныйНомер
	|ПОМЕСТИТЬ ВТ_НоменклатурныеНомера
	|ИЗ
	|	РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НормыВыдачиСИЗСоставНормы.Ссылка,
	|	НормыВыдачиСИЗСоставНормы.НоменклатураНормы,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи.ТипПериода,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи.КоличествоПериодов
	|ПОМЕСТИТЬ ВТ_СоставНормВыдачи
	|ИЗ
	|	Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Организация,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение
	|ПОМЕСТИТЬ ВТ_ОсновноеМестоРаботы
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(&Период, ) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка КАК Регистратор,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка КАК Ссылка,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Номер КАК НомерДокумента,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Дата КАК ДатаСоставления,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Дата КАК ДатаДокумента,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	ВЫБОР
	|		КОГДА ВТ_ОсновноеМестоРаботы.Подразделение ЕСТЬ NULL 
	|			ТОГДА ""Не определено""
	|		ИНАЧЕ ВТ_ОсновноеМестоРаботы.Подразделение.НаименованиеПолное
	|	КОНЕЦ КАК ПредставлениеПодразделения,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.ПредседательКомиссии,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.ДолжностьПредседателя,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.ЧленКомиссии1,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Должность1,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.ЧленКомиссии2,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Должность2,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.ЧленКомиссии3,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Должность3,
	|	ВЫБОР
	|		КОГДА СписаниеСредствЗащитыСотрудникаТовары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СписаниеСредствЗащитыСотрудникаТовары.Номенклатура.Наименование
	|		ИНАЧЕ СписаниеСредствЗащитыСотрудникаТовары.Номенклатура.Наименование + "" ("" + СписаниеСредствЗащитыСотрудникаТовары.ХарактеристикаНоменклатуры.Наименование + "")""
	|	КОНЕЦ КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА СписаниеСредствЗащитыСотрудникаТовары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА СписаниеСредствЗащитыСотрудникаТовары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА СписаниеСредствЗащитыСотрудникаТовары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(ВТ_НоменклатурныеНомера.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	СписаниеСредствЗащитыСотрудникаТовары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	СписаниеСредствЗащитыСотрудникаТовары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	СписаниеСредствЗащитыСотрудникаТовары.ДатаВыдачи КАК ДатаВводаВЭксплуатацию,
	|	СписаниеСредствЗащитыСотрудникаТовары.Количество,
	|	СписаниеСредствЗащитыСотрудникаТовары.Сумма КАК СуммаПервоначальнойСтоимости,
	|	СписаниеСредствЗащитыСотрудникаТовары.Сумма КАК СуммаПогашеннойСтоимости,
	|	СписаниеСредствЗащитыСотрудникаТовары.Цена,
	|	ВТ_СоставНормВыдачи.ПериодичностьВыдачиТипПериода КАК ТипПериода,
	|	ВТ_СоставНормВыдачи.ПериодичностьВыдачиКоличествоПериодов КАК КоличествоПериодов,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Организация.ОКПО КАК ОрганизацияПоОКПО,
	|	ПРЕДСТАВЛЕНИЕ(СписаниеСредствЗащитыСотрудникаТовары.Ссылка.ПричинаСписания) КАК ПричинаСписания
	|ИЗ
	|	Документ.СписаниеСредствЗащитыСотрудника.Товары КАК СписаниеСредствЗащитыСотрудникаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновноеМестоРаботы КАК ВТ_ОсновноеМестоРаботы
	|		ПО СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Сотрудник = ВТ_ОсновноеМестоРаботы.Сотрудник
	|			И СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Организация = ВТ_ОсновноеМестоРаботы.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НоменклатурныеНомера КАК ВТ_НоменклатурныеНомера
	|		ПО СписаниеСредствЗащитыСотрудникаТовары.Номенклатура = ВТ_НоменклатурныеНомера.Номенклатура
	|			И СписаниеСредствЗащитыСотрудникаТовары.ХарактеристикаНоменклатуры = ВТ_НоменклатурныеНомера.ХарактеристикаНоменклатуры
	|			И СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Организация = ВТ_НоменклатурныеНомера.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоставНормВыдачи КАК ВТ_СоставНормВыдачи
	|		ПО СписаниеСредствЗащитыСотрудникаТовары.НормаВыдачи = ВТ_СоставНормВыдачи.Ссылка
	|			И СписаниеСредствЗащитыСотрудникаТовары.НоменклатураНормы = ВТ_СоставНормВыдачи.НоменклатураНормы
	|ГДЕ
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка В(&МассивОбъектов)";	

	ДокументыДляПечати = Запрос.Выполнить().Выбрать();

	ПервыйДокумент = Истина;

	Пока ДокументыДляПечати.СледующийПоЗначениюПоля("Регистратор") Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		ШапкаТаблицы     = Макет.ПолучитьОбласть("Шапка");
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		Итого            = Макет.ПолучитьОбласть("Итого");
		Подвал           = Макет.ПолучитьОбласть("Подвал");
		
		ШапкаТаблицы.Параметры.Заполнить(ДокументыДляПечати);
		ТабличныйДокумент.Вывести(ШапкаТаблицы);

		// Выводим заголовок таблицы
		ТабличныйДокумент.Вывести(ЗаголовокТаблицы);

		// Инициализация номера страницы
		НомерСтраницы = 1;

		// Инициализация итогов в документе
		ИтогоКоличество                   = 0;
		ИтогоСуммаПервоначальнойСтоимости = 0;
		ИтогоСуммаПогашеннойСтоимости     = 0;

		НомерСтроки = 0;

		// Выводим многострочную часть документа
		Строка = Макет.ПолучитьОбласть("Строка");
		ПоследняяСтрока = Макет.ПолучитьОбласть("ПоследняяСтрока");

		Пока ДокументыДляПечати.Следующий() Цикл

			НомерСтроки = НомерСтроки + 1;

			// Проверим, помещается ли строка с данными и последняя строка (или итоги) на странице.
			СтрокаТаблицы = Новый Массив;
			СтрокаТаблицы.Добавить(Строка);
			Если НЕ (НомерСтроки = ДокументыДляПечати.Количество()) Тогда
				СтрокаТаблицы.Добавить(ПоследняяСтрока);
			Иначе
				СтрокаТаблицы.Добавить(Итого);
			КонецЕсли;

			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, СтрокаТаблицы) Тогда

				НомерСтраницы = НомерСтраницы + 1;

				ТабличныйДокумент.Вывести(ПоследняяСтрока);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабличныйДокумент.Вывести(ЗаголовокТаблицы);

			КонецЕсли;

			Строка.Параметры.Заполнить(ДокументыДляПечати);

			Если ЗначениеЗаполнено(ДокументыДляПечати.ТипПериода) Тогда

				Если ДокументыДляПечати.ТипПериода = Перечисления.ДоступныеПериодыОтчета.Год Тогда
					КоличествоМесяцев = ДокументыДляПечати.КоличествоПериодов * 12;
				Иначе
					КоличествоМесяцев = ДокументыДляПечати.КоличествоПериодов;
				КонецЕсли;

				Строка.Параметры.СрокСлужбы = Строка(КоличествоМесяцев) + " мес.";
				
			Иначе
				
				Строка.Параметры.СрокСлужбы = "";

			КонецЕсли;
			
			МассивВывода = Новый Массив;
			МассивВывода.Вставить(0, Строка);
			МассивВывода.Вставить(1, Итого);
			
			Если Не ТабличныйДокумент.ПроверитьВывод(МассивВывода) Тогда 
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;

			ТабличныйДокумент.Вывести(Строка);

			ИтогоКоличество                   = ИтогоКоличество                   + Строка.Параметры.Количество;
			ИтогоСуммаПервоначальнойСтоимости = ИтогоСуммаПервоначальнойСтоимости + Строка.Параметры.СуммаПервоначальнойСтоимости;
			ИтогоСуммаПогашеннойСтоимости     = ИтогоСуммаПогашеннойСтоимости     + Строка.Параметры.СуммаПогашеннойСтоимости;

		КонецЦикла;

		// Выводим итоги по документу
		Итого.Параметры.ИтогоСуммаПервоначальнойСтоимости          = ИтогоСуммаПервоначальнойСтоимости;
		Итого.Параметры.ИтогоСуммаПогашеннойСтоимости              = ИтогоСуммаПогашеннойСтоимости;
		Итого.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(ИтогоКоличество, ,",,,,,,,,0");
		ТабличныйДокумент.Вывести(Итого);

		// Проверим, помещается ли подвал
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, Подвал) Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		// Выводим подвал
		Подвал.Параметры.Заполнить(ДокументыДляПечати);
		Подвал.Параметры.ПредседательКомиссии = ФизическиеЛица.ФамилияИнициалыФизЛица(ДокументыДляПечати.ПредседательКомиссии);
		Подвал.Параметры.ЧленКомиссии1 = ФизическиеЛица.ФамилияИнициалыФизЛица(ДокументыДляПечати.ЧленКомиссии1);
        Подвал.Параметры.ЧленКомиссии2 = ФизическиеЛица.ФамилияИнициалыФизЛица(ДокументыДляПечати.ЧленКомиссии2);
		Подвал.Параметры.ЧленКомиссии3 = ФизическиеЛица.ФамилияИнициалыФизЛица(ДокументыДляПечати.ЧленКомиссии3);

		ТабличныйДокумент.Вывести(Подвал);

		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДокументыДляПечати.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуПриложенияКЛичнойКарточке(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеСредствЗащитыСотрудника_ПриложениеКЛичнойКарточке";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВыданныеСредстваЗащитыОбороты.Организация КАК Организация,
	|	ВыданныеСредстваЗащитыОбороты.Сотрудник КАК Сотрудник,
	|	ВыданныеСредстваЗащитыОбороты.НормаВыдачи КАК НормаВыдачи,
	|	ВыданныеСредстваЗащитыОбороты.НоменклатураНормы КАК НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОбороты.Номенклатура КАК Номенклатура,
	|	ВыданныеСредстваЗащитыОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВыданныеСредстваЗащитыОбороты.ДатаВыдачи КАК ДатаВыдачи,
	|	МИНИМУМ(ВыданныеСредстваЗащитыОбороты.Регистратор) КАК ДокументВыдачи,
	|	СУММА(ВыданныеСредстваЗащитыОбороты.КоличествоПриход) КАК Количество
	|ПОМЕСТИТЬ ВТ_Выдача
	|ИЗ
	|	РегистрНакопления.ВыданныеСредстваЗащиты.Обороты(, , Регистратор, ) КАК ВыданныеСредстваЗащитыОбороты
	|ГДЕ
	|	НЕ ВыданныеСредстваЗащитыОбороты.КоличествоПриход = 0
	|	И НЕ ВыданныеСредстваЗащитыОбороты.Регистратор ССЫЛКА Документ.ЗачетВыданныхСредствЗащиты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыданныеСредстваЗащитыОбороты.Организация,
	|	ВыданныеСредстваЗащитыОбороты.Сотрудник,
	|	ВыданныеСредстваЗащитыОбороты.НормаВыдачи,
	|	ВыданныеСредстваЗащитыОбороты.НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОбороты.Номенклатура,
	|	ВыданныеСредстваЗащитыОбороты.ХарактеристикаНоменклатуры,
	|	ВыданныеСредстваЗащитыОбороты.ДатаВыдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СписаниеСредствЗащитыСотрудникаТовары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СписаниеСредствЗащитыСотрудникаТовары.Номенклатура.Наименование
	|		ИНАЧЕ СписаниеСредствЗащитыСотрудникаТовары.Номенклатура.Наименование + "" ("" + СписаниеСредствЗащитыСотрудникаТовары.ХарактеристикаНоменклатуры.Наименование + "")""
	|	КОНЕЦ КАК НоменклатураВыдачи,
	|	СписаниеСредствЗащитыСотрудникаТовары.ДатаВыдачи КАК ДатаВыдачи,
	|	СписаниеСредствЗащитыСотрудникаТовары.НормаВыдачи КАК НормаВыдачи,
	|	СписаниеСредствЗащитыСотрудникаТовары.НоменклатураНормы КАК НоменклатураНормы,
	|	ЕСТЬNULL(ВТ_Выдача.ДокументВыдачи, ВТ_Выдача_БезНорм.ДокументВыдачи) КАК ДокументВыдачи,
	|	СписаниеСредствЗащитыСотрудникаТовары.Номенклатура КАК Номенклатура,
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Дата КАК ДатаВозврата,
	|	СписаниеСредствЗащитыСотрудникаТовары.Количество КАК Возвращено,
	|	ВТ_Выдача.Количество КАК Количество,
	|	ЕСТЬNULL(ВТ_Выдача.ДокументВыдачи.Дата, ВТ_Выдача_БезНорм.ДокументВыдачи.Дата) КАК ДатаВыдачиРег
	|ПОМЕСТИТЬ ВТ_СписаниеИВыдача
	|ИЗ
	|	Документ.СписаниеСредствЗащитыСотрудника.Товары КАК СписаниеСредствЗащитыСотрудникаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Выдача КАК ВТ_Выдача
	|		ПО СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Организация = ВТ_Выдача.Организация
	|			И СписаниеСредствЗащитыСотрудникаТовары.НормаВыдачи = ВТ_Выдача.НормаВыдачи
	|			И СписаниеСредствЗащитыСотрудникаТовары.НоменклатураНормы = ВТ_Выдача.НоменклатураНормы
	|			И СписаниеСредствЗащитыСотрудникаТовары.Номенклатура = ВТ_Выдача.Номенклатура
	|			И СписаниеСредствЗащитыСотрудникаТовары.ХарактеристикаНоменклатуры = ВТ_Выдача.ХарактеристикаНоменклатуры
	|			И СписаниеСредствЗащитыСотрудникаТовары.ДатаВыдачи = ВТ_Выдача.ДатаВыдачи
	|			И СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Сотрудник = ВТ_Выдача.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Выдача КАК ВТ_Выдача_БезНорм
	|		ПО СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Организация = ВТ_Выдача_БезНорм.Организация
	|			И СписаниеСредствЗащитыСотрудникаТовары.Номенклатура = ВТ_Выдача_БезНорм.Номенклатура
	|			И СписаниеСредствЗащитыСотрудникаТовары.ХарактеристикаНоменклатуры = ВТ_Выдача_БезНорм.ХарактеристикаНоменклатуры
	|			И СписаниеСредствЗащитыСотрудникаТовары.ДатаВыдачи = ВТ_Выдача_БезНорм.ДатаВыдачи
	|			И СписаниеСредствЗащитыСотрудникаТовары.Ссылка.Сотрудник = ВТ_Выдача_БезНорм.Сотрудник
	|ГДЕ
	|	СписаниеСредствЗащитыСотрудникаТовары.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СписаниеСредствЗащитыСотрудника.Ссылка КАК Ссылка,
	|	СписаниеСредствЗащитыСотрудника.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	СписаниеСредствЗащитыСотрудника.Номер КАК Номер,
	|	СписаниеСредствЗащитыСотрудника.Дата КАК Дата,
	|	СписаниеСредствЗащитыСотрудника.Организация.Префикс КАК Префикс,
	|	СписаниеСредствЗащитыСотрудника.Сотрудник.Наименование КАК ПредставлениеСотрудника,
	|	СписаниеСредствЗащитыСотрудника.Сотрудник КАК СотрудникСсылка,
	|	СписаниеСредствЗащитыСотрудника.Сотрудник.ТабельныйНомер КАК ТабельныйНомер
	|ИЗ
	|	Документ.СписаниеСредствЗащитыСотрудника КАК СписаниеСредствЗащитыСотрудника
	|ГДЕ
	|	СписаниеСредствЗащитыСотрудника.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СписаниеИВыдача.Ссылка КАК Ссылка,
	|	ВТ_СписаниеИВыдача.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_СписаниеИВыдача.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_СписаниеИВыдача.НоменклатураВыдачи КАК НоменклатураВыдачи,
	|	ВТ_СписаниеИВыдача.Номенклатура КАК Номенклатура,
	|	ВТ_СписаниеИВыдача.ДатаВозврата КАК ДатаВозврата,
	|	ВТ_СписаниеИВыдача.Возвращено КАК Возвращено,
	|	ВТ_СписаниеИВыдача.Количество КАК Количество,
	|	ВТ_СписаниеИВыдача.ДатаВыдачиРег КАК ДатаВыдачиРег
	|ИЗ
	|	ВТ_СписаниеИВыдача КАК ВТ_СписаниеИВыдача
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВыдачи,
	|	НоменклатураВыдачи");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеСредствЗащитыСотрудника.ПФ_MXL_ПриложениеКОборотнойСторонеЛичнойКарточки");
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	ДанныеПечати 				= ПакетЗапросов[2].Выгрузить();
	ТаблицаЗапросаПоСписанным 	= ПакетЗапросов[3].Выгрузить();
	
	ПервыйДокумент = Истина;
	
	ЗапросПоЗанятымРабочимМестам = Новый Запрос;
	ЗапросПоЗанятымРабочимМестам.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗанятыеРабочиеМеста.Подразделение.Наименование + "" ("" + ЗанятыеРабочиеМеста.Подразделение.Код + "")"" КАК ПредставлениеПодразделения,
	|	ЗанятыеРабочиеМеста.Должность.Наименование + "" ("" + ЗанятыеРабочиеМеста.Должность.Код + "")"" КАК ПредставлениеДолжности,
	|	ЗанятыеРабочиеМеста.РабочееМесто.Наименование + "" ("" + ЗанятыеРабочиеМеста.РабочееМесто.Код + "")"" КАК ПредставлениеРабочегоМеста,
	|	МАКСИМУМ(ЗанятыеРабочиеМеста.Период) КАК ДатаПриема,
	|	ЗанятыеРабочиеМеста.Сотрудник.ТабельныйНомер КАК ТабельныйНомер,
	|	ЗанятыеРабочиеМеста.Сотрудник.Наименование КАК ПредставлениеСотрудника,
	|	ЗанятыеРабочиеМеста.Сотрудник КАК СотрудникСсылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗанятыеРабочиеМеста.Период КАК Период,
	|		ЗанятыеРабочиеМеста.Подразделение КАК Подразделение,
	|		ЗанятыеРабочиеМеста.Должность КАК Должность,
	|		ЗанятыеРабочиеМеста.РабочееМесто КАК РабочееМесто,
	|		ЗанятыеРабочиеМеста.Сотрудник КАК Сотрудник
	|	ИЗ
	|		РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(, Сотрудник В (&МассивСотрудников)) КАК ЗанятыеРабочиеМестаОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗанятыеРабочиеМеста КАК ЗанятыеРабочиеМеста
	|			ПО ЗанятыеРабочиеМестаОстатки.Подразделение = ЗанятыеРабочиеМеста.Подразделение
	|				И ЗанятыеРабочиеМестаОстатки.Должность = ЗанятыеРабочиеМеста.Должность
	|				И ЗанятыеРабочиеМестаОстатки.РабочееМесто = ЗанятыеРабочиеМеста.РабочееМесто
	|				И ЗанятыеРабочиеМестаОстатки.Сотрудник = ЗанятыеРабочиеМеста.Сотрудник
	|	ГДЕ
	|		ЗанятыеРабочиеМеста.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)) КАК ЗанятыеРабочиеМеста
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗанятыеРабочиеМеста.Подразделение.Наименование + "" ("" + ЗанятыеРабочиеМеста.Подразделение.Код + "")"",
	|	ЗанятыеРабочиеМеста.Должность.Наименование + "" ("" + ЗанятыеРабочиеМеста.Должность.Код + "")"",
	|	ЗанятыеРабочиеМеста.РабочееМесто.Наименование + "" ("" + ЗанятыеРабочиеМеста.РабочееМесто.Код + "")"",
	|	ЗанятыеРабочиеМеста.Сотрудник.ТабельныйНомер,
	|	ЗанятыеРабочиеМеста.Сотрудник.Наименование,
	|	ЗанятыеРабочиеМеста.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПриема";
	
	ЗапросПоЗанятымРабочимМестам.УстановитьПараметр("МассивСотрудников",ДанныеПечати.ВыгрузитьКолонку("СотрудникСсылка"));
	
	ТаблицаЗапросаПоПодразделениям = ЗапросПоЗанятымРабочимМестам.Выполнить().Выгрузить();
	
	Для Каждого СтрокаДанныхДляПечати Из ДанныеПечати Цикл
		
		СтрокиПоПодразделениям 	= ТаблицаЗапросаПоПодразделениям.НайтиСтроки(Новый Структура("СотрудникСсылка", СтрокаДанныхДляПечати.СотрудникСсылка));
		СтрокиПоСписанию 		= ТаблицаЗапросаПоСписанным.НайтиСтроки(Новый Структура("Ссылка", СтрокаДанныхДляПечати.Ссылка));
		
		Если (СтрокиПоПодразделениям.Количество() = 0 И СтрокиПоСписанию.Количество() = 0) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(СтрокаДанныхДляПечати);
		
		Область.Параметры.ПредставлениеЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата, Префикс", СтрокаДанныхДляПечати.Номер, СтрокаДанныхДляПечати.Дата, СтрокаДанныхДляПечати.Префикс), "Приложение к оборотной стороне личной карточки");
		ТабличныйДокумент.Вывести(Область);
		
		СчетСтрок = 1;
		Для Каждого СтрокаПоПодразделениям Из СтрокиПоПодразделениям Цикл
			
			Если Не ЗначениеЗаполнено(СтрокаПоПодразделениям.ДатаПриема) Тогда
				Продолжить;
			КонецЕсли;
			
			Область = Макет.ПолучитьОбласть("СтрокаЗРМ");
			Область.Параметры.НомерПоПорядку = СчетСтрок;
			Область.Параметры.Заполнить(СтрокаПоПодразделениям);
			ТабличныйДокумент.Вывести(Область);
			
			СчетСтрок = СчетСтрок + 1;
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Сотрудник");
		Область.Параметры.Заполнить(СтрокаДанныхДляПечати);
		ТабличныйДокумент.Вывести(Область);
		
		ВыведенаСписаноШапка = Ложь;
		
		Для Каждого СтрокаПоСписанию Из СтрокиПоСписанию Цикл
			
			Если НЕ ВыведенаСписаноШапка Тогда
				Область = Макет.ПолучитьОбласть("ШапкаТЧ");
				ТабличныйДокумент.Вывести(Область);
				ВыведенаСписаноШапка = Истина;
			КонецЕсли;
			
			Область = Макет.ПолучитьОбласть("СтрокаТЧ");
			Область.Параметры.Заполнить(СтрокаПоСписанию);
			Область.Параметры.СертификатСоответствия = ПроцедурыРаботыСНормамиСервер.ПолучитьНомерСертификатаНоменклатуры(СтрокаПоСписанию.Номенклатура,СтрокаПоСписанию.ДатаВыдачиРег);
			ТабличныйДокумент.Вывести(Область);
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, СтрокаДанныхДляПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//МБ-8
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.СписаниеСредствЗащитыСотрудника";
	КомандаПечати.Идентификатор = "МБ8";
	КомандаПечати.Представление = НСтр("ru = 'Форма МБ-8'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//Приложение к оборотной стороне личной карточки
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.СписаниеСредствЗащитыСотрудника";
	КомандаПечати.Идентификатор = "ПриложениеКЛичнойКарточке";
	КомандаПечати.Представление = НСтр("ru = 'Приложение к оборотной стороне личной карточки'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

//+++АСТБ_Горюшин_Алексей_20510
Процедура ЗапонитьДокументОстаткамиСИЗ(ТекущийОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ ВТ_ЦеныНоменклатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ПериодРасчета, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы КАК НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОстатки.Номенклатура КАК Номенклатура,
	|	ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи КАК ДатаВыдачи,
	|	СУММА(ВыданныеСредстваЗащитыОстатки.КоличествоОстаток) КАК Количество,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) КАК Цена,
	|	СУММА(ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) * ВыданныеСредстваЗащитыОстатки.КоличествоОстаток) КАК Сумма,
	|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи КАК НормаВыдачи
	|ИЗ
	|	РегистрНакопления.ВыданныеСредстваЗащиты.Остатки(
	|			&ПериодРасчета,
	|			Организация = &Организация
	|				И Сотрудник = &Сотрудник) КАК ВыданныеСредстваЗащитыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
	|		ПО ВыданныеСредстваЗащитыОстатки.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
	|			И ВыданныеСредстваЗащитыОстатки.Номенклатура.Поставщик = ВТ_ЦеныНоменклатуры.Поставщик
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОстатки.Номенклатура,
	|	ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0),
	|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи,
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы.Наименование,
	|	ВыданныеСредстваЗащитыОстатки.Номенклатура.Наименование,
	|	ВыданныеСредстваЗащитыОстатки.ХарактеристикаНоменклатуры.КодSAP,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи";
	
	Запрос.УстановитьПараметр("Сотрудник",		ТекущийОбъект.Сотрудник);
	Запрос.УстановитьПараметр("ПериодРасчета",	ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка));
	Запрос.УстановитьПараметр("Организация",	ТекущийОбъект.Организация);
	
	ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_20510

#КонецЕсли