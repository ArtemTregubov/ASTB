#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ 
	|	УстановкаУсловийРаботыСотрудникаУсловияРаботы.Ссылка.Дата КАК Период,
	|	УстановкаУсловийРаботыСотрудникаУсловияРаботы.Ссылка.Сотрудник,
	|	УстановкаУсловийРаботыСотрудникаУсловияРаботы.Подразделение,
	|	УстановкаУсловийРаботыСотрудникаУсловияРаботы.Должность,
	|	УстановкаУсловийРаботыСотрудникаУсловияРаботы.РабочееМесто,
	|	УстановкаУсловийРаботыСотрудникаУсловияРаботы.Условие,
	|	УстановкаУсловийРаботыСотрудникаУсловияРаботы.Использовать
	|ИЗ
	|	Документ.УстановкаУсловийРаботыСотрудника.УсловияРаботы КАК УстановкаУсловийРаботыСотрудникаУсловияРаботы
	|ГДЕ
	|	УстановкаУсловийРаботыСотрудникаУсловияРаботы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	//по регистру "Доступные условия работы сотрудника"
	ТаблицыДляДвижений.Вставить("ТаблицаДоступныеУсловияРаботыСотрудника", Запрос.Выполнить().Выгрузить());
	
	//готовим пустую таблицу движений по регистру "Выдача по потребности"
	ТаблицаВыдачаПоПотребности = ДокументСсылка.ПолучитьОбъект().Движения.ВыдачаПоПотребности.Выгрузить().Скопировать(,"Период,ВидДвижения,Организация,Сотрудник,НормаВыдачи,НоменклатураНормы,ДатаПотребности,ДатаВыдачи,ПроцентИзноса,Количество");
	
	//по регистру "ПотребностьВыдачиСИЗ"
	ТаблицыДляДвижений.Вставить("ТаблицаПотребностьВыдачиСИЗ", ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуДвиженийПоПотребности(ДокументСсылка,,ТаблицаВыдачаПоПотребности));
	
	//по регистру "ВыдачаПоПотребности"
	ТаблицыДляДвижений.Вставить("ТаблицаВыдачаПоПотребности", ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуДвиженийВыдачиПоПотребности(ДокументСсылка,ТаблицыДляДвижений.ТаблицаПотребностьВыдачиСИЗ,,ТаблицаВыдачаПоПотребности));
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧасть(ТекущийОбъект) Экспорт	
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивСотрудников = Новый Массив;
	МассивСотрудников.Добавить(ТекущийОбъект.Сотрудник);
	
	ТаблицаУсловий = ПолучитьУсловияРаботыСотрудников(МассивСотрудников,ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка));
	
	ТекущийОбъект.УсловияРаботы.Загрузить(ТаблицаУсловий);
	
КонецПроцедуры

Функция ПолучитьУсловияРаботыСотрудников(МассивСотрудников,Период) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Подразделение,
	//|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Должность,
	//|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.РабочееМесто,
	//|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Условие,
	//|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Использовать
	//|ПОМЕСТИТЬ ВТ_ДоступныеУсловияРаботы
	//|ИЗ
	//|	РегистрСведений.ДоступныеУсловияРаботыСотрудника.СрезПоследних(&Период, Сотрудник = &Сотрудник) КАК ДоступныеУсловияРаботыСотрудникаСрезПоследних
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ЗанятыеРабочиеМестаОстатки.Подразделение,
	//|	ЗанятыеРабочиеМестаОстатки.Должность,
	//|	ЗанятыеРабочиеМестаОстатки.РабочееМесто
	//|ПОМЕСТИТЬ ВТ_ЗанятыеРабочиеМеста
	//|ИЗ
	//|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&Период, Сотрудник = &Сотрудник) КАК ЗанятыеРабочиеМестаОстатки
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	УстановленныеНормыВыдачиСИЗСрезПоследних.Подразделение,
	//|	УстановленныеНормыВыдачиСИЗСрезПоследних.Должность,
	//|	УстановленныеНормыВыдачиСИЗСрезПоследних.РабочееМесто,
	//|	УстановленныеНормыВыдачиСИЗСрезПоследних.УсловиеНормы
	//|ПОМЕСТИТЬ ВТ_УстановленныеНормы
	//|ИЗ
	//|	РегистрСведений.УстановленныеНормыВыдачиСИЗ.СрезПоследних(&Период, Организация = &Организация) КАК УстановленныеНормыВыдачиСИЗСрезПоследних
	//|ГДЕ
	//|	УстановленныеНормыВыдачиСИЗСрезПоследних.Использовать
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ВТ_ЗанятыеРабочиеМеста.Подразделение,
	//|	ВТ_ЗанятыеРабочиеМеста.Должность,
	//|	ВТ_ЗанятыеРабочиеМеста.РабочееМесто,
	//|	ВТ_УстановленныеНормы.УсловиеНормы
	//|ПОМЕСТИТЬ ВТ_ЗанятыеРабочиеМестаСУсловиями
	//|ИЗ
	//|	ВТ_ЗанятыеРабочиеМеста КАК ВТ_ЗанятыеРабочиеМеста
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УстановленныеНормы КАК ВТ_УстановленныеНормы
	//|		ПО (ВТ_ЗанятыеРабочиеМеста.Подразделение = ВТ_УстановленныеНормы.Подразделение
	//|				ИЛИ ВТ_УстановленныеНормы.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	//|			И (ВТ_ЗанятыеРабочиеМеста.Должность = ВТ_УстановленныеНормы.Должность
	//|				ИЛИ ВТ_УстановленныеНормы.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
	//|			И (ВТ_ЗанятыеРабочиеМеста.РабочееМесто = ВТ_УстановленныеНормы.РабочееМесто
	//|				ИЛИ ВТ_УстановленныеНормы.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
	//|ГДЕ
	//|	НЕ ВТ_УстановленныеНормы.УсловиеНормы ЕСТЬ NULL 
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ВТ_ЗанятыеРабочиеМестаСУсловиями.Подразделение,
	//|	ВТ_ЗанятыеРабочиеМестаСУсловиями.Должность,
	//|	ВТ_ЗанятыеРабочиеМестаСУсловиями.РабочееМесто,
	//|	ВТ_ЗанятыеРабочиеМестаСУсловиями.УсловиеНормы КАК Условие,
	//|	ЕСТЬNULL(ВТ_ДоступныеУсловияРаботы.Использовать, ИСТИНА) КАК Использовать
	//|ИЗ
	//|	ВТ_ЗанятыеРабочиеМестаСУсловиями КАК ВТ_ЗанятыеРабочиеМестаСУсловиями
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоступныеУсловияРаботы КАК ВТ_ДоступныеУсловияРаботы
	//|		ПО ВТ_ЗанятыеРабочиеМестаСУсловиями.Подразделение = ВТ_ДоступныеУсловияРаботы.Подразделение
	//|			И ВТ_ЗанятыеРабочиеМестаСУсловиями.Должность = ВТ_ДоступныеУсловияРаботы.Должность
	//|			И ВТ_ЗанятыеРабочиеМестаСУсловиями.РабочееМесто = ВТ_ДоступныеУсловияРаботы.РабочееМесто
	//|			И ВТ_ЗанятыеРабочиеМестаСУсловиями.УсловиеНормы = ВТ_ДоступныеУсловияРаботы.Условие";
	
	//Запрос.УстановитьПараметр("Организация",ТекущийОбъект.Организация);
	
	"ВЫБРАТЬ
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Подразделение КАК Подразделение,
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Должность КАК Должность,
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Условие КАК Условие,
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Использовать КАК Использовать
	|ИЗ
	|	РегистрСведений.ДоступныеУсловияРаботыСотрудника.СрезПоследних(&Период, Сотрудник В (&МассивСотрудников)) КАК ДоступныеУсловияРаботыСотрудникаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&Период, Сотрудник В (&МассивСотрудников)) КАК ЗанятыеРабочиеМестаОстатки
	|		ПО ДоступныеУсловияРаботыСотрудникаСрезПоследних.Подразделение = ЗанятыеРабочиеМестаОстатки.Подразделение
	|			И ДоступныеУсловияРаботыСотрудникаСрезПоследних.Должность = ЗанятыеРабочиеМестаОстатки.Должность
	|			И ДоступныеУсловияРаботыСотрудникаСрезПоследних.РабочееМесто = ЗанятыеРабочиеМестаОстатки.РабочееМесто
	|			И ДоступныеУсловияРаботыСотрудникаСрезПоследних.Сотрудник = ЗанятыеРабочиеМестаОстатки.Сотрудник
	|ГДЕ
	|	НЕ ЗанятыеРабочиеМестаОстатки.Сотрудник ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Период",		Период);
	Запрос.УстановитьПараметр("МассивСотрудников",	МассивСотрудников);
	
	РезультатЗапроса = Запрос.Выполнить();	
	ТаблицаУсловий   = РезультатЗапроса.Выгрузить();
	
	Возврат ТаблицаУсловий;
	
КонецФункции // ПолучитьУсловияРаботыСотрудников()
	
#КонецЕсли