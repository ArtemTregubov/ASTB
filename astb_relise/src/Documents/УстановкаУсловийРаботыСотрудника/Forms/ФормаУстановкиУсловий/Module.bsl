//***НСК Трегубов А.А.*** -- №90515  --  28.06.2021

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация 	  = Параметры.Организация;
	ДокументОснование = Параметры.ДокументОснование;
	ВидВыдачиСИЗ      = Параметры.ВидВыдачиСИЗ;
	
	НеВыводитьУсловиеВсегда		 = Истина;
	НеВыводитьУсловиеВсегдаЗимой = Истина;
	
	СписокСотрудников.ЗагрузитьЗначения(Параметры.МассивСотрудников);
		
	СформироватьДеревоУсловий();		
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьКартинкиВДереве();
	РазвернутьДеревоОдногоУзла();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьДокументы(Команда)
	
	СоответствиеСозданныхДокументов = СформироватьДокументыНаСервере();
	Если СоответствиеСозданныхДокументов.Количество() <> 0 Тогда
		
		Закрыть(СоответствиеСозданныхДокументов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьУзел(Команда)
	
	ТекущиеДанные = Элементы.ДеревоУсловий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	СтандартныеПодсистемыКлиент.РазвернутьУзлыДерева(ЭтаФорма,"ДеревоУсловий",ТекущиеДанные.ПолучитьИдентификатор(),Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьУзел(Команда)
	
	ТекущиеДанные = Элементы.ДеревоУсловий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Элементы.ДеревоУсловий.Свернуть(ТекущиеДанные.ПолучитьИдентификатор());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВидВыдачиПриИзменении(Элемент)

	СформироватьДеревоУсловий();
	УстановитьКартинкиВДереве();
	РазвернутьДеревоОдногоУзла();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоУсловийПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоУсловий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ЭтоУзелСУсловием Тогда 
		
		СтруктураПоиска = Новый Структура("Сотрудник,Условие",ТекущиеДанные.Сотрудник,ТекущиеДанные.СотрудникГруппаУсловияУсловие);
		
		МассивНайденныхСтрок = ТаблицаУсловий.НайтиСтроки(СтруктураПоиска);
		Для Каждого НайденнаяСтрока из МассивНайденныхСтрок Цикл
			
			НайденнаяСтрока.ИспользоватьПосле = ТекущиеДанные.Использовать;			
			НайденнаяСтрока.УсловиеМодицифировано = (НайденнаяСтрока.ИспользоватьДо <> НайденнаяСтрока.ИспользоватьПосле);
			
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьКартинкиВДеревеПоСтроке(ТекущиеДанные);	

КонецПроцедуры

&НаКлиенте
Процедура НеВыводитьУсловиеВсегдаПриИзменении(Элемент)
	
	СформироватьДеревоУсловий();
	УстановитьКартинкиВДереве();
	РазвернутьДеревоОдногоУзла();
	
КонецПроцедуры

&НаКлиенте
Процедура НеВыводитьУсловиеВсегдаВЗимнееВремяПриИзменении(Элемент)
	
	СформироватьДеревоУсловий();
	УстановитьКартинкиВДереве();
	РазвернутьДеревоОдногоУзла();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьДеревоУсловий()
	
	ОбъектДерева = РеквизитФормыВЗначение("ДеревоУсловий");
	ОбъектДерева.Строки.Очистить();
	
	МассивСотрудников = СписокСотрудников.ВыгрузитьЗначения();
	
	ТаблицаУстановленныхУсловий = Документы.УстановкаУсловийРаботыСотрудника.ПолучитьУсловияРаботыСотрудников(МассивСотрудников,ДокументОснование.Дата);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТ_ТаблицаУстановленныхУсловий.Сотрудник КАК Справочник.Сотрудники) КАК Сотрудник,
	|	ВТ_ТаблицаУстановленныхУсловий.Подразделение КАК Подразделение,
	|	ВТ_ТаблицаУстановленныхУсловий.Должность КАК Должность,
	|	ВЫРАЗИТЬ(ВТ_ТаблицаУстановленныхУсловий.Условие КАК Справочник.УсловияНорм) КАК Условие,
	|	ВТ_ТаблицаУстановленныхУсловий.РабочееМесто КАК РабочееМесто,
	|	ВТ_ТаблицаУстановленныхУсловий.Использовать КАК Использовать
	|ПОМЕСТИТЬ ВТ_УстановленныеУсловия
	|ИЗ
	|	&ТаблицаУстановленныхУсловий КАК ВТ_ТаблицаУстановленныхУсловий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_УстановленныеУсловия.Сотрудник КАК Сотрудник,
	|	ВТ_УстановленныеУсловия.Условие КАК Условие,
	|	ВТ_УстановленныеУсловия.Использовать КАК Использовать
	|ПОМЕСТИТЬ ВТ_Свод
	|ИЗ
	|	ВТ_УстановленныеУсловия КАК ВТ_УстановленныеУсловия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УстановленныеНормыВыдачиСИЗ.СрезПоследних(
	|				&ПериодРасчета,
	|				Организация = &Организация
	|					И ВЫБОР
	|						КОГДА &ВидВыдачиСИЗ = ЗНАЧЕНИЕ(Перечисление.ВидыВыдачиСИЗ.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ НормаВыдачи.ВидВыдачиСИЗ = &ВидВыдачиСИЗ
	|					КОНЕЦ
	|					И (Должность, РабочееМесто) В
	|						(ВЫБРАТЬ
	|							ВТ_УстановленныеУсловия.Должность,
	|							ВТ_УстановленныеУсловия.РабочееМесто
	|						ИЗ
	|							ВТ_УстановленныеУсловия КАК ВТ_УстановленныеУсловия)) КАК УстановленныеНормыВыдачиСИЗСрезПоследних
	|		ПО (ВЫБОР
	|				КОГДА УстановленныеНормыВыдачиСИЗСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ УстановленныеНормыВыдачиСИЗСрезПоследних.Подразделение = ВТ_УстановленныеУсловия.Подразделение
	|			КОНЕЦ)
	|			И ВТ_УстановленныеУсловия.Должность = УстановленныеНормыВыдачиСИЗСрезПоследних.Должность
	|			И ВТ_УстановленныеУсловия.РабочееМесто = УстановленныеНормыВыдачиСИЗСрезПоследних.РабочееМесто
	|			И ВТ_УстановленныеУсловия.Условие = УстановленныеНормыВыдачиСИЗСрезПоследних.УсловиеНормы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &НеВыводитьУсловиеВсегда
	|				ТОГДА ВТ_УстановленныеУсловия.Условие.ТипУсловия <> ЗНАЧЕНИЕ(Перечисление.ТипыУсловийНорм.Всегда)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &НеВыводитьУсловиеВсегдаЗимой
	|				ТОГДА ВТ_УстановленныеУсловия.Условие.ТипУсловия <> ЗНАЧЕНИЕ(Перечисление.ТипыУсловийНорм.ЗимойДополнительно)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Свод.Сотрудник КАК Сотрудник,
	|	ВТ_Свод.Условие КАК Условие,
	|	ВТ_Свод.Использовать КАК ИспользоватьДо
	|ИЗ
	|	ВТ_Свод КАК ВТ_Свод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Свод.Сотрудник КАК Сотрудник,
	|	ВТ_Свод.Условие КАК Условие,
	|	ВТ_Свод.Использовать КАК Использовать,
	|	ВТ_Свод.Условие.ГруппаУсловия КАК ГруппаУсловия
	|ИЗ
	|	ВТ_Свод КАК ВТ_Свод
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Свод.Сотрудник.Наименование,
	|	ВТ_Свод.Условие.Наименование
	|ИТОГИ ПО
	|	Сотрудник,
	|	ГруппаУсловия";
	
	Запрос.УстановитьПараметр("ТаблицаУстановленныхУсловий",ТаблицаУстановленныхУсловий);
	Запрос.УстановитьПараметр("ВидВыдачиСИЗ",ВидВыдачиСИЗ);
	Запрос.УстановитьПараметр("ПериодРасчета",ДокументОснование.Дата);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("НеВыводитьУсловиеВсегда",НеВыводитьУсловиеВсегда);
	Запрос.УстановитьПараметр("НеВыводитьУсловиеВсегдаЗимой",НеВыводитьУсловиеВсегдаЗимой);

	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаУсловий.Загрузить(РезультатЗапроса[2].Выгрузить());
	
	ВыборкаСотрудник = РезультатЗапроса[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
	Пока ВыборкаСотрудник.Следующий() Цикл
		
		Узел1 = ОбъектДерева.Строки.Добавить();
		Узел1.СотрудникГруппаУсловияУсловие = ВыборкаСотрудник.Сотрудник;
		Узел1.КорневойУзел = Истина;
		
		ВыборкаГруппаУсловия = ВыборкаСотрудник.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
		Пока ВыборкаГруппаУсловия.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ВыборкаГруппаУсловия.ГруппаУсловия) Тогда 
				
				Узел2 = Узел1.Строки.Добавить();
				Узел2.СотрудникГруппаУсловияУсловие = ВыборкаГруппаУсловия.ГруппаУсловия;
				
			Иначе
				Узел2 = Узел1;
			КонецЕсли;
	
			Выборка = ВыборкаГруппаУсловия.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Узел3 = Узел2.Строки.Добавить();
				Узел3.СотрудникГруппаУсловияУсловие = Выборка.Условие;
				Узел3.Сотрудник = Выборка.Сотрудник;
				Узел3.Использовать = Выборка.Использовать;
				Узел3.ЭтоУзелСУсловием = Истина;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
		
	ЗначениеВРеквизитФормы(ОбъектДерева,"ДеревоУсловий");

КонецПроцедуры

&НаКлиенте
Процедура УстановитьКартинкиВДеревеПоСтроке(СтрокаДерева) 
	
	Если ТипЗнч(СтрокаДерева.СотрудникГруппаУсловияУсловие) = Тип("СправочникСсылка.УсловияНорм") Тогда 
		
		Узел2 = СтрокаДерева.ПолучитьРодителя();
		Если ТипЗнч(Узел2.СотрудникГруппаУсловияУсловие) = Тип("СправочникСсылка.ГруппыУсловийНорм") Тогда 
			
			//Уровень с сотрудником
			Узел1 = Узел2.ПолучитьРодителя();
		Иначе
			Узел1 = Узел2;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(СтрокаДерева.СотрудникГруппаУсловияУсловие) = Тип("СправочникСсылка.ГруппыУсловийНорм") Тогда
		
		//Уровень с сотрудником
		Узел1 = СтрокаДерева.ПолучитьРодителя();
		
	Иначе
		
		//Уровень с сотрудником
		Узел1 = СтрокаДерева;
		
	КонецЕсли;
	
	//если неверно распарсили
	Если ТипЗнч(Узел1.СотрудникГруппаУсловияУсловие) <> Тип("СправочникСсылка.Сотрудники") Тогда 
		Возврат;
	КонецЕсли;
		
	ЕстьУзлыСНесколькимиВключеннымиУсловиями = Ложь;
	ЕстьУзлыСГруппойУсловий = Ложь;
	
	Узел2 = Узел1.ПолучитьЭлементы();	
	Для Каждого ЭлементУзла2 из Узел2 Цикл 
		
		Если ТипЗнч(ЭлементУзла2.СотрудникГруппаУсловияУсловие) = Тип("СправочникСсылка.ГруппыУсловийНорм") Тогда 
			
			ЕстьУзлыСГруппойУсловий = Истина;
			КоличествоВключенныхУсловийУзла = 0;
						
			Узел3 = ЭлементУзла2.ПолучитьЭлементы();
			Для Каждого ЭлементУзла3 из Узел3 Цикл 				
				
				ЭлементУзла3.ИндексКартинки = 32;
				
				КоличествоВключенныхУсловийУзла = КоличествоВключенныхУсловийУзла + ?(ЭлементУзла3.Использовать,1,0);
				
			КонецЦикла;
			
			Если КоличествоВключенныхУсловийУзла > 1 Тогда
				
				ЕстьУзлыСНесколькимиВключеннымиУсловиями = Истина;
				
				ЭлементУзла2.ИндексКартинки = 0;
			Иначе
				ЭлементУзла2.ИндексКартинки = 5;
			КонецЕсли;

			
		Иначе
			
			//это узел с условием
			ЭлементУзла2.ИндексКартинки = 32;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьУзлыСНесколькимиВключеннымиУсловиями Тогда 
		Узел1.ИндексКартинки = 6;
	ИначеЕсли ЕстьУзлыСГруппойУсловий Тогда 
		Узел1.ИндексКартинки = 5;
	иначе
		Узел1.ИндексКартинки = 3;			
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьКартинкиВДереве()

	Для Каждого ЭлементДерева из ДеревоУсловий.ПолучитьЭлементы() Цикл 		
		УстановитьКартинкиВДеревеПоСтроке(ЭлементДерева);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоОдногоУзла()
	
	ЭлементыКорневогоУзла = ДеревоУсловий.ПолучитьЭлементы();
	Если ЭлементыКорневогоУзла.Количество() = 1 Тогда
		
		СтандартныеПодсистемыКлиент.РазвернутьУзлыДерева(ЭтаФорма,"ДеревоУсловий",ЭлементыКорневогоУзла[0].ПолучитьИдентификатор(),Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьДокументыНаСервере()
	
	СоответствиеСозданныхДокументов = Новый Соответствие;
	
	Попытка
		
		МассивСотрудников = СписокСотрудников.ВыгрузитьЗначения();		
		ТаблицаВсехУсловий = Документы.УстановкаУсловийРаботыСотрудника.ПолучитьУсловияРаботыСотрудников(МассивСотрудников,ДокументОснование.Дата);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаИзмененныхУсловий.Сотрудник КАК Сотрудник,
		|	ТаблицаИзмененныхУсловий.Условие КАК Условие,
		|	ТаблицаИзмененныхУсловий.ИспользоватьПосле КАК Использовать,
		|	ТаблицаИзмененныхУсловий.УсловиеМодицифировано КАК УсловиеМодифицировано
		|ПОМЕСТИТЬ ВТ_ТалицаУсловийОбработки
		|ИЗ
		|	&ТаблицаИзмененныхУсловий КАК ТаблицаИзмененныхУсловий
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ТаблицаИзмененныхУсловий.Сотрудник КАК Сотрудник,
		|	ВТ_ТаблицаИзмененныхУсловий.Условие КАК Условие,
		|	ВТ_ТаблицаИзмененныхУсловий.Использовать КАК Использовать,
		|	ВТ_ТаблицаИзмененныхУсловий.УсловиеМодифицировано КАК УсловиеМодифицировано
		|ПОМЕСТИТЬ ВТ_МодифицированныеУсловия
		|ИЗ
		|	ВТ_ТалицаУсловийОбработки КАК ВТ_ТаблицаИзмененныхУсловий
		|ГДЕ
		|	ВТ_ТаблицаИзмененныхУсловий.УсловиеМодифицировано
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаВсехУсловий.Сотрудник КАК Сотрудник,
		|	ТаблицаВсехУсловий.Подразделение КАК Подразделение,
		|	ТаблицаВсехУсловий.Должность КАК Должность,
		|	ТаблицаВсехУсловий.Условие КАК Условие,
		|	ТаблицаВсехУсловий.РабочееМесто КАК РабочееМесто
		|ПОМЕСТИТЬ ВТ_ВсеУсловия
		|ИЗ
		|	&ТаблицаВсехУсловий КАК ТаблицаВсехУсловий
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаВсехУсловий.Сотрудник КАК Сотрудник,
		|	ВТ_ТаблицаВсехУсловий.Подразделение КАК Подразделение,
		|	ВТ_ТаблицаВсехУсловий.Должность КАК Должность,
		|	ВТ_ТаблицаВсехУсловий.Условие КАК Условие,
		|	ВТ_ТаблицаВсехУсловий.РабочееМесто КАК РабочееМесто,
		|	ВТ_МодифицированныеУсловия.Использовать КАК Использовать
		|ИЗ
		|	ВТ_МодифицированныеУсловия КАК ВТ_МодифицированныеУсловия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеУсловия КАК ВТ_ТаблицаВсехУсловий
		|		ПО ВТ_МодифицированныеУсловия.Сотрудник = ВТ_ТаблицаВсехУсловий.Сотрудник
		|			И ВТ_МодифицированныеУсловия.Условие = ВТ_ТаблицаВсехУсловий.Условие
		|ИТОГИ ПО
		|	Сотрудник";
		
		Запрос.УстановитьПараметр("ТаблицаИзмененныхУсловий",ТаблицаУсловий.Выгрузить());
		Запрос.УстановитьПараметр("ТаблицаВсехУсловий",ТаблицаВсехУсловий);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаСотрудник = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСотрудник.Следующий() Цикл 
			
			НачатьТранзакцию();
			
			ДокументОбъект = Документы.УстановкаУсловийРаботыСотрудника.СоздатьДокумент();
			ДокументОбъект.Дата = ДокументОснование.Дата - 1;
			ДокументОбъект.ДокументОснование = ДокументОснование;
			ДокументОбъект.Организация = Организация;
			ДокументОбъект.Сотрудник = ВыборкаСотрудник.Сотрудник;
			ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
			ДокументОбъект.СоздательДокумента = Пользователи.ТекущийПользователь();
			ДокументОбъект.Комментарий = "#Создан на основании выдачи №" + ДокументОснование.Номер + " от " + ДокументОснование.Дата; 
			
			Выборка = ВыборкаСотрудник.Выбрать();
			Пока Выборка.Следующий() Цикл 
				
				СтрокаТабличнойЧасти = ДокументОбъект.УсловияРаботы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,Выборка);
				
			КонецЦикла;
			
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
			СоответствиеСозданныхДокументов.Вставить(ВыборкаСотрудник.Сотрудник,ДокументОбъект.Ссылка);
			
			ЗафиксироватьТранзакцию();
			
		КонецЦикла;	
		
	Исключение
		
		Если ТранзакцияАктивна() Тогда 
			ОтменитьТранзакцию();
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		
	КонецПопытки;
	
	Возврат СоответствиеСозданныхДокументов;
	
КонецФункции

#КонецОбласти


