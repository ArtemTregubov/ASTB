#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	//остатки номенклатуры
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ПеремещениеНоменклатурыТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеНоменклатурыТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПеремещениеНоменклатурыТовары.Количество КАК Количество,
	|	ПеремещениеНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеНоменклатурыТовары.Ссылка.СкладПолучатель КАК Склад,
	|	&ОрганизацияДляОстатков КАК Организация,
	|	ПеремещениеНоменклатурыТовары.Ссылка.Дата КАК Период,
	|	ПеремещениеНоменклатурыТовары.ПроцентИзноса КАК ПроцентИзноса
	|ИЗ
	|	Документ.ПеремещениеНоменклатуры.Товары КАК ПеремещениеНоменклатурыТовары
	|ГДЕ
	|	ПеремещениеНоменклатурыТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ПеремещениеНоменклатурыТовары.Номенклатура,
	|	ПеремещениеНоменклатурыТовары.ХарактеристикаНоменклатуры,
	|	ПеремещениеНоменклатурыТовары.Количество,
	|	ПеремещениеНоменклатурыТовары.НомерСтроки,
	|	ПеремещениеНоменклатурыТовары.Ссылка.СкладОтправитель,
	|	&ОрганизацияДляОстатков,
	|	ПеремещениеНоменклатурыТовары.Ссылка.Дата,
	|	ПеремещениеНоменклатурыТовары.ПроцентИзноса
	|ИЗ
	|	Документ.ПеремещениеНоменклатуры.Товары КАК ПеремещениеНоменклатурыТовары
	|ГДЕ
	|	ПеремещениеНоменклатурыТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"),Справочники.Организации.ПустаяСсылка(),ДокументСсылка.Организация));
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	ТаблицыДляДвижений.Вставить("ТаблицаОстаткиНоменклатуры", Результат);
	
	Если НЕ ЗначениеЗаполнено(ДокументСсылка.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;	
	
	//заявки и переход права собственности
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеНоменклатурыТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеНоменклатурыТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПеремещениеНоменклатурыТовары.Количество КАК Количество,
	|	ПеремещениеНоменклатурыТовары.Цена КАК Цена
	|ИЗ
	|	Документ.ПеремещениеНоменклатуры.Товары КАК ПеремещениеНоменклатурыТовары
	|ГДЕ
	|	ПеремещениеНоменклатурыТовары.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкиНаВыдачуОстатки.МВЗ КАК МВЗ,
	|	ЗаявкиНаВыдачуОстатки.Номенклатура КАК Номенклатура,
	|	ЗаявкиНаВыдачуОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ЗаявкиНаВыдачуОстатки.КоличествоОстаток) КАК Количество
	|ИЗ
	|	РегистрНакопления.ЗаявкиНаВыдачу.Остатки(
	|			&ПериодРасчета,
	|			Заявка = &Заявка
	|				И Организация = &Организация) КАК ЗаявкиНаВыдачуОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкиНаВыдачуОстатки.МВЗ,
	|	ЗаявкиНаВыдачуОстатки.Номенклатура,
	|	ЗаявкиНаВыдачуОстатки.ХарактеристикаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры,
	|	МВЗ";
	
	Запрос.УстановитьПараметр("Ссылка",			ДокументСсылка);
	Запрос.УстановитьПараметр("ПериодРасчета",	ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ДокументСсылка));
	Запрос.УстановитьПараметр("Заявка",			ДокументСсылка.ДокументОснование);
	Запрос.УстановитьПараметр("Организация",	ДокументСсылка.Организация);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаПеремещения 		= Результат[0].Выгрузить();
	ТаблицаОстатковЗаявки 	= Результат[1].Выгрузить();
	
	ТаблицаДвиженийПоЗаявкам 		= ДокументСсылка.ПолучитьОбъект().Движения.ЗаявкиНаВыдачу.Выгрузить();
	ТаблицаДвиженийПоСобственнымСИЗ = ДокументСсылка.ПолучитьОбъект().Движения.СобственныеСИЗ.Выгрузить();
	
	ТаблицаДвиженийПоЗаявкам.Очистить();
	ТаблицаДвиженийПоСобственнымСИЗ.Очистить();
	
	Для Каждого СтрокаТаблицыПеремещения Из ТаблицаПеремещения Цикл
		
		СтруктураПоиска = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры",СтрокаТаблицыПеремещения.Номенклатура, СтрокаТаблицыПеремещения.ХарактеристикаНоменклатуры);
		
		ОсталосьПереместить = СтрокаТаблицыПеремещения.Количество;
		
		НайденныеСтроки = ТаблицаОстатковЗаявки.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			Если ОсталосьПереместить = 0 Тогда
				Прервать;
			КонецЕсли;	
			
			Если НайденнаяСтрока.Количество >= ОсталосьПереместить Тогда
				КоличествоДляРегистра 	= ОсталосьПереместить;
				ОсталосьПереместить 	= 0;
			Иначе
				КоличествоДляРегистра 	= НайденнаяСтрока.Количество;
				ОсталосьПереместить 	= ОсталосьПереместить - НайденнаяСтрока.Количество;
			КонецЕсли;	
			
			//расход по заявкам
			НоваяСтрока = ТаблицаДвиженийПоЗаявкам.Добавить();
			НоваяСтрока.Активность					= Истина;
			НоваяСтрока.ВидДвижения 				= ВидДвиженияНакопления.Расход;
			НоваяСтрока.Заявка 						= ДокументСсылка.ДокументОснование;
			НоваяСтрока.Организация 				= ДокументСсылка.Организация;
			НоваяСтрока.МВЗ 						= НайденнаяСтрока.МВЗ;
			НоваяСтрока.Номенклатура 				= СтрокаТаблицыПеремещения.Номенклатура;
			НоваяСтрока.ХарактеристикаНоменклатуры 	= СтрокаТаблицыПеремещения.ХарактеристикаНоменклатуры;
			НоваяСтрока.Количество 					= КоличествоДляРегистра;
			НоваяСтрока.Период 						= ДокументСсылка.Дата;
			
			//оборот по собственным СИЗ
			НоваяСтрока = ТаблицаДвиженийПоСобственнымСИЗ.Добавить();
			НоваяСтрока.Активность					= Истина;
			НоваяСтрока.Организация 				= ДокументСсылка.Организация;
			НоваяСтрока.МВЗ 						= НайденнаяСтрока.МВЗ;
			НоваяСтрока.Номенклатура 				= СтрокаТаблицыПеремещения.Номенклатура;
			НоваяСтрока.ХарактеристикаНоменклатуры 	= СтрокаТаблицыПеремещения.ХарактеристикаНоменклатуры;
			НоваяСтрока.Количество 					= КоличествоДляРегистра;
			НоваяСтрока.Период 						= ДокументСсылка.Дата;
			НоваяСтрока.ДокументВыдачи 				= ДокументСсылка.ДокументОснование;
			НоваяСтрока.Сумма 						= СтрокаТаблицыПеремещения.Цена * КоличествоДляРегистра;
			
		КонецЦикла;
		
		Если ОсталосьПереместить > 0 Тогда //увеличили количество в документе вручную
			
			//расход по заявкам
			НоваяСтрока = ТаблицаДвиженийПоЗаявкам.Добавить();
			НоваяСтрока.Активность					= Истина;
			НоваяСтрока.ВидДвижения 				= ВидДвиженияНакопления.Расход;
			НоваяСтрока.Заявка 						= ДокументСсылка.ДокументОснование;
			НоваяСтрока.Организация 				= ДокументСсылка.Организация;
			НоваяСтрока.МВЗ 						= НайденнаяСтрока.МВЗ;
			НоваяСтрока.Номенклатура 				= СтрокаТаблицыПеремещения.Номенклатура;
			НоваяСтрока.ХарактеристикаНоменклатуры 	= СтрокаТаблицыПеремещения.ХарактеристикаНоменклатуры;
			НоваяСтрока.Количество 					= ОсталосьПереместить;
			НоваяСтрока.Период 						= ДокументСсылка.Дата;
			
			//оборот по собственным СИЗ
			НоваяСтрока = ТаблицаДвиженийПоСобственнымСИЗ.Добавить();
			НоваяСтрока.Активность					= Истина;
			НоваяСтрока.Организация 				= ДокументСсылка.Организация;
			НоваяСтрока.МВЗ 						= НайденнаяСтрока.МВЗ;
			НоваяСтрока.Номенклатура 				= СтрокаТаблицыПеремещения.Номенклатура;
			НоваяСтрока.ХарактеристикаНоменклатуры 	= СтрокаТаблицыПеремещения.ХарактеристикаНоменклатуры;
			НоваяСтрока.Количество 					= ОсталосьПереместить;
			НоваяСтрока.Период 						= ДокументСсылка.Дата;
			НоваяСтрока.ДокументВыдачи 				= ДокументСсылка.ДокументОснование;
			НоваяСтрока.Сумма 						= СтрокаТаблицыПеремещения.Цена * ОсталосьПереместить;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	ТаблицыДляДвижений.Вставить("ТаблицаЗаявкиНаВыдачу", ТаблицаДвиженийПоЗаявкам);
	ТаблицыДляДвижений.Вставить("ТаблицаСобственныеСИЗ", ТаблицаДвиженийПоСобственнымСИЗ);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Перемещение") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"Перемещение",
			"Накладная перемещения",
			СформироватьПечатнуюФормуНакладнаяНаПеремещение(МассивОбъектов, ОбъектыПечати),,"Документ.ПеремещениеНоменклатуры.ПФ_MXL_ПеремещениеНоменклатуры");
				
	КонецЕсли;	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПеремещениеСИзносом") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ПеремещениеСИзносом",
			"Накладная перемещения (с % износа)",
			СформироватьПечатнуюФормуНакладнаяНаПеремещениеСИзносом(МассивОбъектов, ОбъектыПечати),,"Документ.ПеремещениеНоменклатуры.ПФ_MXL_ПеремещениеНоменклатурыСИзносом");
				
	КонецЕсли;
		
КонецПроцедуры

Функция СформироватьПечатнуюФормуНакладнаяНаПеремещение(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеНоменклатуры_ПеремещениеНоменклатуры";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.СкладОтправитель.Наименование КАК ПредставлениеОтправителя,
	|	Документы.СкладПолучатель.Наименование КАК ПредставлениеПолучателя,
	|	Документы.Организация.Префикс КАК Префикс
	|ИЗ
	|	Документ.ПеремещениеНоменклатуры КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Количество КАК Количество,
	|	Товары.Цена КАК Цена,
	|	Товары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.Наименование
	|		ИНАЧЕ Товары.Номенклатура.Наименование + "" ("" + Товары.ХарактеристикаНоменклатуры.Наименование + "")""
	|	КОНЕЦ КАК НаименованиеТовара,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА Товары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА Товары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.НомерСтроки
	|ИЗ
	|	Документ.ПеремещениеНоменклатуры.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|		ПО Товары.Ссылка.Организация = НоменклатурныеНомераОрганизаций.Организация
	|			И Товары.Номенклатура = НоменклатурныеНомераОрганизаций.Номенклатура
	|			И Товары.ХарактеристикаНоменклатуры = НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Товары.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеНоменклатуры.ПФ_MXL_ПеремещениеНоменклатуры");
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
			
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(ДанныеПечати);
		
		Область.Параметры.ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата, Префикс", ДанныеПечати.Номер, ДанныеПечати.Дата, ДанныеПечати.Префикс), "Накладная перемещения");
		ТабличныйДокумент.Вывести(Область);
			
		СчетСтрок = 1;
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
			Область.Параметры.Заполнить(ВыборкаПоТоварам);
			ТабличныйДокумент.Вывести(Область);
			
			СчетСтрок = СчетСтрок + 1;
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
		Область.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуНакладнаяНаПеремещениеСИзносом(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеНоменклатуры_ПеремещениеНоменклатурыСИзносом";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.СкладОтправитель.Наименование КАК ПредставлениеОтправителя,
	|	Документы.СкладПолучатель.Наименование КАК ПредставлениеПолучателя,
	|	Документы.Организация.Префикс КАК Префикс
	|ИЗ
	|	Документ.ПеремещениеНоменклатуры КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Количество КАК Количество,
	|	Товары.Цена КАК Цена,
	|	Товары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.Наименование
	|		ИНАЧЕ Товары.Номенклатура.Наименование + "" ("" + Товары.ХарактеристикаНоменклатуры.Наименование + "")""
	|	КОНЕЦ КАК НаименованиеТовара,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА Товары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА Товары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.ПроцентИзноса КАК ПроцентИзноса
	|ИЗ
	|	Документ.ПеремещениеНоменклатуры.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|		ПО Товары.Ссылка.Организация = НоменклатурныеНомераОрганизаций.Организация
	|			И Товары.Номенклатура = НоменклатурныеНомераОрганизаций.Номенклатура
	|			И Товары.ХарактеристикаНоменклатуры = НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Товары.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеНоменклатуры.ПФ_MXL_ПеремещениеНоменклатурыСИзносом");
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
			
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(ДанныеПечати);
		
		Область.Параметры.ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата, Префикс", ДанныеПечати.Номер, ДанныеПечати.Дата, ДанныеПечати.Префикс), "Накладная перемещения");
		ТабличныйДокумент.Вывести(Область);
			
		СчетСтрок = 1;
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
			Область.Параметры.Заполнить(ВыборкаПоТоварам);
			ТабличныйДокумент.Вывести(Область);
			
			СчетСтрок = СчетСтрок + 1;
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
		Область.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//перемещение
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ПеремещениеНоменклатуры";
	КомандаПечати.Идентификатор = "Перемещение";
	КомандаПечати.Представление = НСтр("ru = 'Накладная перемещения'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//перемещение с % износа
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ПеремещениеНоменклатуры";
	КомандаПечати.Идентификатор = "ПеремещениеСИзносом";
	КомандаПечати.Представление = НСтр("ru = 'Накладная перемещения (с % износа)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ИспользоватьПроцентИзноса";
	КомандаПечати.СписокФорм =   		"ФормаДокумента";
	
КонецПроцедуры

Процедура ЗаполнитьПоОстаткам(ТекущийОбъект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекущийОбъект.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	ОстаткиНоменклатурыОстатки.ПроцентИзноса КАК ПроцентИзноса
	|ПОМЕСТИТЬ ВТ_ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&ПериодРасчета,
	|			Организация = &ОрганизацияДляОстатков
	|				И Склад = &СкладОтправитель) КАК ОстаткиНоменклатурыОстатки
	|ГДЕ
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры,
	|	ОстаткиНоменклатурыОстатки.ПроцентИзноса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ ВТ_ЦеныНоменклатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ПериодРасчета, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВТ_ОстаткиНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ОстаткиНоменклатуры.КоличествоОстаток КАК Количество,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) КАК Цена,
	|	ВЫБОР
	|		КОГДА ВТ_ОстаткиНоменклатуры.ПроцентИзноса = ЗНАЧЕНИЕ(Справочник.ПроцентыИзноса.ПустаяСсылка)
	|			ТОГДА ВТ_ОстаткиНоменклатуры.КоличествоОстаток * ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВТ_ОстаткиНоменклатуры.ПроцентИзноса КАК ПроцентИзноса
	|ИЗ
	|	ВТ_ОстаткиНоменклатуры КАК ВТ_ОстаткиНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
	|		ПО ВТ_ОстаткиНоменклатуры.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
	|			И ВТ_ОстаткиНоменклатуры.Номенклатура.Поставщик = ВТ_ЦеныНоменклатуры.Поставщик
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ОстаткиНоменклатуры.Номенклатура.Наименование,
	|	ВТ_ОстаткиНоменклатуры.ХарактеристикаНоменклатуры.КодSAP";
	
	Запрос.УстановитьПараметр("ПериодРасчета",			ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка));
	Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
	Запрос.УстановитьПараметр("СкладОтправитель",		ТекущийОбъект.СкладОтправитель);
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",	?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"),Справочники.Организации.ПустаяСсылка(),ТекущийОбъект.Организация));
	
	ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
	
КонецПроцедуры

Процедура ЗаполнитьПоЗаявке(ДокументОснование,ТекущийОбъект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаВыдачу") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийОбъект.Организация 			= ДокументОснование.Организация;
	ТекущийОбъект.СкладОтправитель		= ДокументОснование.СкладОтправитель;
	ТекущийОбъект.СкладПолучатель		= ДокументОснование.Склад;
	ТекущийОбъект.МОЛСкладаОтправителя	= ДокументОснование.МОЛОтправителя;
	ТекущийОбъект.МОЛСкладаПолучателя	= ДокументОснование.МОЛ;
	ТекущийОбъект.Ответственный			= ДокументОснование.Ответственный;
	ТекущийОбъект.ДокументОснование 	= ДокументОснование;
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Ссылка) Тогда
		ПериодРасчета = ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка);
	Иначе
		ПериодРасчета = ТекущаяДата();
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкиНаВыдачуОстатки.Номенклатура КАК Номенклатура,
	|	ЗаявкиНаВыдачуОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ЗаявкиНаВыдачуОстатки.КоличествоОстаток) КАК Количество
	|ПОМЕСТИТЬ ВТ_ОстаткиПоЗаявкам
	|ИЗ
	|	РегистрНакопления.ЗаявкиНаВыдачу.Остатки(
	|			&ПериодРасчета,
	|			Организация = &Организация
	|				И Заявка = &Заявка) КАК ЗаявкиНаВыдачуОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкиНаВыдачуОстатки.Номенклатура,
	|	ЗаявкиНаВыдачуОстатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаявкаНаВыдачуТоварыСводная.Номенклатура КАК Номенклатура,
	|	ЗаявкаНаВыдачуТоварыСводная.Цена КАК Цена
	|ПОМЕСТИТЬ ВТ_ЦеныПоЗаявкам
	|ИЗ
	|	Документ.ЗаявкаНаВыдачу.ТоварыСводная КАК ЗаявкаНаВыдачуТоварыСводная
	|ГДЕ
	|	ЗаявкаНаВыдачуТоварыСводная.Ссылка = &Заявка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиПоЗаявкам.Номенклатура КАК Номенклатура,
	|	ВТ_ОстаткиПоЗаявкам.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ОстаткиПоЗаявкам.Количество КАК Количество,
	|	ВТ_ЦеныПоЗаявкам.Цена КАК Цена,
	|	ВТ_ОстаткиПоЗаявкам.Количество * ВТ_ЦеныПоЗаявкам.Цена КАК Сумма
	|ИЗ
	|	ВТ_ОстаткиПоЗаявкам КАК ВТ_ОстаткиПоЗаявкам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныПоЗаявкам КАК ВТ_ЦеныПоЗаявкам
	|		ПО ВТ_ОстаткиПоЗаявкам.Номенклатура = ВТ_ЦеныПоЗаявкам.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ОстаткиПоЗаявкам.Номенклатура.Наименование,
	|	ВТ_ОстаткиПоЗаявкам.ХарактеристикаНоменклатуры.КодSAP";
	
	Запрос.УстановитьПараметр("ПериодРасчета",	ПериодРасчета);
	Запрос.УстановитьПараметр("Организация",	ТекущийОбъект.Организация);
	Запрос.УстановитьПараметр("Заявка",			ДокументОснование);
	
	ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
		
	ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
		
КонецПроцедуры	

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой ЗапретРедактированияРеквизитовОбъектов.

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//     Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//              где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы, связанного с
//              реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
    Результат.Добавить("ВходящийНомер");
    Возврат Результат;
	
КонецФункции

#КонецЕсли