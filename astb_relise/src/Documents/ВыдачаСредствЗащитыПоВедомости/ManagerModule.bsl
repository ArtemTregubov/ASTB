#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыдачаСредствЗащитыПоВедомостиТовары.Ссылка.Организация,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.Сотрудник,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.НормаВыдачи,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.НоменклатураНормы,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.Номенклатура,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.ХарактеристикаНоменклатуры,
	|	СУММА(ВыдачаСредствЗащитыПоВедомостиТовары.Количество) КАК Количество,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.Ссылка.Дата КАК Период
	|ИЗ
	|	Документ.ВыдачаСредствЗащитыПоВедомости.Товары КАК ВыдачаСредствЗащитыПоВедомостиТовары
	|ГДЕ
	|	ВыдачаСредствЗащитыПоВедомостиТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыдачаСредствЗащитыПоВедомостиТовары.Ссылка.Организация,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.Сотрудник,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.НормаВыдачи,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.НоменклатураНормы,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.Номенклатура,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.ХарактеристикаНоменклатуры,
	|	ВыдачаСредствЗащитыПоВедомостиТовары.Ссылка.Дата";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	ТаблицыДляДвижений.Вставить("ТаблицаВыданныеСредстваЗащитыПоВедомости", Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВедомостьНаВыдачуСИЗ") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ВедомостьНаВыдачуСИЗ",
			"Ведомость на выдачу СИЗ",
			СформироватьПечатнуюФормуВедомостиНаВыдачуСИЗ(МассивОбъектов, ОбъектыПечати),,"Документ.ВыдачаСредствЗащитыПоВедомости.ПФ_MXL_ВедомостьНаВыдачуСИЗ");
				
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуВедомостиНаВыдачуСИЗ(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВыдачаСредствЗащитыПоВедомости_ВедомостьНаВыдачуСИЗ";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.Организация.Префикс КАК Префикс,
	|	Документы.Дата КАК ПериодВыдачи
	|ИЗ
	|	Документ.ВыдачаСредствЗащитыПоВедомости КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Количество КАК Количество,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	Товары.Сотрудник КАК Сотрудник,
	|	Товары.НоменклатураНормы.Наименование КАК НоменклатураНормы
	|ИЗ
	|	Документ.ВыдачаСредствЗащитыПоВедомости.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Товары.Сотрудник.Наименование,
	|	Товары.НоменклатураНормы.Наименование,
	|	Товары.Номенклатура.Наименование,
	|	Товары.ХарактеристикаНоменклатуры.КодSAP
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВыдачаСредствЗащитыПоВедомости.ПФ_MXL_ВедомостьНаВыдачуСИЗ");
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
			
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(ДанныеПечати);
		
		ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата, Префикс", ДанныеПечати.Номер, ДанныеПечати.Дата, ДанныеПечати.Префикс), "Ведомость на выдачу СИЗ");
		Область.Параметры.ТекстЗаголовка = ТекстЗаголовка + Символы.ПС + ?(ЗначениеЗаполнено(ДанныеПечати.ПериодВыдачи)," Период выдачи: " + Формат(ДанныеПечати.ПериодВыдачи,"ДФ='ММММ гггг'"),"");
		ТабличныйДокумент.Вывести(Область);
			
		СчетСтрок = 1;
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
			Область.Параметры.НомерСтроки = СчетСтрок;
			Область.Параметры.ТабельныйНомер = СокрЛП(ВыборкаПоТоварам.Сотрудник.ТабельныйНомер);
			Область.Параметры.ПредставлениеСотрудника = ФизическиеЛица.ФамилияИнициалыФизЛица(ВыборкаПоТоварам.Сотрудник.ФизическоеЛицо);
			Область.Параметры.НоменклатураНормы = ВыборкаПоТоварам.НоменклатураНормы;
			Область.Параметры.КодСинхронизации = ВыборкаПоТоварам.Номенклатура.КодСинхронизации;
			Область.Параметры.НаименованиеТовара = ВыборкаПоТоварам.Номенклатура;
			Область.Параметры.Размер = ВыборкаПоТоварам.ХарактеристикаНоменклатуры;
			//Область.Параметры.НаименованиеТовара = ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(ВыборкаПоТоварам.Номенклатура,ВыборкаПоТоварам.ХарактеристикаНоменклатуры);
			Область.Параметры.Количество = ВыборкаПоТоварам.Количество;
			ТабличныйДокумент.Вывести(Область);
			
			СчетСтрок = СчетСтрок + 1;
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
		Область.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		Область.Параметры.ПредставлениеОтветственного = ФизическиеЛица.ФамилияИнициалыФизЛица(Строка(ДанныеПечати.Ссылка.Ответственный));
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//ведомость
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ВыдачаСредствЗащитыПоВедомости";
	КомандаПечати.Идентификатор = "ВедомостьНаВыдачуСИЗ";
	КомандаПечати.Представление = НСтр("ru = 'Ведомость на выдачу СИЗ'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;

КонецПроцедуры

//Процедура заполняет табличную часть документа-объекта в зависимости от вида заполнения
//Параметры:
//ТекущийОбъект - документ-объект, который заполняется
//ВидЗаполнения - может прнимать значения: "ПоГоловномуПодразделению", "ПоМВЗ", "ПоПодразделению", "ПоСпискуСотрудников" или "ПоСкладуВыдачи".
//ЗначениеПараметраЗаполнения - значение, по которому заполняется документ-объект типа "Склады", "Подразделения" или "МВЗ"
//
Процедура ЗаполнитьТаблицуДокумента(ТекущийОбъект,ВидЗаполнения,ЗначениеПараметраЗаполнения) Экспорт
	
	ТекущийОбъект.Товары.Очистить();
	
	ДатаАнализа = ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка);
	
	Если ВидЗаполнения = "ПоГоловномуПодразделению" Тогда
		
		СписокПодразделений = Новый СписокЗначений;
		СписокПодразделений.Добавить(ЗначениеПараметраЗаполнения);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ПериодАнализа,
		|			Организация = &Организация
		|				И Подразделение В ИЕРАРХИИ (&СписокПодразделений)) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник.Наименование";
		
		Запрос.УстановитьПараметр("ПериодАнализа",		ДатаАнализа);
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("СписокПодразделений",СписокПодразделений);
		
		МассивСотрудников = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
		
	ИначеЕсли ВидЗаполнения = "ПоМВЗ" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МВЗСотрудников.Сотрудник КАК Сотрудник,
		|	МВЗСотрудников.МВЗ КАК МВЗ
		|ПОМЕСТИТЬ ВТ_МВЗСотрудников
		|ИЗ
		|	РегистрСведений.МВЗСотрудников КАК МВЗСотрудников
		|ГДЕ
		|	МВЗСотрудников.МВЗ = &МВЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МВЗПодразделенийСрезПоследних.Подразделение КАК Подразделение,
		|	МВЗПодразделенийСрезПоследних.МВЗ КАК МВЗ
		|ПОМЕСТИТЬ ВТ_ПодразделенияПоМВЗ
		|ИЗ
		|	РегистрСведений.МВЗПодразделений.СрезПоследних(&ПериодАнализа, МВЗ = &МВЗ) КАК МВЗПодразделенийСрезПоследних
		|ГДЕ
		|	МВЗПодразделенийСрезПоследних.Использовать
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МВЗДолжностейСрезПоследних.Должность КАК Должность,
		|	МВЗДолжностейСрезПоследних.МВЗ КАК МВЗ
		|ПОМЕСТИТЬ ВТ_ДолжностиПоМВЗ
		|ИЗ
		|	РегистрСведений.МВЗДолжностей.СрезПоследних(&ПериодАнализа, МВЗ = &МВЗ) КАК МВЗДолжностейСрезПоследних
		|ГДЕ
		|	МВЗДолжностейСрезПоследних.Использовать
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА ВТ_МВЗСотрудников.МВЗ ЕСТЬ NULL
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ПодразделенияПоМВЗ.МВЗ ЕСТЬ NULL
		|						ТОГДА ВТ_ДолжностиПоМВЗ.МВЗ
		|					ИНАЧЕ ВТ_ПодразделенияПоМВЗ.МВЗ
		|				КОНЕЦ
		|		ИНАЧЕ ВТ_МВЗСотрудников.МВЗ
		|	КОНЕЦ КАК МВЗ
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&ПериодАнализа, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПодразделенияПоМВЗ КАК ВТ_ПодразделенияПоМВЗ
		|		ПО ЗанятыеРабочиеМестаОстатки.Подразделение = ВТ_ПодразделенияПоМВЗ.Подразделение
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗСотрудников КАК ВТ_МВЗСотрудников
		|		ПО ЗанятыеРабочиеМестаОстатки.Сотрудник = ВТ_МВЗСотрудников.МВЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолжностиПоМВЗ КАК ВТ_ДолжностиПоМВЗ
		|		ПО ЗанятыеРабочиеМестаОстатки.Должность = ВТ_ДолжностиПоМВЗ.Должность
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВТ_МВЗСотрудников.МВЗ ЕСТЬ NULL
		|				ТОГДА ВТ_ПодразделенияПоМВЗ.МВЗ
		|			ИНАЧЕ ВТ_МВЗСотрудников.МВЗ
		|		КОНЕЦ = &МВЗ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник.Наименование";
		
		Запрос.УстановитьПараметр("ПериодАнализа",	ДатаАнализа);
		Запрос.УстановитьПараметр("Организация",	ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МВЗ",			ЗначениеПараметраЗаполнения);
		
		МассивСотрудников = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
		
	ИначеЕсли ВидЗаполнения = "ПоПодразделению" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ПериодАнализа,
		|			Организация = &Организация
		|				И Подразделение = &Подразделение) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник.Наименование";
		
		Запрос.УстановитьПараметр("ПериодАнализа",	ДатаАнализа);
		Запрос.УстановитьПараметр("Организация",	ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("Подразделение",	ЗначениеПараметраЗаполнения);
		
		МассивСотрудников = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
		
	ИначеЕсли ВидЗаполнения = "ПоСкладуВыдачи" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&ПериодАнализа, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник.Наименование";
		Запрос.УстановитьПараметр("ПериодАнализа",	ДатаАнализа);
		Запрос.УстановитьПараметр("Организация",	ТекущийОбъект.Организация);
		
		МассивСотрудников = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
		
		ТаблицаСкладовВыдачи = ПроцедурыРаботыСНормамиСервер.ПолучитьСкладыВыдачиСотрудников(МассивСотрудников,Перечисления.ВидыВыдачиСИЗ.КоллективнаяВыдача,ТекущийОбъект.Организация);
		
		ТаблицаСкладовВыдачи = ТаблицаСкладовВыдачи.Скопировать(Новый Структура("Склад",ЗначениеПараметраЗаполнения));
		
		МассивСотрудников = ТаблицаСкладовВыдачи.ВыгрузитьКолонку("Сотрудник");
		
	ИначеЕсли ВидЗаполнения = "ПоСпискуСотрудников" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ПериодАнализа,
		|			Организация = &Организация
		|				И Сотрудник В (&СписокСотрудников)) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник.Наименование";
		Запрос.УстановитьПараметр("ПериодАнализа",		ДатаАнализа);
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("СписокСотрудников",	ЗначениеПараметраЗаполнения);
		
		МассивСотрудников = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	ТаблицаЗанятыхРМ 			= ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуЗанятыхРабочихМестСУсловиями(МассивСотрудников,ТекущийОбъект.Организация,ДатаАнализа);
	ТаблицаУстановленныхНорм 	= ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуУстановленныхНорм(ТекущийОбъект.Организация,ДатаАнализа,ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Подразделение"),ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Должность"),ЛОЖЬ);
	ТаблицаСНормами 			= ПроцедурыРаботыСНормамиСервер.ПодобратьНормы(ТаблицаЗанятыхРМ,ТаблицаУстановленныхНорм,ТекущийОбъект.Организация,ДатаАнализа);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНормСотрудников.Сотрудник,
	|	ТаблицаНормСотрудников.НормаВыдачи,
	|	ТаблицаНормСотрудников.НоменклатураНормы,
	|	ТаблицаНормСотрудников.КоличествоВПериоде
	|ПОМЕСТИТЬ ВТ_НормыСотрудников
	|ИЗ
	|	&ТаблицаНормСотрудников КАК ТаблицаНормСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_Сотрудники
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Владелец = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НормыВыдачиСИЗ.Ссылка
	|ПОМЕСТИТЬ ВТ_НормыВыдачи
	|ИЗ
	|	Справочник.НормыВыдачиСИЗ КАК НормыВыдачиСИЗ
	|ГДЕ
	|	НормыВыдачиСИЗ.Владелец = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
	|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы
	|ПОМЕСТИТЬ ВТ_НоменклатураНормПоПотребности
	|ИЗ
	|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
	|			&ПериодАнализа,
	|			Организация = &Организация
	|				И Сотрудник В (&МассивСотрудников)) КАК ПотребностьВыдачиСИЗОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НормыСотрудников.Сотрудник,
	|	ВТ_НормыСотрудников.НормаВыдачи,
	|	ВТ_НормыСотрудников.НоменклатураНормы,
	|	ВТ_НормыСотрудников.КоличествоВПериоде
	|ПОМЕСТИТЬ ВТ_НормыСотрудниковСУчетомРежимаСвертки
	|ИЗ
	|	ВТ_НормыСотрудников КАК ВТ_НормыСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НоменклатураНормПоПотребности КАК ВТ_НоменклатураНормПоПотребности
	|		ПО ВТ_НормыСотрудников.Сотрудник = ВТ_НоменклатураНормПоПотребности.Сотрудник
	|			И ВТ_НормыСотрудников.НоменклатураНормы = ВТ_НоменклатураНормПоПотребности.НоменклатураНормы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &СверткаПотребностиПоНоменклатуреНормы
	|				ТОГДА ВТ_НоменклатураНормПоПотребности.НоменклатураНормы ЕСТЬ NULL 
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Сотрудники.Сотрудник,
	|	ВТ_Сотрудники.Сотрудник.ФизическоеЛицо.Пол КАК ПолСотрудника,
	|	ВТ_НормыСотрудниковСУчетомРежимаСвертки.НормаВыдачи,
	|	ВТ_НормыСотрудниковСУчетомРежимаСвертки.НоменклатураНормы,
	|	ВТ_НормыСотрудниковСУчетомРежимаСвертки.КоличествоВПериоде КАК Количество
	|ИЗ
	|	ВТ_НормыСотрудниковСУчетомРежимаСвертки КАК ВТ_НормыСотрудниковСУчетомРежимаСвертки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сотрудники КАК ВТ_Сотрудники
	|		ПО ВТ_НормыСотрудниковСУчетомРежимаСвертки.Сотрудник = ВТ_Сотрудники.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НормыВыдачи КАК ВТ_НормыВыдачи
	|		ПО ВТ_НормыСотрудниковСУчетомРежимаСвертки.НормаВыдачи = ВТ_НормыВыдачи.Ссылка
	|ГДЕ
	|	ВТ_НормыВыдачи.Ссылка.ВидРасчета = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетаНорм.ДоИзноса)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_НормыСотрудниковСУчетомРежимаСвертки.Сотрудник КАК Сотрудник,
	|	ВТ_НормыСотрудниковСУчетомРежимаСвертки.НоменклатураНормы КАК НоменклатураНормы
	|ИЗ
	|	ВТ_НормыСотрудниковСУчетомРежимаСвертки КАК ВТ_НормыСотрудниковСУчетомРежимаСвертки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НормыВыдачи КАК ВТ_НормыВыдачи
	|		ПО ВТ_НормыСотрудниковСУчетомРежимаСвертки.НормаВыдачи = ВТ_НормыВыдачи.Ссылка
	|ГДЕ
	|	ВТ_НормыВыдачи.Ссылка.ВидРасчета = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетаНорм.ДоИзноса)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы";
	
	Запрос.УстановитьПараметр("ТаблицаНормСотрудников",					ТаблицаСНормами);
	Запрос.УстановитьПараметр("Организация",							ТекущийОбъект.Организация);
	Запрос.УстановитьПараметр("ПериодАнализа",							ДатаАнализа);
	Запрос.УстановитьПараметр("МассивСотрудников", 						МассивСотрудников);
	Запрос.УстановитьПараметр("СверткаПотребностиПоНоменклатуреНормы", 	ТекущийОбъект.Организация.СверткаПотребностиПоНоменклатуреНормы);
		
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаПотребности 					= Результат[5].Выгрузить();
	ТаблицаНоменклатурыНормСотрудников 	= Результат[6].Выгрузить();
	
	ТаблицаРазмеров = ПроцедурыРаботыСНормамиСервер.ПодобратьРазмерыДляСотрудников(ТаблицаНоменклатурыНормСотрудников,ДатаАнализа,ТекущийОбъект.Организация);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПотребности.Сотрудник,
	|	ТаблицаПотребности.ПолСотрудника,
	|	ТаблицаПотребности.НормаВыдачи,
	|	ТаблицаПотребности.НоменклатураНормы,
	|	ТаблицаПотребности.Количество
	|ПОМЕСТИТЬ ВТ_ТаблицаПотребности
	|ИЗ
	|	&ТаблицаПотребности КАК ТаблицаПотребности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРазмеров.Сотрудник,
	|	ТаблицаРазмеров.НоменклатураНормы,
	|	ТаблицаРазмеров.Номенклатура,
	|	ТаблицаРазмеров.ХарактеристикаНоменклатуры,
	|	ТаблицаРазмеров.ПолНоменклатуры,
	|	ТаблицаРазмеров.ЕстьРазмеры,
	|	ТаблицаРазмеров.ПриоритетСоответствия,
	|	ТаблицаРазмеров.Приоритет,
	|	ТаблицаРазмеров.ПриоритетРазмера,
	|	ТаблицаРазмеров.ТолькоДляСотрудника,
	|	ТаблицаРазмеров.ВидАнтропометрии,
	|	ТаблицаРазмеров.ЗначениеАнтропометрии,
	|	ТаблицаРазмеров.Рост,
	|	ТаблицаРазмеров.ИспользоватьРост,
	|	ТаблицаРазмеров.ВидСИЗ,
	|	ТаблицаРазмеров.Комплект,
	|	ТаблицаРазмеров.КоличествоВКомплекте КАК Количество
	|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров
	|ИЗ
	|	&ТаблицаРазмеров КАК ТаблицаРазмеров
	|ГДЕ
	|	ТаблицаРазмеров.КоличествоВКомплекте = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ТаблицаПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ТаблицаРазмеров.Номенклатура,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))) КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаПотребности.Количество,
	|	ВТ_ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров.Приоритет КАК Приоритет
	|ИЗ
	|	ВТ_ТаблицаПотребности КАК ВТ_ТаблицаПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров
	|		ПО ВТ_ТаблицаПотребности.Сотрудник = ВТ_ТаблицаРазмеров.Сотрудник
	|			И ВТ_ТаблицаПотребности.НоменклатураНормы = ВТ_ТаблицаРазмеров.НоменклатураНормы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаПотребности.Сотрудник,
	|	ВТ_ТаблицаПотребности.НормаВыдачи,
	|	ВТ_ТаблицаПотребности.НоменклатураНормы,
	|	ВТ_ТаблицаРазмеров.Номенклатура,
	|	ВТ_ТаблицаПотребности.Количество,
	|	ВТ_ТаблицаРазмеров.ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров.Приоритет
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	НормаВыдачи,
	|	НоменклатураНормы,
	|	ПриоритетСоответствия,
	|	Приоритет
	|ИТОГИ ПО
	|	Сотрудник,
	|	НормаВыдачи";
	
	Запрос.УстановитьПараметр("ТаблицаПотребности", ТаблицаПотребности);
	Запрос.УстановитьПараметр("ТаблицаРазмеров", 	ТаблицаРазмеров);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаПоСотруднику = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоСотруднику.Следующий() Цикл
		
		ВыборкаПоНормеВыдачи = ВыборкаПоСотруднику.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоНормеВыдачи.Следующий() Цикл
			
			ВыборкаПоНоменклатуреНормы = ВыборкаПоНормеВыдачи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПоНоменклатуреНормы.Следующий() Цикл
				
				ЗаполнитьЗначенияСвойств(ТекущийОбъект.Товары.Добавить(),ВыборкаПоНоменклатуреНормы);
				Прервать;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли