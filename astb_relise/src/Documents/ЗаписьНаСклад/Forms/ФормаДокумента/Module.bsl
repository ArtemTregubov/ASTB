
&НаСервере
Процедура СотрудникПриИзмененииНаСервере()
	
	Объект.Склад = ПроцедурыРаботыСНормамиСервер.ПолучитьСкладВыдачи(Справочники.Подразделения.ПустаяСсылка(),Объект.Сотрудник,Перечисления.ВидыВыдачиСИЗ.ПерсональнаяВыдача);
	
	ЗаполнитьИнформациюОСтаройЗаписи();
	
	ЗаполнитьСписокДней();
	ЗаполнитьСписокВремени();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформациюОСтаройЗаписи()
	
	СтруктураИнформацииОСтаройЗаписи = Документы.ЗаписьНаСклад.ПолучитьИнформациюОСтаройЗаписи(Объект);
	
	СтараяЗаписьДень 	= СтруктураИнформацииОСтаройЗаписи.СтараяЗаписьДень;
	СтараяЗаписьВремя 	= СтруктураИнформацииОСтаройЗаписи.СтараяЗаписьВремя;
	
КонецПроцедуры	

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	СотрудникПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СкладПриИзмененииНаСервере()
	
	ЗаполнитьИнформациюОСтаройЗаписи();
	
	ЗаполнитьСписокДней();
	ЗаполнитьСписокВремени();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	СкладПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДеньПриИзмененииНаСервере()
	
	ЗаполнитьСписокВремени();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеньПриИзменении(Элемент)
	
	ДеньПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДней()
	
	МассивДней = ПолучитьМассивДнейДляЗаписи();
	
	Элементы.День.СписокВыбора.ЗагрузитьЗначения(МассивДней);
	
	Для Каждого ЭлементСписка Из Элементы.День.СписокВыбора Цикл
		
		ЭлементСписка.Представление = Формат(ЭлементСписка.Значение,"ДФ=dd.MM.yyyy");
		
	КонецЦикла;
	
	Если МассивДней.Количество() > 0 И Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.День = МассивДней[0];
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьСписокВремени()
	
	МассивВремени = ПолучитьМассивВремениДляЗаписи();
	
	Элементы.Время.СписокВыбора.ЗагрузитьЗначения(МассивВремени);
	
	Для Каждого ЭлементСписка Из Элементы.Время.СписокВыбора Цикл
		
		ЭлементСписка.Представление = Формат(ЭлементСписка.Значение,"ДФ=ЧЧ:мм");
		
	КонецЦикла;	
	
	Если МассивВремени.Количество() > 0  И Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Время = МассивВремени[0];
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивДнейДляЗаписи()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГрафикРаботыСклада.День КАК День
	|ИЗ
	|	РегистрСведений.ГрафикРаботыСклада КАК ГрафикРаботыСклада
	|ГДЕ
	|	ГрафикРаботыСклада.Склад = &Склад
	|	И ГрафикРаботыСклада.День МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	День";
	
	Запрос.УстановитьПараметр("Склад",			Объект.Склад);
	Запрос.УстановитьПараметр("НачалоПериода",	НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("КонецПериода",	НачалоДня(Объект.Дата) + Объект.Склад.ГоризонтПланирования * 24 * 3600);
	
	ТаблицаГрафикаРаботыСклада = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаГрафикаРаботыСклада.ВыгрузитьКолонку("День");
	
КонецФункции	

&НаСервере
Функция ПолучитьМассивВремениДляЗаписи()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГрафикРаботыСклада.День КАК День,
	|	ГрафикРаботыСклада.КоличествоОкон КАК КоличествоОкон,
	|	ГрафикРаботыСклада.ВремяОбслуживания КАК ВремяОбслуживания,
	|	ГрафикРаботыСклада.НачалоРаботы КАК НачалоРаботы,
	|	ГрафикРаботыСклада.ОкончаниеРаботы КАК ОкончаниеРаботы,
	|	ГрафикРаботыСклада.НачалоПерерыва КАК НачалоПерерыва,
	|	ГрафикРаботыСклада.ОкончаниеПерерыва КАК ОкончаниеПерерыва
	|ИЗ
	|	РегистрСведений.ГрафикРаботыСклада КАК ГрафикРаботыСклада
	|ГДЕ
	|	ГрафикРаботыСклада.Склад = &Склад
	|	И ГрафикРаботыСклада.День = &День";
	
	Запрос.УстановитьПараметр("Склад",	Объект.Склад);
	Запрос.УстановитьПараметр("День",	НачалоДня(Объект.День));
	
	ТаблицаГрафикаРаботыСклада = Запрос.Выполнить().Выгрузить();
	
	СеткаРаботыСклада = Новый ТаблицаЗначений;
	СеткаРаботыСклада.Колонки.Добавить("КоличествоОкон", 	ОбщегоНазначения.ОписаниеТипаЧисло(3,0,ДопустимыйЗнак.Неотрицательный));
	СеткаРаботыСклада.Колонки.Добавить("Время", 			ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Время));
	
	Для Каждого СтрокаТаблицыГрафикаРаботыСклада Из ТаблицаГрафикаРаботыСклада Цикл
		
		НачалоОбслуживания = Дата(Год(СтрокаТаблицыГрафикаРаботыСклада.День),Месяц(СтрокаТаблицыГрафикаРаботыСклада.День),День(СтрокаТаблицыГрафикаРаботыСклада.День),Час(СтрокаТаблицыГрафикаРаботыСклада.НачалоРаботы),Минута(СтрокаТаблицыГрафикаРаботыСклада.НачалоРаботы),0);
		ОкончаниеОбслуживания = НачалоОбслуживания + СтрокаТаблицыГрафикаРаботыСклада.ВремяОбслуживания * 60;
		
		Если ЗначениеЗаполнено(СтрокаТаблицыГрафикаРаботыСклада.НачалоПерерыва) Тогда
			НачалоПерерыва = Дата(Год(СтрокаТаблицыГрафикаРаботыСклада.День),Месяц(СтрокаТаблицыГрафикаРаботыСклада.День),День(СтрокаТаблицыГрафикаРаботыСклада.День),Час(СтрокаТаблицыГрафикаРаботыСклада.НачалоПерерыва),Минута(СтрокаТаблицыГрафикаРаботыСклада.НачалоПерерыва),0);
		Иначе
			НачалоПерерыва = СтрокаТаблицыГрафикаРаботыСклада.НачалоПерерыва;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(СтрокаТаблицыГрафикаРаботыСклада.ОкончаниеПерерыва) Тогда
			ОкончаниеПерерыва = Дата(Год(СтрокаТаблицыГрафикаРаботыСклада.День),Месяц(СтрокаТаблицыГрафикаРаботыСклада.День),День(СтрокаТаблицыГрафикаРаботыСклада.День),Час(СтрокаТаблицыГрафикаРаботыСклада.ОкончаниеПерерыва),Минута(СтрокаТаблицыГрафикаРаботыСклада.ОкончаниеПерерыва),0);
		Иначе
			ОкончаниеПерерыва = СтрокаТаблицыГрафикаРаботыСклада.ОкончаниеПерерыва;
		КонецЕсли;
		
		КонецРабочегоДня = Дата(Год(СтрокаТаблицыГрафикаРаботыСклада.День),Месяц(СтрокаТаблицыГрафикаРаботыСклада.День),День(СтрокаТаблицыГрафикаРаботыСклада.День),Час(СтрокаТаблицыГрафикаРаботыСклада.ОкончаниеРаботы),Минута(СтрокаТаблицыГрафикаРаботыСклада.ОкончаниеРаботы),0);
		
		Если ЗначениеЗаполнено(НачалоПерерыва) И ЗначениеЗаполнено(ОкончаниеПерерыва) Тогда
			
			Пока НачалоОбслуживания < НачалоПерерыва Цикл
				
				НоваяСтрока 				= СеткаРаботыСклада.Добавить();
				НоваяСтрока.КоличествоОкон 	= СтрокаТаблицыГрафикаРаботыСклада.КоличествоОкон;
				НоваяСтрока.Время 			= Дата(1,1,1,Час(НачалоОбслуживания),Минута(НачалоОбслуживания),0);
				
				НачалоОбслуживания = НачалоОбслуживания + СтрокаТаблицыГрафикаРаботыСклада.ВремяОбслуживания * 60; 
				
			КонецЦикла;
			
			Пока ОкончаниеПерерыва < КонецРабочегоДня Цикл
				
				НоваяСтрока 				= СеткаРаботыСклада.Добавить();
				НоваяСтрока.КоличествоОкон 	= СтрокаТаблицыГрафикаРаботыСклада.КоличествоОкон;
				НоваяСтрока.Время 			= Дата(1,1,1,Час(ОкончаниеПерерыва),Минута(ОкончаниеПерерыва),0);
				
				ОкончаниеПерерыва = ОкончаниеПерерыва + СтрокаТаблицыГрафикаРаботыСклада.ВремяОбслуживания * 60; 
				
			КонецЦикла;
			
		Иначе
			
			Пока НачалоОбслуживания < КонецРабочегоДня Цикл
				
				НоваяСтрока 				= СеткаРаботыСклада.Добавить();
				НоваяСтрока.КоличествоОкон 	= СтрокаТаблицыГрафикаРаботыСклада.КоличествоОкон;
				НоваяСтрока.Время 			= Дата(1,1,1,Час(НачалоОбслуживания),Минута(НачалоОбслуживания),0);
				
				НачалоОбслуживания = НачалоОбслуживания + СтрокаТаблицыГрафикаРаботыСклада.ВремяОбслуживания * 60; 
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСетки.КоличествоОкон КАК КоличествоОкон,
	|	ТаблицаСетки.Время КАК Время
	|ПОМЕСТИТЬ ВТ_СеткаРаботыСклада
	|ИЗ
	|	&ТаблицаСетки КАК ТаблицаСетки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаписиНаСкладСрезПоследних.Время КАК Время,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаписиНаСкладСрезПоследних.Сотрудник) КАК ЗанятоОкон
	|ПОМЕСТИТЬ ВТ_Занятые
	|ИЗ
	|	РегистрСведений.ЗаписиНаСклад.СрезПоследних(
	|			&ПериодАнализа,
	|			Организация = &Организация
	|				И Склад = &Склад
	|				И День = &День) КАК ЗаписиНаСкладСрезПоследних
	|ГДЕ
	|	ЗаписиНаСкладСрезПоследних.Организация = &Организация
	|	И ЗаписиНаСкладСрезПоследних.Склад = &Склад
	|	И ЗаписиНаСкладСрезПоследних.Использовать
	|	И ЗаписиНаСкладСрезПоследних.День = &День
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаписиНаСкладСрезПоследних.Время
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СеткаРаботыСклада.Время КАК Время,
	|	ВТ_СеткаРаботыСклада.КоличествоОкон КАК КоличествоОкон,
	|	ЕСТЬNULL(ВТ_Занятые.ЗанятоОкон, 0) КАК ЗанятоОкон
	|ИЗ
	|	ВТ_СеткаРаботыСклада КАК ВТ_СеткаРаботыСклада
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Занятые КАК ВТ_Занятые
	|		ПО ВТ_СеткаРаботыСклада.Время = ВТ_Занятые.Время
	|
	|УПОРЯДОЧИТЬ ПО
	|	Время";
	
	Запрос.УстановитьПараметр("ПериодАнализа", 	ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Объект.Ссылка));
	Запрос.УстановитьПараметр("ТаблицаСетки", 	СеткаРаботыСклада);
	Запрос.УстановитьПараметр("Организация", 	Объект.Организация);
	Запрос.УстановитьПараметр("Склад", 			Объект.Склад);
	Запрос.УстановитьПараметр("День", 			Объект.День);
		
	МассивВремени = Новый Массив;
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		Если СтрокаТаблицыЗапроса.КоличествоОкон > СтрокаТаблицыЗапроса.ЗанятоОкон Тогда
			МассивВремени.Добавить(СтрокаТаблицыЗапроса.Время);
		КонецЕсли;	
	КонецЦикла;	
	Возврат МассивВремени;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьИнформациюОСтаройЗаписи();
	
	ЗаполнитьСписокДней();
	ЗаполнитьСписокВремени();
	
КонецПроцедуры
