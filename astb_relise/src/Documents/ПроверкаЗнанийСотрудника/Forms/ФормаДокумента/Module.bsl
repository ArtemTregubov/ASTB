////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НЕ Объект.ВведенВручную Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
		КонецЕсли;
	Иначе
		Объект.ВведенВручную = Истина;
	КонецЕсли;	
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов() 
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Элементы.ОтветыЗаполнитьПоОснованию.Видимость 	= Истина;
		Элементы.ОтветыЗаполнитьПоСотрудникам.Видимость = Ложь;
	Иначе
		Элементы.ОтветыЗаполнитьПоОснованию.Видимость 	= Ложь;
		Элементы.ОтветыЗаполнитьПоСотрудникам.Видимость = Истина;
	КонецЕсли;	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "ПЕЧАТЬ"

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
  	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
  
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСотрудникам(Команда)
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормыВыбора.Вставить("Отбор",              Новый Структура("Владелец", Объект.Организация));
	
	ОткрытьФорму("Справочник.Сотрудники.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоСотрудникамНаСервере(ВыбранноеЗначение)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.ПроверкаЗнанийСотрудника.ЗаполнитьТаблицуОтветов(ТекущийОбъект,"ПоСотрудникам",ВыбранноеЗначение);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.Сотрудники.Форма.ФормаВыбора" Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			ЗаполнитьПоСотрудникамНаСервере(ВыбранноеЗначение);
			
		КонецЕсли;
		
	КонецЕсли;	
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;

	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветыОтветПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Ответы.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Ответ) Тогда
		
		ТекущиеДанные.Правильный = ОтветПравильный(ТекущиеДанные.Вопрос,ТекущиеДанные.Ответ);
	
	Иначе
		
		ТекущиеДанные.Правильный = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтветПравильный(ТекущийВопрос,ТекущийОтвет)
	
	НайденныеСтроки = ТекущийВопрос.ВариантыОтветов.НайтиСтроки(Новый Структура("Ответ",ТекущийОтвет));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат Ложь;
	Иначе
		Возврат НайденныеСтроки[0].Правильный;
	Конецесли;
	
КонецФункции	

&НаКлиенте
Процедура ТестПриИзменении(Элемент)
	
	ТестПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТестПриИзмененииНаСервере()

	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.ПроверкаЗнанийСотрудника.ЗаполнитьТаблицуОтветов(ТекущийОбъект,ТекущийОбъект.Ответы.ВыгрузитьКолонку("Сотрудник"));
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОтветыПриАктивизацииЯчейки(Элемент)
	
	ТекущиеДанные = Элементы.Ответы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент.Имя = "ОтветыОтвет" Тогда
		
		ЭтаФорма.Элементы.Ответы.ПодчиненныеЭлементы.ОтветыОтвет.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокОтветов(ТекущиеДанные.Вопрос));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокОтветов(ТекущийВопрос)
	
	Возврат ТекущийВопрос.ВариантыОтветов.ВыгрузитьКолонку("Ответ");
	
КонецФункции	

&НаКлиенте
Процедура ОтветыПриИзменении(Элемент)
	
	ОтветыПриИзмененииНаСервере();
	    	
КонецПроцедуры

&НаСервере
Процедура ОтветыПриИзмененииНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Документы.ПроверкаЗнанийСотрудника.ЗаполнитьТаблицуРезультатов(ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьПоОснованиюНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.ПроверкаЗнанийСотрудника.ЗаполнитьТаблицуОтветов(ТекущийОбъект,"ПоОснованию");
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОснованию(Команда)
	
	ЗаполнитьПоОснованиюНаСервере();
	
КонецПроцедуры
