#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроверкаЗнанийСотрудникаОтветы.Ссылка.Дата КАК Период,
	|	ПроверкаЗнанийСотрудникаОтветы.Ссылка.Организация КАК Организация,
	|	ПроверкаЗнанийСотрудникаОтветы.Сотрудник КАК Сотрудник,
	|	ПроверкаЗнанийСотрудникаОтветы.Ссылка.Тест КАК Тест,
	|	ПроверкаЗнанийСотрудникаОтветы.Вопрос КАК Вопрос,
	|	ПроверкаЗнанийСотрудникаОтветы.Ответ КАК Ответ,
	|	ПроверкаЗнанийСотрудникаОтветы.Правильный КАК Правильный
	|ИЗ
	|	Документ.ПроверкаЗнанийСотрудника.Ответы КАК ПроверкаЗнанийСотрудникаОтветы
	|ГДЕ
	|	ПроверкаЗнанийСотрудникаОтветы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка.Дата КАК Период,
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка.Организация КАК Организация,
	|	ПроверкаЗнанийСотрудникаРезультаты.Сотрудник КАК Сотрудник,
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка.Тест КАК Тест,
	|	ИСТИНА КАК Проводить,
	|	ПроверкаЗнанийСотрудникаРезультаты.Сдал КАК Выполнено
	|ИЗ
	|	Документ.ПроверкаЗнанийСотрудника.Результаты КАК ПроверкаЗнанийСотрудникаРезультаты
	|ГДЕ
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений.Вставить("ТаблицаРезультатыПроверкиЗнанийСотрудников", 	Результат[0].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПриказыНаПроведениеПроверкиЗнаний", 	Результат[1].Выгрузить());
	
КонецПроцедуры	

Процедура ЗаполнитьДокумент(ТекущийОбъект,Основание) Экспорт
	
	ТекущийОбъект.Организация 			= Основание.Организация;
	ТекущийОбъект.ДокументОснование 	= Основание;
	ТекущийОбъект.НомерПриказа 			= Основание.Номер;
	ТекущийОбъект.ДатаПриказа 			= Основание.Дата;
	ТекущийОбъект.Тест 					= Основание.Тест;
	ТекущийОбъект.ПредседательКомиссии 	= Основание.ПредседательКомиссии;
	ТекущийОбъект.ЧленКомиссии1 		= Основание.ЧленКомиссии1;
	ТекущийОбъект.ЧленКомиссии2 		= Основание.ЧленКомиссии2;
	ТекущийОбъект.ЧленКомиссии3 		= Основание.ЧленКомиссии3;
	
	ЗаполнитьТаблицуОтветов(ТекущийОбъект,"ПоОснованию");
	
КонецПроцедуры

//Процедура заполняет табличную часть документа-объекта в зависимости от вида заполнения
//Параметры:
//ТекущийОбъект - документ-объект, который заполняется
//ВидЗаполнения - строка - может принимать значения: "ПоОснованию" и "ПоСотрудникам"
//ЗначениеПараметраЗаполнения - значение, по которому заполняется документ-объект типа "Сотрудники"
//
Процедура ЗаполнитьТаблицуОтветов(ТекущийОбъект,ВидЗаполнения,ЗначениеПараметраЗаполнения = Неопределено) Экспорт
	
	ТекущийОбъект.Ответы.Очистить();
	
	ДатаАнализа = ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Тест",		ТекущийОбъект.Тест);
	Запрос.УстановитьПараметр("ДатаАнализа",ДатаАнализа);
	Запрос.УстановитьПараметр("Организация",ТекущийОбъект.Организация);
	
	Если ВидЗаполнения = "ПоОснованию" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_ЗРМ
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&ДатаАнализа, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПриказыНаПроведениеПроверкиЗнанийСрезПоследних.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_Приказы
		|ИЗ
		|	РегистрСведений.ПриказыНаПроведениеПроверкиЗнаний.СрезПоследних(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Тест = &Тест) КАК ПриказыНаПроведениеПроверкиЗнанийСрезПоследних
		|ГДЕ
		|	ПриказыНаПроведениеПроверкиЗнанийСрезПоследних.Проводить
		|	И НЕ ПриказыНаПроведениеПроверкиЗнанийСрезПоследних.Выполнено
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриказНаПроведениеПроверкиЗнанийРаботники.Сотрудник КАК Сотрудник,
		|	ПриказНаПроведениеПроверкиЗнанийРаботники.Ссылка.Тест КАК Тест
		|ПОМЕСТИТЬ ВТ_Результат
		|ИЗ
		|	Документ.ПриказНаПроведениеПроверкиЗнаний.Работники КАК ПриказНаПроведениеПроверкиЗнанийРаботники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗРМ КАК ВТ_ЗРМ
		|		ПО ПриказНаПроведениеПроверкиЗнанийРаботники.Сотрудник = ВТ_ЗРМ.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Приказы КАК ВТ_Приказы
		|		ПО ПриказНаПроведениеПроверкиЗнанийРаботники.Сотрудник = ВТ_Приказы.Сотрудник
		|ГДЕ
		|	ПриказНаПроведениеПроверкиЗнанийРаботники.Ссылка = &Ссылка
		|	И ПриказНаПроведениеПроверкиЗнанийРаботники.Ссылка.Проведен
		|	И ПриказНаПроведениеПроверкиЗнанийРаботники.Проводить
		|	И НЕ ВТ_ЗРМ.Сотрудник ЕСТЬ NULL
		|	И НЕ ВТ_Приказы.Сотрудник ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Результат.Сотрудник КАК Сотрудник,
		|	ТестыВопросы.Вопрос КАК Вопрос,
		|	ЗНАЧЕНИЕ(Справочник.Ответы.ПустаяСсылка) КАК Ответ,
		|	ЛОЖЬ КАК Правильный
		|ИЗ
		|	ВТ_Результат КАК ВТ_Результат
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Тесты.Вопросы КАК ТестыВопросы
		|		ПО ВТ_Результат.Тест = ТестыВопросы.Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка",	ТекущийОбъект.ДокументОснование);
		
		ТекущийОбъект.Ответы.Загрузить(Запрос.Выполнить().Выгрузить());
		
	ИначеЕсли ВидЗаполнения = "ПоСотрудникам" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_ЗРМ
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&ДатаАнализа, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сотрудники.Ссылка КАК Сотрудник,
		|	ТестыВопросы.Вопрос КАК Вопрос
		|ИЗ
		|	Справочник.Тесты.Вопросы КАК ТестыВопросы,
		|	Справочник.Сотрудники КАК Сотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗРМ КАК ВТ_ЗРМ
		|		ПО Сотрудники.Ссылка = ВТ_ЗРМ.Сотрудник
		|ГДЕ
		|	Сотрудники.Ссылка В(&МассивСотрудников)
		|	И ТестыВопросы.Ссылка = &Тест
		|	И НЕ ВТ_ЗРМ.Сотрудник ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудники.Наименование,
		|	ТестыВопросы.НомерСтроки";
		
		Запрос.УстановитьПараметр("МассивСотрудников",	ЗначениеПараметраЗаполнения);
		
		ТекущийОбъект.Ответы.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
	ЗаполнитьТаблицуРезультатов(ТекущийОбъект);
	
КонецПроцедуры	

Процедура ЗаполнитьТаблицуРезультатов(ТекущийОбъект) Экспорт
	
	ТекущийОбъект.Результаты.Очистить();
	
	ТаблицаОтветов = ТекущийОбъект.Ответы.Выгрузить();
	
	ТаблицаСотрудников = ТаблицаОтветов.Скопировать(,"Сотрудник");
	ТаблицаСотрудников.Свернуть("Сотрудник");
	
	Для Каждого СтрокаТаблицыСотрудников Из ТаблицаСотрудников Цикл
		
		НайденныеСтроки = ТаблицаОтветов.НайтиСтроки(НОВЫЙ Структура("Сотрудник",СтрокаТаблицыСотрудников.Сотрудник));
		
		КоличествоПравильных 	= 0;
		КоличествоНеПравильных 	= 0;
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			Если НайденнаяСтрока.Правильный Тогда
				КоличествоПравильных 	= КоличествоПравильных + 1;
			Иначе
				КоличествоНеПравильных 	= КоличествоНеПравильных + 1;
			КонецЕсли;
			
		КонецЦикла;	
		
		ТекущийРезультат = "Правильных ответов - "  + КоличествоПравильных + ". Неправильных ответов - " + КоличествоНеПравильных + ".";
		
		НоваяСтрока 			= ТекущийОбъект.Результаты.Добавить();
		НоваяСтрока.Сотрудник 	= СтрокаТаблицыСотрудников.Сотрудник;
		НоваяСтрока.Результат 	= ТекущийРезультат;
		НоваяСтрока.Сдал 		= (КоличествоНеПравильных = 0);
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПротоколПроверкиЗнаний") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм, 
		"ПротоколПроверкиЗнаний",
		"Протокол проверки знаний",
		СформироватьПечатнуюФормуПротоколаПроверкиЗнаний(МассивОбъектов, ОбъектыПечати),,"Документ.ПроверкаЗнанийСотрудника.ПФ_MXL_Протокол");
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УдостоверениеОПроверкеЗнаний") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм, 
		"УдостоверениеОПроверкеЗнаний",
		"Удостоверение о проверке знаний",
		СформироватьПечатнуюФормуУдостоверенияОПроверкеЗнаний(МассивОбъектов, ОбъектыПечати),,"Документ.ПроверкаЗнанийСотрудника.ПФ_MXL_Удостоверение");
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ПроверкаЗнанийСотрудника";
	КомандаПечати.Идентификатор = "ПротоколПроверкиЗнаний";
	КомандаПечати.Представление = НСтр("ru = 'Протокол проверки знаний'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ПроверкаЗнанийСотрудника";
	КомандаПечати.Идентификатор = "УдостоверениеОПроверкеЗнаний";
	КомандаПечати.Представление = НСтр("ru = 'Удостоверение о проверке знаний'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуПротоколаПроверкиЗнаний(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент 						= Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб 			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПроверкаЗнанийСотрудника_ПротоколПроверкиЗнаний";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПроверкаЗнанийСотрудника.ПФ_MXL_Протокол");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Должность КАК Должность,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_ОсновныеМестаРаботы
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(&ДатаАнализа, ) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверкаЗнанийСотрудника.Ссылка КАК Ссылка,
	|	ПроверкаЗнанийСотрудника.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	ПроверкаЗнанийСотрудника.Номер КАК НомерДокумента,
	|	ПроверкаЗнанийСотрудника.Дата КАК ДатаДокумента,
	|	ВЫБОР
	|		КОГДА ПроверкаЗнанийСотрудника.ДокументОснование = ЗНАЧЕНИЕ(Документ.ПриказНаПроведениеПроверкиЗнаний.ПустаяСсылка)
	|			ТОГДА ПроверкаЗнанийСотрудника.НомерПриказа
	|		ИНАЧЕ ПроверкаЗнанийСотрудника.ДокументОснование.Номер
	|	КОНЕЦ КАК НомерПриказа,
	|	ВЫБОР
	|		КОГДА ПроверкаЗнанийСотрудника.ДокументОснование = ЗНАЧЕНИЕ(Документ.ПриказНаПроведениеПроверкиЗнаний.ПустаяСсылка)
	|			ТОГДА ПроверкаЗнанийСотрудника.ДатаПриказа
	|		ИНАЧЕ ПроверкаЗнанийСотрудника.ДокументОснование.Дата
	|	КОНЕЦ КАК ДатаПриказа,
	|	ПроверкаЗнанийСотрудника.ПредседательКомиссии КАК ПредседательКомиссии,
	|	ПроверкаЗнанийСотрудника.ЧленКомиссии1 КАК ЧленКомиссии1,
	|	ПроверкаЗнанийСотрудника.ЧленКомиссии2 КАК ЧленКомиссии2,
	|	ПроверкаЗнанийСотрудника.ЧленКомиссии3 КАК ЧленКомиссии3,
	|	ПроверкаЗнанийСотрудника.Тест.Наименование КАК ПредставлениеТеста,
	|	ВТ_ОсновныеМестаРаботы.Должность.Наименование КАК ДолжностьПредседателяКомиссии,
	|	ВТ_ОсновныеМестаРаботы1.Должность.Наименование КАК ДолжностьЧленаКомиссии1,
	|	ВТ_ОсновныеМестаРаботы2.Должность.Наименование КАК ДолжностьЧленаКомиссии2,
	|	ВТ_ОсновныеМестаРаботы3.Должность.Наименование КАК ДолжностьЧленаКомиссии3
	|ИЗ
	|	Документ.ПроверкаЗнанийСотрудника КАК ПроверкаЗнанийСотрудника
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеМестаРаботы КАК ВТ_ОсновныеМестаРаботы
	|		ПО ПроверкаЗнанийСотрудника.ПредседательКомиссии = ВТ_ОсновныеМестаРаботы.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеМестаРаботы КАК ВТ_ОсновныеМестаРаботы1
	|		ПО ПроверкаЗнанийСотрудника.ЧленКомиссии1 = ВТ_ОсновныеМестаРаботы1.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеМестаРаботы КАК ВТ_ОсновныеМестаРаботы2
	|		ПО ПроверкаЗнанийСотрудника.ЧленКомиссии2 = ВТ_ОсновныеМестаРаботы2.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеМестаРаботы КАК ВТ_ОсновныеМестаРаботы3
	|		ПО ПроверкаЗнанийСотрудника.ЧленКомиссии3 = ВТ_ОсновныеМестаРаботы3.Сотрудник
	|ГДЕ
	|	ПроверкаЗнанийСотрудника.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка КАК Ссылка,
	|	ПроверкаЗнанийСотрудникаРезультаты.Сотрудник КАК ПредставлениеСотрудника,
	|	ВЫБОР
	|		КОГДА ПроверкаЗнанийСотрудникаРезультаты.Сдал
	|			ТОГДА ""Сдал""
	|		ИНАЧЕ ""Не сдал""
	|	КОНЕЦ КАК Сдал,
	|	ПроверкаЗнанийСотрудникаРезультаты.Примечание КАК Примечание,
	|	ПроверкаЗнанийСотрудникаРезультаты.Результат КАК Результат,
	|	ЕСТЬNULL(ВТ_ОсновныеМестаРаботы.Должность.Наименование, ""Не определена"") КАК Должность,
	|	ЕСТЬNULL(ВТ_ОсновныеМестаРаботы.Подразделение.Наименование, ""Не определено"") КАК Подразделение
	|ИЗ
	|	Документ.ПроверкаЗнанийСотрудника.Результаты КАК ПроверкаЗнанийСотрудникаРезультаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеМестаРаботы КАК ВТ_ОсновныеМестаРаботы
	|		ПО ПроверкаЗнанийСотрудникаРезультаты.Сотрудник = ВТ_ОсновныеМестаРаботы.Сотрудник
	|ГДЕ
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДатаАнализа", 	ТекущаяДата());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокументов 	= Результат[1].Выгрузить();
	ТаблицаРезультатов 	= Результат[2].Выгрузить();
	
	Если ТаблицаДокументов.Количество() = 0 Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;	
	
	ПервыйДокумент = Истина;
	
	СчетчикСтрок = 0;
	
	Для Каждого СтрокаТаблицыДокументов Из ТаблицаДокументов Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		Область = Макет.ПолучитьОбласть("Заголовок");
		Область.Параметры.Заполнить(СтрокаТаблицыДокументов);
		Область.Параметры.ДатаДокумента = Формат(СтрокаТаблицыДокументов.ДатаДокумента,"ДЛФ=DD");
		
		//представление приказа
		Если ЗначениеЗаполнено(СтрокаТаблицыДокументов.НомерПриказа) Тогда
		    ПредставлениеПриказа = СтрокаТаблицыДокументов.НомерПриказа + " от ";
		Иначе
			ПредставлениеПриказа = "___________ от ";
		КонецЕсли;	
		Если ЗначениеЗаполнено(СтрокаТаблицыДокументов.ДатаПриказа) Тогда
			ПредставлениеПриказа = ПредставлениеПриказа + Формат(СтрокаТаблицыДокументов.ДатаПриказа,"ДЛФ=DD");
		Иначе
			ПредставлениеПриказа = ПредставлениеПриказа + "___________________________";
		КонецЕсли;
		Область.Параметры.ПредставлениеПриказа = ПредставлениеПриказа;
		
		//председатель
		ПредставлениеПредседателя = ФизическиеЛица.ФамилияИнициалыФизЛица(СтрокаТаблицыДокументов.ПредседательКомиссии.ФизическоеЛицо);
		Если ЗначениеЗаполнено(СтрокаТаблицыДокументов.ДолжностьПредседателяКомиссии) Тогда
			ПредставлениеСотрудника = СтрокаТаблицыДокументов.ДолжностьПредседателяКомиссии + ", " + ПредставлениеПредседателя;
		Иначе
			ПредставлениеСотрудника = ПредставлениеПредседателя;
		КонецЕсли;
		Область.Параметры.ПредставлениеПредседателя = ПредставлениеСотрудника;
		
		//член комиссии 1
		ПредставлениеЧленаКомиссии1 = ФизическиеЛица.ФамилияИнициалыФизЛица(СтрокаТаблицыДокументов.ЧленКомиссии1.ФизическоеЛицо);
		Если ЗначениеЗаполнено(СтрокаТаблицыДокументов.ДолжностьЧленаКомиссии1) Тогда
			ПредставлениеСотрудника = СтрокаТаблицыДокументов.ДолжностьЧленаКомиссии1 + ", " + ПредставлениеЧленаКомиссии1;
		Иначе
			ПредставлениеСотрудника = ПредставлениеЧленаКомиссии1;
		КонецЕсли;
		Область.Параметры.ПредставлениеЧленаКомиссии1 = ПредставлениеСотрудника;
		
		//член комиссии 2
		ПредставлениеЧленаКомиссии2 = ФизическиеЛица.ФамилияИнициалыФизЛица(СтрокаТаблицыДокументов.ЧленКомиссии2.ФизическоеЛицо);
		Если ЗначениеЗаполнено(СтрокаТаблицыДокументов.ДолжностьЧленаКомиссии2) Тогда
			ПредставлениеСотрудника = СтрокаТаблицыДокументов.ДолжностьЧленаКомиссии2 + ", " + ПредставлениеЧленаКомиссии2;
		Иначе
			ПредставлениеСотрудника = ПредставлениеЧленаКомиссии2;
		КонецЕсли;
		Область.Параметры.ПредставлениеЧленаКомиссии2 = ПредставлениеСотрудника;
		
		//член комиссии 3
		ПредставлениеЧленаКомиссии3 = ФизическиеЛица.ФамилияИнициалыФизЛица(СтрокаТаблицыДокументов.ЧленКомиссии3.ФизическоеЛицо);
		Если ЗначениеЗаполнено(СтрокаТаблицыДокументов.ДолжностьЧленаКомиссии3) Тогда
			ПредставлениеСотрудника = СтрокаТаблицыДокументов.ДолжностьЧленаКомиссии3 + ", " + ПредставлениеЧленаКомиссии3;
		Иначе
			ПредставлениеСотрудника = ПредставлениеЧленаКомиссии3;
		КонецЕсли;
		Область.Параметры.ПредставлениеЧленаКомиссии3 = ПредставлениеСотрудника;		
		
		ТабличныйДокумент.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Шапка");
		ТабличныйДокумент.Вывести(Область);
			
		НайденныеРезультаты = ТаблицаРезультатов.НайтиСтроки(НОВЫЙ Структура("Ссылка",СтрокаТаблицыДокументов.Ссылка));
		
		Для Каждого НайденныйРезультат Из НайденныеРезультаты Цикл
			
			Область = Макет.ПолучитьОбласть("Строка");
		    Область.Параметры.Заполнить(НайденныйРезультат);
			ТабличныйДокумент.Вывести(Область);
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.ПредставлениеПредседателя 	= ПредставлениеПредседателя;
		Область.Параметры.ПредставлениеЧленаКомиссии1 	= ПредставлениеЧленаКомиссии1;
		Область.Параметры.ПредставлениеЧленаКомиссии2 	= ПредставлениеЧленаКомиссии2;
		Область.Параметры.ПредставлениеЧленаКомиссии3 	= ПредставлениеЧленаКомиссии3;
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, СтрокаТаблицыДокументов.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуУдостоверенияОПроверкеЗнаний(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент 						= Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб 			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПроверкаЗнанийСотрудника_УдостоверениеОПроверкеЗнаний";
	ТабличныйДокумент.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПроверкаЗнанийСотрудника.ПФ_MXL_Удостоверение");
	
	Запрос = Новый Запрос;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Должность КАК Должность,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_ОсновныеМестаРаботы
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(&ДатаАнализа, ) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка КАК Ссылка,
	|	ПроверкаЗнанийСотрудникаРезультаты.Сотрудник КАК ПредставлениеСотрудника,
	|	ЕСТЬNULL(ВТ_ОсновныеМестаРаботы.Должность.Наименование, ""Не определена"") КАК Должность,
	|	ЕСТЬNULL(ВТ_ОсновныеМестаРаботы.Подразделение.Наименование, ""Не определено"") КАК Подразделение,
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка.Организация.ИНН КАК ОрганизацияИНН,
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка.ПредседательКомиссии КАК ПредседательКомиссии,
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка.Номер КАК Номер,
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка.Дата КАК Дата,
	|	ПроверкаЗнанийСотрудникаРезультаты.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ПроверкаЗнанийСотрудника.Результаты КАК ПроверкаЗнанийСотрудникаРезультаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеМестаРаботы КАК ВТ_ОсновныеМестаРаботы
	|		ПО ПроверкаЗнанийСотрудникаРезультаты.Сотрудник = ВТ_ОсновныеМестаРаботы.Сотрудник
	|ГДЕ
	|	ПроверкаЗнанийСотрудникаРезультаты.Ссылка В(&МассивОбъектов)
	|	И ПроверкаЗнанийСотрудникаРезультаты.Сдал
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДатаАнализа", 	ТекущаяДата());
	
	ТаблицаРезультатов 	=  Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаРезультатов.Количество() = 0 Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;	
	
	ПервыйДокумент = Истина;
	
	СчетчикСтрок = 0;
	
	Для Каждого СтрокаТаблицыРезультатов Из ТаблицаРезультатов Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		Область = Макет.ПолучитьОбласть("Удостоверение");
		Область.Параметры.Заполнить(СтрокаТаблицыРезультатов);
		
		//представление номера
		//серия: 1-я группа - "RU", 2-я группа - 0 (для организаторов обучения), 3-я группа - ИНН организации
		//номер: 1-я группа - 2 последние цифры года, 2-я группа - номер протокола, 3-я группа - номер проверяемого (номер строки)
		Серия = "RU0" + СтрокаТаблицыРезультатов.ОрганизацияИНН;
		Номер = Прав(Формат(Год(СтрокаТаблицыРезультатов.Дата),"ЧГ="),2) + "-" + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаТаблицыРезультатов.Номер,Истина,Истина) + "-" + СтрокаТаблицыРезультатов.НомерСтроки;
		Область.Параметры.ПредставлениеНомера = Серия + " " + Номер;
		
		//представление протокола
		Область.Параметры.ПредставлениеПротокола = "от " + Формат(СтрокаТаблицыРезультатов.Дата,"ДФ='dd MMMM yyyy'") + " года №" + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтрокаТаблицыРезультатов.Номер,Истина,Истина);
		
		//председатель
		Область.Параметры.ПредставлениеПредседателя = ФизическиеЛица.ФамилияИнициалыФизЛица(СтрокаТаблицыРезультатов.ПредседательКомиссии.ФизическоеЛицо);
		
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, СтрокаТаблицыРезультатов.Ссылка);
		
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецЕсли