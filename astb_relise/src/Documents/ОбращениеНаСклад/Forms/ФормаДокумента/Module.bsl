
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект,НОВЫЙ Структура("ИмяЭлементаДляРазмещения","ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства
	
	ОтправитьУведомление = Ложь;
	
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовФормы()
	
	Элементы.Страницы.ПодчиненныеЭлементы.ГруппаПолучение.Видимость = (Объект.КатегорияОбращения = Справочники.КатегорииОбращенияНаСклад.ЗаявкаНаПолучение);
	Элементы.МестоПолучения.Видимость = (Объект.КатегорияОбращения = Справочники.КатегорииОбращенияНаСклад.ЗаявкаНаПолучение);
	Элементы.ОтправитьSMS.Видимость = МожноОтправитьSMS();
	
КонецПроцедуры	

&НаСервере
Функция МожноОтправитьSMS()
	
	Если НЕ Объект.Проведен Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СогласияНаИнформированиеСрезПоследних.Организация КАК Организация,
	|	СогласияНаИнформированиеСрезПоследних.Сотрудник КАК Сотрудник,
	|	СогласияНаИнформированиеСрезПоследних.SMS КАК SMS,
	|	СогласияНаИнформированиеСрезПоследних.Email КАК Email
	|ИЗ
	|	РегистрСведений.СогласияНаИнформирование.СрезПоследних(
	|			&ДатаАнализа,
	|			Организация = &Организация
	|				И Сотрудник = &Сотрудник) КАК СогласияНаИнформированиеСрезПоследних
	|ГДЕ
	|	СогласияНаИнформированиеСрезПоследних.SMS";
	
	Запрос.УстановитьПараметр("ДатаАнализа",ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Объект.Ссылка));
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	Запрос.УстановитьПараметр("Сотрудник",	Объект.Сотрудник);
	
	Результат = Запрос.Выполнить();
	
	Если ЗначениеЗаполнено(Объект.СодержаниеОтвета) И НЕ Результат.Пустой() И НЕ Модифицированность Тогда
		УстановитьЗаголовокКнопкиОтправкиSMS();
		Возврат Истина;
	Иначе
		Возврат Ложь;	
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УстановитьЗаголовокКнопкиОтправкиSMS()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СообщениеSMS.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СообщениеSMS КАК СообщениеSMS
	|ГДЕ
	|	СообщениеSMS.ВзаимодействиеОснование = &ВзаимодействиеОснование";
	
	Запрос.УстановитьПараметр("ВзаимодействиеОснование",Объект.Ссылка);
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		Элементы.ОтправитьSMS.Заголовок = "Отправить SMS повторно";
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВА"

// СтандартныеПодсистемы.Свойства
 &НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ...

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНастройкуУведомленияОбОбработкеОбращений(ВнешнийПользователь)
	
	Если ЗначениеЗаполнено(ВнешнийПользователь.ОбъектАвторизации) Тогда
		
		Возврат ВнешнийПользователь.ОбъектАвторизации.УведомлятьОбОбработкеОбращений;
		
	Иначе
		
	    Возврат Ложь;
		
	КонецЕсли;	
	
КонецФункции	

&НаКлиенте
Процедура ДатаОтветаПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.СоздательДокумента) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
		
		ОтправитьУведомление = (ПолучитьНастройкуУведомленияОбОбработкеОбращений(Объект.СоздательДокумента) И ОтправкаPUSHВызовСервера.МожноОтправлятьУведомления(Объект.СоздательДокумента));
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбращенияПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.СоздательДокумента) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
		
		ОтправитьУведомление = (ПолучитьНастройкуУведомленияОбОбработкеОбращений(Объект.СоздательДокумента) И ОтправкаPUSHВызовСервера.МожноОтправлятьУведомления(Объект.СоздательДокумента));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СодержаниеОтветаПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.СоздательДокумента) = Тип("СправочникСсылка.ВнешниеПользователи") Тогда
		
		ОтправитьУведомление = (ПолучитьНастройкуУведомленияОбОбработкеОбращений(Объект.СоздательДокумента) И ОтправкаPUSHВызовСервера.МожноОтправлятьУведомления(Объект.СоздательДокумента));
		
	КонецЕсли;
	
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ОтправитьУведомление Тогда
		
		Уведомление = Новый ДоставляемоеУведомление;
		Уведомление.Данные = "ОбратнаяСвязь";
		Уведомление.Текст = "Обработано Ваше обращение №" + Объект.Номер + " от " + Формат(Объект.Дата,"ДФ=dd.MM.yyyy");
		ОтправкаPUSHВызовСервера.ОтправитьУведомление(Уведомление,Объект.СоздательДокумента.ОбъектАвторизации, Перечисления.ВидыУведомлений.ОбработкаОбращения);
		
	КонецЕсли;	
	
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТоварыНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.ОбращениеНаСклад.ЗаполнитьТаблицуДокумента(ТекущийОбъект);
	
	ЗаполнитьСодержаниеОбращенияНаСервере(ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
	Модифицированность = Истина;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСодержаниеОбращенияНаСервере(ТекущийОбъект)
	
	ТекущийОбъект.СодержаниеОбращения = "";	
	
	Сч = 1;
	
	Для Каждого СтрокаТаблицы Из ТекущийОбъект.Товары Цикл
		
		Если СтрокаТаблицы.Отказ Тогда
			Продолжить;
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
			
			ТекущаяНоменклатура = СтрокаТаблицы.Номенклатура.Наименование;
			
		Иначе
			
			ТекущаяНоменклатура = "<Номенклатура не выбрана>";
			
		КонецЕсли;	
		
		Если НЕ ЗначениеЗаполнено(ТекущийОбъект.СодержаниеОбращения) Тогда
			
			ТекущийОбъект.СодержаниеОбращения = Строка(Сч) + ". " + ТекущаяНоменклатура + ?(ЗначениеЗаполнено(СтрокаТаблицы.ХарактеристикаНоменклатуры)," (" + СтрокаТаблицы.ХарактеристикаНоменклатуры.Наименование + ")","") + " количество: " + СтрокаТаблицы.Количество;
			
		Иначе
			
			ТекущийОбъект.СодержаниеОбращения = ТекущийОбъект.СодержаниеОбращения + Символы.ПС + Строка(Сч) + ". " + ТекущаяНоменклатура + ?(ЗначениеЗаполнено(СтрокаТаблицы.ХарактеристикаНоменклатуры)," (" + СтрокаТаблицы.ХарактеристикаНоменклатуры.Наименование + ")","") + " количество: " + СтрокаТаблицы.Количество;
			
		КонецЕсли;
		
		Сч = Сч + 1; 
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТовары(Команда)
	
	ЗаполнитьТоварыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КатегорияОбращенияПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементовФормы();
	
	Если НЕ Объект.КатегорияОбращения = ПредопределенноеЗначение("Справочник.КатегорииОбращенияНаСклад.ЗаявкаНаПолучение") И НЕ Объект.Товары.Количество() = 0 Тогда
		
	    Объект.Товары.Очистить();
		Объект.СодержаниеОтвета = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Не Объект.Товары.Количество() = 0 ТОгда
		
		Объект.Товары.Очистить();
	    Объект.СодержаниеОтвета = "";
		
	КонецЕсли;	
	
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	Если Не Объект.Товары.Количество() = 0 ТОгда
		
		Объект.Товары.Очистить();
	    Объект.СодержаниеОтвета = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Если Не Объект.Товары.Количество() = 0 ТОгда
		
		Объект.Товары.Очистить();
	    Объект.СодержаниеОтвета = "";
		
	КонецЕсли;
	
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ТоварыНормаВыдачи" Тогда
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
		Если ЗначениеЗаполнено(ТекущиеДанные.НормаВыдачи) Тогда
			ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.НормаВыдачи);
			ОткрытьФорму("Справочник.НормыВыдачиСИЗ.Форма.ФормаЭлемента", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииЯчейки(Элемент)
	
	Если Элементы.Товары.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыНоменклатура" Тогда
		
		ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ТоварыНоменклатура.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокНоменклатурыВыдачи(ТекущиеДанные.НоменклатураНормы,Объект.Сотрудник));
		
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТоварыНоменклатураНормы" Тогда	
		
		//список нужен, если используются группы "ИЛИ"
		Если ПолучитьОпциюОрганизации(Объект.Организация,"ИспользоватьГруппыИЛИ") Тогда
			ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ТоварыНоменклатураНормы.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьСписокНоменклатурыНормыПоНормеВыдачи(ТекущиеДанные.НормаВыдачи));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокНоменклатурыВыдачи(НоменклатураНормы,Сотрудник)
	
	МассивСотрудников = Новый Массив;
	МассивСотрудников.Добавить(Сотрудник);
	
	ДатаАнализа = ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Объект.Ссылка);
	
	ТаблицаЗанятыхРМ 			= ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуЗанятыхРабочихМестСУсловиями(МассивСотрудников,Объект.Организация,ДатаАнализа);
	ТаблицаУстановленныхНорм 	= ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуУстановленныхНорм(Объект.Организация,ДатаАнализа,ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Подразделение"),ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Должность"));
	ТаблицаСНормами 			= ПроцедурыРаботыСНормамиСервер.ПодобратьНормы(ТаблицаЗанятыхРМ,ТаблицаУстановленныхНорм.Скопировать(НОВЫЙ Структура("НоменклатураНормы",НоменклатураНормы)),Объект.Организация,ДатаАнализа,"Сотрудник,Подразделение,Должность,НоменклатураНормы,Использовать");
	
	ТаблицаСоответствия = ПроцедурыРаботыСНормамиСервер.ПолучитьСоответствияНоменклатурыДляСотрудника(ТаблицаСНормами,?(ЗначениеЗаполнено(Объект.Ссылка),ДатаАнализа,ТекущаяДата()),НоменклатураНормы);
	
	Возврат ТаблицаСоответствия.ВыгрузитьКолонку("Номенклатура");
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОпциюОрганизации(Организация,НаименованиеОпции)
	
	Возврат Организация[НаименованиеОпции];
	
КонецФункции

&НаСервере
Процедура ТоварыПриИзмененииНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	ЗаполнитьСодержаниеОбращенияНаСервере(ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	ТоварыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОтказПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные.Отказ Тогда
		ТекущиеДанные.Номенклатура 					= ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		ТекущиеДанные.ХарактеристикаНоменклатуры 	= ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
	Иначе
		ТекущиеДанные.ПричинаОтказа = ПредопределенноеЗначение("Справочник.ПричиныНевыдачиСИЗ.ПустаяСсылка");
	КонецЕсли;     	
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьSMSНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивСотрудников = Новый Массив;
	МассивСотрудников.Добавить(Объект.Сотрудник);
	
	МассивАдресатов = Справочники.Сотрудники.ПолучитьМассивАдресатовSMS(МассивСотрудников);
	
	Если МассивАдресатов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	 
	
	НовоеСообщениеSMS 							= Документы.СообщениеSMS.СоздатьДокумент();
	НовоеСообщениеSMS.ТекстСообщения 			= Объект.СодержаниеОтвета;
	НовоеСообщениеSMS.ВзаимодействиеОснование 	= Объект.Ссылка;
	НовоеСообщениеSMS.Важность 					= Перечисления.ВариантыВажностиВзаимодействия.Обычная;
	НовоеСообщениеSMS.Ответственный 			= ПараметрыСеанса.ТекущийПользователь;
	НовоеСообщениеSMS.Автор 					= ПараметрыСеанса.ТекущийПользователь;
	НовоеСообщениеSMS.Дата 						= ТекущаяДата();
	
	Для Каждого ЭлементМассива Из МассивАдресатов Цикл
		
		НоваяСтрока 						= НовоеСообщениеSMS.Адресаты.Добавить();
		НоваяСтрока.КакСвязаться          	= ЭлементМассива.Телефон;
		НоваяСтрока.НомерДляОтправки        = ЭлементМассива.НомерДляОтправки;
		НоваяСтрока.ПредставлениеКонтакта 	= ЭлементМассива.Представление;
		НоваяСтрока.Контакт               	= ЭлементМассива.ИсточникКонтактнойИнформации;
		
	КонецЦикла;
	
	ВзаимодействияКлиентСервер.УстановитьСостояниеИсходящееДокументСообщениеSMS(НовоеСообщениеSMS);
	
	НовоеСообщениеSMS.УстановитьНовыйНомер();
	НовоеСообщениеSMS.Записать(РежимЗаписиДокумента.Запись);
	
	УстановитьЗаголовокКнопкиОтправкиSMS();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьSMS(Команда)
	
	ОтправитьSMSНаСервере();
	
КонецПроцедуры
