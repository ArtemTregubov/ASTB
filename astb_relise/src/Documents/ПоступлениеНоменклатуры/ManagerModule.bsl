#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	               |	ПоступлениеНоменклатурыТовары.Номенклатура КАК Номенклатура,
	               |	ПоступлениеНоменклатурыТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ПоступлениеНоменклатурыТовары.ДокументВыдачи КАК ДокументВыдачи,
	               |	ПоступлениеНоменклатурыТовары.Количество КАК Количество,
	               |	ПоступлениеНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
	               |	ПоступлениеНоменклатурыТовары.Ссылка.Склад КАК Склад,
	               |	&ОрганизацияДляОстатков КАК Организация,
	               |	ПоступлениеНоменклатурыТовары.Ссылка.Дата КАК Период,
	               |	ПоступлениеНоменклатурыТовары.ЗаказПоставщику КАК ЗаказПоставщику
	               |ИЗ
	               |	Документ.ПоступлениеНоменклатуры.Товары КАК ПоступлениеНоменклатурыТовары
	               |ГДЕ
	               |	ПоступлениеНоменклатурыТовары.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	               |	ПоступлениеНоменклатурыТовары.Номенклатура КАК Номенклатура,
	               |	ПоступлениеНоменклатурыТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ПоступлениеНоменклатурыТовары.ДокументВыдачи КАК ДокументВыдачи,
	               |	ВЫБОР
	               |		КОГДА ПоступлениеНоменклатурыТовары.Количество > ЕСТЬNULL(ОстаткиЗаказовПоставщику.КоличествоОстаток, 0)
	               |			ТОГДА ЕСТЬNULL(ОстаткиЗаказовПоставщику.КоличествоОстаток, 0)
	               |		ИНАЧЕ ПоступлениеНоменклатурыТовары.Количество
	               |	КОНЕЦ КАК Количество,
	               |	ПоступлениеНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
	               |	ПоступлениеНоменклатурыТовары.ЗаказПоставщику.Склад КАК Склад,
	               |	ВЫБОР
	               |		КОГДА ПоступлениеНоменклатурыТовары.ЗаказПоставщику = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	               |			ТОГДА ПоступлениеНоменклатурыТовары.Ссылка.Организация
	               |		ИНАЧЕ ПоступлениеНоменклатурыТовары.ЗаказПоставщику.Организация
	               |	КОНЕЦ КАК Организация,
	               |	ПоступлениеНоменклатурыТовары.Ссылка.Дата КАК Период,
	               |	ПоступлениеНоменклатурыТовары.ЗаказПоставщику КАК ЗаказПоставщику
	               |ИЗ
	               |	Документ.ПоступлениеНоменклатуры.Товары КАК ПоступлениеНоменклатурыТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЗаказыПоставщикуОстатки.Номенклатура КАК Номенклатура,
	               |			ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |			ЗаказыПоставщикуОстатки.ДокументВыдачи КАК ДокументВыдачи,
	               |			СУММА(ЗаказыПоставщикуОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	               |			ЗаказыПоставщикуОстатки.ЗаказПоставщику КАК ЗаказПоставщику
	               |		ИЗ
	               //АсТБ_Alexey_79639_********************************************************************
	               |			РегистрНакопления.ЗаказыПоставщику.Остатки(&Период, (Организация = &Организация ИЛИ &ОрганизацияДляОстатков = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))) КАК ЗаказыПоставщикуОстатки
				   //|			РегистрНакопления.ЗаказыПоставщику.Остатки(&Период, Организация = &Организация) КАК ЗаказыПоставщикуОстатки
				   //АсТБ_Alexey_79639_********************************************************************
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ЗаказыПоставщикуОстатки.Номенклатура,
	               |			ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры,
	               |			ЗаказыПоставщикуОстатки.ДокументВыдачи,
	               |			ЗаказыПоставщикуОстатки.ЗаказПоставщику) КАК ОстаткиЗаказовПоставщику
	               |		ПО (ОстаткиЗаказовПоставщику.Номенклатура = ПоступлениеНоменклатурыТовары.Номенклатура)
	               |			И (ОстаткиЗаказовПоставщику.ХарактеристикаНоменклатуры = ПоступлениеНоменклатурыТовары.ХарактеристикаНоменклатуры)
	               |			И (ОстаткиЗаказовПоставщику.ДокументВыдачи = ПоступлениеНоменклатурыТовары.ДокументВыдачи)
	               |			И (ОстаткиЗаказовПоставщику.ЗаказПоставщику = ПоступлениеНоменклатурыТовары.ЗаказПоставщику)
	               |ГДЕ
	               |	ПоступлениеНоменклатурыТовары.Ссылка = &Ссылка
	               |	И НЕ ПоступлениеНоменклатурыТовары.ЗаказПоставщику = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	               |;
	               |
				   //АсТБ_Alexey_79639_********************************************************************
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&Период КАК Период,
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	               |	&Организация КАК Организация,
	               |	СредстваЗащитыКПолучениюОстатки.Сотрудник КАК Сотрудник,
	               |	СредстваЗащитыКПолучениюОстатки.Номенклатура КАК Номенклатура,
	               |	СредстваЗащитыКПолучениюОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	СредстваЗащитыКПолучениюОстатки.ДокументВыдачи КАК ДокументВыдачи,
	               |	СУММА(СредстваЗащитыКПолучениюОстатки.КоличествоОстаток) КАК Количество
	               |ИЗ
	               |	РегистрНакопления.СредстваЗащитыКПолучению.Остатки(
	               |			&ПериодАнализа,
	               |			&ОрганизацияДляОстатков = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |				ИЛИ Организация = &Организация
	               |					И НЕ Номенклатура.НеИспользоватьПриФормированииЗаказовПоставщику) КАК СредстваЗащитыКПолучениюОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СредстваЗащитыКПолучениюОстатки.Организация,
	               |	СредстваЗащитыКПолучениюОстатки.Сотрудник,
	               |	СредстваЗащитыКПолучениюОстатки.Номенклатура,
	               |	СредстваЗащитыКПолучениюОстатки.ХарактеристикаНоменклатуры,
	               |	СредстваЗащитыКПолучениюОстатки.ДокументВыдачи
	               |;
	               |
				   //АсТБ_Alexey_79639_********************************************************************
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоступлениеНоменклатурыТовары.Номенклатура КАК Номенклатура,
	               |	ПоступлениеНоменклатурыТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	СУММА(ПоступлениеНоменклатурыТовары.Количество) КАК Количество
	               |ИЗ
	               |	Документ.ПоступлениеНоменклатуры.Товары КАК ПоступлениеНоменклатурыТовары
	               |ГДЕ
	               |	ПоступлениеНоменклатурыТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПоступлениеНоменклатурыТовары.Номенклатура,
	               |	ПоступлениеНоменклатурыТовары.ХарактеристикаНоменклатуры";
				   
	Запрос.УстановитьПараметр("Ссылка",					ДокументСсылка);
	Запрос.УстановитьПараметр("Организация",			ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("Период",					ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("ПериодАнализа",			ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ДокументСсылка));
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"),Справочники.Организации.ПустаяСсылка(),ДокументСсылка.Организация));
	
	Результат = Запрос.ВыполнитьПакет();
	
	//АсТБ_Alexey_79639_********************************************************************
	ТаблицаКПолучению 	= Результат[2].Выгрузить();
	ТаблицаПоступления 	= Результат[3].Выгрузить(); 
	
	//получаем пустую таблицу для формирования движений
	ТаблицаСредстваЗащитыКПолучению = ТаблицаКПолучению.Скопировать(НОВЫЙ Структура("ВидДвижения",ВидДвиженияНакопления.Приход));
	
	Для Каждого СтрокаТаблицыКПолучению Из ТаблицаКПолучению Цикл
		
		СтруктураПоиска = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры",СтрокаТаблицыКПолучению.Номенклатура,СтрокаТаблицыКПолучению.ХарактеристикаНоменклатуры);
		
		НайденныеСтроки = ТаблицаПоступления.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;	
		
		Если НайденныеСтроки[0].Количество = 0 Тогда
			Продолжить;
		КонецЕсли;	
		
		НоваяСтрока = ТаблицаСредстваЗащитыКПолучению.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыКПолучению);
		
		Если НайденныеСтроки[0].Количество >= СтрокаТаблицыКПолучению.Количество Тогда
			НайденныеСтроки[0].Количество = НайденныеСтроки[0].Количество - СтрокаТаблицыКПолучению.Количество;
		Иначе
			НоваяСтрока.Количество = НайденныеСтроки[0].Количество;
			НайденныеСтроки[0].Количество = 0;
		КонецЕсли;	
		
	КонецЦикла;	
	//АсТБ_Alexey_79639_********************************************************************
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	ТаблицыДляДвижений.Вставить("ТаблицаОстаткиНоменклатуры", 		Результат[0].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыПоставщику", 			Результат[1].Выгрузить());
	//АсТБ_Alexey_79639_********************************************************************
	ТаблицыДляДвижений.Вставить("ТаблицаСредстваЗащитыКПолучению",	ТаблицаСредстваЗащитыКПолучению);
	//АсТБ_Alexey_79639_********************************************************************
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"Накладная",
			"Приходная накладная",
			СформироватьПечатнуюФормуПриходнаяНакладная(МассивОбъектов, ОбъектыПечати),,"Документ.ПоступлениеНоменклатуры.ПФ_MXL_ПриходнаяНакладная");
				
	КонецЕсли;	
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуПриходнаяНакладная(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеНоменклатуры_ПриходнаяНакладная";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.Склад.Наименование КАК ПредставлениеСклада,
	|	Документы.Организация.Префикс КАК Префикс,
	|	Документы.Поставщик.НаименованиеПолное КАК ПредставлениеПоставщика
	|ИЗ
	|	Документ.ПоступлениеНоменклатуры КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Количество КАК Количество,
	|	Товары.Цена КАК Цена,
	|	Товары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.Наименование
	|		ИНАЧЕ Товары.Номенклатура.Наименование + "" ("" + Товары.ХарактеристикаНоменклатуры.Наименование + "")""
	|	КОНЕЦ КАК НаименованиеТовара,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА Товары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА Товары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура.ТочкаХранения.Наименование КАК ТочкаХранения
	|ИЗ
	|	Документ.ПоступлениеНоменклатуры.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|		ПО Товары.Ссылка.Организация = НоменклатурныеНомераОрганизаций.Организация
	|			И Товары.Номенклатура = НоменклатурныеНомераОрганизаций.Номенклатура
	|			И Товары.ХарактеристикаНоменклатуры = НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Товары.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеНоменклатуры.ПФ_MXL_ПриходнаяНакладная");
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
			
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(ДанныеПечати);
		
		Область.Параметры.ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата, Префикс", ДанныеПечати.Номер, ДанныеПечати.Дата, ДанныеПечати.Префикс), "Приходная накладная");
		ТабличныйДокумент.Вывести(Область);
			
		СчетСтрок = 1;
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
			Область.Параметры.Заполнить(ВыборкаПоТоварам);
			ТабличныйДокумент.Вывести(Область);
			
			СчетСтрок = СчетСтрок + 1;
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
		Область.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//приходная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ПоступлениеНоменклатуры";
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Приходная накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьДокумент(Основание,Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Основание) Тогда
		
		Объект.Организация 			= Основание.Организация;
		Объект.Поставщик 			= Основание.Поставщик;
		Объект.Склад 				= Основание.Склад;
		Объект.ДокументОснование 	= Основание.Ссылка;
	  	//АСТБ_ALEXEY_70409**************************************************************
		//Объект.МОЛ 				= ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация);
		Объект.МОЛ 					= ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация,Объект.СоздательДокумента);
		//АСТБ_ALEXEY_70409**************************************************************
		
		Запрос = Новый запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОстаткиЗаказовПоставщику.Номенклатура,
		|	ОстаткиЗаказовПоставщику.ХарактеристикаНоменклатуры,
		|	ОстаткиЗаказовПоставщику.ДокументВыдачи,
		|	ОстаткиЗаказовПоставщику.КоличествоОстаток КАК Количество,
		|	ЗаказПоставщику.Цена,
		|	ЗаказПоставщику.Цена * ОстаткиЗаказовПоставщику.КоличествоОстаток КАК Сумма,
		|	&ЗаказПоставщику КАК ЗаказПоставщику
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаказыПоставщикуОстатки.Номенклатура КАК Номенклатура,
		|		ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|		ЗаказыПоставщикуОстатки.ДокументВыдачи КАК ДокументВыдачи,
		|		СУММА(ЗаказыПоставщикуОстатки.КоличествоОстаток) КАК КоличествоОстаток
		|	ИЗ
		|		РегистрНакопления.ЗаказыПоставщику.Остатки(
		|				&Период,
		|				Организация = &Организация
		|					И ЗаказПоставщику = &ЗаказПоставщику
		|					И ЗаказПоставщику.Поставщик = &Поставщик) КАК ЗаказыПоставщикуОстатки
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ЗаказыПоставщикуОстатки.Номенклатура,
		|		ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры,
		|		ЗаказыПоставщикуОстатки.ДокументВыдачи) КАК ОстаткиЗаказовПоставщику
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
		|			ЗаказПоставщикуТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|			ЗаказПоставщикуТовары.ДокументВыдачи КАК ДокументВыдачи,
		|			ЗаказПоставщикуТовары.Цена КАК Цена
		|		ИЗ
		|			Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		|		ГДЕ
		|			ЗаказПоставщикуТовары.Ссылка = &ЗаказПоставщику
		|			И ЗаказПоставщикуТовары.Ссылка.Поставщик = &Поставщик) КАК ЗаказПоставщику
		|		ПО ОстаткиЗаказовПоставщику.Номенклатура = ЗаказПоставщику.Номенклатура
		|			И ОстаткиЗаказовПоставщику.ХарактеристикаНоменклатуры = ЗаказПоставщику.ХарактеристикаНоменклатуры
		|			И ОстаткиЗаказовПоставщику.ДокументВыдачи = ЗаказПоставщику.ДокументВыдачи";
		
		Запрос.УстановитьПараметр("Организация",	Объект.Организация);
		Запрос.УстановитьПараметр("ЗаказПоставщику",Объект.ДокументОснование);
		Запрос.УстановитьПараметр("Поставщик",		Объект.Поставщик);
		Запрос.УстановитьПараметр("Период",			ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Объект.Ссылка));
		
		Объект.Товары.Очистить();
		
		Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
		
	Иначе //заполняем по нескольким заказам
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаказыПоставщикуОстатки.ЗаказПоставщику,
		|	ЗаказыПоставщикуОстатки.Номенклатура,
		|	ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры,
		|	ЗаказыПоставщикуОстатки.ДокументВыдачи,
		|	СУММА(ЗаказыПоставщикуОстатки.КоличествоОстаток) КАК Количество,
		|	ЗаказыПоставщику.Цена,
		|	ЗаказыПоставщику.Цена * ЗаказыПоставщикуОстатки.КоличествоОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.ЗаказыПоставщику.Остатки(
		|			&Период,
		|			Организация = &Организация
		|				И ЗаказПоставщику.Поставщик = &Поставщик) КАК ЗаказыПоставщикуОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЗаказПоставщикуТовары.Ссылка КАК Ссылка,
		|			ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
		|			ЗаказПоставщикуТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|			ЗаказПоставщикуТовары.ДокументВыдачи КАК ДокументВыдачи,
		|			МАКСИМУМ(ЗаказПоставщикуТовары.Цена) КАК Цена
		|		ИЗ
		|			Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		|		ГДЕ
		|			ЗаказПоставщикуТовары.Ссылка.Организация = &Организация
		|			И ЗаказПоставщикуТовары.Ссылка.Поставщик = &Поставщик
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЗаказПоставщикуТовары.Ссылка,
		|			ЗаказПоставщикуТовары.Номенклатура,
		|			ЗаказПоставщикуТовары.ХарактеристикаНоменклатуры,
		|			ЗаказПоставщикуТовары.ДокументВыдачи) КАК ЗаказыПоставщику
		|		ПО ЗаказыПоставщикуОстатки.ЗаказПоставщику = ЗаказыПоставщику.Ссылка
		|			И ЗаказыПоставщикуОстатки.Номенклатура = ЗаказыПоставщику.Номенклатура
		|			И ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры = ЗаказыПоставщику.ХарактеристикаНоменклатуры
		|			И ЗаказыПоставщикуОстатки.ДокументВыдачи = ЗаказыПоставщику.ДокументВыдачи
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказыПоставщикуОстатки.ЗаказПоставщику,
		|	ЗаказыПоставщикуОстатки.Номенклатура,
		|	ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры,
		|	ЗаказыПоставщикуОстатки.ДокументВыдачи,
		|	ЗаказыПоставщику.Цена,
		|	ЗаказыПоставщику.Цена * ЗаказыПоставщикуОстатки.КоличествоОстаток
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗаказыПоставщикуОстатки.ЗаказПоставщику.НачалоПериодаВыдачи,
		|	ЗаказыПоставщикуОстатки.ЗаказПоставщику.МоментВремени";
		
		Запрос.УстановитьПараметр("Организация",Объект.Организация);
		Запрос.УстановитьПараметр("Поставщик",	Объект.Поставщик);
		Запрос.УстановитьПараметр("Период",	ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Объект.Ссылка));
		
		Объект.Товары.Очистить();
		
		Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РаспределитьТабличнуюЧастьПоЗаказамПоставщику(Объект,УчитыватьОрганизацию) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Объект.Товары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказыПоставщикуОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЗаказыПоставщикуОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЗаказыПоставщикуОстатки.ДокументВыдачи КАК ДокументВыдачи,
	|	СУММА(ЗаказыПоставщикуОстатки.КоличествоОстаток) КАК Количество,
	|	ВЫБОР
	|		КОГДА ЗаказыПоставщикуОстатки.ДокументВыдачи = ЗНАЧЕНИЕ(Документ.ВыдачаСредствЗащитыСотруднику.ПустаяСсылка)
	|			ТОГДА ДАТАВРЕМЯ(2050, 1, 1, 0, 0, 0)
	|		ИНАЧЕ ЗаказыПоставщикуОстатки.ДокументВыдачи.Дата
	|	КОНЕЦ КАК ДатаВыдачи
	//+++АСТБ_Горюшин_Алексей_65012
	|ПОМЕСТИТЬ ВТ_ЗаказыПоставщикуОстатки
	//---АСТБ_Горюшин_Алексей_65012
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщику.Остатки(
	|			&ДатаАнализа,
	|			ВЫБОР
	|					КОГДА &УчитыватьОрганизацию
	|						ТОГДА Организация = &Организация
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И Номенклатура В (&МассивНоменклатуры)
	|				И ХарактеристикаНоменклатуры В (&МассивХарактеристикНоменклатуры)) КАК ЗаказыПоставщикуОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПоставщикуОстатки.Склад,
	|	ЗаказыПоставщикуОстатки.ЗаказПоставщику,
	|	ЗаказыПоставщикуОстатки.Номенклатура,
	|	ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры,
	|	ЗаказыПоставщикуОстатки.ДокументВыдачи,
	|	ВЫБОР
	|		КОГДА ЗаказыПоставщикуОстатки.ДокументВыдачи = ЗНАЧЕНИЕ(Документ.ВыдачаСредствЗащитыСотруднику.ПустаяСсылка)
	|			ТОГДА ДАТАВРЕМЯ(2050, 1, 1, 0, 0, 0)
	|		ИНАЧЕ ЗаказыПоставщикуОстатки.ДокументВыдачи.Дата
	|	КОНЕЦ
	|
	//+++АСТБ_Горюшин_Алексей_65012
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗаказыПоставщикуОстатки.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ВТ_ЗаказыПоставщикуОстатки.Номенклатура КАК Номенклатура,
	|	ВТ_ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ЗаказыПоставщикуОстатки.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_ЗаказыПоставщикуОстатки.Количество КАК Количество,
	|	ВТ_ЗаказыПоставщикуОстатки.ДатаВыдачи КАК ДатаВыдачи
	|ИЗ
	|	ВТ_ЗаказыПоставщикуОстатки КАК ВТ_ЗаказыПоставщикуОстатки
	|ГДЕ
	|	ВТ_ЗаказыПоставщикуОстатки.Количество > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВыдачи,
	|	ВТ_ЗаказыПоставщикуОстатки.ЗаказПоставщику.Дата";
	//было
	//|УПОРЯДОЧИТЬ ПО
	//|	ДатаВыдачи,
	//|	ЗаказыПоставщикуОстатки.ЗаказПоставщику.Дата";
	//---АСТБ_Горюшин_Алексей_65012
	
	Запрос.УстановитьПараметр("ДатаАнализа",					ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Объект.Ссылка));
	Запрос.УстановитьПараметр("Организация",					Объект.Организация);
	Запрос.УстановитьПараметр("УчитыватьОрганизацию",			УчитыватьОрганизацию);
	Запрос.УстановитьПараметр("МассивНоменклатуры",				Объект.Товары.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("МассивХарактеристикНоменклатуры",Объект.Товары.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаЗапроса.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИсходнаяТаблицаДокумента = Объект.Товары.Выгрузить(,"Номенклатура,ХарактеристикаНоменклатуры,Количество,Цена,Сумма");
	
	ТаблицаДокумента = ИсходнаяТаблицаДокумента.Скопировать();
	ТаблицаДокумента.Свернуть("Номенклатура,ХарактеристикаНоменклатуры","Количество");
	
	Объект.Товары.Очистить();
	
	Для Каждого СтрокаТаблицыДокумента Из ТаблицаДокумента Цикл
		
		КоличествоКРаспределению = СтрокаТаблицыДокумента.Количество;
		
		СтруктураПоиска = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры",СтрокаТаблицыДокумента.Номенклатура,СтрокаТаблицыДокумента.ХарактеристикаНоменклатуры);
		
		СтрокиЗапроса = ТаблицаЗапроса.НайтиСтроки(СтруктураПоиска);
		
		Если СтрокиЗапроса.Количество() = 0 Тогда //нечего рапределять
			
			СтрокиДокумента = ИсходнаяТаблицаДокумента.НайтиСтроки(СтруктураПоиска);
			
			Для Каждого СтрокаДокумента Из СтрокиДокумента Цикл
				ЗаполнитьЗначенияСвойств(Объект.Товары.Добавить(),СтрокаДокумента);
			КонецЦикла;
			
			Продолжить;
			
		КонецЕсли;
			
		//распределяем по заказам поставщику
		Для Каждого СтрокаЗапроса Из СтрокиЗапроса Цикл
			
			Если КоличествоКРаспределению = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если КоличествоКРаспределению >= СтрокаЗапроса.Количество Тогда
				
				НоваяСтрока = Объект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаЗапроса);
				
				СтрокиЗаказаПоставщику 	= СтрокаЗапроса.ЗаказПоставщику.Товары.НайтиСтроки(СтруктураПоиска);
				//+++АСТБ_Горюшин_Алексей_65012
				НоваяСтрока.Цена 		= ЦенообразованиеСерверПереопределяемый.ПолучитьЦену(СтрокаЗапроса.Номенклатура,Объект.Организация,ТекущаяДата());
				НоваяСтрока.Сумма 		= СтрокаЗапроса.Количество * НоваяСтрока.Цена;
				//было
				//НоваяСтрока.Цена 		= СтрокиЗаказаПоставщику[0].Цена;
				//НоваяСтрока.Сумма 		= СтрокаЗапроса.Количество * СтрокиЗаказаПоставщику[0].Цена;
				//---АСТБ_Горюшин_Алексей_65012
				
				КоличествоКРаспределению = КоличествоКРаспределению - СтрокаЗапроса.Количество;
				
			Иначе
				
				НоваяСтрока = Объект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаЗапроса);
				
				СтрокиЗаказаПоставщику 	= СтрокаЗапроса.ЗаказПоставщику.Товары.НайтиСтроки(СтруктураПоиска);
				//+++АСТБ_Горюшин_Алексей_65012
				НоваяСтрока.Цена 		= ЦенообразованиеСерверПереопределяемый.ПолучитьЦену(СтрокаЗапроса.Номенклатура,Объект.Организация,ТекущаяДата());
				НоваяСтрока.Сумма 		= КоличествоКРаспределению * НоваяСтрока.Цена;
				//было
				//НоваяСтрока.Цена 		= СтрокиЗаказаПоставщику[0].Цена;
				//НоваяСтрока.Сумма 		= КоличествоКРаспределению * СтрокиЗаказаПоставщику[0].Цена;
				//---АСТБ_Горюшин_Алексей_65012
				НоваяСтрока.Количество  = КоличествоКРаспределению;
				
				КоличествоКРаспределению = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
		//может остался нераспределенный по заказам остаток
		Если НЕ КоличествоКРаспределению = 0 Тогда
			
			СтрокиДокумента = ИсходнаяТаблицаДокумента.НайтиСтроки(СтруктураПоиска);
			
			НоваяСтрока 			= Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокиДокумента[0]);
			НоваяСтрока.Количество 	= КоличествоКРаспределению;
			НоваяСтрока.Сумма 		= НоваяСтрока.Цена * НоваяСтрока.Количество;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//АСТБ_ALEX_**************************************************************
//подсистема запрета редактирования реквизитов объектов

// Возвращает описание блокируемых реквизитов
// Возвращаемое значение: массив
// Элемент массива: строка в формате
//		ИмяРеквизита[;ИмяЭлементаФормы,...]
// где	ИмяРеквизита - имя реквизита объекта
//		ИмяЭлементаФормы - имя элемента формы, связанного с реквизитом
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив;
	
	БлокируемыеРеквизиты.Добавить("Организация;Организация");
	БлокируемыеРеквизиты.Добавить("Поставщик;Поставщик");
	БлокируемыеРеквизиты.Добавить("Дата;Дата документа");
	БлокируемыеРеквизиты.Добавить("НомерВходящегоДокумента;НомерВходящегоДокумента");
	БлокируемыеРеквизиты.Добавить("ДатаВходящегоДокумента;ДатаВходящегоДокумента");
	
	БлокируемыеРеквизиты.Добавить("Товары.Номенклатура;ТоварыНоменклатура");
	БлокируемыеРеквизиты.Добавить("Товары.ХарактеристикаНоменклатуры;ТоварыХарактеристикаНоменклатуры");
	БлокируемыеРеквизиты.Добавить("Товары.Количество;ТоварыКоличество");
	
	Возврат БлокируемыеРеквизиты;
	
КонецФункции

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	БлокируемыеРеквизиты = Новый Массив;
	
	БлокируемыеРеквизиты.Добавить("Товары.Номенклатура");
	БлокируемыеРеквизиты.Добавить("Товары.ХарактеристикаНоменклатуры");
	БлокируемыеРеквизиты.Добавить("Товары.Количество");
	
	Возврат БлокируемыеРеквизиты;
	
КонецФункции	
//АСТБ_ALEX_**************************************************************

#КонецЕсли