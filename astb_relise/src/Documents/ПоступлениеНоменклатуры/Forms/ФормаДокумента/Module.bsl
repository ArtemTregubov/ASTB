////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//АСТБ_ALEX_**************************************************************
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	Если ЗначениеЗаполнено(Объект.Ссылка) и 
		Интеграция_САП_Сервер.ПроверитьНеобходимостьБлокированияЭлементовФормы(Объект.Ссылка) Тогда
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
		ЭтаФорма.Элементы.Товары.УстановитьДействие("ПередНачаломДобавления","Подключаемый_ПередНачаломДобавления");
		ЭтаФорма.Элементы.Товары.УстановитьДействие("ПередУдалением","Подключаемый_ПередУдалением");
		ЭтаФорма.Элементы.ТоварыЗаполнить.Доступность = Ложь;
		ЭтаФорма.Элементы.ТоварыПодборНоменклатурыВыдачи.Доступность = Ложь;
	КонецЕсли;	
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	//АСТБ_ALEX_**************************************************************
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект,НОВЫЙ Структура("ИмяЭлементаДляРазмещения","ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	УстановитьВидимость();
	
	//***НСК Трегубов А.А.*** -- Адресное хранение --  03.09.2019 <<<
	АХ_ПриСозданииНаСервере(Отказ,СтандартнаяОбработка);
	//***НСК Трегубов А.А.*** -- Адресное хранение --  03.09.2019 >>>
	
	ЭтаФорма.Элементы.МОЛ.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьМассивМОЛСклада(Объект.Склад,Объект.Организация));
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	//АСТБ_ALEX_**************************************************************
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	Если ЗначениеЗаполнено(Объект.Ссылка) и 
		Интеграция_САП_Сервер.ПроверитьНеобходимостьБлокированияЭлементовФормы(Объект.Ссылка) Тогда
		
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
		ЭтаФорма.Элементы.Товары.УстановитьДействие("ПередНачаломДобавления","Подключаемый_ПередНачаломДобавления");
		ЭтаФорма.Элементы.Товары.УстановитьДействие("ПередУдалением","Подключаемый_ПередУдалением");
		ЭтаФорма.Элементы.ТоварыЗаполнить.Доступность = Ложь;
		ЭтаФорма.Элементы.ТоварыПодборНоменклатурыВыдачи.Доступность = Ложь;

	КонецЕсли;	
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	//АСТБ_ALEX_**************************************************************
	
	//***НСК Трегубов А.А.*** -- Адресное хранение --  03.09.2019 <<<
	АХ_ПослеЗаписиНаСервере(ТекущийОбъект,ПараметрыЗаписи);
	//***НСК Трегубов А.А.*** -- Адресное хранение --  03.09.2019 >>>
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыКоличество" Тогда
		Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТоварыНоменклатура" Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура) Тогда
			Элемент.ТекущиеДанные.Цена = ПолучитьЦенуСервер(Элемент.ТекущиеДанные.Номенклатура);
			Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
		КонецЕсли;
	//АСТБ_ALEX_**************************************************************
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТоварыЦена" Тогда
		 Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
	//АСТБ_ALEX_**************************************************************
	КонецЕсли;
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВА"

// СтандартныеПодсистемы.Свойства
 &НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "ПЕЧАТЬ"

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
  УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
  
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ...

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

//АСТБ_ALEX_**************************************************************

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	//Если ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтаФорма) Тогда
	//	ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма);
	//	ЭтаФорма.Элементы.ТоварыЗаполнить.Доступность = Истина;
	//	ЭтаФорма.Элементы.ТоварыПодборНоменклатурыВыдачи.Доступность = Истина;
	//КонецЕсли;
	
	ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры
	
&НаКлиенте
Процедура Подключаемый_ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ЭлементКоллекции_Номенклатура = ЭтаФорма.ПараметрыЗапретаРедактированияРеквизитов.НайтиПоИдентификатору(5);
	
	Если Не ЭлементКоллекции_Номенклатура = Неопределено и 
		ЭлементКоллекции_Номенклатура.РедактированиеРазрешено = Ложь Тогда	
		
		ПоказатьПредупреждение(,"Для добавления новых строк в ТЧ необходимо разрешить
		|редактирование заблокированных реквизитов объектов.");
		Отказ = Истина;
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура Подключаемый_ПередУдалением(Элемент, Отказ)
	
	ЭлементКоллекции_Номенклатура = ЭтаФорма.ПараметрыЗапретаРедактированияРеквизитов.НайтиПоИдентификатору(5);
	
	Если Не ЭлементКоллекции_Номенклатура = Неопределено и 
		ЭлементКоллекции_Номенклатура.РедактированиеРазрешено = Ложь Тогда	
		
		ПоказатьПредупреждение(,"Для удаления строк в ТЧ необходимо разрешить
		|редактирование заблокированных реквизитов объектов.");
		Отказ = Истина;
		
	КонецЕсли;	
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

//АСТБ_ALEX_**************************************************************

&НаСервере
Процедура УстановитьВидимость()
	
	УстановитьПривилегированныйРежим(Истина);
	 
	Элементы.ДокументОснование.Видимость 								= ЗначениеЗаполнено(Объект.ДокументОснование);
	Элементы.Товары.ПодчиненныеЭлементы.ТоварыЗаказПоставщику.Видимость = НЕ Элементы.ДокументОснование.Видимость;
	
	//АСТБ_ALEXEY_79639_**************************************************************
	//Элементы.Товары.КоманднаяПанель.ПодчиненныеЭлементы.ТоварыГруппа1.ПодчиненныеЭлементы.ТоварыРаспределитьПоЗаказамПоставщикуБезУчетаОрганизации.Видимость = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	//АСТБ_ALEXEY_79639_**************************************************************
	
КонецПроцедуры
	
&НаСервере
Функция ПолучитьЦенуСервер(Номенклатура)
	
	Цена = ЦенообразованиеСерверПереопределяемый.ПолучитьЦену(Номенклатура,Объект.Организация,Объект.Дата,Объект.Поставщик);
	Возврат Цена;
	
КонецФункции

&НаКлиенте
Процедура Заполнить(Команда)
	 
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Документы.ПоступлениеНоменклатуры.ЗаполнитьДокумент(ДокументОбъект.ДокументОснование,ДокументОбъект);
	
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборНоменклатурыВыдачи(Команда)
	
	АдресВременногоХранилища = ВыгрузитьТаблицуДокументаВоВременноеХранилище();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Склад", 							Объект.Склад);
	ПараметрыФормы.Вставить("АдресВременногоХранилищаТаблицы", 	АдресВременногоХранилища);
	ПараметрыФормы.Вставить("Организация", 						Объект.Организация);
	ПараметрыФормы.Вставить("Поставщик", 						Объект.Поставщик);
	ПараметрыФормы.Вставить("Документ", 						Объект.Ссылка);
	
	ОткрытьФорму("Обработка.ПодборНоменклатурыВыдачи.Форма.ФормаПодбора", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьТаблицуДокументаВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.Товары.Выгрузить(),ЭтаФорма.УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборНоменклатурыВыдачи.Форма.ФормаПодбора" Тогда
		
		ПолучитьРезультатПодбораИзХранилища(ВыбранноеЗначение.АдресРезультатаПодбораВХранилище);
		
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;

	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьРезультатПодбораИзХранилища(АдресРезультатаПодбораВХранилище)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	ТаблицаПодбора = ПолучитьИзВременногоХранилища(АдресРезультатаПодбораВХранилище);
	
	ТекущийОбъект.Товары.Загрузить(ТаблицаПодбора);	
	
	ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоЗаказамПоставщику(Команда)
	
	РаспределитьПоЗаказамПоставщикуНаСервере();	
	
КонецПроцедуры

&НаСервере
Процедура РаспределитьПоЗаказамПоставщикуНаСервере()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Документы.ПоступлениеНоменклатуры.РаспределитьТабличнуюЧастьПоЗаказамПоставщику(ДокументОбъект,Истина);
	
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
	
	Модифицированность = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	//АСТБ_ALEXEY_70409**************************************************************
	//Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация);
	Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация,Объект.СоздательДокумента);
	//АСТБ_ALEXEY_70409**************************************************************
	Элементы.МОЛ.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьМассивМОЛСклада(Объект.Склад,Объект.Организация));
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	//АСТБ_ALEXEY_70409**************************************************************
	//Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация);
	Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация,Объект.СоздательДокумента);
	//АСТБ_ALEXEY_70409**************************************************************
	Элементы.МОЛ.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьМассивМОЛСклада(Объект.Склад,Объект.Организация));
	
КонецПроцедуры

&НаСервере
Процедура РаспределитьПоЗаказамПоставщикуБезУчетаОрганизацииНаСервере()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Документы.ПоступлениеНоменклатуры.РаспределитьТабличнуюЧастьПоЗаказамПоставщику(ДокументОбъект,Ложь);
	
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоЗаказамПоставщикуБезУчетаОрганизации(Команда)
	
	РаспределитьПоЗаказамПоставщикуБезУчетаОрганизацииНаСервере();
	
КонецПроцедуры

#Область АдресноеХранение

&НаСервере
Процедура АХ_ПриСозданииНаСервере(Отказ,СтандартнаяОбработка)	
	АХ_УстановитьВидимостьИДоступность();	
КонецПроцедуры

&НаСервере
Процедура АХ_ПослеЗаписиНаСервере(ТекущийОбъект,ПараметрыЗаписи)	
	АХ_УстановитьВидимостьИДоступность();	
КонецПроцедуры

&НаКлиенте
Процедура АХ_ПередатьНаСклад(Команда)
	
	МассивДанных = Новый Массив;
	МассивДанных.Добавить(Объект.Ссылка);	
	
	СтруктураОбработкиОшибок = АХ_ОбменКлиент.ИнициализироватьСтруктуруОбработкиОшибок();
	АХ_ОбменКлиент.ПередатьДанныеВАдресноеХранение(МассивДанных,ЭтотОбъект.Модифицированность,СтруктураОбработкиОшибок);	
	
	АХ_УстановитьВидимостьИДоступность();	
	
КонецПроцедуры

&НаСервере
Процедура АХ_УстановитьВидимостьИДоступность()
	
	СтруктураСвойствОформления = АХ_ОбменВызовСервера.МожноСформироватьПоступление(Объект);
	
	Для Каждого Свойство из СтруктураСвойствОформления Цикл
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"АХ_ПередатьНаСклад",
		Свойство.Ключ,	
		Свойство.Значение);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
