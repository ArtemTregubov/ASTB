////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ИнструктажСотрудников") Тогда
			
			Если Объект.ДокументОснование.ВидИнструктажа = Перечисления.ВидыИнструктажей.Внеплановый 
				ИЛИ Объект.ДокументОснование.ВидИнструктажа = Перечисления.ВидыИнструктажей.Целевой Тогда
				
				Отказ = Истина;
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Ввод на основании документа с видом инструктажа " + Объект.ДокументОснование.ВидИнструктажа + " не производится.";
				Сообщение.Сообщить();
				
				Возврат;
				
			КонецЕсли;	
			
		Конецесли;	
		
	Иначе
		
		Объект.ДатаИнструктажа = ТекущаяДата();
		
	КонецЕсли;	
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект,НОВЫЙ Структура("ИмяЭлементаДляРазмещения","ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));
	
	СформироватьСписокДоступныхИнструктажей();
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов() 
	
	Если Объект.ВидИнструктажа = Перечисления.ВидыИнструктажей.Внеплановый ИЛИ Объект.ВидИнструктажа = Перечисления.ВидыИнструктажей.Целевой Тогда
		Элементы.ПричинаПроведения.Видимость = Истина;
	Иначе
		Элементы.ПричинаПроведения.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Элементы.РаботникиЗаполнитьПоДолжностям.Видимость 		= Ложь;
		Элементы.РаботникиЗаполнитьПоОснованию.Видимость 		= Истина;
		Элементы.РаботникиЗаполнитьПоПодразделениям.Видимость 	= Ложь;
		Элементы.РаботникиЗаполнитьПоПриказам.Видимость 		= Ложь;
		Элементы.РаботникиЗаполнитьПоСотрудникам.Видимость 		= Ложь;
	Иначе
		Элементы.РаботникиЗаполнитьПоДолжностям.Видимость 		= Истина;
		Элементы.РаботникиЗаполнитьПоОснованию.Видимость 		= Ложь;
		Элементы.РаботникиЗаполнитьПоПодразделениям.Видимость 	= Истина;
		Элементы.РаботникиЗаполнитьПоПриказам.Видимость 		= Истина;
		Элементы.РаботникиЗаполнитьПоСотрудникам.Видимость 		= Истина;
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура СформироватьСписокДоступныхИнструктажей() 
	
	МассивДоступныхЗначений = Новый Массив;
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ИнструктажСотрудников") Тогда
			
			Если Объект.ДокументОснование.ВидИнструктажа = Перечисления.ВидыИнструктажей.Вводный Тогда
				
				МассивДоступныхЗначений.Добавить(Перечисления.ВидыИнструктажей.Первичный);
				
			Иначе 
			
				МассивДоступныхЗначений.Добавить(Перечисления.ВидыИнструктажей.Повторный);
			
			КонецЕсли;	
			
		ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.КадровоеПеремещение") Тогда
			
			МассивДоступныхЗначений.Добавить(Перечисления.ВидыИнструктажей.Первичный);
			
		ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПриемНаРаботу") Тогда
			
			МассивДоступныхЗначений.Добавить(Перечисления.ВидыИнструктажей.Вводный);
			
		КонецЕсли;
		
	Иначе
		
		МассивДоступныхЗначений.Добавить(Перечисления.ВидыИнструктажей.Вводный);
		МассивДоступныхЗначений.Добавить(Перечисления.ВидыИнструктажей.Первичный);
		МассивДоступныхЗначений.Добавить(Перечисления.ВидыИнструктажей.Повторный);
		МассивДоступныхЗначений.Добавить(Перечисления.ВидыИнструктажей.Внеплановый);
		МассивДоступныхЗначений.Добавить(Перечисления.ВидыИнструктажей.Целевой);
		
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
			
			Объект.ВидИнструктажа = Перечисления.ВидыИнструктажей.Вводный;
			
		КонецЕсли;	
		
	КонецЕсли;	
	
	Элементы.ВидИнструктажа.СписокВыбора.ЗагрузитьЗначения(МассивДоступныхЗначений);
	
КонецПроцедуры	

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));
	
КонецПроцедуры

&НаКлиенте
Процедура РаботникиДолжностьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Работники.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекущееПодразделение = ПредопределенноеЗначение("Справочник.Подразделения.ПустаяСсылка");
	Иначе
		ТекущееПодразделение = ТекущиеДанные.Подразделение;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.ДолжностиИПрофессии.ФормаВыбора",
			Новый Структура("СписокПрофессий", ПроцедурыРаботыСНормамиСервер.ПолучитьСписокПрофессийПоШтатномуРасписанию(Объект.Ссылка,ТекущееПодразделение)),Элемент);
			
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВА"

// СтандартныеПодсистемы.Свойства
 &НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ...

// СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "ПЕЧАТЬ"

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
  	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
  
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаСервере
Процедура ЗаполнитьПоОснованиюНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.ИнструктажСотрудников.ЗаполнитьТаблицуДокумента(ТекущийОбъект,"ПоОснованию");
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОснованию(Команда)
	
	ЗаполнитьПоОснованиюНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоСотрудникамНаСервере(ВыбранноеЗначение)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.ИнструктажСотрудников.ЗаполнитьТаблицуДокумента(ТекущийОбъект,"ПоСотрудникам",ВыбранноеЗначение);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСотрудникам(Команда)
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормыВыбора.Вставить("Отбор",              Новый Структура("Владелец", Объект.Организация));
	
	ОткрытьФорму("Справочник.Сотрудники.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПриказамНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.ИнструктажСотрудников.ЗаполнитьТаблицуДокумента(ТекущийОбъект,"ПоПриказам");
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПриказам(Команда)
	
	ЗаполнитьПоПриказамНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПодразделениямНаСервере(ВыбранноеЗначение)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.ИнструктажСотрудников.ЗаполнитьТаблицуДокумента(ТекущийОбъект,"ПоПодразделениям",ВыбранноеЗначение);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПодразделениям(Команда)
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормыВыбора.Вставить("Отбор",              Новый Структура("Владелец", Объект.Организация));
	
	ОткрытьФорму("Справочник.Подразделения.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДолжностямНаСервере(ВыбранноеЗначение)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.ИнструктажСотрудников.ЗаполнитьТаблицуДокумента(ТекущийОбъект,"ПоДолжностям",ВыбранноеЗначение);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоДолжностям(Команда)
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	
	ОткрытьФорму("Справочник.ДолжностиИПрофессии.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.Сотрудники.Форма.ФормаВыбора" Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			ЗаполнитьПоСотрудникамНаСервере(ВыбранноеЗначение);
			
		КонецЕсли;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.Подразделения.Форма.ФормаВыбора" Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			ЗаполнитьПоПодразделениямНаСервере(ВыбранноеЗначение);
			
		КонецЕсли;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.ДолжностиИПрофессии.Форма.ФормаВыбора" Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			ЗаполнитьПоДолжностямНаСервере(ВыбранноеЗначение);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;

	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидИнструктажаПриИзменении(Элемент)
	
	Объект.Работники.Очистить();
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры
