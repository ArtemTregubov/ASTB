#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнструктажСотрудниковРаботники.Ссылка.Дата КАК Период,
	|	ИнструктажСотрудниковРаботники.Ссылка.Организация КАК Организация,
	|	ИнструктажСотрудниковРаботники.Подразделение КАК Подразделение,
	|	ИнструктажСотрудниковРаботники.Должность КАК Должность,
	|	ИнструктажСотрудниковРаботники.РабочееМесто КАК РабочееМесто,
	|	ИнструктажСотрудниковРаботники.Инструктаж КАК Инструктаж,
	|	ИнструктажСотрудниковРаботники.Ссылка.ДатаИнструктажа КАК ДатаИнструктажа,
	|	ИнструктажСотрудниковРаботники.Сотрудник КАК Сотрудник,
	|	ИнструктажСотрудниковРаботники.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ИнструктажСотрудников.Работники КАК ИнструктажСотрудниковРаботники
	|ГДЕ
	|	ИнструктажСотрудниковРаботники.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);	
	
	ТаблицыДляДвижений.Вставить("ТаблицаИнструктажиСотрудников", Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьДокумент(ТекущийОбъект,Основание) Экспорт
	
	ТекущийОбъект.Организация 		= Основание.Организация;
	ТекущийОбъект.ДокументОснование = Основание;	
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ИнструктажСотрудников") Тогда
		
		Если Основание.ВидИнструктажа = Перечисления.ВидыИнструктажей.Вводный Тогда
			ТекущийОбъект.ВидИнструктажа 	= Перечисления.ВидыИнструктажей.Первичный;
			ТекущийОбъект.ДатаИнструктажа   = ТекущаяДата();
		ИначеЕсли Основание.ВидИнструктажа = Перечисления.ВидыИнструктажей.Первичный Тогда
			ТекущийОбъект.ВидИнструктажа 	= Перечисления.ВидыИнструктажей.Повторный;
			ТекущийОбъект.ДатаИнструктажа   = ДобавитьМесяц(Основание.ДатаИнструктажа,6);
		ИначеЕсли Основание.ВидИнструктажа = Перечисления.ВидыИнструктажей.Повторный Тогда
			ТекущийОбъект.ВидИнструктажа 	= Перечисления.ВидыИнструктажей.Повторный;
			ТекущийОбъект.ДатаИнструктажа   = ДобавитьМесяц(Основание.ДатаИнструктажа,6);
		КонецЕсли;	
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.КадровоеПеремещение") Тогда
		
		ТекущийОбъект.ВидИнструктажа 	= Перечисления.ВидыИнструктажей.Первичный;
		ТекущийОбъект.ДатаИнструктажа   = ТекущаяДата();
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПриемНаРаботу") Тогда
		
		ТекущийОбъект.ВидИнструктажа 	= Перечисления.ВидыИнструктажей.Вводный;
		ТекущийОбъект.ДатаИнструктажа   = ТекущаяДата();
		
	КонецЕсли;
	
	ЗаполнитьТаблицуДокумента(ТекущийОбъект,"ПоОснованию");
	
КонецПроцедуры	

//Процедура заполняет табличную часть документа-объекта в зависимости от вида заполнения
//Параметры:
//ТекущийОбъект - документ-объект, который заполняется
//ВидЗаполнения - строка - может принимать значения: "ПоОснованию", "ПоПриказам", "ПоПодразделениям", "ПоДолжностям" и "ПоСотрудникам"
//ЗначениеПараметраЗаполнения - значение, по которому заполняется документ-объект типа "Сотрудники", "Подразделения" или "Должности"
//
Процедура ЗаполнитьТаблицуДокумента(ТекущийОбъект,ВидЗаполнения,ЗначениеПараметраЗаполнения = Неопределено) Экспорт
	
	ТекущийОбъект.Работники.Очистить();
	
	ДатаАнализа = ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка);
	
	Запрос = Новый Запрос;
	
	Если ВидЗаполнения = "ПоОснованию" Тогда
		
		Если ТипЗнч(ТекущийОбъект.ДокументОснование) = Тип("ДокументСсылка.ИнструктажСотрудников") Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ИнструктажСотрудниковРаботники.Сотрудник КАК Сотрудник,
			|	ИнструктажСотрудниковРаботники.Подразделение КАК Подразделение,
			|	ИнструктажСотрудниковРаботники.Должность КАК Должность,
			|	ИнструктажСотрудниковРаботники.РабочееМесто КАК РабочееМесто,
			|	ИнструктажСотрудниковРаботники.Инструктаж КАК Инструктаж,
			|	ИнструктажСотрудниковРаботники.Ссылка.ВидИнструктажа КАК ВидИнструктажа
			|ПОМЕСТИТЬ ВТ_ДокументОснование
			|ИЗ
			|	Документ.ИнструктажСотрудников.Работники КАК ИнструктажСотрудниковРаботники
			|ГДЕ
			|	ИнструктажСотрудниковРаботники.Ссылка = &Ссылка
			|	И ИнструктажСотрудниковРаботники.Ссылка.Проведен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПриказыНаИнструктажиСрезПоследних.Подразделение КАК Подразделение,
			|	ПриказыНаИнструктажиСрезПоследних.Должность КАК Должность,
			|	ПриказыНаИнструктажиСрезПоследних.РабочееМесто КАК РабочееМесто,
			|	ПриказыНаИнструктажиСрезПоследних.Инструктаж КАК Инструктаж,
			|	ПриказыНаИнструктажиСрезПоследних.Ответственный КАК Ответственный
			|ПОМЕСТИТЬ ВТ_ПриказыНаИнструктажи
			|ИЗ
			|	РегистрСведений.ПриказыНаИнструктажи.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ПриказыНаИнструктажиСрезПоследних
			|ГДЕ
			|	ПриказыНаИнструктажиСрезПоследних.Проводить
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДокументОснование.Сотрудник КАК Сотрудник,
			|	ВТ_ДокументОснование.Подразделение КАК Подразделение,
			|	ВТ_ДокументОснование.Должность КАК Должность,
			|	ВТ_ДокументОснование.РабочееМесто КАК РабочееМесто,
			|	ВТ_ПриказыНаИнструктажи.Инструктаж КАК Инструктаж,
			|	ВТ_ПриказыНаИнструктажи.Ответственный КАК Ответственный
			|ИЗ
			|	ВТ_ДокументОснование КАК ВТ_ДокументОснование
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриказыНаИнструктажи КАК ВТ_ПриказыНаИнструктажи
			|		ПО (ВТ_ДокументОснование.Подразделение = ВТ_ПриказыНаИнструктажи.Подразделение
			|				ИЛИ ВТ_ПриказыНаИнструктажи.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
			|			И (ВТ_ДокументОснование.Должность = ВТ_ПриказыНаИнструктажи.Должность
			|				ИЛИ ВТ_ПриказыНаИнструктажи.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
			|			И (ВТ_ДокументОснование.РабочееМесто = ВТ_ПриказыНаИнструктажи.РабочееМесто
			|				ИЛИ ВТ_ПриказыНаИнструктажи.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
			|			И (ВЫБОР
			|				КОГДА ВТ_ДокументОснование.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Вводный)
			|					ТОГДА ВТ_ПриказыНаИнструктажи.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
			|				КОГДА ВТ_ДокументОснование.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
			|					ТОГДА ВТ_ПриказыНаИнструктажи.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
			|				КОГДА ВТ_ДокументОснование.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
			|					ТОГДА ВТ_ПриказыНаИнструктажи.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
			|				ИНАЧЕ ЛОЖЬ
			|			КОНЕЦ)
			|ГДЕ
			|	НЕ ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL";
			
			Запрос.УстановитьПараметр("ДатаАнализа",ДатаАнализа);
			Запрос.УстановитьПараметр("Организация",ТекущийОбъект.Организация);
			Запрос.УстановитьПараметр("Ссылка",		ТекущийОбъект.ДокументОснование);
			
		ИначеЕсли ТипЗнч(ТекущийОбъект.ДокументОснование) = Тип("ДокументСсылка.ПриемНаРаботу") Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПриемНаРаботуРаботники.Сотрудник КАК Сотрудник,
			|	ПриемНаРаботуРаботники.Подразделение КАК Подразделение,
			|	ПриемНаРаботуРаботники.Должность КАК Должность,
			|	ПриемНаРаботуРаботники.РабочееМесто КАК РабочееМесто
			|ПОМЕСТИТЬ ВТ_ДокументОснование
			|ИЗ
			|	Документ.ПриемНаРаботу.Работники КАК ПриемНаРаботуРаботники
			|ГДЕ
			|	ПриемНаРаботуРаботники.Ссылка.Проведен
			|	И ПриемНаРаботуРаботники.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПриказыНаИнструктажиСрезПоследних.Подразделение КАК Подразделение,
			|	ПриказыНаИнструктажиСрезПоследних.Должность КАК Должность,
			|	ПриказыНаИнструктажиСрезПоследних.РабочееМесто КАК РабочееМесто,
			|	ПриказыНаИнструктажиСрезПоследних.Инструктаж КАК Инструктаж,
			|	ПриказыНаИнструктажиСрезПоследних.Ответственный КАК Ответственный
			|ПОМЕСТИТЬ ВТ_ПриказыНаИнструктажи
			|ИЗ
			|	РегистрСведений.ПриказыНаИнструктажи.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ПриказыНаИнструктажиСрезПоследних
			|ГДЕ
			|	ПриказыНаИнструктажиСрезПоследних.Проводить
			|	И ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Вводный)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДокументОснование.Сотрудник КАК Сотрудник,
			|	ВТ_ДокументОснование.Подразделение КАК Подразделение,
			|	ВТ_ДокументОснование.Должность КАК Должность,
			|	ВТ_ДокументОснование.РабочееМесто КАК РабочееМесто,
			|	ВТ_ПриказыНаИнструктажи.Инструктаж КАК Инструктаж,
			|	ВТ_ПриказыНаИнструктажи.Ответственный КАК Ответственный
			|ИЗ
			|	ВТ_ДокументОснование КАК ВТ_ДокументОснование
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриказыНаИнструктажи КАК ВТ_ПриказыНаИнструктажи
			|		ПО (ВТ_ДокументОснование.Подразделение = ВТ_ПриказыНаИнструктажи.Подразделение
			|				ИЛИ ВТ_ПриказыНаИнструктажи.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
			|			И (ВТ_ДокументОснование.Должность = ВТ_ПриказыНаИнструктажи.Должность
			|				ИЛИ ВТ_ПриказыНаИнструктажи.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
			|			И (ВТ_ДокументОснование.РабочееМесто = ВТ_ПриказыНаИнструктажи.РабочееМесто
			|				ИЛИ ВТ_ПриказыНаИнструктажи.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
			|ГДЕ
			|	НЕ ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL";			
			
			Запрос.УстановитьПараметр("ДатаАнализа",ДатаАнализа);
			Запрос.УстановитьПараметр("Организация",ТекущийОбъект.Организация);
			Запрос.УстановитьПараметр("Ссылка",		ТекущийОбъект.ДокументОснование);
			
		ИначеЕсли ТипЗнч(ТекущийОбъект.ДокументОснование) = Тип("ДокументСсылка.КадровоеПеремещение") Тогда	
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	КадровоеПеремещениеРаботники.Сотрудник КАК Сотрудник,
			|	КадровоеПеремещениеРаботники.ПодразделениеНовое КАК Подразделение,
			|	КадровоеПеремещениеРаботники.ДолжностьНовая КАК Должность,
			|	КадровоеПеремещениеРаботники.РабочееМестоНовое КАК РабочееМесто
			|ПОМЕСТИТЬ ВТ_ДокументОснование
			|ИЗ
			|	Документ.КадровоеПеремещение.Работники КАК КадровоеПеремещениеРаботники
			|ГДЕ
			|	КадровоеПеремещениеРаботники.Ссылка.Проведен
			|	И КадровоеПеремещениеРаботники.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПриказыНаИнструктажиСрезПоследних.Подразделение КАК Подразделение,
			|	ПриказыНаИнструктажиСрезПоследних.Должность КАК Должность,
			|	ПриказыНаИнструктажиСрезПоследних.РабочееМесто КАК РабочееМесто,
			|	ПриказыНаИнструктажиСрезПоследних.Инструктаж КАК Инструктаж,
			|	ПриказыНаИнструктажиСрезПоследних.Ответственный КАК Ответственный
			|ПОМЕСТИТЬ ВТ_ПриказыНаИнструктажи
			|ИЗ
			|	РегистрСведений.ПриказыНаИнструктажи.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ПриказыНаИнструктажиСрезПоследних
			|ГДЕ
			|	ПриказыНаИнструктажиСрезПоследних.Проводить
			|	И ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДокументОснование.Сотрудник КАК Сотрудник,
			|	ВТ_ДокументОснование.Подразделение КАК Подразделение,
			|	ВТ_ДокументОснование.Должность КАК Должность,
			|	ВТ_ДокументОснование.РабочееМесто КАК РабочееМесто,
			|	ВТ_ПриказыНаИнструктажи.Инструктаж КАК Инструктаж,
			|	ВТ_ПриказыНаИнструктажи.Ответственный КАК Ответственный
			|ИЗ
			|	ВТ_ДокументОснование КАК ВТ_ДокументОснование
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриказыНаИнструктажи КАК ВТ_ПриказыНаИнструктажи
			|		ПО (ВТ_ДокументОснование.Подразделение = ВТ_ПриказыНаИнструктажи.Подразделение
			|				ИЛИ ВТ_ПриказыНаИнструктажи.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
			|			И (ВТ_ДокументОснование.Должность = ВТ_ПриказыНаИнструктажи.Должность
			|				ИЛИ ВТ_ПриказыНаИнструктажи.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
			|			И (ВТ_ДокументОснование.РабочееМесто = ВТ_ПриказыНаИнструктажи.РабочееМесто
			|				ИЛИ ВТ_ПриказыНаИнструктажи.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
			|ГДЕ
			|	НЕ ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL";
			
			Запрос.УстановитьПараметр("ДатаАнализа",ДатаАнализа);
			Запрос.УстановитьПараметр("Организация",ТекущийОбъект.Организация);
			Запрос.УстановитьПараметр("Ссылка",		ТекущийОбъект.ДокументОснование);
			
		Иначе
			
			Возврат;
			
		КонецЕсли;	
		
	ИначеЕсли ВидЗаполнения = "ПоПриказам" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнструктажиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ИнструктажиСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	ИнструктажиСотрудниковСрезПоследних.Должность КАК Должность,
		|	ИнструктажиСотрудниковСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж КАК Инструктаж,
		|	ИнструктажиСотрудниковСрезПоследних.ДатаИнструктажа КАК ДатаИнструктажа
		|ПОМЕСТИТЬ ВТ_ПроведенныеИнструктажи
		|ИЗ
		|	РегистрСведений.ИнструктажиСотрудников.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ИнструктажиСотрудниковСрезПоследних
		|ГДЕ
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнструктажиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ИнструктажиСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	ИнструктажиСотрудниковСрезПоследних.Должность КАК Должность,
		|	ИнструктажиСотрудниковСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж КАК Инструктаж,
		|	ИнструктажиСотрудниковСрезПоследних.ДатаИнструктажа КАК ДатаИнструктажа
		|ПОМЕСТИТЬ ВТ_ПоследниеПервичныеИнструктажи
		|ИЗ
		|	РегистрСведений.ИнструктажиСотрудников.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ИнструктажиСотрудниковСрезПоследних
		|ГДЕ
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник,
		|	ЗанятыеРабочиеМестаОстатки.Подразделение КАК Подразделение,
		|	ЗанятыеРабочиеМестаОстатки.Должность КАК Должность,
		|	ЗанятыеРабочиеМестаОстатки.РабочееМесто КАК РабочееМесто
		|ПОМЕСТИТЬ ВТ_ЗРМ
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&ДатаАнализа, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриказыНаИнструктажиСрезПоследних.Подразделение КАК Подразделение,
		|	ПриказыНаИнструктажиСрезПоследних.Должность КАК Должность,
		|	ПриказыНаИнструктажиСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ПриказыНаИнструктажиСрезПоследних.Инструктаж КАК Инструктаж,
		|	ПриказыНаИнструктажиСрезПоследних.Ответственный КАК Ответственный,
		|	ПриказыНаИнструктажиСрезПоследних.Периодичность КАК Периодичность
		|ПОМЕСТИТЬ ВТ_ПриказыНаИнструктажи
		|ИЗ
		|	РегистрСведений.ПриказыНаИнструктажи.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ПриказыНаИнструктажиСрезПоследних
		|ГДЕ
		|	ПриказыНаИнструктажиСрезПоследних.Проводить
		|	И ВЫБОР
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
		|				ТОГДА ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|						ИЛИ ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|			ИНАЧЕ ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ЗРМ.Сотрудник КАК Сотрудник,
		|	ВТ_ЗРМ.Подразделение КАК Подразделение,
		|	ВТ_ЗРМ.Должность КАК Должность,
		|	ВТ_ЗРМ.РабочееМесто КАК РабочееМесто,
		|	ВТ_ПриказыНаИнструктажи.Инструктаж КАК Инструктаж,
		|	ВТ_ПриказыНаИнструктажи.Ответственный КАК Ответственный
		|ИЗ
		|	ВТ_ЗРМ КАК ВТ_ЗРМ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриказыНаИнструктажи КАК ВТ_ПриказыНаИнструктажи
		|		ПО (ВТ_ЗРМ.Подразделение = ВТ_ПриказыНаИнструктажи.Подразделение
		|				ИЛИ ВТ_ПриказыНаИнструктажи.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
		|			И (ВТ_ЗРМ.Должность = ВТ_ПриказыНаИнструктажи.Должность
		|				ИЛИ ВТ_ПриказыНаИнструктажи.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
		|			И (ВТ_ЗРМ.РабочееМесто = ВТ_ПриказыНаИнструктажи.РабочееМесто
		|				ИЛИ ВТ_ПриказыНаИнструктажи.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроведенныеИнструктажи КАК ВТ_ПроведенныеИнструктажи
		|		ПО ВТ_ЗРМ.Сотрудник = ВТ_ПроведенныеИнструктажи.Сотрудник
		|			И ВТ_ЗРМ.Подразделение = ВТ_ПроведенныеИнструктажи.Подразделение
		|			И ВТ_ЗРМ.Должность = ВТ_ПроведенныеИнструктажи.Должность
		|			И ВТ_ЗРМ.РабочееМесто = ВТ_ПроведенныеИнструктажи.РабочееМесто
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследниеПервичныеИнструктажи КАК ВТ_ПоследниеПервичныеИнструктажи
		|		ПО ВТ_ЗРМ.Сотрудник = ВТ_ПоследниеПервичныеИнструктажи.Сотрудник
		|			И ВТ_ЗРМ.Подразделение = ВТ_ПоследниеПервичныеИнструктажи.Подразделение
		|			И ВТ_ЗРМ.Должность = ВТ_ПоследниеПервичныеИнструктажи.Должность
		|			И ВТ_ЗРМ.РабочееМесто = ВТ_ПоследниеПервичныеИнструктажи.РабочееМесто
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Вводный)
		|					ИЛИ &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|				ТОГДА ВЫБОР
		|						КОГДА ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|							ТОГДА ЛОЖЬ
		|						ИНАЧЕ ВТ_ПроведенныеИнструктажи.Инструктаж ЕСТЬ NULL
		|					КОНЕЦ
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
		|				ТОГДА ВЫБОР
		|						КОГДА ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|							ТОГДА ЛОЖЬ
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ВТ_ПроведенныеИнструктажи.Инструктаж ЕСТЬ NULL
		|									ТОГДА ВЫБОР
		|											КОГДА ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа ЕСТЬ NULL
		|												ТОГДА ЛОЖЬ
		|											ИНАЧЕ ВЫБОР
		|													КОГДА ВТ_ПриказыНаИнструктажи.Периодичность = ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)
		|														ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, 6), МЕСЯЦ)
		|													ИНАЧЕ ВЫБОР
		|															КОГДА ВТ_ПриказыНаИнструктажи.Периодичность.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
		|																ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов * 12 / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|															ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|														КОНЕЦ
		|												КОНЕЦ
		|										КОНЕЦ
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ВТ_ПриказыНаИнструктажи.Периодичность = ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)
		|											ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, 6), МЕСЯЦ)
		|										ИНАЧЕ ВЫБОР
		|												КОГДА ВТ_ПриказыНаИнструктажи.Периодичность.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
		|													ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов * 12 / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|												ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			ИНАЧЕ НЕ ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|		КОНЕЦ
		|	И ВТ_ПриказыНаИнструктажи.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ЗРМ.Сотрудник.Наименование,
		|	ВТ_ЗРМ.Подразделение.Наименование,
		|	ВТ_ЗРМ.Должность.Наименование,
		|	ВТ_ЗРМ.РабочееМесто.Наименование,
		|	ВТ_ПриказыНаИнструктажи.Инструктаж.Наименование,
		|	ВТ_ПриказыНаИнструктажи.Ответственный.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",	ДатаАнализа);
		Запрос.УстановитьПараметр("ДатаРасчета",	ТекущийОбъект.ДатаИнструктажа);
		Запрос.УстановитьПараметр("ВидИнструктажа",	ТекущийОбъект.ВидИнструктажа);
		Запрос.УстановитьПараметр("Организация",	ТекущийОбъект.Организация);
			
	ИначеЕсли ВидЗаполнения = "ПоПодразделениям" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнструктажиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ИнструктажиСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	ИнструктажиСотрудниковСрезПоследних.Должность КАК Должность,
		|	ИнструктажиСотрудниковСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж КАК Инструктаж,
		|	ИнструктажиСотрудниковСрезПоследних.ДатаИнструктажа КАК ДатаИнструктажа
		|ПОМЕСТИТЬ ВТ_ПроведенныеИнструктажи
		|ИЗ
		|	РегистрСведений.ИнструктажиСотрудников.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ИнструктажиСотрудниковСрезПоследних
		|ГДЕ
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнструктажиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ИнструктажиСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	ИнструктажиСотрудниковСрезПоследних.Должность КАК Должность,
		|	ИнструктажиСотрудниковСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж КАК Инструктаж,
		|	ИнструктажиСотрудниковСрезПоследних.ДатаИнструктажа КАК ДатаИнструктажа
		|ПОМЕСТИТЬ ВТ_ПоследниеПервичныеИнструктажи
		|ИЗ
		|	РегистрСведений.ИнструктажиСотрудников.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ИнструктажиСотрудниковСрезПоследних
		|ГДЕ
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник,
		|	ЗанятыеРабочиеМестаОстатки.Подразделение КАК Подразделение,
		|	ЗанятыеРабочиеМестаОстатки.Должность КАК Должность,
		|	ЗанятыеРабочиеМестаОстатки.РабочееМесто КАК РабочееМесто
		|ПОМЕСТИТЬ ВТ_ЗРМ
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Подразделение В (&МассивПодразделений)) КАК ЗанятыеРабочиеМестаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриказыНаИнструктажиСрезПоследних.Подразделение КАК Подразделение,
		|	ПриказыНаИнструктажиСрезПоследних.Должность КАК Должность,
		|	ПриказыНаИнструктажиСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ПриказыНаИнструктажиСрезПоследних.Инструктаж КАК Инструктаж,
		|	ПриказыНаИнструктажиСрезПоследних.Ответственный КАК Ответственный,
		|	ПриказыНаИнструктажиСрезПоследних.Периодичность КАК Периодичность
		|ПОМЕСТИТЬ ВТ_ПриказыНаИнструктажи
		|ИЗ
		|	РегистрСведений.ПриказыНаИнструктажи.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ПриказыНаИнструктажиСрезПоследних
		|ГДЕ
		|	ПриказыНаИнструктажиСрезПоследних.Проводить
		|	И ВЫБОР
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
		|				ТОГДА ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|						ИЛИ ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|			ИНАЧЕ ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ЗРМ.Сотрудник КАК Сотрудник,
		|	ВТ_ЗРМ.Подразделение КАК Подразделение,
		|	ВТ_ЗРМ.Должность КАК Должность,
		|	ВТ_ЗРМ.РабочееМесто КАК РабочееМесто,
		|	ВТ_ПриказыНаИнструктажи.Инструктаж КАК Инструктаж,
		|	ВТ_ПриказыНаИнструктажи.Ответственный КАК Ответственный
		|ИЗ
		|	ВТ_ЗРМ КАК ВТ_ЗРМ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриказыНаИнструктажи КАК ВТ_ПриказыНаИнструктажи
		|		ПО (ВТ_ЗРМ.Подразделение = ВТ_ПриказыНаИнструктажи.Подразделение
		|				ИЛИ ВТ_ПриказыНаИнструктажи.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
		|			И (ВТ_ЗРМ.Должность = ВТ_ПриказыНаИнструктажи.Должность
		|				ИЛИ ВТ_ПриказыНаИнструктажи.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
		|			И (ВТ_ЗРМ.РабочееМесто = ВТ_ПриказыНаИнструктажи.РабочееМесто
		|				ИЛИ ВТ_ПриказыНаИнструктажи.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроведенныеИнструктажи КАК ВТ_ПроведенныеИнструктажи
		|		ПО ВТ_ЗРМ.Сотрудник = ВТ_ПроведенныеИнструктажи.Сотрудник
		|			И ВТ_ЗРМ.Подразделение = ВТ_ПроведенныеИнструктажи.Подразделение
		|			И ВТ_ЗРМ.Должность = ВТ_ПроведенныеИнструктажи.Должность
		|			И ВТ_ЗРМ.РабочееМесто = ВТ_ПроведенныеИнструктажи.РабочееМесто
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследниеПервичныеИнструктажи КАК ВТ_ПоследниеПервичныеИнструктажи
		|		ПО ВТ_ЗРМ.Сотрудник = ВТ_ПоследниеПервичныеИнструктажи.Сотрудник
		|			И ВТ_ЗРМ.Подразделение = ВТ_ПоследниеПервичныеИнструктажи.Подразделение
		|			И ВТ_ЗРМ.Должность = ВТ_ПоследниеПервичныеИнструктажи.Должность
		|			И ВТ_ЗРМ.РабочееМесто = ВТ_ПоследниеПервичныеИнструктажи.РабочееМесто
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Вводный)
		|					ИЛИ &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|				ТОГДА ВЫБОР
		|						КОГДА ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|							ТОГДА ЛОЖЬ
		|						ИНАЧЕ ВТ_ПроведенныеИнструктажи.Инструктаж ЕСТЬ NULL
		|					КОНЕЦ
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
		|				ТОГДА ВЫБОР
		|						КОГДА ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|							ТОГДА ЛОЖЬ
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ВТ_ПроведенныеИнструктажи.Инструктаж ЕСТЬ NULL
		|									ТОГДА ВЫБОР
		|											КОГДА ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа ЕСТЬ NULL
		|												ТОГДА ЛОЖЬ
		|											ИНАЧЕ ВЫБОР
		|													КОГДА ВТ_ПриказыНаИнструктажи.Периодичность = ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)
		|														ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, 6), МЕСЯЦ)
		|													ИНАЧЕ ВЫБОР
		|															КОГДА ВТ_ПриказыНаИнструктажи.Периодичность.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
		|																ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов * 12 / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|															ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|														КОНЕЦ
		|												КОНЕЦ
		|										КОНЕЦ
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ВТ_ПриказыНаИнструктажи.Периодичность = ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)
		|											ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, 6), МЕСЯЦ)
		|										ИНАЧЕ ВЫБОР
		|												КОГДА ВТ_ПриказыНаИнструктажи.Периодичность.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
		|													ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов * 12 / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|												ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			ИНАЧЕ НЕ ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|		КОНЕЦ
		|	И ВТ_ПриказыНаИнструктажи.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ЗРМ.Сотрудник.Наименование,
		|	ВТ_ЗРМ.Подразделение.Наименование,
		|	ВТ_ЗРМ.Должность.Наименование,
		|	ВТ_ЗРМ.РабочееМесто.Наименование,
		|	ВТ_ПриказыНаИнструктажи.Инструктаж.Наименование,
		|	ВТ_ПриказыНаИнструктажи.Ответственный.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ДатаАнализа);
		Запрос.УстановитьПараметр("ДатаРасчета",		ТекущийОбъект.ДатаИнструктажа);
		Запрос.УстановитьПараметр("ВидИнструктажа",		ТекущийОбъект.ВидИнструктажа);
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);	
		Запрос.УстановитьПараметр("МассивПодразделений",ЗначениеПараметраЗаполнения);
		
	ИначеЕсли ВидЗаполнения = "ПоДолжностям" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнструктажиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ИнструктажиСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	ИнструктажиСотрудниковСрезПоследних.Должность КАК Должность,
		|	ИнструктажиСотрудниковСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж КАК Инструктаж,
		|	ИнструктажиСотрудниковСрезПоследних.ДатаИнструктажа КАК ДатаИнструктажа
		|ПОМЕСТИТЬ ВТ_ПроведенныеИнструктажи
		|ИЗ
		|	РегистрСведений.ИнструктажиСотрудников.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ИнструктажиСотрудниковСрезПоследних
		|ГДЕ
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнструктажиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ИнструктажиСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	ИнструктажиСотрудниковСрезПоследних.Должность КАК Должность,
		|	ИнструктажиСотрудниковСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж КАК Инструктаж,
		|	ИнструктажиСотрудниковСрезПоследних.ДатаИнструктажа КАК ДатаИнструктажа
		|ПОМЕСТИТЬ ВТ_ПоследниеПервичныеИнструктажи
		|ИЗ
		|	РегистрСведений.ИнструктажиСотрудников.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ИнструктажиСотрудниковСрезПоследних
		|ГДЕ
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник,
		|	ЗанятыеРабочиеМестаОстатки.Подразделение КАК Подразделение,
		|	ЗанятыеРабочиеМестаОстатки.Должность КАК Должность,
		|	ЗанятыеРабочиеМестаОстатки.РабочееМесто КАК РабочееМесто
		|ПОМЕСТИТЬ ВТ_ЗРМ
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Должность В (&МассивДолжностей)) КАК ЗанятыеРабочиеМестаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриказыНаИнструктажиСрезПоследних.Подразделение КАК Подразделение,
		|	ПриказыНаИнструктажиСрезПоследних.Должность КАК Должность,
		|	ПриказыНаИнструктажиСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ПриказыНаИнструктажиСрезПоследних.Инструктаж КАК Инструктаж,
		|	ПриказыНаИнструктажиСрезПоследних.Ответственный КАК Ответственный,
		|	ПриказыНаИнструктажиСрезПоследних.Периодичность КАК Периодичность
		|ПОМЕСТИТЬ ВТ_ПриказыНаИнструктажи
		|ИЗ
		|	РегистрСведений.ПриказыНаИнструктажи.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ПриказыНаИнструктажиСрезПоследних
		|ГДЕ
		|	ПриказыНаИнструктажиСрезПоследних.Проводить
		|	И ВЫБОР
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
		|				ТОГДА ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|						ИЛИ ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|			ИНАЧЕ ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ЗРМ.Сотрудник КАК Сотрудник,
		|	ВТ_ЗРМ.Подразделение КАК Подразделение,
		|	ВТ_ЗРМ.Должность КАК Должность,
		|	ВТ_ЗРМ.РабочееМесто КАК РабочееМесто,
		|	ВТ_ПриказыНаИнструктажи.Инструктаж КАК Инструктаж,
		|	ВТ_ПриказыНаИнструктажи.Ответственный КАК Ответственный
		|ИЗ
		|	ВТ_ЗРМ КАК ВТ_ЗРМ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриказыНаИнструктажи КАК ВТ_ПриказыНаИнструктажи
		|		ПО (ВТ_ЗРМ.Подразделение = ВТ_ПриказыНаИнструктажи.Подразделение
		|				ИЛИ ВТ_ПриказыНаИнструктажи.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
		|			И (ВТ_ЗРМ.Должность = ВТ_ПриказыНаИнструктажи.Должность
		|				ИЛИ ВТ_ПриказыНаИнструктажи.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
		|			И (ВТ_ЗРМ.РабочееМесто = ВТ_ПриказыНаИнструктажи.РабочееМесто
		|				ИЛИ ВТ_ПриказыНаИнструктажи.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроведенныеИнструктажи КАК ВТ_ПроведенныеИнструктажи
		|		ПО ВТ_ЗРМ.Сотрудник = ВТ_ПроведенныеИнструктажи.Сотрудник
		|			И ВТ_ЗРМ.Подразделение = ВТ_ПроведенныеИнструктажи.Подразделение
		|			И ВТ_ЗРМ.Должность = ВТ_ПроведенныеИнструктажи.Должность
		|			И ВТ_ЗРМ.РабочееМесто = ВТ_ПроведенныеИнструктажи.РабочееМесто
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследниеПервичныеИнструктажи КАК ВТ_ПоследниеПервичныеИнструктажи
		|		ПО ВТ_ЗРМ.Сотрудник = ВТ_ПоследниеПервичныеИнструктажи.Сотрудник
		|			И ВТ_ЗРМ.Подразделение = ВТ_ПоследниеПервичныеИнструктажи.Подразделение
		|			И ВТ_ЗРМ.Должность = ВТ_ПоследниеПервичныеИнструктажи.Должность
		|			И ВТ_ЗРМ.РабочееМесто = ВТ_ПоследниеПервичныеИнструктажи.РабочееМесто
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Вводный)
		|					ИЛИ &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|				ТОГДА ВЫБОР
		|						КОГДА ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|							ТОГДА ЛОЖЬ
		|						ИНАЧЕ ВТ_ПроведенныеИнструктажи.Инструктаж ЕСТЬ NULL
		|					КОНЕЦ
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
		|				ТОГДА ВЫБОР
		|						КОГДА ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|							ТОГДА ЛОЖЬ
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ВТ_ПроведенныеИнструктажи.Инструктаж ЕСТЬ NULL
		|									ТОГДА ВЫБОР
		|											КОГДА ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа ЕСТЬ NULL
		|												ТОГДА ЛОЖЬ
		|											ИНАЧЕ ВЫБОР
		|													КОГДА ВТ_ПриказыНаИнструктажи.Периодичность = ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)
		|														ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, 6), МЕСЯЦ)
		|													ИНАЧЕ ВЫБОР
		|															КОГДА ВТ_ПриказыНаИнструктажи.Периодичность.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
		|																ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов * 12 / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|															ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|														КОНЕЦ
		|												КОНЕЦ
		|										КОНЕЦ
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ВТ_ПриказыНаИнструктажи.Периодичность = ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)
		|											ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, 6), МЕСЯЦ)
		|										ИНАЧЕ ВЫБОР
		|												КОГДА ВТ_ПриказыНаИнструктажи.Периодичность.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
		|													ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов * 12 / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|												ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			ИНАЧЕ НЕ ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|		КОНЕЦ
		|	И ВТ_ПриказыНаИнструктажи.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ЗРМ.Сотрудник.Наименование,
		|	ВТ_ЗРМ.Подразделение.Наименование,
		|	ВТ_ЗРМ.Должность.Наименование,
		|	ВТ_ЗРМ.РабочееМесто.Наименование,
		|	ВТ_ПриказыНаИнструктажи.Инструктаж.Наименование,
		|	ВТ_ПриказыНаИнструктажи.Ответственный.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ДатаАнализа);
		Запрос.УстановитьПараметр("ДатаРасчета",		ТекущийОбъект.ДатаИнструктажа);
		Запрос.УстановитьПараметр("ВидИнструктажа",		ТекущийОбъект.ВидИнструктажа);
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);	
		Запрос.УстановитьПараметр("МассивДолжностей",	ЗначениеПараметраЗаполнения);		
		
	ИначеЕсли ВидЗаполнения = "ПоСотрудникам" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнструктажиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ИнструктажиСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	ИнструктажиСотрудниковСрезПоследних.Должность КАК Должность,
		|	ИнструктажиСотрудниковСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж КАК Инструктаж,
		|	ИнструктажиСотрудниковСрезПоследних.ДатаИнструктажа КАК ДатаИнструктажа
		|ПОМЕСТИТЬ ВТ_ПроведенныеИнструктажи
		|ИЗ
		|	РегистрСведений.ИнструктажиСотрудников.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ИнструктажиСотрудниковСрезПоследних
		|ГДЕ
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИнструктажиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ИнструктажиСотрудниковСрезПоследних.Подразделение КАК Подразделение,
		|	ИнструктажиСотрудниковСрезПоследних.Должность КАК Должность,
		|	ИнструктажиСотрудниковСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж КАК Инструктаж,
		|	ИнструктажиСотрудниковСрезПоследних.ДатаИнструктажа КАК ДатаИнструктажа
		|ПОМЕСТИТЬ ВТ_ПоследниеПервичныеИнструктажи
		|ИЗ
		|	РегистрСведений.ИнструктажиСотрудников.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ИнструктажиСотрудниковСрезПоследних
		|ГДЕ
		|	ИнструктажиСотрудниковСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник,
		|	ЗанятыеРабочиеМестаОстатки.Подразделение КАК Подразделение,
		|	ЗанятыеРабочиеМестаОстатки.Должность КАК Должность,
		|	ЗанятыеРабочиеМестаОстатки.РабочееМесто КАК РабочееМесто
		|ПОМЕСТИТЬ ВТ_ЗРМ
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Сотрудник В (&МассивСотрудников)) КАК ЗанятыеРабочиеМестаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриказыНаИнструктажиСрезПоследних.Подразделение КАК Подразделение,
		|	ПриказыНаИнструктажиСрезПоследних.Должность КАК Должность,
		|	ПриказыНаИнструктажиСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ПриказыНаИнструктажиСрезПоследних.Инструктаж КАК Инструктаж,
		|	ПриказыНаИнструктажиСрезПоследних.Ответственный КАК Ответственный,
		|	ПриказыНаИнструктажиСрезПоследних.Периодичность КАК Периодичность
		|ПОМЕСТИТЬ ВТ_ПриказыНаИнструктажи
		|ИЗ
		|	РегистрСведений.ПриказыНаИнструктажи.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ПриказыНаИнструктажиСрезПоследних
		|ГДЕ
		|	ПриказыНаИнструктажиСрезПоследних.Проводить
		|	И ВЫБОР
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
		|				ТОГДА ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|						ИЛИ ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|			ИНАЧЕ ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ЗРМ.Сотрудник КАК Сотрудник,
		|	ВТ_ЗРМ.Подразделение КАК Подразделение,
		|	ВТ_ЗРМ.Должность КАК Должность,
		|	ВТ_ЗРМ.РабочееМесто КАК РабочееМесто,
		|	ВТ_ПриказыНаИнструктажи.Инструктаж КАК Инструктаж,
		|	ВТ_ПриказыНаИнструктажи.Ответственный КАК Ответственный
		|ИЗ
		|	ВТ_ЗРМ КАК ВТ_ЗРМ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриказыНаИнструктажи КАК ВТ_ПриказыНаИнструктажи
		|		ПО (ВТ_ЗРМ.Подразделение = ВТ_ПриказыНаИнструктажи.Подразделение
		|				ИЛИ ВТ_ПриказыНаИнструктажи.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
		|			И (ВТ_ЗРМ.Должность = ВТ_ПриказыНаИнструктажи.Должность
		|				ИЛИ ВТ_ПриказыНаИнструктажи.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
		|			И (ВТ_ЗРМ.РабочееМесто = ВТ_ПриказыНаИнструктажи.РабочееМесто
		|				ИЛИ ВТ_ПриказыНаИнструктажи.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроведенныеИнструктажи КАК ВТ_ПроведенныеИнструктажи
		|		ПО ВТ_ЗРМ.Сотрудник = ВТ_ПроведенныеИнструктажи.Сотрудник
		|			И ВТ_ЗРМ.Подразделение = ВТ_ПроведенныеИнструктажи.Подразделение
		|			И ВТ_ЗРМ.Должность = ВТ_ПроведенныеИнструктажи.Должность
		|			И ВТ_ЗРМ.РабочееМесто = ВТ_ПроведенныеИнструктажи.РабочееМесто
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследниеПервичныеИнструктажи КАК ВТ_ПоследниеПервичныеИнструктажи
		|		ПО ВТ_ЗРМ.Сотрудник = ВТ_ПоследниеПервичныеИнструктажи.Сотрудник
		|			И ВТ_ЗРМ.Подразделение = ВТ_ПоследниеПервичныеИнструктажи.Подразделение
		|			И ВТ_ЗРМ.Должность = ВТ_ПоследниеПервичныеИнструктажи.Должность
		|			И ВТ_ЗРМ.РабочееМесто = ВТ_ПоследниеПервичныеИнструктажи.РабочееМесто
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Вводный)
		|					ИЛИ &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
		|				ТОГДА ВЫБОР
		|						КОГДА ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|							ТОГДА ЛОЖЬ
		|						ИНАЧЕ ВТ_ПроведенныеИнструктажи.Инструктаж ЕСТЬ NULL
		|					КОНЕЦ
		|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
		|				ТОГДА ВЫБОР
		|						КОГДА ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|							ТОГДА ЛОЖЬ
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ВТ_ПроведенныеИнструктажи.Инструктаж ЕСТЬ NULL
		|									ТОГДА ВЫБОР
		|											КОГДА ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа ЕСТЬ NULL
		|												ТОГДА ЛОЖЬ
		|											ИНАЧЕ ВЫБОР
		|													КОГДА ВТ_ПриказыНаИнструктажи.Периодичность = ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)
		|														ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, 6), МЕСЯЦ)
		|													ИНАЧЕ ВЫБОР
		|															КОГДА ВТ_ПриказыНаИнструктажи.Периодичность.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
		|																ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов * 12 / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|															ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПоследниеПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|														КОНЕЦ
		|												КОНЕЦ
		|										КОНЕЦ
		|								ИНАЧЕ ВЫБОР
		|										КОГДА ВТ_ПриказыНаИнструктажи.Периодичность = ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)
		|											ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, 6), МЕСЯЦ)
		|										ИНАЧЕ ВЫБОР
		|												КОГДА ВТ_ПриказыНаИнструктажи.Периодичность.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
		|													ТОГДА НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов * 12 / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|												ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаРасчета, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(ВТ_ПроведенныеИнструктажи.ДатаИнструктажа, МЕСЯЦ, ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоПериодов / ВТ_ПриказыНаИнструктажи.Периодичность.КоличествоВПериоде), МЕСЯЦ)
		|											КОНЕЦ
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОНЕЦ
		|			ИНАЧЕ НЕ ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
		|		КОНЕЦ
		|	И ВТ_ПриказыНаИнструктажи.Инструктаж.ВидИнструктажа = &ВидИнструктажа
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ЗРМ.Сотрудник.Наименование,
		|	ВТ_ЗРМ.Подразделение.Наименование,
		|	ВТ_ЗРМ.Должность.Наименование,
		|	ВТ_ЗРМ.РабочееМесто.Наименование,
		|	ВТ_ПриказыНаИнструктажи.Инструктаж.Наименование,
		|	ВТ_ПриказыНаИнструктажи.Ответственный.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ДатаАнализа);
		Запрос.УстановитьПараметр("ДатаРасчета",		ТекущийОбъект.ДатаИнструктажа);
		Запрос.УстановитьПараметр("ВидИнструктажа",		ТекущийОбъект.ВидИнструктажа);
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);	
		Запрос.УстановитьПараметр("МассивСотрудников",	ЗначениеПараметраЗаполнения);		
			
	Иначе
		
		Возврат;
		
	КонецЕсли;	
	
	ТекущийОбъект.Работники.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЖурналРегистрацииВводногоИнструктажа") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм, 
		"ЖурналРегистрацииВводногоИнструктажа",
		"Журнал регистрации вводного инструктажа",
		СформироватьПечатнуюЖурналаРегистрацииВводногоИнструктажа(МассивОбъектов, ОбъектыПечати),,"Документ.ИнструктажСотрудников.ПФ_MXL_ЖурналРегистрацииВводногоИнструктажа");
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЖурналРегистрацииИнструктажаНаРабочемМесте") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм, 
		"ЖурналРегистрацииИнструктажаНаРабочемМесте",
		"Журнал регистрации инструктажа на рабочем месте",
		СформироватьПечатнуюФормуЖурналаРегистрацииИнструктажаНаРабочемМесте(МассивОбъектов, ОбъектыПечати),,"Документ.ИнструктажСотрудников.ПФ_MXL_ЖурналРегистрацииИнструктажаНаРабочемМесте");
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЖурналРегистрацииЦелевогоИнструктажа") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм, 
		"ЖурналРегистрацииЦелевогоИнструктажа",
		"Журнал регистрации целевого инструктажа",
		СформироватьПечатнуюФормуЖурналаРегистрацииЦелевогоИнструктажа(МассивОбъектов, ОбъектыПечати),,"Документ.ИнструктажСотрудников.ПФ_MXL_ЖурналРегистрацииЦелевогоИнструктажа");
		
	КонецЕсли;
			
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ИнструктажСотрудников";
	КомандаПечати.Идентификатор = "ЖурналРегистрацииВводногоИнструктажа";
	КомандаПечати.Представление = НСтр("ru = 'Журнал регистрации вводного инструктажа'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ИнструктажСотрудников";
	КомандаПечати.Идентификатор = "ЖурналРегистрацииИнструктажаНаРабочемМесте";
	КомандаПечати.Представление = НСтр("ru = 'Журнал регистрации инструктажа на рабочем месте'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ИнструктажСотрудников";
	КомандаПечати.Идентификатор = "ЖурналРегистрацииЦелевогоИнструктажа";
	КомандаПечати.Представление = НСтр("ru = 'Журнал регистрации целевого инструктажа'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Функция СформироватьПечатнуюЖурналаРегистрацииВводногоИнструктажа(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент 						= Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб 			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнструктажСотрудников_ЖурналРегистрацииВводногоИнструктажа";
	ТабличныйДокумент.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнструктажСотрудников.ПФ_MXL_ЖурналРегистрацииВводногоИнструктажа");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Должность КАК Должность
	|ПОМЕСТИТЬ ВТ_ОсновныеМестаРаботы
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(&ДатаАнализа, ) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнструктажСотрудников.Ссылка КАК Ссылка,
	|	ИнструктажСотрудников.Организация.НаименованиеПолное КАК ПредставлениеОрганизации
	|ИЗ
	|	Документ.ИнструктажСотрудников КАК ИнструктажСотрудников
	|ГДЕ
	|	ИнструктажСотрудников.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Вводный)
	|	И ИнструктажСотрудников.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнструктажСотрудниковРаботники.Ссылка КАК Ссылка,
	|	ИнструктажСотрудниковРаботники.Сотрудник КАК Инструктируемый,
	|	ИнструктажСотрудниковРаботники.Подразделение КАК Подразделение,
	|	ИнструктажСотрудниковРаботники.Должность КАК Должность,
	|	ИнструктажСотрудниковРаботники.Ответственный КАК Инструктор,
	|	ВЫБОР
	|		КОГДА ИнструктажСотрудниковРаботники.Сотрудник.ФизическоеЛицо.ДатаРождения = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ГОД(ИнструктажСотрудниковРаботники.Сотрудник.ФизическоеЛицо.ДатаРождения)
	|	КОНЕЦ КАК ГодРождения,
	|	ИнструктажСотрудниковРаботники.Ссылка.ДатаИнструктажа КАК ДатаИнструктажа,
	|	ВЫБОР
	|		КОГДА ВТ_ОсновныеМестаРаботы.Должность ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ВТ_ОсновныеМестаРаботы.Должность.Наименование
	|	КОНЕЦ КАК ДолжностьИнструктора
	|ИЗ
	|	Документ.ИнструктажСотрудников.Работники КАК ИнструктажСотрудниковРаботники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеМестаРаботы КАК ВТ_ОсновныеМестаРаботы
	|		ПО ИнструктажСотрудниковРаботники.Ответственный = ВТ_ОсновныеМестаРаботы.Сотрудник
	|ГДЕ
	|	ИнструктажСотрудниковРаботники.Ссылка В(&МассивОбъектов)
	|	И ИнструктажСотрудниковРаботники.Ссылка.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Вводный)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДатаАнализа", 	ТекущаяДата());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокументов 	= Результат[1].Выгрузить();
	ТаблицаИнструктажей = Результат[2].Выгрузить();
	
	Если ТаблицаДокументов.Количество() = 0 Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;	
	
	ПервыйДокумент = Истина;
	
	СчетчикСтрок = 0;
	
	Для Каждого СтрокаТаблицыДокументов Из ТаблицаДокументов Цикл
		
		Если ПервыйДокумент Тогда
			Область = Макет.ПолучитьОбласть("Обложка");
		    Область.Параметры.Заполнить(СтрокаТаблицыДокументов);
			ТабличныйДокумент.Вывести(Область);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ПервыйДокумент = Ложь;
			Область = Макет.ПолучитьОбласть("Шапка");
			ТабличныйДокумент.Вывести(Область);
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		НайденныеИнструктажи = ТаблицаИнструктажей.НайтиСтроки(НОВЫЙ Структура("Ссылка",СтрокаТаблицыДокументов.Ссылка));
		
		Для Каждого НайденныйИнструктаж Из НайденныеИнструктажи Цикл
			
			СчетчикСтрок = СчетчикСтрок + 1;
			
			Если СчетчикСтрок > 9 Тогда //всего 9 строк на листе, далее выводим шапку
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				Область = Макет.ПолучитьОбласть("Шапка");
				ТабличныйДокумент.Вывести(Область);
				СчетчикСтрок = 1; //сброс счетчика строк
			КонецЕсли;	
			
			Область = Макет.ПолучитьОбласть("Строка");
		    Область.Параметры.Заполнить(НайденныйИнструктаж);
			ПредставлениеИнструктора = ФизическиеЛица.ФамилияИнициалыФизЛица(НайденныйИнструктаж.Инструктор.ФизическоеЛицо);
			Если ЗначениеЗаполнено(НайденныйИнструктаж.ДолжностьИнструктора) Тогда
			    ПредставлениеИнструктора = ПредставлениеИнструктора + ", " + НайденныйИнструктаж.ДолжностьИнструктора;
			КонецЕсли;	
			Область.Параметры.ГодРождения 				= Формат(НайденныйИнструктаж.ГодРождения,"ЧГ=");
			Область.Параметры.ДатаИнструктажа 			= Формат(НайденныйИнструктаж.ДатаИнструктажа,"ДФ=dd.MM.yyyy");
			Область.Параметры.ПредставлениеИнструктора 	= ПредставлениеИнструктора;
			ТабличныйДокумент.Вывести(Область);
			
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, СтрокаТаблицыДокументов.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуЖурналаРегистрацииИнструктажаНаРабочемМесте(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб 			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнструктажСотрудников_ЖурналРегистрацииИнструктажаНаРабочемМесте";
	ТабличныйДокумент.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнструктажСотрудников.ПФ_MXL_ЖурналРегистрацииИнструктажаНаРабочемМесте");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Должность КАК Должность
	|ПОМЕСТИТЬ ВТ_ОсновныеМестаРаботы
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(&ДатаАнализа, ) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнструктажСотрудниковРаботники.Сотрудник КАК Инструктируемый,
	|	ИнструктажСотрудниковРаботники.Подразделение КАК Подразделение,
	|	ИнструктажСотрудниковРаботники.Должность КАК Должность,
	|	ИнструктажСотрудниковРаботники.Ответственный КАК Инструктор,
	|	ВЫБОР
	|		КОГДА ИнструктажСотрудниковРаботники.Сотрудник.ФизическоеЛицо.ДатаРождения = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ГОД(ИнструктажСотрудниковРаботники.Сотрудник.ФизическоеЛицо.ДатаРождения)
	|	КОНЕЦ КАК ГодРождения,
	|	ИнструктажСотрудниковРаботники.Ссылка.ДатаИнструктажа КАК ДатаИнструктажа,
	|	ВЫБОР
	|		КОГДА ВТ_ОсновныеМестаРаботы.Должность ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ВТ_ОсновныеМестаРаботы.Должность.Наименование
	|	КОНЕЦ КАК ДолжностьИнструктора,
	|	ИнструктажСотрудниковРаботники.Ссылка.ВидИнструктажа КАК ВидИнструктажа,
	|	ИнструктажСотрудниковРаботники.Ссылка.ПричинаПроведения КАК ПричинаПроведения
	|ПОМЕСТИТЬ ВТ_Инструктажи
	|ИЗ
	|	Документ.ИнструктажСотрудников.Работники КАК ИнструктажСотрудниковРаботники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеМестаРаботы КАК ВТ_ОсновныеМестаРаботы
	|		ПО ИнструктажСотрудниковРаботники.Ответственный = ВТ_ОсновныеМестаРаботы.Сотрудник
	|ГДЕ
	|	ИнструктажСотрудниковРаботники.Ссылка В(&МассивОбъектов)
	|	И (ИнструктажСотрудниковРаботники.Ссылка.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
	|			ИЛИ ИнструктажСотрудниковРаботники.Ссылка.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
	|			ИЛИ ИнструктажСотрудниковРаботники.Ссылка.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Внеплановый))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Инструктажи.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ВТ_Инструктажи.Подразделение.Владелец.НаименованиеПолное = """"
	|			ТОГДА ВТ_Инструктажи.Подразделение.Наименование
	|		ИНАЧЕ ВТ_Инструктажи.Подразделение.Владелец.НаименованиеПолное
	|	КОНЕЦ КАК ПредставлениеОрганизации,
	|	ВТ_Инструктажи.Подразделение.НаименованиеПолное КАК ПредставлениеПодразделения
	|ИЗ
	|	ВТ_Инструктажи КАК ВТ_Инструктажи
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПредставлениеПодразделения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Инструктажи.Инструктируемый КАК Инструктируемый,
	|	ВТ_Инструктажи.Подразделение КАК Подразделение,
	|	ВТ_Инструктажи.Должность КАК Должность,
	|	ВТ_Инструктажи.Инструктор КАК Инструктор,
	|	ВТ_Инструктажи.ГодРождения КАК ГодРождения,
	|	ВТ_Инструктажи.ДатаИнструктажа КАК ДатаИнструктажа,
	|	ВТ_Инструктажи.ДолжностьИнструктора КАК ДолжностьИнструктора,
	|	ВТ_Инструктажи.ВидИнструктажа КАК ВидИнструктажа,
	|	ВТ_Инструктажи.ПричинаПроведения КАК ПричинаИнструктажа
	|ИЗ
	|	ВТ_Инструктажи КАК ВТ_Инструктажи
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Инструктажи.Подразделение.Наименование,
	|	ВТ_Инструктажи.Инструктируемый.Наименование";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДатаАнализа", 	ТекущаяДата());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаПодразделений 	= Результат[2].Выгрузить();
	ТаблицаИнструктажей 	= Результат[3].Выгрузить();
	
	Если ТаблицаПодразделений.Количество() = 0 Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;	
	
	ПервыйДокумент = Истина;
	
	Для Каждого СтрокаТаблицыПодразделений Из ТаблицаПодразделений Цикл
		
		СчетчикСтрок = 0;
		
		Если Не ПервыйДокумент Тогда
		    ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Область = Макет.ПолучитьОбласть("Обложка");
		Область.Параметры.Заполнить(СтрокаТаблицыПодразделений);
		ТабличныйДокумент.Вывести(Область);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ПервыйДокумент = Ложь;
		Область = Макет.ПолучитьОбласть("Шапка");
		ТабличныйДокумент.Вывести(Область);
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		НайденныеИнструктажи = ТаблицаИнструктажей.НайтиСтроки(НОВЫЙ Структура("Подразделение",СтрокаТаблицыПодразделений.Подразделение));
		
		Для Каждого НайденныйИнструктаж Из НайденныеИнструктажи Цикл
			
			СчетчикСтрок = СчетчикСтрок + 1;
			
			Если СчетчикСтрок > 8 Тогда //всего 8 строк на листе, далее выводим шапку
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				Область = Макет.ПолучитьОбласть("Шапка");
				ТабличныйДокумент.Вывести(Область);
				СчетчикСтрок = 1; //сброс счетчика строк
			КонецЕсли;	
			
			Область = Макет.ПолучитьОбласть("Строка");
		    Область.Параметры.Заполнить(НайденныйИнструктаж);
			ПредставлениеИнструктора = ФизическиеЛица.ФамилияИнициалыФизЛица(НайденныйИнструктаж.Инструктор.ФизическоеЛицо);
			Если ЗначениеЗаполнено(НайденныйИнструктаж.ДолжностьИнструктора) Тогда
			    ПредставлениеИнструктора = ПредставлениеИнструктора + ", " + НайденныйИнструктаж.ДолжностьИнструктора;
			КонецЕсли;	
			Область.Параметры.ГодРождения 				= Формат(НайденныйИнструктаж.ГодРождения,"ЧГ=");
			Область.Параметры.ДатаИнструктажа 			= Формат(НайденныйИнструктаж.ДатаИнструктажа,"ДФ=dd.MM.yyyy");
			Область.Параметры.ПредставлениеИнструктора 	= ПредставлениеИнструктора;
			ТабличныйДокумент.Вывести(Область);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуЖурналаРегистрацииЦелевогоИнструктажа(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб 			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнструктажСотрудников_ЖурналРегистрацииЦелевогоИнструктажа";
	ТабличныйДокумент.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнструктажСотрудников.ПФ_MXL_ЖурналРегистрацииЦелевогоИнструктажа");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Должность КАК Должность
	|ПОМЕСТИТЬ ВТ_ОсновныеМестаРаботы
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(&ДатаАнализа, ) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнструктажСотрудниковРаботники.Сотрудник КАК Инструктируемый,
	|	ИнструктажСотрудниковРаботники.Подразделение КАК Подразделение,
	|	ИнструктажСотрудниковРаботники.Должность КАК Должность,
	|	ИнструктажСотрудниковРаботники.Ответственный КАК Инструктор,
	|	ВЫБОР
	|		КОГДА ИнструктажСотрудниковРаботники.Сотрудник.ФизическоеЛицо.ДатаРождения = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА """"
	|		ИНАЧЕ ГОД(ИнструктажСотрудниковРаботники.Сотрудник.ФизическоеЛицо.ДатаРождения)
	|	КОНЕЦ КАК ГодРождения,
	|	ИнструктажСотрудниковРаботники.Ссылка.ДатаИнструктажа КАК ДатаИнструктажа,
	|	ВЫБОР
	|		КОГДА ВТ_ОсновныеМестаРаботы.Должность ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ ВТ_ОсновныеМестаРаботы.Должность.Наименование
	|	КОНЕЦ КАК ДолжностьИнструктора,
	|	ИнструктажСотрудниковРаботники.Ссылка.ВидИнструктажа КАК ВидИнструктажа,
	|	ИнструктажСотрудниковРаботники.Ссылка.ПричинаПроведения КАК ПричинаПроведения
	|ПОМЕСТИТЬ ВТ_Инструктажи
	|ИЗ
	|	Документ.ИнструктажСотрудников.Работники КАК ИнструктажСотрудниковРаботники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеМестаРаботы КАК ВТ_ОсновныеМестаРаботы
	|		ПО ИнструктажСотрудниковРаботники.Ответственный = ВТ_ОсновныеМестаРаботы.Сотрудник
	|ГДЕ
	|	ИнструктажСотрудниковРаботники.Ссылка В(&МассивОбъектов)
	|	И ИнструктажСотрудниковРаботники.Ссылка.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Целевой)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Инструктажи.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ВТ_Инструктажи.Подразделение.Владелец.НаименованиеПолное = """"
	|			ТОГДА ВТ_Инструктажи.Подразделение.Наименование
	|		ИНАЧЕ ВТ_Инструктажи.Подразделение.Владелец.НаименованиеПолное
	|	КОНЕЦ КАК ПредставлениеОрганизации,
	|	ВТ_Инструктажи.Подразделение.НаименованиеПолное КАК ПредставлениеПодразделения
	|ИЗ
	|	ВТ_Инструктажи КАК ВТ_Инструктажи
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПредставлениеПодразделения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Инструктажи.Инструктируемый КАК Инструктируемый,
	|	ВТ_Инструктажи.Подразделение КАК Подразделение,
	|	ВТ_Инструктажи.Должность КАК Должность,
	|	ВТ_Инструктажи.Инструктор КАК Инструктор,
	|	ВТ_Инструктажи.ГодРождения КАК ГодРождения,
	|	ВТ_Инструктажи.ДатаИнструктажа КАК ДатаИнструктажа,
	|	ВТ_Инструктажи.ДолжностьИнструктора КАК ДолжностьИнструктора,
	|	ВТ_Инструктажи.ВидИнструктажа КАК ВидИнструктажа,
	|	ВТ_Инструктажи.ПричинаПроведения КАК ПричинаИнструктажа
	|ИЗ
	|	ВТ_Инструктажи КАК ВТ_Инструктажи
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Инструктажи.Подразделение.Наименование,
	|	ВТ_Инструктажи.Инструктируемый.Наименование";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДатаАнализа", 	ТекущаяДата());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаПодразделений 	= Результат[2].Выгрузить();
	ТаблицаИнструктажей 	= Результат[3].Выгрузить();
	
	Если ТаблицаПодразделений.Количество() = 0 Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;	
	
	ПервыйДокумент = Истина;
	
	Для Каждого СтрокаТаблицыПодразделений Из ТаблицаПодразделений Цикл
		
		СчетчикСтрок = 0;
		
		Если Не ПервыйДокумент Тогда
		    ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Область = Макет.ПолучитьОбласть("Обложка");
		Область.Параметры.Заполнить(СтрокаТаблицыПодразделений);
		ТабличныйДокумент.Вывести(Область);
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ПервыйДокумент = Ложь;
		Область = Макет.ПолучитьОбласть("Шапка");
		ТабличныйДокумент.Вывести(Область);
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		НайденныеИнструктажи = ТаблицаИнструктажей.НайтиСтроки(НОВЫЙ Структура("Подразделение",СтрокаТаблицыПодразделений.Подразделение));
		
		Для Каждого НайденныйИнструктаж Из НайденныеИнструктажи Цикл
			
			СчетчикСтрок = СчетчикСтрок + 1;
			
			Если СчетчикСтрок > 9 Тогда //всего 9 строк на листе, далее выводим шапку
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				Область = Макет.ПолучитьОбласть("Шапка");
				ТабличныйДокумент.Вывести(Область);
				СчетчикСтрок = 1; //сброс счетчика строк
			КонецЕсли;	
			
			Область = Макет.ПолучитьОбласть("Строка");
		    Область.Параметры.Заполнить(НайденныйИнструктаж);
			ПредставлениеИнструктора = ФизическиеЛица.ФамилияИнициалыФизЛица(НайденныйИнструктаж.Инструктор.ФизическоеЛицо);
			Если ЗначениеЗаполнено(НайденныйИнструктаж.ДолжностьИнструктора) Тогда
			    ПредставлениеИнструктора = ПредставлениеИнструктора + ", " + НайденныйИнструктаж.ДолжностьИнструктора;
			КонецЕсли;	
			Область.Параметры.ГодРождения 				= Формат(НайденныйИнструктаж.ГодРождения,"ЧГ=");
			Область.Параметры.ДатаИнструктажа 			= Формат(НайденныйИнструктаж.ДатаИнструктажа,"ДФ=dd.MM.yyyy");
			Область.Параметры.ПредставлениеИнструктора 	= ПредставлениеИнструктора;
			ТабличныйДокумент.Вывести(Область);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецЕсли