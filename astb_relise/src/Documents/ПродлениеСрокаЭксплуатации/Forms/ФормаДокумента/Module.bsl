
&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.ПродлениеСрокаЭксплуатации.ЗаполнитьДокумент(ТекущийОбъект.Сотрудник,ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда //новый
		
		Если НЕ ЗначениеЗаполнено(Объект.Сотрудник) Тогда
			
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = "Документ вводится только на основании сотрудника!";
			Сообщение.Сообщить();
			
			Отказ = Истина;
			
			Возврат;
			
		КонецЕсли;	
		
	КонецЕсли;
	
	Если НЕ Объект.Организация.ИспользоватьПроцентИзноса Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Для организации: " + Объект.Организация.Наименование + " ввод данного документа не допускается!";
		Сообщение.Сообщить();
		
		Отказ = Истина;
		
		Возврат;
		
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект,НОВЫЙ Структура("ИмяЭлементаДляРазмещения","ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВА"

// СтандартныеПодсистемы.Свойства
 &НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "ПЕЧАТЬ"

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
  	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
  
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ...

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	Если Элементы.Товары.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ТекущиеДанные.Количество = ПроверитьКоличество(ТекущиеДанные.НомерСтроки,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПроцентИзносаПриИзменении(Элемент)
	
	Если Элементы.Товары.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ТекущиеДанные.ДатаПотребности = ПолучитьДатуПотребности(ТекущиеДанные.НормаВыдачи,ТекущиеДанные.НоменклатураНормы,ТекущиеДанные.ПроцентИзноса,ТекущиеДанные.НачалоЗимы,ТекущиеДанные.КонецЗимы);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДатуПотребности(НормаВыдачи,НоменклатураНормы,ПроцентИзноса,НачалоЗимы,КонецЗимы)
	
	Если НЕ ЗначениеЗаполнено(ПроцентИзноса) Тогда
		Возврат ДАТА(1,1,1,1,1,1);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи.ТипПериода КАК ТипПериода,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи.КоличествоПериодов КАК КоличествоПериодов
	|ИЗ
	|	Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|ГДЕ
	|	НормыВыдачиСИЗСоставНормы.Ссылка = &НормаВыдачи
	|	И НормыВыдачиСИЗСоставНормы.НоменклатураНормы = &НоменклатураНормы";
	
	Запрос.УстановитьПараметр("НормаВыдачи",		НормаВыдачи);
	Запрос.УстановитьПараметр("НоменклатураНормы",	НоменклатураНормы);
	
	СтрокаТаблицыЗапроса = Запрос.Выполнить().Выгрузить()[0];
	
	РасчетнаяДатаПотребности = ПроцедурыРаботыСНормамиСервер.РассчитатьДатуПотребностиПоИзносу(Объект.Дата,СтрокаТаблицыЗапроса.ТипПериода,СтрокаТаблицыЗапроса.КоличествоПериодов,ПроцентИзноса.Код);
	
	Если ЗначениеЗаполнено(НачалоЗимы) Тогда
		ПериодыЗимы 		= ПроцедурыРаботыСНормамиСервер.ПолучитьПериодЗимы(РасчетнаяДатаПотребности,НачалоЗимы,КонецЗимы);
		Если РасчетнаяДатаПотребности < ПериодыЗимы.НачалоЗимы Тогда
			РасчетнаяДатаПотребности = ПериодыЗимы.НачалоЗимы;
		КонецЕсли;
	КонецЕсли;
	
	Возврат РасчетнаяДатаПотребности;
	
КонецФункции
	
&НаСервере
Функция ПроверитьКоличество(НомерСтрокиТаблицы,СообщатьОбОшибке)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	ТаблицаТовары = ТекущийОбъект.Товары.Выгрузить();
	
	РедактируемаяСтрока = ТаблицаТовары.Найти(НомерСтрокиТаблицы,"НомерСтроки");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.НормаВыдачи КАК НормаВыдачи,
	|	ТаблицаДокумента.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаДокумента.ДатаВыдачи КАК ДатаВыдачи,
	|	ТаблицаДокумента.ДатаПотребностиПоУчету КАК ДатаПотребностиПоУчету,
	|	ТаблицаДокумента.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.НормаВыдачи = &НормаВыдачи
	|	И ТаблицаДокумента.НоменклатураНормы = &НоменклатураНормы
	|	И ТаблицаДокумента.Номенклатура = &Номенклатура
	|	И ТаблицаДокумента.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
	|	И ТаблицаДокумента.ДатаВыдачи = &ДатаВыдачи
	|	И ТаблицаДокумента.ДатаПотребностиПоУчету = &ДатаПотребностиПоУчету
	|	И НЕ ТаблицаДокумента.НомерСтроки = &НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДокумента.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ТаблицаДокумента.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаДокумента.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаДокумента.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ТаблицаДокумента.ДатаПотребностиПоУчету КАК ДатаПотребностиПоУчету,
	|	СУММА(ВТ_ТаблицаДокумента.Количество) КАК Количество
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаДокумента.НормаВыдачи,
	|	ВТ_ТаблицаДокумента.НоменклатураНормы,
	|	ВТ_ТаблицаДокумента.Номенклатура,
	|	ВТ_ТаблицаДокумента.ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаДокумента.ДатаВыдачи,
	|	ВТ_ТаблицаДокумента.ДатаПотребностиПоУчету";
	
	Запрос.УстановитьПараметр("ТаблицаДокумента",			ТаблицаТовары);
	Запрос.УстановитьПараметр("НомерСтроки",				РедактируемаяСтрока.НомерСтроки);
	Запрос.УстановитьПараметр("НормаВыдачи",				РедактируемаяСтрока.НормаВыдачи);
	Запрос.УстановитьПараметр("НоменклатураНормы",			РедактируемаяСтрока.НоменклатураНормы);
	Запрос.УстановитьПараметр("Номенклатура",				РедактируемаяСтрока.Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры",	РедактируемаяСтрока.ХарактеристикаНоменклатуры);
	Запрос.УстановитьПараметр("ДатаВыдачи",					РедактируемаяСтрока.ДатаВыдачи);
	Запрос.УстановитьПараметр("ДатаПотребностиПоУчету",		РедактируемаяСтрока.ДатаПотребностиПоУчету);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
	    ОбщееКоличество 		= РедактируемаяСтрока.Количество;
		ДопустимоеКоличество 	= РедактируемаяСтрока.КоличествоПоУчету;
	Иначе	
		СтрокаТаблицыЗапроса 	= Результат.Выгрузить()[0];
	    ОбщееКоличество 		= СтрокаТаблицызапроса.Количество + РедактируемаяСтрока.Количество;
		ДопустимоеКоличество 	= РедактируемаяСтрока.КоличествоПоУчету - СтрокаТаблицыЗапроса.Количество;
	КонецЕсли;	
	
	Если ОбщееКоличество > РедактируемаяСтрока.КоличествоПоУчету Тогда
		
		Если СообщатьОбОшибке Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Общее количество (" + ОбщееКоличество + ") не должно превышать количество по учету (" + РедактируемаяСтрока.КоличествоПоУчету + ").";
			Сообщение.Сообщить();
		КонецЕсли;
		
		Возврат ДопустимоеКоличество;
		
	Иначе
		
		Возврат РедактируемаяСтрока.Количество;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ Копирование Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		ТекущиеДанные.Количество = ПроверитьКоличество(ТекущиеДанные.НомерСтроки,Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииЯчейки(Элемент)
	
	Если Элементы.Товары.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыПроцентИзноса" Тогда
		
		ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ТоварыГруппаПроцентИзноса.ПодчиненныеЭлементы.ТоварыПроцентИзноса.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьСписокДопустимыхПроцентовИзноса(Объект.Организация,ТекущиеДанные.ПроцентИзносаПоУчету));
		
	КонецЕсли;	
	
КонецПроцедуры
