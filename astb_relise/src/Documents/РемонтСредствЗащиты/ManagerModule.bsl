#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	РемонтСредствЗащитыРемонт.Ссылка.Дата КАК Период,
	|	РемонтСредствЗащитыРемонт.Ссылка.Организация КАК Организация,
	|	РемонтСредствЗащитыРемонт.Ссылка.Контрагент КАК Контрагент,
	|	РемонтСредствЗащитыРемонт.Ссылка.ШтрихкодИзделия КАК ШтрихкодИзделия,
	|	РемонтСредствЗащитыРемонт.НомерСтроки КАК НомерСтроки,
	|	РемонтСредствЗащитыРемонт.ВидРемонта КАК ВидРемонта,
	|	РемонтСредствЗащитыРемонт.Количество КАК Количество
	|ИЗ
	|	Документ.РемонтСредствЗащиты.Ремонт КАК РемонтСредствЗащитыРемонт
	|ГДЕ
	|	РемонтСредствЗащитыРемонт.Ссылка = &Ссылка
	|	И НЕ РемонтСредствЗащитыРемонт.Ссылка.РемонтуНеПодлежит
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РемонтСредствЗащитыРемонт.Ссылка.Дата КАК Период,
	|	РемонтСредствЗащитыРемонт.Ссылка.Организация КАК Организация,
	|	РемонтСредствЗащитыРемонт.Ссылка.Контрагент КАК Контрагент,
	|	РемонтСредствЗащитыРемонт.Ссылка.ШтрихкодИзделия КАК ШтрихкодИзделия,
	|	РемонтСредствЗащитыРемонт.НомерСтроки КАК НомерСтроки,
	|	РемонтСредствЗащитыРемонт.ВидРемонта КАК ВидРемонта,
	|	РемонтСредствЗащитыРемонт.Количество КАК Количество
	|ИЗ
	|	Документ.РемонтСредствЗащиты.Ремонт КАК РемонтСредствЗащитыРемонт
	|ГДЕ
	|	РемонтСредствЗащитыРемонт.Ссылка = &Ссылка
	|	И НЕ РемонтСредствЗащитыРемонт.Ссылка.РемонтуНеПодлежит";
	
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ПриходПоРегистру = Результат[0].Выгрузить();
	РасходПоРегистру = Результат[1].Выгрузить();
	
	Если ДокументСсылка.ВидОперации = Перечисления.ВидыОперацийРемонтаСИЗ.ВозвратИзРемонта Тогда
		ТаблицаДвижений = РасходПоРегистру;
	ИначеЕсли ДокументСсылка.ВидОперации = Перечисления.ВидыОперацийРемонтаСИЗ.ПередачаВРемонт Тогда
		ТаблицаДвижений = ПриходПоРегистру;
	Иначе
		ТаблицаДвижений = ПриходПоРегистру;
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасходПоРегистру,ТаблицаДвижений);
	КонецЕсли;
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	ТаблицыДляДвижений.Вставить("ТаблицаРемонтСредствЗащиты", ТаблицаДвижений);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктПриемаПередачи") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"АктПриемаПередачи",
			"Акт приема-передачи",
			СформироватьПечатнуюФормуАктаПриемаПередачи(МассивОбъектов, ОбъектыПечати),,"Документ.РемонтСредствЗащиты.ПФ_MXL_АктПриемаПередачи");
				
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктВыполненныхРабот") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"АктВыполненныхРабот",
			"Акт выполненных работ",
			СформироватьПечатнуюФормуАктаВыполненныхРабот(МассивОбъектов, ОбъектыПечати),,"Документ.РемонтСредствЗащиты.ПФ_MXL_АктВыполненныхРабот");
				
	КонецЕсли;	
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуАктаПриемаПередачи(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РемонтСредствЗащиты_АктПриемаПередачи";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновноеМестоРаботыСотрудника.Период КАК Период,
	|	ОсновноеМестоРаботыСотрудника.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудника.Подразделение КАК Подразделение,
	|	ОсновноеМестоРаботыСотрудника.МоментВремени КАК МоментВремени,
	|	ОсновноеМестоРаботыСотрудника.ОсновноеМестоРаботы КАК ОсновноеМестоРаботы,
	|	ОсновноеМестоРаботыСотрудника.Должность КАК Должность
	|ПОМЕСТИТЬ ВТ_ОсновныеМестаРаботыСотрудников
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника КАК ОсновноеМестоРаботыСотрудника
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудника.Активность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|	ВложенныйЗапрос.Должность КАК Должность,
	|	ВложенныйЗапрос.Период КАК НачалоПериода,
	|	МИНИМУМ(ЕСТЬNULL(ВТ_ОсновныеМестаРаботыСотрудников.Период, &Период)) КАК КонецПериода
	|ПОМЕСТИТЬ ВТ_ПериодыРаботыСотрудников
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_ОсновныеМестаРаботыСотрудников.Период КАК Период,
	|		ВТ_ОсновныеМестаРаботыСотрудников.Сотрудник КАК Сотрудник,
	|		ВТ_ОсновныеМестаРаботыСотрудников.Подразделение КАК Подразделение,
	|		ВТ_ОсновныеМестаРаботыСотрудников.МоментВремени КАК МоментВремени,
	|		ВТ_ОсновныеМестаРаботыСотрудников.Должность КАК Должность
	|	ИЗ
	|		ВТ_ОсновныеМестаРаботыСотрудников КАК ВТ_ОсновныеМестаРаботыСотрудников
	|	ГДЕ
	|		ВТ_ОсновныеМестаРаботыСотрудников.ОсновноеМестоРаботы) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеМестаРаботыСотрудников КАК ВТ_ОсновныеМестаРаботыСотрудников
	|		ПО ВложенныйЗапрос.Сотрудник = ВТ_ОсновныеМестаРаботыСотрудников.Сотрудник
	|			И ВложенныйЗапрос.МоментВремени < ВТ_ОсновныеМестаРаботыСотрудников.МоментВремени
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Сотрудник,
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РемонтСредствЗащиты.Ссылка КАК Ссылка,
	|	РемонтСредствЗащиты.Номер КАК НомерДокумента,
	|	РемонтСредствЗащиты.Дата КАК Дата,
	|	РемонтСредствЗащиты.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	РемонтСредствЗащиты.Контрагент.НаименованиеПолное КАК ПредставлениеКонтрагента,
	|	РемонтСредствЗащиты.Ответственный.Наименование КАК Ответственный,
	|	ШтрихкодыНоменклатурыДляУчетаЧистки.Сотрудник КАК Сотрудник,
	|	ШтрихкодыНоменклатурыДляУчетаЧистки.Номенклатура.Наименование КАК Номенклатура,
	|	ШтрихкодыНоменклатурыДляУчетаЧистки.ХарактеристикаНоменклатуры.Наименование КАК Размер,
	|	ШтрихкодыНоменклатурыДляУчетаЧистки.Номенклатура.ЕдиницаИзмерения.Наименование КАК Единица
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	Документ.РемонтСредствЗащиты КАК РемонтСредствЗащиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатурыДляУчетаЧистки КАК ШтрихкодыНоменклатурыДляУчетаЧистки
	|		ПО РемонтСредствЗащиты.ШтрихкодИзделия = ШтрихкодыНоменклатурыДляУчетаЧистки.Штрихкод
	|ГДЕ
	|	РемонтСредствЗащиты.Ссылка В(&МассивОбъектов)
	|	И НЕ РемонтСредствЗащиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРемонтаСИЗ.ВозвратИзРемонта)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Результат.Ссылка КАК Ссылка,
	|	ВТ_Результат.НомерДокумента КАК НомерДокумента,
	|	ВТ_Результат.Дата КАК ДатаДокумента,
	|	ВТ_Результат.ПредставлениеОрганизации КАК ПредставлениеОрганизации,
	|	ВТ_Результат.ПредставлениеКонтрагента КАК ПредставлениеКонтрагента,
	|	ВТ_Результат.Ответственный КАК Ответственный,
	|	ВТ_Результат.Сотрудник.Наименование КАК Сотрудник,
	|	ВТ_Результат.Номенклатура КАК Номенклатура,
	|	ВТ_Результат.Размер КАК Размер,
	|	ВТ_Результат.Единица КАК Единица,
	|	ВТ_ПериодыРаботыСотрудников.Должность.Наименование КАК ДолжностьСотрудника
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыРаботыСотрудников КАК ВТ_ПериодыРаботыСотрудников
	|		ПО ВТ_Результат.Сотрудник = ВТ_ПериодыРаботыСотрудников.Сотрудник
	|			И ВТ_Результат.Дата <= ВТ_ПериодыРаботыСотрудников.КонецПериода
	|			И ВТ_Результат.Дата > ВТ_ПериодыРаботыСотрудников.НачалоПериода";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("Период", 		ТекущаяДата());
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РемонтСредствЗащиты.ПФ_MXL_АктПриемаПередачи");
	
	ДанныеПечати = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
	
		ОбластьМакета = Макет.ПолучитьОбласть("ОбластьДокумента");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ОбластьМакета.Параметры.ПредставлениеСотрудника 	= ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.Сотрудник);
		ОбластьМакета.Параметры.ПредставлениеОтветственного = ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.Ответственный);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
	
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуАктаВыполненныхРабот(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РемонтСредствЗащиты_АктВыполненныхРабот";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РемонтСредствЗащиты.Ссылка КАК Ссылка,
	|	РемонтСредствЗащиты.Номер КАК Номер,
	|	РемонтСредствЗащиты.Дата КАК Дата,
	|	РемонтСредствЗащиты.Организация.НаименованиеПолное КАК ПредставлениеЗаказчика,
	|	РемонтСредствЗащиты.Организация.Префикс КАК Префикс,
	|	РемонтСредствЗащиты.Контрагент.НаименованиеПолное КАК ПредставлениеИспольнителя,
	|	ШтрихкодыНоменклатурыДляУчетаЧистки.Сотрудник.Наименование КАК ПредставлениеСотрудника,
	|	ШтрихкодыНоменклатурыДляУчетаЧистки.Номенклатура.Наименование КАК Номенклатура,
	|	ШтрихкодыНоменклатурыДляУчетаЧистки.ХарактеристикаНоменклатуры.Наименование КАК Размер,
	|	ШтрихкодыНоменклатурыДляУчетаЧистки.Номенклатура.ЕдиницаИзмерения.Наименование КАК Единица,
	|	РемонтСредствЗащиты.ШтрихкодИзделия КАК ШтрихкодИзделия
	|ИЗ
	|	Документ.РемонтСредствЗащиты КАК РемонтСредствЗащиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатурыДляУчетаЧистки КАК ШтрихкодыНоменклатурыДляУчетаЧистки
	|		ПО РемонтСредствЗащиты.ШтрихкодИзделия = ШтрихкодыНоменклатурыДляУчетаЧистки.Штрихкод
	|ГДЕ
	|	РемонтСредствЗащиты.Ссылка В(&МассивОбъектов)
	|	И НЕ РемонтСредствЗащиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРемонтаСИЗ.ПередачаВРемонт)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РемонтСредствЗащитыРемонт.Ссылка КАК Ссылка,
	|	РемонтСредствЗащитыРемонт.НомерСтроки КАК НомерСтроки,
	|	РемонтСредствЗащитыРемонт.ВидРемонта КАК ВидРемонта,
	|	РемонтСредствЗащитыРемонт.Количество КАК Количество
	|ИЗ
	|	Документ.РемонтСредствЗащиты.Ремонт КАК РемонтСредствЗащитыРемонт
	|ГДЕ
	|	РемонтСредствЗащитыРемонт.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РемонтСредствЗащиты.ПФ_MXL_АктВыполненныхРабот");
	
	ПакетЗапросов 		= Запрос.ВыполнитьПакет();
	ДанныеПечати 		= ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ОбластьМакета.Параметры.ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата, Префикс", ДанныеПечати.Номер, ДанныеПечати.Дата, ДанныеПечати.Префикс), "Акт о приемке выполненных работ");
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоТоварам);
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.КоличествоСтрок = ДанныеПечати.Ссылка.Ремонт.Количество();
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаСервере
Функция ПолучитьЦенуВидаРемонта(ВидРемонта, ТекущийОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныРемонтаСрезПоследних.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.ЦеныРемонта.СрезПоследних(
	|			&ДатаАнализа,
	|			Организация = &Организация
	|				И Контрагент = &Контрагент
	|				И ВидРемонта = &ВидРемонта) КАК ЦеныРемонтаСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаАнализа",ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка));
	Запрос.УстановитьПараметр("Организация",ТекущийОбъект.Организация);
	Запрос.УстановитьПараметр("Контрагент",	ТекущийОбъект.Контрагент);
	Запрос.УстановитьПараметр("ВидРемонта",	ВидРемонта);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат 0;
	Иначе
		Возврат Результат.Выгрузить()[0].Цена;
	КонецЕсли;
	
КонецФункции

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//Акт приема-передачи
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.РемонтСредствЗащиты";
	КомандаПечати.Идентификатор = "АктПриемаПередачи";
	КомандаПечати.Представление = НСтр("ru = 'Акт приема-передачи'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//Акт выполненных работ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.РемонтСредствЗащиты";
	КомандаПечати.Идентификатор = "АктВыполненныхРабот";
	КомандаПечати.Представление = НСтр("ru = 'Акт выполненных работ'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьДокумент(ДанныеЗаполнения,Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Объект.Организация 			= ДанныеЗаполнения.Организация;
	Объект.Контрагент 			= ДанныеЗаполнения.Контрагент;
	Объект.ШтрихкодИзделия 		= ДанныеЗаполнения.ШтрихкодИзделия;
	Объект.ВидОперации 			= Перечисления.ВидыОперацийРемонтаСИЗ.ВозвратИзРемонта;
	Объект.ДокументОснование	= ДанныеЗаполнения.Ссылка;
	Объект.СуммаДокумента 		= ДанныеЗаполнения.СуммаДокумента;
	Объект.Комментарий 			= ДанныеЗаполнения.Комментарий;
	Объект.Ответственный 		= ДанныеЗаполнения.Ответственный;
	Объект.Ремонт.Загрузить(ДанныеЗаполнения.Ремонт.Выгрузить());
	
КонецПроцедуры

#КонецЕсли