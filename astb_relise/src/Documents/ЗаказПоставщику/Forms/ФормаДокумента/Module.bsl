////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект,НОВЫЙ Структура("ИмяЭлементаДляРазмещения","ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	ПериодВыдачи.ДатаНачала 	= Объект.НачалоПериодаВыдачи;
	ПериодВыдачи.ДатаОкончания 	= Объект.КонецПериодаВыдачи;
	
	ЭтаФорма.Элементы.МОЛ.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьМассивМОЛСклада(Объект.Склад,Объект.Организация));
	
	//АсТБ_Alexey_56927_********************************************************************
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.СпособСоздания = Перечисления.СпособыСозданияЗаказовПоставщику.СформированВручную;
	КонецЕсли;
	//АсТБ_Alexey_56927********************************************************************
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыКоличество" Тогда
		Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТоварыНоменклатура" Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура) Тогда
			Элемент.ТекущиеДанные.Цена = ПолучитьЦенуСервер(Элемент.ТекущиеДанные.Номенклатура);
			Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
		КонецЕсли;
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТоварыЦена" Тогда
		Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
	КонецЕсли;
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВА"

// СтандартныеПодсистемы.Свойства
 &НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "ПЕЧАТЬ"

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
  УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
  
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ...

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Функция ПолучитьЦенуСервер(Номенклатура)
	
	Цена = ЦенообразованиеСерверПереопределяемый.ПолучитьЦену(Номенклатура,Объект.Организация,Объект.Дата);
	Возврат Цена;
	
КонецФункции

&НаКлиенте
Процедура ПодборНоменклатурыВыдачи(Команда)
	
	АдресВременногоХранилища = ВыгрузитьТаблицуДокументаВоВременноеХранилище();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Склад", 							Объект.Склад);
	ПараметрыФормы.Вставить("АдресВременногоХранилищаТаблицы", 	АдресВременногоХранилища);
	ПараметрыФормы.Вставить("Организация", 						Объект.Организация);
	ПараметрыФормы.Вставить("Поставщик", 						Объект.Поставщик);
	ПараметрыФормы.Вставить("Документ", 						Объект.Ссылка);
	
	ОткрытьФорму("Обработка.ПодборНоменклатурыВыдачи.Форма.ФормаПодбора", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьТаблицуДокументаВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.Товары.Выгрузить(),ЭтаФорма.УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборНоменклатурыВыдачи.Форма.ФормаПодбора" Тогда
		
		ПолучитьРезультатПодбораИзХранилища(ВыбранноеЗначение.АдресРезультатаПодбораВХранилище);
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.ВыдачаСредствЗащитыСотруднику.Форма.ФормаВыбора" Тогда
		
		ЗаполнитьПоДокументамВыдачиНаСервере(ВыбранноеЗначение);
		
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;

	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьРезультатПодбораИзХранилища(АдресРезультатаПодбораВХранилище)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	ТаблицаПодбора = ПолучитьИзВременногоХранилища(АдресРезультатаПодбораВХранилище);
	
	ТекущийОбъект.Товары.Загрузить(ТаблицаПодбора);	
	
	ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодВыдачиПриИзменении(Элемент)
	
	Объект.НачалоПериодаВыдачи 	= ПериодВыдачи.ДатаНачала;
	Объект.КонецПериодаВыдачи 	= ПериодВыдачи.ДатаОкончания;
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	//АСТБ_ALEXEY_70409**************************************************************
	//Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация);
	Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация,Объект.СоздательДокумента);
	//АСТБ_ALEXEY_70409**************************************************************
	Элементы.МОЛ.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьМассивМОЛСклада(Объект.Склад,Объект.Организация));
	
	ПересчитатьЦены();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	//АСТБ_ALEXEY_70409**************************************************************
	//Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация);
	Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация,Объект.СоздательДокумента);
	//АСТБ_ALEXEY_70409**************************************************************
	Элементы.МОЛ.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьМассивМОЛСклада(Объект.Склад,Объект.Организация));
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикПриИзменении(Элемент)
	
	ПересчитатьЦены();
		
КонецПроцедуры

&НаСервере
Процедура ПересчитатьЦены()
	
	Документы.ЗаказПоставщику.ПересчитатьЦены(Объект);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДокументамВыдачиНаСервере(ДокументыВыдачи)
	
	Документы.ЗаказПоставщику.ЗаполнитьТаблицуДокументаПоДокументамВыдачи(Объект,ДокументыВыдачи);
	Документы.ЗаказПоставщику.ПересчитатьЦены(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоДокументамВыдачи(Команда)
	
	ПараметрыОтбораДокументов = Новый Структура("СписокДокументов",ПолучитьСписокДокументовДляОтбора());
	ФормаВыбора = ПолучитьФорму("Документ.ВыдачаСредствЗащитыСотруднику.Форма.ФормаВыбора",ПараметрыОтбораДокументов,ЭтаФорма,УникальныйИдентификатор);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокДокументовДляОтбора()
	
	СписокДокументов = Новый СписокЗначений;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВыдачаСредствЗащитыСотрудникуТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВыдачаСредствЗащитыСотруднику.Товары КАК ВыдачаСредствЗащитыСотрудникуТовары
	|ГДЕ
	|	ВыдачаСредствЗащитыСотрудникуТовары.Ссылка.Организация = &Организация
	|	И ВыдачаСредствЗащитыСотрудникуТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВыдачаСредствЗащитыСотрудникуТовары.Ссылка.Проведен
	|	И ВыдачаСредствЗащитыСотрудникуТовары.НеВыдано
	|	И ВыдачаСредствЗащитыСотрудникуТовары.Ссылка.ВидВыдачиСИЗ = ЗНАЧЕНИЕ(Перечисление.ВидыВыдачиСИЗ.ПерсональнаяВыдача)
	|	И НЕ ВыдачаСредствЗащитыСотрудникуТовары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И НЕ ВыдачаСредствЗащитыСотрудникуТовары.Ссылка.ПредварительнаяСборка";
	
	Запрос.УстановитьПараметр("Организация",	Объект.Организация);
	Запрос.УстановитьПараметр("ДатаНачала",		НачалоДня(Объект.НачалоПериодаВыдачи));
	Запрос.УстановитьПараметр("ДатаОкончания",	КонецДня(Объект.КонецПериодаВыдачи));

	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		СписокДокументов.Добавить(Документы.ВыдачаСредствЗащитыСотруднику.ПустаяСсылка());
	Иначе
		СписокДокументов.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
    КонецЕсли;
		
    Возврат СписокДокументов;
	
КонецФункции	

&НаСервере
Процедура ЗаполнитьПоКраснойЛинииНаСервере()
	
	Документы.ЗаказПоставщику.ЗаполнитьТаблицуДокументаПоКраснойЛинии(Объект);
	Документы.ЗаказПоставщику.ПересчитатьЦены(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКраснойЛинии(Команда)
	
	ЗаполнитьПоКраснойЛинииНаСервере();
	
КонецПроцедуры

//+++АСТБ_Горюшин_Алексей_49316
&НаКлиенте
Процедура РазобратьВсеКомплекты(Команда)
	
	РазобратьВыбранныйКомплектНаСервере();
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_49316

//+++АСТБ_Горюшин_Алексей_49316
&НаКлиенте
Процедура РазобратьВыбранныйКомплект(Команда)
	
	МассивВыделенныхСтрок = ЭтаФорма.Элементы.Товары.ВыделенныеСтроки;
	                          
	Если МассивВыделенныхСтрок.Количество() = 0 Тогда
		Сообщить("Не выбраны строки документа.");
		Возврат;
	КонецЕсли;

	РазобратьВыбранныйКомплектНаСервере(МассивВыделенныхСтрок);
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_49316

//+++АСТБ_Горюшин_Алексей_49316
&НаСервере
Процедура РазобратьВыбранныйКомплектНаСервере(МассивНомеровСтрок = Неопределено)
	
	ТаблицаДокумента = Объект.Товары.Выгрузить();
	ТаблицаДокумента.Очистить();
	
	ТаблицаС_Ошибками = Объект.Товары.Выгрузить();
	ТаблицаС_Ошибками.Очистить();
	Массив = Новый Массив;
	Массив.Добавить(Тип("Булево"));
	ОписаниеТиповБ = Новый ОписаниеТипов(Массив);
	ТаблицаС_Ошибками.Колонки.Добавить("ЕстьОшибкаПола", ОписаниеТиповБ);
	ТаблицаС_Ошибками.Колонки.Добавить("ЕстьОшибкаХарактеристики", ОписаниеТиповБ);
	ТаблицаС_Ошибками.Колонки.Добавить("СовсемНетХарактеристики", ОписаниеТиповБ);
	ТаблицаС_Ошибками.Колонки.Добавить("ЕстьОшибкаСоответствияВидаАнтропометрии", ОписаниеТиповБ);
	
	ЕстьКомплекты = Ложь;
	
	ТаблицаРазворачиваемыхКомплектов = Объект.Товары.Выгрузить();
	ТаблицаРазворачиваемыхКомплектов.Очистить();
	
	// поиск комплектов для обработки
	Если МассивНомеровСтрок = Неопределено Тогда
		
		Для Каждого ДанныеСтроки Из Объект.Товары Цикл
			
			Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Номенклатура) ИЛИ НЕ ДанныеСтроки.Номенклатура.Комплект Тогда
				Продолжить;
			КонецЕсли;                                             
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Номенклатура",ДанныеСтроки.Номенклатура);
			СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры",ДанныеСтроки.ХарактеристикаНоменклатуры);
			НайденныйКомплект = ТаблицаРазворачиваемыхКомплектов.НайтиСтроки(СтруктураПоиска);
			
			Если НайденныйКомплект.Количество() = 0 Тогда
				НоваяСтрока = ТаблицаРазворачиваемыхКомплектов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтроки);
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе	
		
		Для Каждого ЭлементМассива Из МассивНомеровСтрок Цикл
			
			ДанныеСтроки = Объект.Товары.НайтиПоидентификатору(ЭлементМассива);
			
			Если ДанныеСтроки = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Номенклатура) ИЛИ НЕ ДанныеСтроки.Номенклатура.Комплект Тогда
				Продолжить;
			КонецЕсли;                                             
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Номенклатура",ДанныеСтроки.Номенклатура);
			СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры",ДанныеСтроки.ХарактеристикаНоменклатуры);
			НайденныйКомплект = ТаблицаРазворачиваемыхКомплектов.НайтиСтроки(СтруктураПоиска);
			
			Если НайденныйКомплект.Количество() = 0 Тогда
				НоваяСтрока = ТаблицаРазворачиваемыхКомплектов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтроки);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// обход всех строк документа и разбор выбранных комплектов
	Для Каждого СтрокаДокумента ИЗ Объект.Товары Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура",СтрокаДокумента.Номенклатура);
		СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры",СтрокаДокумента.ХарактеристикаНоменклатуры);
		НайденныйКомплект = ТаблицаРазворачиваемыхКомплектов.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныйКомплект.Количество() > 0 Тогда
			
			//проверка характеристики и пола
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	&Комплект КАК Комплект,
			|	&ХарактеристикаКомплекта КАК ХарактеристикаКомплекта
			|ПОМЕСТИТЬ ВТ_Комплект
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Комплект.Комплект КАК Комплект,
			|	НоменклатураКомплектующие.Ссылка.ВидАнтропометрическогоСвойства КАК ВидАнтропометрическогоСвойстваКомплекта,
			|	НоменклатураКомплектующие.Ссылка.Пол КАК ПолКомплекта,
			|	НоменклатураКомплектующие.Номенклатура КАК Комплектующее,
			|	НоменклатураКомплектующие.Номенклатура.Пол КАК ПолКомплектующего,
			|	ВТ_Комплект.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
			|	НоменклатураКомплектующие.Номенклатура.ВидАнтропометрическогоСвойства КАК ВидАнтропометрическогоСвойстваКомплектующего,
			|	ХарактеристикиНоменклатуры.Метрика КАК МетрикаКомплекта
			|ПОМЕСТИТЬ ВТ_Комплектующие
			|ИЗ
			|	ВТ_Комплект КАК ВТ_Комплект
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
			|		ПО ВТ_Комплект.Комплект = НоменклатураКомплектующие.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
			|		ПО ВТ_Комплект.ХарактеристикаКомплекта = ХарактеристикиНоменклатуры.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Комплектующие.Комплект КАК Комплект,
			|	ВТ_Комплектующие.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
			|	ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплекта КАК ВидАнтропометрическогоСвойстваКомплекта,
			|	ВТ_Комплектующие.ПолКомплекта КАК ПолКомплекта,
			|	ВТ_Комплектующие.Комплектующее КАК Комплектующее,
			|	ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплектующего КАК ВидАнтропометрическогоСвойстваКомплектующего,
			|	ВТ_Комплектующие.ПолКомплектующего КАК ПолКомплектующего,
			|	ВТ_Комплектующие.МетрикаКомплекта КАК МетрикаКомплекта,
			|	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаКомплектующего,
			|	ХарактеристикиНоменклатуры.Метрика КАК МетрикаКомплектующего
			|ПОМЕСТИТЬ ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС
			|ИЗ
			|	ВТ_Комплектующие КАК ВТ_Комплектующие
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
			|		ПО ВТ_Комплектующие.Комплектующее = ХарактеристикиНоменклатуры.Владелец
			|			И ВТ_Комплектующие.МетрикаКомплекта = ХарактеристикиНоменклатуры.Метрика
			|ГДЕ
			|	(ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплекта = ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплектующего
			|			ИЛИ ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплектующего = ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Комплектующие.Комплект КАК Комплект,
			|	ВТ_Комплектующие.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
			|	ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплекта КАК ВидАнтропометрическогоСвойстваКомплекта,
			|	ВТ_Комплектующие.ПолКомплекта КАК ПолКомплекта,
			|	ВТ_Комплектующие.Комплектующее КАК Комплектующее,
			|	ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплектующего КАК ВидАнтропометрическогоСвойстваКомплектующего,
			|	ВТ_Комплектующие.ПолКомплектующего КАК ПолКомплектующего,
			|	ВТ_Комплектующие.МетрикаКомплекта КАК МетрикаКомплекта,
			|	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаКомплектующего,
			|	ХарактеристикиНоменклатуры.Метрика КАК МетрикаКомплектующего
			|ПОМЕСТИТЬ ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС
			|ИЗ
			|	ВТ_Комплектующие КАК ВТ_Комплектующие
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
			|		ПО ВТ_Комплектующие.Комплектующее = ХарактеристикиНоменклатуры.Владелец
			|ГДЕ
			|	ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплекта <> ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплектующего
			|	И ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплектующего <> ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Комплектующие.Комплектующее КАК Комплектующее
			|ИЗ
			|	ВТ_Комплектующие КАК ВТ_Комплектующие
			|ГДЕ
			|	НЕ ВТ_Комплектующие.Комплектующее В
			|				(ВЫБРАТЬ
			|					ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.Комплектующее
			|				ИЗ
			|					ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.Комплект КАК Комплект,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ВидАнтропометрическогоСвойстваКомплекта КАК ВидАнтропометрическогоСвойстваКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ПолКомплекта КАК ПолКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.Комплектующее КАК Комплектующее,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ВидАнтропометрическогоСвойстваКомплектующего КАК ВидАнтропометрическогоСвойстваКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ПолКомплектующего КАК ПолКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.МетрикаКомплекта КАК МетрикаКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ХарактеристикаКомплектующего КАК ХарактеристикаКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.МетрикаКомплектующего КАК МетрикаКомплектующего,
			|	ВЫБОР
			|		КОГДА ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ПолКомплекта = ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ПолКомплектующего
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК ЕстьОшибкаПола,
			|	ВЫБОР
			|		КОГДА ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.МетрикаКомплекта = ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.МетрикаКомплектующего
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК ЕстьОшибкаХарактеристики
			|ИЗ
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС КАК ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС
			|ГДЕ
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ВидАнтропометрическогоСвойстваКомплектующего <> ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.Комплект КАК Комплект,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ВидАнтропометрическогоСвойстваКомплекта КАК ВидАнтропометрическогоСвойстваКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ПолКомплекта КАК ПолКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.Комплектующее КАК Комплектующее,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ВидАнтропометрическогоСвойстваКомплектующего КАК ВидАнтропометрическогоСвойстваКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ПолКомплектующего КАК ПолКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.МетрикаКомплекта КАК МетрикаКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ХарактеристикаКомплектующего КАК ХарактеристикаКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.МетрикаКомплектующего КАК МетрикаКомплектующего,
			|	ВЫБОР
			|		КОГДА ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ПолКомплекта = ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ПолКомплектующего
			|			ТОГДА ЛОЖЬ
			|		ИНАЧЕ ИСТИНА
			|	КОНЕЦ КАК ЕстьОшибкаПола,
			|	ВЫБОР
			|		КОГДА ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.МетрикаКомплектующего ЕСТЬ NULL
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ЕстьОшибкаХарактеристики
			|ИЗ
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС КАК ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.Комплект КАК Комплект,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ВидАнтропометрическогоСвойстваКомплекта КАК ВидАнтропометрическогоСвойстваКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ПолКомплекта КАК ПолКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.Комплектующее КАК Комплектующее,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ВидАнтропометрическогоСвойстваКомплектующего КАК ВидАнтропометрическогоСвойстваКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ПолКомплектующего КАК ПолКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.МетрикаКомплекта КАК МетрикаКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.ХарактеристикаКомплектующего КАК ХарактеристикаКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС.МетрикаКомплектующего КАК МетрикаКомплектующего
			|ИЗ
			|	ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС КАК ВТ_ИтоговыеДанныеКомплектующие_ОдинаковыйВАС
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.Комплект КАК Комплект,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ВидАнтропометрическогоСвойстваКомплекта КАК ВидАнтропометрическогоСвойстваКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ПолКомплекта КАК ПолКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.Комплектующее КАК Комплектующее,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ВидАнтропометрическогоСвойстваКомплектующего КАК ВидАнтропометрическогоСвойстваКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ПолКомплектующего КАК ПолКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.МетрикаКомплекта КАК МетрикаКомплекта,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.ХарактеристикаКомплектующего КАК ХарактеристикаКомплектующего,
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС.МетрикаКомплектующего КАК МетрикаКомплектующего
			|ИЗ
			|	ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС КАК ВТ_ИтоговыеДанныеКомплектующие_РазныйВАС";
			
			Запрос.УстановитьПараметр("Комплект", СтрокаДокумента.Номенклатура);
			Запрос.УстановитьПараметр("ХарактеристикаКомплекта", СтрокаДокумента.ХарактеристикаНоменклатуры);
			
			Результат = Запрос.ВыполнитьПакет();
			
			ТаблицаКомплектующихДляПроверкиРазныхВАС	= Результат[4].Выгрузить();
			ТаблицаДляПроверкиОшибок_ОдинаковыеВАС 		= Результат[5].Выгрузить();
			ТаблицаДляПроверкиОшибок_РазныеВАС 			= Результат[6].Выгрузить();
			ТаблицаКомплектующих_ОдинаковыеВАС 			= Результат[7].Выгрузить();
			ТаблицаКомплектующих_РазныеВАС 				= Результат[8].Выгрузить();
			
			ЕстьОшибки = Ложь;
			
			// ошибки соответствия характеристики и пола, одинаковые ВАС
			Для Каждого СтрокаДляПроверки Из ТаблицаДляПроверкиОшибок_ОдинаковыеВАС Цикл
				
				Если СтрокаДляПроверки.ЕстьОшибкаПола Тогда
					НоваяСтрока = ТаблицаС_Ошибками.Добавить();
					НоваяСтрока.Номенклатура				= СтрокаДляПроверки.Комплект;
					НоваяСтрока.ХарактеристикаНоменклатуры	= СтрокаДляПроверки.ХарактеристикаКомплекта;
					НоваяСтрока.ЕстьОшибкаПола				= СтрокаДляПроверки.ЕстьОшибкаПола;
					ЕстьОшибки = Истина;
				КонецЕсли;	
				
				Если СтрокаДляПроверки.ЕстьОшибкаХарактеристики Тогда
					НоваяСтрока = ТаблицаС_Ошибками.Добавить();
					НоваяСтрока.Номенклатура 				= СтрокаДляПроверки.Комплект;
					НоваяСтрока.ХарактеристикаНоменклатуры 	= СтрокаДляПроверки.ХарактеристикаКомплекта;
					НоваяСтрока.ЕстьОшибкаХарактеристики 	= СтрокаДляПроверки.ЕстьОшибкаХарактеристики;
					ЕстьОшибки = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
			// ошибки соответствия характеристики и пола, разные ВАС
			Для Каждого СтрокаДляПроверкиРазныхВАС Из ТаблицаКомплектующихДляПроверкиРазныхВАС Цикл
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Комплектующее",СтрокаДляПроверкиРазныхВАС.Комплектующее);
				НайденноеКомплектующее = ТаблицаДляПроверкиОшибок_РазныеВАС.НайтиСтроки(СтруктураПоиска);
				СтрокаДляПроверки = НайденноеКомплектующее[0];
				
				Если СтрокаДляПроверки.ЕстьОшибкаПола Тогда
					НоваяСтрока = ТаблицаС_Ошибками.Добавить();
					НоваяСтрока.Номенклатура				= СтрокаДляПроверки.Комплект;
					НоваяСтрока.ХарактеристикаНоменклатуры	= СтрокаДляПроверки.ХарактеристикаКомплекта;
					НоваяСтрока.ЕстьОшибкаПола				= СтрокаДляПроверки.ЕстьОшибкаПола;
					ЕстьОшибки = Истина;
				КонецЕсли;	
				
				// пока не нужно
				//Если СтрокаДляПроверки.ЕстьОшибкаХарактеристики Тогда
				//	НоваяСтрока = ТаблицаС_Ошибками.Добавить();
				//	НоваяСтрока.Номенклатура 				= СтрокаДляПроверки.Комплект;
				//	НоваяСтрока.ХарактеристикаНоменклатуры 	= СтрокаДляПроверки.ХарактеристикаКомплекта;
				//	НоваяСтрока.СовсемНетХарактеристики 	= СтрокаДляПроверки.ЕстьОшибкаХарактеристики;
				//	ЕстьОшибки = Истина;
				//КонецЕсли;
				
			КонецЦикла;
			
			// ошибка наличия характеристик у комплектующих
			Если СтрокаДокумента.Номенклатура.ВидАнтропометрическогоСвойства <> Справочники.ВидыАнтропометрическихСвойств.НеОпределен
				И ТаблицаДляПроверкиОшибок_ОдинаковыеВАС.Количество() = 0 Тогда
				НоваяСтрока = ТаблицаС_Ошибками.Добавить();
				НоваяСтрока.Номенклатура 							= СтрокаДокумента.Номенклатура;
				НоваяСтрока.ХарактеристикаНоменклатуры 				= СтрокаДокумента.ХарактеристикаНоменклатуры;
				НоваяСтрока.ЕстьОшибкаСоответствияВидаАнтропометрии = Истина;
				ЕстьОшибки = Истина;
			КонецЕсли;
			
			Если ЕстьОшибки Тогда
				
				// запись исходной строки
				ЗаполнитьЗначенияСвойств(ТаблицаДокумента.Добавить(),СтрокаДокумента);
				
			Иначе 
				
				// запись комплектующих
				ЕстьКомплекты = Истина;
				Для Каждого СтрокаКомплектующих Из СтрокаДокумента.Номенклатура.Комплектующие Цикл
					
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("Комплектующее",СтрокаКомплектующих.Номенклатура);
					
					НайденноеКомплектующее = ТаблицаКомплектующих_ОдинаковыеВАС.НайтиСтроки(СтруктураПоиска);
					
					Если НайденноеКомплектующее.Количество() > 0 Тогда
						
						НоваяСтрока = ТаблицаДокумента.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаДокумента);
						НоваяСтрока.Комплект 					= СтрокаДокумента.Номенклатура;
						НоваяСтрока.ХарактеристикаКомплекта		= СтрокаДокумента.ХарактеристикаНоменклатуры;
						НоваяСтрока.Номенклатура 				= СтрокаКомплектующих.Номенклатура;
						НоваяСтрока.ХарактеристикаНоменклатуры 	= НайденноеКомплектующее[0].ХарактеристикаКомплектующего;
						НоваяСтрока.Количество                  = СтрокаДокумента.Количество * СтрокаКомплектующих.Количество;
						НоваяСтрока.КоличествоВКомплекте 		= СтрокаКомплектующих.Количество;
						НоваяСтрока.Цена 						= ЦенообразованиеСерверПереопределяемый.ПолучитьЦену(СтрокаКомплектующих.Номенклатура,Объект.Организация,Объект.Дата);
						НоваяСтрока.Сумма 						= НоваяСтрока.Количество * НоваяСтрока.Цена;
						НоваяСтрока.ДокументВыдачи				= Документы.ВыдачаСредствЗащитыСотруднику.Выбрать();
						
					КонецЕсли;				
					
					НайденноеКомплектующее = ТаблицаКомплектующих_РазныеВАС.НайтиСтроки(СтруктураПоиска);
					
					Если НайденноеКомплектующее.Количество() > 0 Тогда
						
						НоваяСтрока = ТаблицаДокумента.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаДокумента);
						НоваяСтрока.Комплект 					= СтрокаДокумента.Номенклатура;
						НоваяСтрока.ХарактеристикаКомплекта		= СтрокаДокумента.ХарактеристикаНоменклатуры;
						НоваяСтрока.Номенклатура 				= СтрокаКомплектующих.Номенклатура;
						НоваяСтрока.ХарактеристикаНоменклатуры 	= Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
						НоваяСтрока.Количество                  = СтрокаДокумента.Количество * СтрокаКомплектующих.Количество;
						НоваяСтрока.КоличествоВКомплекте 		= СтрокаКомплектующих.Количество;
						НоваяСтрока.Цена 						= ЦенообразованиеСерверПереопределяемый.ПолучитьЦену(СтрокаКомплектующих.Номенклатура,Объект.Организация,Объект.Дата);
						НоваяСтрока.Сумма 						= НоваяСтрока.Количество * НоваяСтрока.Цена;
						НоваяСтрока.ДокументВыдачи				= Документы.ВыдачаСредствЗащитыСотруднику.Выбрать();
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
		Иначе	
			
			// запись исходной строки
			ЗаполнитьЗначенияСвойств(ТаблицаДокумента.Добавить(),СтрокаДокумента);
			
		КонецЕсли;
		
	КонецЦикла;

	// группировка и сортировка
	ТаблицаДокумента = ГруппироватьСтроки(ТаблицаДокумента);
	
	// запись данных в документ
	Если ЕстьКомплекты Тогда
		Объект.Товары.Загрузить(ТаблицаДокумента);
		Объект.СуммаДокумента 		= Объект.Товары.Итог("Сумма");
		ЭтаФорма.Модифицированность = Истина;
	ИначеЕсли ТаблицаС_Ошибками.Количество() = 0 Тогда
		Сообщить("Комплекты в выбранных строках не найдены.");
	КонецЕсли;
	
	// вывод ошибок
	Для Каждого СтрокаОшибка ИЗ ТаблицаС_Ошибками Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура",СтрокаОшибка.Номенклатура);
		СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры",СтрокаОшибка.ХарактеристикаНоменклатуры);
		НаденнаяСтрока = Объект.Товары.НайтиСтроки(СтруктураПоиска);
		
		Если СтрокаОшибка.ЕстьОшибкаХарактеристики Тогда
			ТекстСообщения = "Номенклатура ""#1"", не может быть разобрана! У комплектующего нет характеристики комплекта ""#2"", строка № #3";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#1",СтрокаОшибка.Номенклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#2",СтрокаОшибка.ХарактеристикаНоменклатуры);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#3",НаденнаяСтрока[0].НомерСтроки);
			Сообщить(ТекстСообщения);
		КонецЕсли;
		
		Если СтрокаОшибка.СовсемНетХарактеристики Тогда
			ТекстСообщения = "Номенклатура ""#1"", не может быть разобрана! У комплектующего нет ни одной характеристики, строка № #3";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#1",СтрокаОшибка.Номенклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#3",НаденнаяСтрока[0].НомерСтроки);
			Сообщить(ТекстСообщения);
		КонецЕсли;
		
		Если СтрокаОшибка.ЕстьОшибкаПола Тогда
			ТекстСообщения = "Номенклатура ""#1"", не может быть разобрана! Пол комплектующего не совпадает с полом комплекта, строка № #3";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#1",СтрокаОшибка.Номенклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#3",НаденнаяСтрока[0].НомерСтроки);
			Сообщить(ТекстСообщения);
		КонецЕсли;	
		
		Если СтрокаОшибка.ЕстьОшибкаСоответствияВидаАнтропометрии Тогда
			ТекстСообщения = "Номенклатура ""#1"", не может быть разобрана! У комплекта с видом антропометрического свойства ""#2"" должно быть хотя бы одно комплектующее с видом антропометрического свойством, отличным от ""Не определен"", строка № #3";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#1",СтрокаОшибка.Номенклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#2",СтрокаОшибка.Номенклатура.ВидАнтропометрическогоСвойства);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#3",НаденнаяСтрока[0].НомерСтроки);
			Сообщить(ТекстСообщения);
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_49316

//+++АСТБ_Горюшин_Алексей_49316
&НаКлиенте
Процедура СобратьВсеКомплекты(Команда)
	
	СобратьВыбранныйКомплектНаСервере();
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_49316

//+++АСТБ_Горюшин_Алексей_49316
&НаКлиенте
Процедура СобратьВыбранныйКомплект(Команда)
	
	МассивВыделенныхСтрок = ЭтаФорма.Элементы.Товары.ВыделенныеСтроки;
	
	Если МассивВыделенныхСтрок.Количество() = 0 Тогда
		Сообщить("Не выбраны строки документа.");
		Возврат;
	КонецЕсли;
	
	СобратьВыбранныйКомплектНаСервере(МассивВыделенныхСтрок);
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_49316

//+++АСТБ_Горюшин_Алексей_49316
&НаСервере
Процедура СобратьВыбранныйКомплектНаСервере(МассивВыделенныхСтрок = Неопределено)
	
	ТаблицаДокумента = Объект.Товары.Выгрузить();
	ТаблицаДокумента.Очистить();
	
	ТаблицаС_Ошибками = Объект.Товары.Выгрузить();
	ТаблицаС_Ошибками.Очистить();
	Массив = Новый Массив;
	Массив.Добавить(Тип("Булево"));
	ОписаниеТиповБ = Новый ОписаниеТипов(Массив);
	ТаблицаС_Ошибками.Колонки.Добавить("ЕстьОшибкаПола", ОписаниеТиповБ);
	ТаблицаС_Ошибками.Колонки.Добавить("ЕстьОшибкаКоличества", ОписаниеТиповБ);
	
	//создаем таблицу сворачиваемого комплекта
	ТаблицаКомплектовДляОбработки = Новый ТаблицаЗначений;
	ТаблицаКомплектовДляОбработки.Колонки.Добавить("Комплект");
	ТаблицаКомплектовДляОбработки.Колонки.Добавить("ХарактеристикаКомплекта");
	ТаблицаКомплектовДляОбработки.Колонки.Добавить("Обработан");
	ТаблицаКомплектовДляОбработки.Колонки.Добавить("БылиОшибки");
	
	СтруктураПоиска = Новый Структура("Комплект,ХарактеристикаКомплекта");
	
	// поиск комплектов для обработки
	Если МассивВыделенныхСтрок = Неопределено Тогда 
		
		Для Каждого ДанныеСтроки Из Объект.Товары Цикл
			
			Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Комплект) Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураПоиска.Комплект 				= ДанныеСтроки.Комплект;
			СтруктураПоиска.ХарактеристикаКомплекта = ДанныеСтроки.ХарактеристикаКомплекта;
			
			Если ТаблицаКомплектовДляОбработки.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда
				
				НоваяСтрока 						= ТаблицаКомплектовДляОбработки.Добавить();
				НоваяСтрока.Комплект 				= ДанныеСтроки.Комплект;
				НоваяСтрока.ХарактеристикаКомплекта = ДанныеСтроки.ХарактеристикаКомплекта;
				
			КонецЕсли;
			
		КонецЦикла;	
		
	Иначе	
		
		Для Каждого ЭлементМассива Из МассивВыделенныхСтрок Цикл
			
			ДанныеСтроки = Объект.Товары.НайтиПоидентификатору(ЭлементМассива);
			
			Если ДанныеСтроки = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Комплект) Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураПоиска.Комплект 				= ДанныеСтроки.Комплект;
			СтруктураПоиска.ХарактеристикаКомплекта = ДанныеСтроки.ХарактеристикаКомплекта;
			
			Если ТаблицаКомплектовДляОбработки.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда
				
				НоваяСтрока 						= ТаблицаКомплектовДляОбработки.Добавить();
				НоваяСтрока.Комплект 				= ДанныеСтроки.Комплект;
				НоваяСтрока.ХарактеристикаКомплекта = ДанныеСтроки.ХарактеристикаКомплекта;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

	ЕстьКомплекты = Ложь;
	
	Для Каждого СтрокаДокумента Из Объект.Товары Цикл
		
		Если ЗначениеЗаполнено(СтрокаДокумента.Комплект) Тогда
			
			СтруктураПоиска.Комплект 				= СтрокаДокумента.Комплект;
			СтруктураПоиска.ХарактеристикаКомплекта	= СтрокаДокумента.ХарактеристикаКомплекта;
			
			СтрокаТаблицыКомплекта = ТаблицаКомплектовДляОбработки.НайтиСтроки(СтруктураПоиска);
			
			Если СтрокаТаблицыКомплекта.Количество() > 0 Тогда
				
				Если СтрокаТаблицыКомплекта[0].Обработан = Истина Тогда
					Продолжить;
				КонецЕсли;
				
				Если СтрокаТаблицыКомплекта[0].БылиОшибки = Истина Тогда
					// запись исходной строки
					ЗаполнитьЗначенияСвойств(ТаблицаДокумента.Добавить(),СтрокаДокумента);
					Продолжить;
				КонецЕсли;
				
				// проверка пола и количества
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	&Комплект КАК Комплект,
				|	&ХарактеристикаКомплекта КАК ХарактеристикаКомплекта
				|ПОМЕСТИТЬ ВТ_Комплект
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
				|	ТаблицаДокумента.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
				|	ТаблицаДокумента.Количество КАК Количество,
				|	ТаблицаДокумента.Цена КАК Цена,
				|	ТаблицаДокумента.Сумма КАК Сумма,
				|	ТаблицаДокумента.Комплект КАК Комплект,
				|	ТаблицаДокумента.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
				|	ТаблицаДокумента.КоличествоВКомплекте КАК КоличествоВКомплекте,
				|	ТаблицаДокумента.ДокументВыдачи КАК ДокументВыдачи
				|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
				|ИЗ
				|	&ТаблицаДокумента КАК ТаблицаДокумента
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Комплект.Комплект КАК Комплект,
				|	НоменклатураКомплектующие.Ссылка.ВидАнтропометрическогоСвойства КАК ВидАнтропометрическогоСвойстваКомплекта,
				|	НоменклатураКомплектующие.Ссылка.Пол КАК ПолКомплекта,
				|	НоменклатураКомплектующие.Номенклатура КАК Комплектующее,
				|	НоменклатураКомплектующие.Номенклатура.Пол КАК ПолКомплектующего,
				|	ВТ_Комплект.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
				|	НоменклатураКомплектующие.Номенклатура.ВидАнтропометрическогоСвойства КАК ВидАнтропометрическогоСвойстваКомплектующего,
				|	ХарактеристикиНоменклатуры.Метрика КАК МетрикаКомплекта,
				|	НоменклатураКомплектующие.Количество КАК Количество
				|ПОМЕСТИТЬ ВТ_Комплектующие
				|ИЗ
				|	ВТ_Комплект КАК ВТ_Комплект
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
				|		ПО ВТ_Комплект.Комплект = НоменклатураКомплектующие.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
				|		ПО ВТ_Комплект.ХарактеристикаКомплекта = ХарактеристикиНоменклатуры.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_ТаблицаДокумента.Номенклатура КАК Комплектующее,
				|	ВТ_ТаблицаДокумента.ХарактеристикаНоменклатуры КАК ХарактеристикаКомплектующего,
				|	ВТ_ТаблицаДокумента.Количество КАК Количество,
				|	ВТ_Комплект.Комплект КАК Комплект,
				|	ВТ_Комплект.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта
				|ПОМЕСТИТЬ ВТ_Комплектующие_ИзДокумента
				|ИЗ
				|	ВТ_Комплект КАК ВТ_Комплект
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
				|		ПО ВТ_Комплект.Комплект = ВТ_ТаблицаДокумента.Комплект
				|			И ВТ_Комплект.ХарактеристикаКомплекта = ВТ_ТаблицаДокумента.ХарактеристикаКомплекта
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Комплектующие.Комплектующее КАК Комплектующее,
				|	СУММА(ВТ_Комплектующие.Количество) КАК Количество,
				|	ВТ_Комплектующие.Комплект КАК Комплект,
				|	ВТ_Комплектующие.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта
				|ПОМЕСТИТЬ ВТ_Комплектующие_ИзКомплекта_Количество
				|ИЗ
				|	ВТ_Комплектующие КАК ВТ_Комплектующие
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТ_Комплектующие.Комплектующее,
				|	ВТ_Комплектующие.Комплект,
				|	ВТ_Комплектующие.ХарактеристикаКомплекта
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Комплектующие_ИзДокумента.Комплектующее КАК Комплектующее,
				|	СУММА(ВТ_Комплектующие_ИзДокумента.Количество) КАК Количество,
				|	ВТ_Комплектующие_ИзДокумента.Комплект КАК Комплект,
				|	ВТ_Комплектующие_ИзДокумента.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
				|	ВТ_Комплектующие_ИзДокумента.ХарактеристикаКомплектующего КАК ХарактеристикаКомплектующего
				|ПОМЕСТИТЬ ВТ_Комплектующие_ИзДокумента_Количество
				|ИЗ
				|	ВТ_Комплектующие_ИзДокумента КАК ВТ_Комплектующие_ИзДокумента
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТ_Комплектующие_ИзДокумента.Комплектующее,
				|	ВТ_Комплектующие_ИзДокумента.Комплект,
				|	ВТ_Комплектующие_ИзДокумента.ХарактеристикаКомплекта,
				|	ВТ_Комплектующие_ИзДокумента.ХарактеристикаКомплектующего
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Комплектующие.Комплект КАК Комплект,
				|	ВТ_Комплектующие.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
				|	ВТ_Комплектующие.ПолКомплекта КАК ПолКомплекта,
				|	ВТ_Комплектующие.Комплектующее КАК Комплектующее,
				|	ВТ_Комплектующие.ПолКомплектующего КАК ПолКомплектующего,
				|	ВЫБОР
				|		КОГДА ВТ_Комплектующие.ПолКомплекта = ВТ_Комплектующие.ПолКомплектующего
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ИСТИНА
				|	КОНЕЦ КАК ЕстьОшибкаПола,
				|	ВТ_Комплектующие_ИзДокумента.ХарактеристикаКомплектующего КАК ХарактеристикаКомплектующего,
				|	ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплекта КАК ВидАнтропометрическогоСвойстваКомплекта,
				|	ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплектующего КАК ВидАнтропометрическогоСвойстваКомплектующего
				|ИЗ
				|	ВТ_Комплектующие КАК ВТ_Комплектующие
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Комплектующие_ИзДокумента КАК ВТ_Комплектующие_ИзДокумента
				|		ПО ВТ_Комплектующие.Комплект = ВТ_Комплектующие_ИзДокумента.Комплект
				|			И ВТ_Комплектующие.ХарактеристикаКомплекта = ВТ_Комплектующие_ИзДокумента.ХарактеристикаКомплекта
				|			И ВТ_Комплектующие.Комплектующее = ВТ_Комплектующие_ИзДокумента.Комплектующее
				|ГДЕ
				|	ВЫБОР
				|			КОГДА ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплекта = ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
				|				ТОГДА ЛОЖЬ
				|			ИНАЧЕ ВЫБОР
				|					КОГДА ВТ_Комплектующие.ВидАнтропометрическогоСвойстваКомплектующего = ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
				|						ТОГДА ЛОЖЬ
				|					ИНАЧЕ ИСТИНА
				|				КОНЕЦ
				|		КОНЕЦ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Комплектующие_ИзКомплекта_Количество.Комплектующее КАК Комплектующее,
				|	ВЫБОР
				|		КОГДА ВТ_Комплектующие_ИзДокумента_Количество.Количество ЕСТЬ NULL
				|				ИЛИ ВТ_Комплектующие_ИзКомплекта_Количество.Количество ЕСТЬ NULL
				|			ТОГДА 0
				|		ИНАЧЕ ВТ_Комплектующие_ИзДокумента_Количество.Количество / ВТ_Комплектующие_ИзКомплекта_Количество.Количество
				|	КОНЕЦ КАК КоличествоКомплектов,
				|	ВТ_Комплектующие_ИзКомплекта_Количество.Комплект КАК Комплект,
				|	ВТ_Комплектующие_ИзКомплекта_Количество.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
				|	ВТ_Комплектующие_ИзДокумента_Количество.ХарактеристикаКомплектующего КАК ХарактеристикаКомплектующего
				|ИЗ
				|	ВТ_Комплектующие_ИзКомплекта_Количество КАК ВТ_Комплектующие_ИзКомплекта_Количество
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Комплектующие_ИзДокумента_Количество КАК ВТ_Комплектующие_ИзДокумента_Количество
				|		ПО ВТ_Комплектующие_ИзКомплекта_Количество.Комплектующее = ВТ_Комплектующие_ИзДокумента_Количество.Комплектующее
				|
				|УПОРЯДОЧИТЬ ПО
				|	КоличествоКомплектов УБЫВ";
				
				Запрос.УстановитьПараметр("Комплект", СтрокаДокумента.Комплект);
				Запрос.УстановитьПараметр("ХарактеристикаКомплекта", СтрокаДокумента.ХарактеристикаКомплекта);
				Запрос.УстановитьПараметр("ТаблицаДокумента", Объект.Товары.Выгрузить());
				
				Результат = Запрос.ВыполнитьПакет();
				
				ТаблицаС_ОшибкамиПола				= Результат[6].Выгрузить();
				ТаблицаДляПроверкиОшибокКоличества	= Результат[7].Выгрузить();
				
				ЕстьОшибки = Ложь;
				
				// ошибки пола
				Для Каждого СтрокаДляПроверки Из ТаблицаС_ОшибкамиПола Цикл
					
					Если СтрокаДляПроверки.ЕстьОшибкаПола Тогда
						НоваяСтрока = ТаблицаС_Ошибками.Добавить();
						НоваяСтрока.Номенклатура				= СтрокаДляПроверки.Комплектующее;
						НоваяСтрока.ХарактеристикаНоменклатуры	= СтрокаДляПроверки.ХарактеристикаКомплектующего;
						НоваяСтрока.Комплект					= СтрокаДляПроверки.Комплект;
						НоваяСтрока.ХарактеристикаКомплекта		= СтрокаДляПроверки.ХарактеристикаКомплекта;
						НоваяСтрока.ЕстьОшибкаПола				= СтрокаДляПроверки.ЕстьОшибкаПола;
						ЕстьОшибки = Истина;
					КонецЕсли;	
					
				КонецЦикла;
				
				// ошибка количества
				Если ТаблицаДляПроверкиОшибокКоличества.Количество() > 0 Тогда
					
					МаксимальноеКоличествоКомплектов = ТаблицаДляПроверкиОшибокКоличества[0].КоличествоКомплектов;
					
					Для Каждого СтрокаКоличества ИЗ ТаблицаДляПроверкиОшибокКоличества Цикл
						
						Если СтрокаКоличества.КоличествоКомплектов < МаксимальноеКоличествоКомплектов
							ИЛИ СтрокаКоличества.КоличествоКомплектов = 0
							ИЛИ Цел(СтрокаКоличества.КоличествоКомплектов) <> СтрокаКоличества.КоличествоКомплектов
							Тогда
							
							НоваяСтрока = ТаблицаС_Ошибками.Добавить();
							НоваяСтрока.Номенклатура				= СтрокаКоличества.Комплектующее;
							НоваяСтрока.ХарактеристикаНоменклатуры	= СтрокаКоличества.ХарактеристикаКомплектующего;
							НоваяСтрока.Комплект					= СтрокаКоличества.Комплект;
							НоваяСтрока.ХарактеристикаКомплекта		= СтрокаКоличества.ХарактеристикаКомплекта;
							НоваяСтрока.ЕстьОшибкаКоличества		= Истина;
							ЕстьОшибки = Истина;
							
						КонецЕсли;	
					
					КонецЦикла;
					
				Иначе
					
					НоваяСтрока = ТаблицаС_Ошибками.Добавить();
					НоваяСтрока.Номенклатура				= СтрокаКоличества.Комплектующее;
					НоваяСтрока.ХарактеристикаНоменклатуры	= СтрокаКоличества.ХарактеристикаКомплектующего;
					НоваяСтрока.Комплект					= СтрокаДокумента.Комплект;
					НоваяСтрока.ХарактеристикаКомплекта		= СтрокаДокумента.ХарактеристикаКомплекта;
					НоваяСтрока.ЕстьОшибкаКоличества		= Истина;
					ЕстьОшибки = Истина;
					
				КонецЕсли;	
				
				
				Если ЕстьОшибки Тогда
				
					// запись исходной строки
					ЗаполнитьЗначенияСвойств(ТаблицаДокумента.Добавить(),СтрокаДокумента);
					СтрокаТаблицыКомплекта[0].БылиОшибки = Истина;
					
				Иначе 	
				
					ЕстьКомплекты = Истина;
					НоваяСтрока = ТаблицаДокумента.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаДокумента);
					НоваяСтрока.Количество					= СтрокаДокумента.Количество / СтрокаДокумента.КоличествоВКомплекте;
					НоваяСтрока.Номенклатура 				= СтрокаДокумента.Комплект;
					НоваяСтрока.ХарактеристикаНоменклатуры 	= НоваяСтрока.ХарактеристикаКомплекта;
					НоваяСтрока.КоличествоВКомплекте 		= 0;
					НоваяСтрока.Комплект 					= Справочники.Номенклатура.ПустаяСсылка();
					НоваяСтрока.ХарактеристикаКомплекта		= Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
					НоваяСтрока.Цена 						= ЦенообразованиеСерверПереопределяемый.ПолучитьЦену(НоваяСтрока.Номенклатура,Объект.Организация,Объект.Дата);
					НоваяСтрока.Сумма 						= НоваяСтрока.Количество * НоваяСтрока.Цена;
					
					СтрокаТаблицыКомплекта[0].Обработан 	= Истина;
					
				КонецЕсли;
				
			Иначе
				ЗаполнитьЗначенияСвойств(ТаблицаДокумента.Добавить(),СтрокаДокумента);
			КонецЕсли;
		Иначе	
			ЗаполнитьЗначенияСвойств(ТаблицаДокумента.Добавить(),СтрокаДокумента);
		КонецЕсли;

	КонецЦикла;
	
	// группировка и сортировка
	ТаблицаДокумента = ГруппироватьСтроки(ТаблицаДокумента);
	
	// запись данных в документ
	Если ЕстьКомплекты Тогда
		Объект.Товары.Загрузить(ТаблицаДокумента);
		Объект.СуммаДокумента 		= Объект.Товары.Итог("Сумма");
		ЭтаФорма.Модифицированность = Истина;
	Иначе
		Сообщить("Комплекты в выбранных строках не найдены.");
	КонецЕсли;
	
	// вывод ошибок
	Для Каждого СтрокаОшибка ИЗ ТаблицаС_Ошибками Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Комплект",СтрокаОшибка.Комплект);
		СтруктураПоиска.Вставить("ХарактеристикаКомплекта",СтрокаОшибка.ХарактеристикаКомплекта);
		СтруктураПоиска.Вставить("Номенклатура",СтрокаОшибка.Номенклатура);
		СтруктураПоиска.Вставить("ХарактеристикаНоменклатуры",СтрокаОшибка.ХарактеристикаНоменклатуры);
		
		НаденнаяСтрока = Объект.Товары.НайтиСтроки(СтруктураПоиска);
		
		ЕстьОшибкаРазнойХарактеристики = Ложь;
		ЕстьОшибкаОтсутствияКомплектующего = Ложь;
		
		Если НаденнаяСтрока.Количество() = 0 Тогда
			ЕстьОшибкаРазнойХарактеристики = Истина;
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Комплект",СтрокаОшибка.Комплект);
			СтруктураПоиска.Вставить("Номенклатура",СтрокаОшибка.Номенклатура);
			НаденнаяСтрока = Объект.Товары.НайтиСтроки(СтруктураПоиска);
		КонецЕсли;
		
		Если НаденнаяСтрока.Количество() = 0 Тогда
			ЕстьОшибкаОтсутствияКомплектующего = Истина;
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Комплект",СтрокаОшибка.Комплект);
			НаденнаяСтрока = Объект.Товары.НайтиСтроки(СтруктураПоиска);
		КонецЕсли;
		
		Если СтрокаОшибка.ЕстьОшибкаПола Тогда
			ТекстСообщения = "Номенклатура ""#1"", не может быть собрана в комплект! Пол комплектующего не совпадает с полом комплекта, строка № #3";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#1",СтрокаОшибка.Номенклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#3",НаденнаяСтрока[0].НомерСтроки);
			Сообщить(ТекстСообщения);
		КонецЕсли;	
		
		Если СтрокаОшибка.ЕстьОшибкаКоличества Тогда
			Если ЕстьОшибкаОтсутствияКомплектующего Тогда
				ТекстСообщения = "Комплект ""#1"", не может быть собран! Отсутвует необходимое комплектующее комплекта, строка № #3";
			ИначеЕсли ЕстьОшибкаРазнойХарактеристики Тогда
				ТекстСообщения = "Комплект ""#1"", не может быть собран! Характеристика комплектующего ""#2"" не совпадает с характеристикой комплекта, строка № #3";
			Иначе	
				ТекстСообщения = "Комплект ""#1"", не может быть собран! Количества комплектующего ""#2"" недостаточно для сборки целого количества комплектов, строка № #3";
			КонецЕсли;
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#1",СтрокаОшибка.Комплект);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#2",СтрокаОшибка.Номенклатура);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"#3",НаденнаяСтрока[0].НомерСтроки);
			Сообщить(ТекстСообщения);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_49316

//+++АСТБ_Горюшин_Алексей_49316
&НаСервере
Функция ГруппироватьСтроки(ТаблицаДляСортировки)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.Комплект КАК Комплект,
	|	ТаблицаДокумента.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
	|	ТаблицаДокумента.КоличествоВКомплекте КАК КоличествоВКомплекте,
	|	ТаблицаДокумента.ДокументВыдачи КАК ДокументВыдачи
	|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаДокумента.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ВТ_ТаблицаДокумента.Количество) КАК Количество,
	|	ВТ_ТаблицаДокумента.Цена КАК Цена,
	|	ВТ_ТаблицаДокумента.Комплект КАК Комплект,
	|	ВТ_ТаблицаДокумента.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
	|	СУММА(ВТ_ТаблицаДокумента.КоличествоВКомплекте) КАК КоличествоВКомплекте,
	|	ВТ_ТаблицаДокумента.ДокументВыдачи КАК ДокументВыдачи
	|ПОМЕСТИТЬ ВТ_Группировка
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаДокумента.Номенклатура,
	|	ВТ_ТаблицаДокумента.ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаДокумента.Цена,
	|	ВТ_ТаблицаДокумента.Комплект,
	|	ВТ_ТаблицаДокумента.ХарактеристикаКомплекта,
	//|	ВТ_ТаблицаДокумента.КоличествоВКомплекте,
	|	ВТ_ТаблицаДокумента.ДокументВыдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Группировка.Номенклатура КАК Номенклатура,
	|	ВТ_Группировка.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_Группировка.Комплект КАК Комплект,
	|	ВТ_Группировка.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
	|	ВТ_Группировка.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_Группировка.Количество КАК Количество,
	|	ВТ_Группировка.Цена КАК Цена,
	|	ВТ_Группировка.КоличествоВКомплекте КАК КоличествоВКомплекте,
	|	ВТ_Группировка.Цена * ВТ_Группировка.Количество КАК Сумма
	|ИЗ
	|	ВТ_Группировка КАК ВТ_Группировка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры,
	|	Цена
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ТаблицаДокумента", ТаблицаДляСортировки);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции //---АСТБ_Горюшин_Алексей_49316

//+++АСТБ_Горюшин_Алексей_49316
&НаКлиенте
Процедура ОбновитьКоличествоВКомплекте(Команда)
	ОбновитьКоличествоВКомплектеНаСервере();
КонецПроцедуры //---АСТБ_Горюшин_Алексей_49316

//+++АСТБ_Горюшин_Алексей_49316
&НаСервере
Процедура ОбновитьКоличествоВКомплектеНаСервере()
	
	ТаблицаДокумента = Объект.Товары.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.Комплект КАК Комплект,
	|	ТаблицаДокумента.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
	|	ТаблицаДокумента.КоличествоВКомплекте КАК КоличествоВКомплекте,
	|	ТаблицаДокумента.ДокументВыдачи КАК ДокументВыдачи
	|ПОМЕСТИТЬ ВТ_ТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДокумента.Комплект КАК Комплект,
	|	ВТ_ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	СУММА(НоменклатураКомплектующие.Количество) КАК КоличествоВКомплекте
	|ПОМЕСТИТЬ ВТ_Комплекты
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	|		ПО ВТ_ТаблицаДокумента.Комплект = НоменклатураКомплектующие.Ссылка
	|			И ВТ_ТаблицаДокумента.Номенклатура = НоменклатураКомплектующие.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаДокумента.Комплект,
	|	ВТ_ТаблицаДокумента.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаДокумента.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаДокумента.Количество КАК Количество,
	|	ВТ_ТаблицаДокумента.Цена КАК Цена,
	|	ВТ_ТаблицаДокумента.Сумма КАК Сумма,
	|	ВТ_ТаблицаДокумента.Комплект КАК Комплект,
	|	ВТ_ТаблицаДокумента.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
	|	ЕСТЬNULL(ВТ_Комплекты.КоличествоВКомплекте, ВТ_ТаблицаДокумента.КоличествоВКомплекте) КАК КоличествоВКомплекте,
	|	ВТ_ТаблицаДокумента.ДокументВыдачи КАК ДокументВыдачи
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Комплекты КАК ВТ_Комплекты
	|		ПО ВТ_ТаблицаДокумента.Комплект = ВТ_Комплекты.Комплект
	|			И ВТ_ТаблицаДокумента.Номенклатура = ВТ_Комплекты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДокумента.Комплект КАК Комплект
	|ИЗ
	|	ВТ_ТаблицаДокумента КАК ВТ_ТаблицаДокумента
	|ГДЕ
	|	ВТ_ТаблицаДокумента.Комплект <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ТаблицаДокумента", Объект.Товары.Выгрузить());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокумента	= Результат[2].Выгрузить();
	ТаблицаКомплектов	= Результат[3].Выгрузить();
	
	// запись данных в документ
	Если ТаблицаКомплектов.Количество() > 0 Тогда
		Объект.Товары.Загрузить(ТаблицаДокумента);
		Объект.СуммаДокумента 		= Объект.Товары.Итог("Сумма");
		ЭтаФорма.Модифицированность = Истина;
		//Сообщить("Количество в комплктах актуализировано.");
	Иначе
		Сообщить("Комплекты в таблице не найдены.");
	КонецЕсли;
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_49316