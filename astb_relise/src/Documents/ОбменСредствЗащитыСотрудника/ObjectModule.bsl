#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.ОбменСредствЗащитыСотрудника.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ЗапасыСерверПереопределяемый.ОтразитьОстаткиНоменклатуры(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСерверПереопределяемый.ОтразитьВыданныеСредстваЗащиты(ДополнительныеСвойства, Движения, Отказ);
	//ЗапасыСерверПереопределяемый.ОтразитьПерсональнуюПотребность(ДополнительныеСвойства, Движения, Отказ);
	СформироватьСписокРегистровДляКонтроля();
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;
	// Контроль выполняется при проведении\отмене проведения не нового документа.
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Массив.Добавить(Движения.ВыданныеСредстваЗащиты);
		//Массив.Добавить(Движения.ПерсональнаяПотребность);
		Если НЕ Склад.РазрешитьОтрицательныеОстатки Тогда
			Массив.Добавить(Движения.ОстаткиНоменклатуры);
		КонецЕсли;
	КонецЕсли;

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроведениеСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,Отказ,"Товары");
	
	ПроверитьСовпадающиеЗначения(Отказ);
	
КонецПроцедуры

Процедура ПроверитьСовпадающиеЗначения(Отказ)
	
	КлючДанных = ПроцедурыРаботыСНормамиСервер.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	ШаблонСообщения = НСтр("ru='Строка %НомерСтроки% таблицы ""%ТаблицаТовары%"" содержит совпадающие данные.'");
	
	МетаданныеОбъекта = ЭтотОбъект.Метаданные();
	
	ПредставлениеТЧ = МетаданныеОбъекта.ТабличныеЧасти["Товары"].Синоним;
		
	Для Каждого СтрокаТаблицы Из Товары Цикл
		
		Если (СтрокаТаблицы.НоменклатураДляВозврата = СтрокаТаблицы.НоменклатураДляВыдачи) 
			И (СтрокаТаблицы.ХарактеристикаНоменклатурыДляВозврата = СтрокаТаблицы.ХарактеристикаНоменклатурыДляВыдачи) Тогда
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ТаблицаТовары%", ПредставлениеТЧ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокаТаблицы.НомерСтроки);
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТаблицы.НомерСтроки, "НоменклатураДляВыдачи");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли