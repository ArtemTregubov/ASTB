////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект,НОВЫЙ Структура("ИмяЭлементаДляРазмещения","ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства
	
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));
	
	Объект.ВредныеИОпасныеПроизводственныеРаботы.Очистить();
	Объект.ВредныеИОпасныеПроизводственныеФакторы.Очистить();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВА"

// СтандартныеПодсистемы.Свойства
 &НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ...

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Документы.МедицинскийОсмотр.ЗаполнитьТаблицыДокумента(ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьНаСервере();
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ВредныеИОпасныеПроизводственныеРаботыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВредныеИОпасныеПроизводственныеФакторыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеНаМедицинскийОсмотрПриИзменении(Элемент)
	
	Объект.Сотрудник = ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка");
	
	//структура из направления
	ДанныеНаправления = ПолучитьДанныеНаправления(Объект.НаправлениеНаМедицинскийОсмотр);
	
	Объект.МедицинскаяОрганизация 	= ДанныеНаправления.МедицинскаяОрганизация;
	Объект.ВидМедосмотра 			= ДанныеНаправления.ВидМедосмотра;
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеНаправления(НаправлениеНаМедицинскийОсмотр)
	
	ДанныеНаправления = Новый Структура;
	ДанныеНаправления.Вставить("МедицинскаяОрганизация",?(ЗначениеЗаполнено(НаправлениеНаМедицинскийОсмотр),НаправлениеНаМедицинскийОсмотр.МедицинскаяОрганизация,Справочники.Контрагенты.ПустаяСсылка()));
	ДанныеНаправления.Вставить("ВидМедосмотра",			?(ЗначениеЗаполнено(НаправлениеНаМедицинскийОсмотр),НаправлениеНаМедицинскийОсмотр.ВидМедосмотра,Перечисления.ВидыМедосмотров.ПустаяСсылка()));
	
	Возврат ДанныеНаправления;
	
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьМассивСотрудниковИзНаправления(НаправлениеНаМедицинскийОсмотр)
	
	Если НЕ ЗначениеЗаполнено(НаправлениеНаМедицинскийОсмотр) Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ Различные
	|	НаправлениеНаМедицинскийОсмотрРаботники.Сотрудник КАК Сотрудник
	|ИЗ
	|	Документ.НаправлениеНаМедицинскийОсмотр.Работники КАК НаправлениеНаМедицинскийОсмотрРаботники
	|ГДЕ
	|	НаправлениеНаМедицинскийОсмотрРаботники.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",НаправлениеНаМедицинскийОсмотр);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
	
КонецФункции	

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	ЗаполнитьНаСервере();
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	Элементы.МедицинскаяОрганизация.Доступность = НЕ ЗначениеЗаполнено(Объект.НаправлениеНаМедицинскийОсмотр);
	Элементы.ВидМедосмотра.Доступность 			= НЕ ЗначениеЗаполнено(Объект.НаправлениеНаМедицинскийОсмотр);
	Элементы.Сотрудник.РежимВыбораИзСписка		= ЗначениеЗаполнено(Объект.НаправлениеНаМедицинскийОсмотр);
	
	Элементы.Сотрудник.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивСотрудниковИзНаправления(Объект.НаправлениеНаМедицинскийОсмотр));
	
	Если Объект.ВредныеИОпасныеПроизводственныеРаботы.Количество() + Объект.ВредныеИОпасныеПроизводственныеФакторы.Количество() = 0 Тогда
		Элементы.Противопоказания.Видимость = Истина;
	Иначе
		Элементы.Противопоказания.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбновитьЗаголовкиСтраниц()
	
	Элементы.Страницы.ПодчиненныеЭлементы.ГруппаВредныеИОпасныеПроизводственныеРаботы.Заголовок 	= "Вредные и (или) опасные производственные работы (" + Объект.ВредныеИОпасныеПроизводственныеРаботы.Количество() + ")";
	Элементы.Страницы.ПодчиненныеЭлементы.ГруппаВредныеИОпасныеПроизводственныеФакторы.Заголовок 	= "Вредные и (или) опасные производственные факторы (" + Объект.ВредныеИОпасныеПроизводственныеФакторы.Количество() + ")";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры