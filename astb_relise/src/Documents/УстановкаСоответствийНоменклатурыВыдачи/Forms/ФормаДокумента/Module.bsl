&НаСервере
Процедура ЗаполнитьТаблицуДокументаНаСервере(ВариантЗаполнения)
	
	Документы.УстановкаСоответствийНоменклатурыВыдачи.ЗаполнитьТаблицуДокумента(Объект,ВариантЗаполнения);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	ИзменитьФлажкиНаСервере(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	ИзменитьФлажкиНаСервере(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьФлажкиНаСервере(ЗначениеФлажка)
	
	Документ = РеквизитФормыВЗначение("Объект");
	
	ТаблицаДокумента = Документ.Соответствия.Выгрузить();
	ТаблицаДокумента.ЗаполнитьЗначения(ЗначениеФлажка, "Использовать");
	Документ.Соответствия.Загрузить(ТаблицаДокумента);
	
	ЗначениеВРеквизитФормы(Документ,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекущиеДанные = Элементы.Соответствия.ТекущиеДанные;
	                          
	Если Копирование Тогда
		Элемент.РежимВводаСтрок = РежимВводаСтрокТаблицы.ПослеТекущейСтроки;		
	Иначе
		Элемент.РежимВводаСтрок = РежимВводаСтрокТаблицы.ВКонецСписка;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Копирование Тогда
		Элемент.ТекущиеДанные.Приоритет = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоТекущемуСостоянию(Команда)
	
	ЗаполнитьТаблицуДокументаНаСервере("ПоБазе");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоНеЗаданным(Команда)
	
	ЗаполнитьТаблицуДокументаНаСервере("ПоПустым");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОтсутствующейНоменклатуреНаСервере(МассивПоставщиков)
	
	Документы.УстановкаСоответствийНоменклатурыВыдачи.ЗаполнитьПоОтсутствующейНоменклатуре(Объект,МассивПоставщиков);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОтсутствующейНоменклатуре(Команда)
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.Контрагенты.Форма.ФормаВыбора" Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			ЗаполнитьПоОтсутствующейНоменклатуреНаСервере(ВыбранноеЗначение);
			
		КонецЕсли;
		
	//+++АСТБ_Горюшин_Алексей_23718
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.НоменклатураНормОрганизации.Форма.ФормаВыбора" Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			ЗаполнитьПоНоменклатуреНормыНаСервере(ВыбранноеЗначение);
			
		КонецЕсли;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаВыбора" Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			ЗаполнитьПоНоменклатуреВыдачиНаСервере(ВыбранноеЗначение);
			
		КонецЕсли;	
	//---АСТБ_Горюшин_Алексей_23718
		
	КонецЕсли;
	
КонецПроцедуры

//+++АСТБ_Горюшин_Алексей_23718
&НаКлиенте
Процедура ЗаполнитьПоНоменклатуреНормы(Команда)
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормыВыбора.Вставить("Отбор",              Новый Структура("Владелец", Объект.Организация));
	
	ОткрытьФорму("Справочник.НоменклатураНормОрганизации.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_23718

//+++АСТБ_Горюшин_Алексей_23718
&НаСервере
Процедура ЗаполнитьПоНоменклатуреНормыНаСервере(СписокНоменклатурыНорм)
	
	Документы.УстановкаСоответствийНоменклатурыВыдачи.ЗаполнитьТаблицуДокумента(Объект,"ПоНоменклатуреНормы",СписокНоменклатурыНорм);
	
	Модифицированность = Истина;
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_23718

//+++АСТБ_Горюшин_Алексей_23718
&НаКлиенте
Процедура ЗаполнитьПоНоменклатуреВыдачи(Команда)
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры //---АСТБ_Горюшин_Алексей_23718

//+++АСТБ_Горюшин_Алексей_23718
&НаСервере
Процедура ЗаполнитьПоНоменклатуреВыдачиНаСервере(СписокНоменклатурыВыдачи)
	
	Документы.УстановкаСоответствийНоменклатурыВыдачи.ЗаполнитьТаблицуДокумента(Объект,"ПоНоменклатуреВыдачи",СписокНоменклатурыВыдачи);
	
	Модифицированность = Истина;
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_23718


//+++АСТБ_Горюшин_Алексей_23718
// На форму добавлены команды ЗаполнитьПоНоменклатуреНормы и ЗаполнитьПоНоменклатуреВыдачи
// и кнопки СоответствияЗаполнитьПоНоменклатуреНормы и СоответствияЗаполнитьПоНоменклатуреВыдачи
//---АСТБ_Горюшин_Алексей_23718

