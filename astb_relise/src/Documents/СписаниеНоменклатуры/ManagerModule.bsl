#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	//движения по регистру "Остатки номенклатуры"
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	СписаниеНоменклатурыТовары.Номенклатура КАК Номенклатура,
	|	СписаниеНоменклатурыТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СписаниеНоменклатурыТовары.Количество КАК Количество,
	|	СписаниеНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
	|	СписаниеНоменклатурыТовары.Ссылка.Склад КАК Склад,
	|	&ОрганизацияДляОстатков КАК Организация,
	|	СписаниеНоменклатурыТовары.Ссылка.Дата КАК Период,
	|	СписаниеНоменклатурыТовары.ПроцентИзноса КАК ПроцентИзноса
	|ИЗ
	|	Документ.СписаниеНоменклатуры.Товары КАК СписаниеНоменклатурыТовары
	|ГДЕ
	|	СписаниеНоменклатурыТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"),Справочники.Организации.ПустаяСсылка(),ДокументСсылка.Организация));
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	ТаблицыДляДвижений.Вставить("ТаблицаОстаткиНоменклатуры", Результат);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Списание") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"Списание",
			"Списание номенклатуры",
			СформироватьПечатнуюФормуСписание(МассивОбъектов, ОбъектыПечати),,"Документ.СписаниеНоменклатуры.ПФ_MXL_СписаниеНоменклатуры");
				
	КонецЕсли;		
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписаниеСИзносом") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"СписаниеСИзносом",
			"Списание номенклатуры (с % износа)",
			СформироватьПечатнуюФормуСписаниеСИзносом(МассивОбъектов, ОбъектыПечати),,"Документ.СписаниеНоменклатуры.ПФ_MXL_СписаниеНоменклатурыСИзносом");
				
	КонецЕсли;
		
КонецПроцедуры

Функция СформироватьПечатнуюФормуСписание(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеНоменклатуры_СписаниеНоменклатуры";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.Склад.Наименование КАК ПредставлениеСклада,
	|	Документы.Организация.Префикс КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕ(Документы.ДокументОснование) КАК ПредставлениеОснования
	|ИЗ
	|	Документ.СписаниеНоменклатуры КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Количество КАК Количество,
	|	Товары.Цена КАК Цена,
	|	Товары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.Наименование
	|		ИНАЧЕ Товары.Номенклатура.Наименование + "" ("" + Товары.ХарактеристикаНоменклатуры.Наименование + "")""
	|	КОНЕЦ КАК НаименованиеТовара,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА Товары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА Товары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.НомерСтроки
	|ИЗ
	|	Документ.СписаниеНоменклатуры.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|		ПО Товары.Ссылка.Организация = НоменклатурныеНомераОрганизаций.Организация
	|			И Товары.Номенклатура = НоменклатурныеНомераОрганизаций.Номенклатура
	|			И Товары.ХарактеристикаНоменклатуры = НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Товары.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеНоменклатуры.ПФ_MXL_СписаниеНоменклатуры");
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
			
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(ДанныеПечати);
		
		Область.Параметры.ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата, Префикс", ДанныеПечати.Номер, ДанныеПечати.Дата, ДанныеПечати.Префикс), "Списание номенклатуры");
		ТабличныйДокумент.Вывести(Область);
			
		СчетСтрок = 1;
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
			Область.Параметры.Заполнить(ВыборкаПоТоварам);
			ТабличныйДокумент.Вывести(Область);
			
			СчетСтрок = СчетСтрок + 1;
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
		Область.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуСписаниеСИзносом(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеНоменклатуры_СписаниеНоменклатурыСИзносом";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.Склад.Наименование КАК ПредставлениеСклада,
	|	Документы.Организация.Префикс КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕ(Документы.ДокументОснование) КАК ПредставлениеОснования
	|ИЗ
	|	Документ.СписаниеНоменклатуры КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Количество КАК Количество,
	|	Товары.Цена КАК Цена,
	|	Товары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.Наименование
	|		ИНАЧЕ Товары.Номенклатура.Наименование + "" ("" + Товары.ХарактеристикаНоменклатуры.Наименование + "")""
	|	КОНЕЦ КАК НаименованиеТовара,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА Товары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА Товары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.ПроцентИзноса КАК ПроцентИзноса
	|ИЗ
	|	Документ.СписаниеНоменклатуры.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|		ПО Товары.Ссылка.Организация = НоменклатурныеНомераОрганизаций.Организация
	|			И Товары.Номенклатура = НоменклатурныеНомераОрганизаций.Номенклатура
	|			И Товары.ХарактеристикаНоменклатуры = НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Товары.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеНоменклатуры.ПФ_MXL_СписаниеНоменклатурыСИзносом");
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
			
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(ДанныеПечати);
		
		Область.Параметры.ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата, Префикс", ДанныеПечати.Номер, ДанныеПечати.Дата, ДанныеПечати.Префикс), "Списание номенклатуры");
		ТабличныйДокумент.Вывести(Область);
			
		СчетСтрок = 1;
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
			Область.Параметры.Заполнить(ВыборкаПоТоварам);
			ТабличныйДокумент.Вывести(Область);
			
			СчетСтрок = СчетСтрок + 1;
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
		Область.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//списание
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.СписаниеНоменклатуры";
	КомандаПечати.Идентификатор = "Списание";
	КомандаПечати.Представление = НСтр("ru = 'Списание номенклатуры'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//списание с учетом % износа
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.СписаниеНоменклатуры";
	КомандаПечати.Идентификатор = "СписаниеСИзносом";
	КомандаПечати.Представление = НСтр("ru = 'Списание номенклатуры (с % износа)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ИспользоватьПроцентИзноса";
	КомандаПечати.СписокФорм =   		"ФормаДокумента";
	
КонецПроцедуры

Процедура ЗаполнитьДокумент(ТекущийОбъект,Основание) Экспорт
	
	Если ЗначениеЗаполнено(Основание) Тогда
		
		ТекущийОбъект.Организация 		= Основание.Организация;
		ТекущийОбъект.Склад 			= Основание.Склад;
		ТекущийОбъект.ДокументОснование = Основание;
		
		Запрос = НОВЫЙ Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ИнвентаризацияНоменклатурыТовары.Номенклатура КАК Номенклатура,
		|	ИнвентаризацияНоменклатурыТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	СУММА(ВЫБОР
		|			КОГДА ИнвентаризацияНоменклатурыТовары.ПроцентИзноса = ИнвентаризацияНоменклатурыТовары.ПроцентИзносаПоУчету
		|				ТОГДА ИнвентаризацияНоменклатурыТовары.КоличествоПоУчету - ИнвентаризацияНоменклатурыТовары.Количество
		|			ИНАЧЕ ИнвентаризацияНоменклатурыТовары.КоличествоПоУчету
		|		КОНЕЦ) КАК Количество,
		|	ИнвентаризацияНоменклатурыТовары.Цена КАК Цена,
		|	СУММА(ВЫБОР
		|			КОГДА ИнвентаризацияНоменклатурыТовары.ПроцентИзносаПоУчету = ЗНАЧЕНИЕ(Справочник.ПроцентыИзноса.ПустаяСсылка)
		|				ТОГДА ИнвентаризацияНоменклатурыТовары.Цена * (ИнвентаризацияНоменклатурыТовары.КоличествоПоУчету - ИнвентаризацияНоменклатурыТовары.Количество)
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Сумма,
		|	ИнвентаризацияНоменклатурыТовары.ПроцентИзносаПоУчету КАК ПроцентИзноса
		|ИЗ
		|	Документ.ИнвентаризацияНоменклатуры.Товары КАК ИнвентаризацияНоменклатурыТовары
		|ГДЕ
		|	ИнвентаризацияНоменклатурыТовары.Ссылка = &Ссылка
		|	И (ИнвентаризацияНоменклатурыТовары.КоличествоПоУчету - ИнвентаризацияНоменклатурыТовары.Количество > 0
		|			ИЛИ НЕ ИнвентаризацияНоменклатурыТовары.ПроцентИзноса = ИнвентаризацияНоменклатурыТовары.ПроцентИзносаПоУчету)
		|
		|СГРУППИРОВАТЬ ПО
		|	ИнвентаризацияНоменклатурыТовары.Номенклатура,
		|	ИнвентаризацияНоменклатурыТовары.ХарактеристикаНоменклатуры,
		|	ИнвентаризацияНоменклатурыТовары.Цена,
		|	ИнвентаризацияНоменклатурыТовары.ПроцентИзносаПоУчету";
		
		Запрос.УстановитьПараметр("Ссылка",Основание);
		
		ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
		
		ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
		
	Иначе
		
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = НОВЫЙ Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК Количество,
		|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК Цена,
		|	СУММА(ВЫБОР
		|			КОГДА ОстаткиНоменклатурыОстатки.ПроцентИзноса = ЗНАЧЕНИЕ(Справочник.ПроцентыИзноса.ПустаяСсылка)
		|				ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * ОстаткиНоменклатурыОстатки.КоличествоОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Сумма,
		|	ОстаткиНоменклатурыОстатки.ПроцентИзноса КАК ПроцентИзноса
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&ПериодРасчета,
		|			Организация = &ОрганизацияДляОстатков
		|				И Склад = &Склад) КАК ОстаткиНоменклатурыОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|			МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
		|			ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик
		|		ИЗ
		|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ПериодРасчета, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|			ЦеныНоменклатурыСрезПоследних.Поставщик) КАК ЦеныНоменклатуры
		|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И ОстаткиНоменклатурыОстатки.Номенклатура.Поставщик = ЦеныНоменклатуры.Поставщик
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиНоменклатурыОстатки.Номенклатура,
		|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры,
		|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0),
		|	ОстаткиНоменклатурыОстатки.ПроцентИзноса";
		
		Запрос.УстановитьПараметр("ПериодРасчета",	ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка));
		Запрос.УстановитьПараметр("ОрганизацияДляОстатков",	?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"),Справочники.Организации.ПустаяСсылка(),ТекущийОбъект.Организация));
		Запрос.УстановитьПараметр("Организация",	ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("Склад",			ТекущийОбъект.Склад);
		
		ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
		
		ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой ЗапретРедактированияРеквизитовОбъектов.

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//     Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//              где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы, связанного с
//              реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
    Результат.Добавить("ВходящийНомер");
    Возврат Результат;
	
КонецФункции

#КонецЕсли