&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда 
		
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ВыдачаСредствЗащитыСотруднику") Тогда //проверяем вид операции
			
			Отказ = Ложь;
			
			Если Объект.ДокументОснование.ВидОперации = Перечисления.ВидыОперацийВыдачиСИЗ.ПредварительнаяЗаявка Тогда
				Отказ = Истина;
				Сообщить("Допускается ввод на основании документа с видом операции <<Фактическая выдача>>.");
			КонецЕсли;
			
			Если НЕ Объект.ДокументОснование.ВидВыдачиСИЗ = Перечисления.ВидыВыдачиСИЗ.ПроизвольнаяВыдача Тогда
				Отказ = Истина;
				Сообщить("Допускается ввод на основании документа с произвольным видом выдачи.");
			КонецЕсли;
			
			Если Отказ Тогда
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
	// СтандартныеПодсистемы.Печать
    УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.Печать
	
	// ПодключаемоеОборудование
	ПроцедурыРаботыСНормамиСервер.НастроитьПодключаемоеОборудование(ЭтаФорма);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СотрудникИЛИПодразделение = ?(ЗначениеЗаполнено(Объект.Сотрудник),Объект.Сотрудник,Объект.Подразделение);
	
	УстановитьВидимостьЭлементов();
	
	// ПодключаемоеОборудование
	Если ИспользоватьПодключаемоеОборудование Тогда
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
		ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);    
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(ОповещенияПриПодключении, УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При подключении оборудования произошла ошибка:
				|""%ОписаниеОшибки%"".'" );
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоВыданнымСИЗ(Команда)
	
	ЗаполнитьТаблицуДокументаНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДокументаНаСервере()
	
	Документы.УстановкаШтрихкодовНоменклатуры.ЗаполнитьТаблицуДокумента(Объект,Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПустыеШтрихкодыНаСервере()
	
	Документы.УстановкаШтрихкодовНоменклатуры.ЗаполнитьПустыеШтрихкоды(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПустыеШтрихкоды(Команда)
	
	ЗаполнитьПустыеШтрихкодыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидВыдачиПриИзменении(Элемент)
	
	Объект.ШтрихкодыНоменклатуры.Очистить();
	
	СотрудникИЛИПодразделение = ?(ЗначениеЗаполнено(Объект.Сотрудник),Объект.Сотрудник,Объект.Подразделение);
	
	Если Объект.ВидВыдачиСИЗ = ПредопределенноеЗначение("Перечисление.ВидыВыдачиСИЗ.ПерсональнаяВыдача") Тогда
		Объект.МВЗ = ПредопределенноеЗначение("Справочник.МВЗ.ПустаяСсылка");
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементов()

	ЭтаФорма.Элементы.Сотрудник.Видимость 					= Объект.ВидВыдачиСИЗ = ПредопределенноеЗначение("Перечисление.ВидыВыдачиСИЗ.ПерсональнаяВыдача");
	ЭтаФорма.Элементы.МВЗ.Видимость 						= НЕ Объект.ВидВыдачиСИЗ = ПредопределенноеЗначение("Перечисление.ВидыВыдачиСИЗ.ПерсональнаяВыдача");
	ЭтаФорма.Элементы.СотрудникИЛИПодразделение.Видимость 	= НЕ Объект.ВидВыдачиСИЗ = ПредопределенноеЗначение("Перечисление.ВидыВыдачиСИЗ.ПерсональнаяВыдача");
	ЭтаФорма.Элементы.ГруппаОснование.Видимость				= ЗначениеЗаполнено(Объект.ДокументОснование);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()

	Если ЗначениеЗаполнено(Объект.Ссылка) ТОгда
		
		БлокироватьШапкуДокумента = Ложь;
		
		Если НЕ Объект.ШтрихкодыНоменклатуры.Количество() = 0 Тогда
		    //сравниваем максимальное значение штрихкода со штрикодами в документе
			МаксимальныйШтрихкод = Объект.Организация.МаксимальноеЗначениеШтрихкода;
			Для Каждого СтрокаТаблицы Из Объект.ШтрихкодыНоменклатуры Цикл
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Штрихкод) Тогда
					Продолжить;
				КонецЕсли;
			    ТекущийШтрихкод = Сред(СтрокаТаблицы.Штрихкод,6,7);
				ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
				ЗначениеКодаЧислом = ОписаниеТипаЧисла.ПривестиЗначение(ТекущийШтрихкод);
				Если ЗначениеКодаЧислом <= МаксимальныйШтрихкод Тогда
					БлокироватьШапкуДокумента = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ЭтаФорма.Элементы.Дата.Доступность						= НЕ БлокироватьШапкуДокумента;
		ЭтаФорма.Элементы.ВидВыдачи.Доступность 				= НЕ БлокироватьШапкуДокумента;
		ЭтаФорма.Элементы.МВЗ.Доступность 						= НЕ БлокироватьШапкуДокумента;
		ЭтаФорма.Элементы.Организация.Доступность 				= НЕ БлокироватьШапкуДокумента;
		ЭтаФорма.Элементы.Сотрудник.Доступность 				= НЕ БлокироватьШапкуДокумента;
		ЭтаФорма.Элементы.СотрудникИЛИПодразделение.Доступность = НЕ БлокироватьШапкуДокумента;
		ЭтаФорма.Элементы.ЗаполнитьПоОснованию.Доступность		= НЕ БлокироватьШапкуДокумента;
		
		ЭтаФорма.Элементы.ШтрихкодыНоменклатурыКоманднаяПанель.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнить.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнитьПоВыданнымСИЗ.Доступность = НЕ БлокироватьШапкуДокумента;
		ЭтаФорма.Элементы.ШтрихкодыНоменклатурыКоманднаяПанель.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнить.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнитьПоВыданнымСИЗПоСрокуНоски.Доступность = НЕ БлокироватьШапкуДокумента;
		
	Иначе
		
		ЭтаФорма.Элементы.Дата.Доступность						= Истина;
		ЭтаФорма.Элементы.ВидВыдачи.Доступность 				= Истина;
		ЭтаФорма.Элементы.МВЗ.Доступность 						= Истина;
		ЭтаФорма.Элементы.Организация.Доступность 				= Истина;
		ЭтаФорма.Элементы.Сотрудник.Доступность 				= Истина;
		ЭтаФорма.Элементы.СотрудникИЛИПодразделение.Доступность = Истина;
		ЭтаФорма.Элементы.ЗаполнитьПоОснованию.Доступность		= Истина;
		
		ЭтаФорма.Элементы.ШтрихкодыНоменклатурыКоманднаяПанель.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнить.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнитьПоВыданнымСИЗ.Доступность = Истина;
		ЭтаФорма.Элементы.ШтрихкодыНоменклатурыКоманднаяПанель.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнить.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнитьПоВыданнымСИЗПоСрокуНоски.Доступность = Истина;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		ЭтаФорма.Элементы.ВидВыдачи.Доступность 	= Ложь;
		ЭтаФорма.Элементы.Организация.Доступность 	= Ложь;
		ЭтаФорма.Элементы.ШтрихкодыНоменклатурыКоманднаяПанель.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнить.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнитьПоВыданнымСИЗ.Доступность = Ложь;
		ЭтаФорма.Элементы.ШтрихкодыНоменклатурыКоманднаяПанель.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнить.ПодчиненныеЭлементы.ШтрихкодыНоменклатурыЗаполнитьПоВыданнымСИЗПоСрокуНоски.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникИЛИПодразделениеПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Объект.ШтрихкодыНоменклатуры.Очистить();
	КонецЕсли;
	
	Объект.Сотрудник 		= СотрудникИЛИПодразделение;
	Объект.Подразделение 	= СотрудникИЛИПодразделение;
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Объект.ШтрихкодыНоменклатуры.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Объект.ШтрихкодыНоменклатуры.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура МВЗПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Объект.ШтрихкодыНоменклатуры.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТекущийОбъект.Проведен Тогда //нужно записать максимальное значение штрихкода
		
		МаксимальныйШтрихкодПоДокументу = ПроцедурыРаботыСНормамиСервер.ПолучитьМаксимальныйШтрихкодДокументаЧислом(ТекущийОбъект.Ссылка);
		
		Если МаксимальныйШтрихкодПоДокументу > Объект.Организация.МаксимальноеЗначениеШтрихкода Тогда
			ОрганизацияОбъект = Объект.Организация.ПолучитьОбъект();
			ОрганизацияОбъект.МаксимальноеЗначениеШтрихкода = МаксимальныйШтрихкодПоДокументу;
			ОрганизацияОбъект.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыНоменклатурыДатаВыдачиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НачалоДня(ТекущаяДата()) < НачалоДня(ТекущиеДанные.ДатаВыдачи) Тогда
		ТекущиеДанные.ДатаВыдачи = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыНоменклатурыПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Штрихкод) Тогда
		ТекущийШтрихкод = Сред(ТекущиеДанные.Штрихкод,6,7);
		ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
		ЗначениеКодаЧислом = ОписаниеТипаЧисла.ПривестиЗначение(ТекущийШтрихкод);
		Если ЗначениеКодаЧислом <= ПолучитьМаксимальноеЗначениеШтрихкодаОрганизации(Объект.Организация) Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМаксимальноеЗначениеШтрихкодаОрганизации(ТекущаяОрганизация)
	
	Возврат ТекущаяОрганизация.МаксимальноеЗначениеШтрихкода;
	
КонецФункции

&НаКлиенте
Процедура ШтрихкодыНоменклатурыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Копирование Тогда
		Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные.Штрихкод = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыНоменклатурыПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Штрихкод) Тогда
		ТекущийШтрихкод = Сред(ТекущиеДанные.Штрихкод,6,7);
		ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
		ЗначениеКодаЧислом = ОписаниеТипаЧисла.ПривестиЗначение(ТекущийШтрихкод);
		Если ЗначениеКодаЧислом <= ПолучитьМаксимальноеЗначениеШтрихкодаОрганизации(Объект.Организация) Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОснованиюНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Документы.УстановкаШтрихкодовНоменклатуры.ЗаполнитьДокумент(Объект.ДокументОснование,ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОснованию(Команда)
	
	ЗаполнитьПоОснованиюНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоВыданнымСИЗПоСрокуНоскиНаСервере()
	
	Документы.УстановкаШтрихкодовНоменклатуры.ЗаполнитьТаблицуДокумента(Объект,Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоВыданнымСИЗПоСрокуНоски(Команда)
	
	ЗаполнитьПоВыданнымСИЗПоСрокуНоскиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			ОбработатьШтрихкоды(ПроцедурыРаботыСНормамиКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр));
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкоды(ДанныеШтрихкодов)
	
	//ОбработатьШтрихкодыСервер(Новый Структура("Штрихкоды",ДанныеШтрихкодов));
	
	ТекущиеДанные = ЭтаФорма.Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Штрихкод = ДанныеШтрихкодов[0].Штрихкод;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "ПЕЧАТЬ"

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
  	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
  
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать
