&НаКлиенте
Перем ТипЗаполнения;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект,НОВЫЙ Структура("ИмяЭлементаДляРазмещения","ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства
	
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВА"

// СтандартныеПодсистемы.Свойства
 &НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ...

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура РабочиеМестаПриИзменении(Элемент)
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ВредныеИОпасныеПроизводственныеФакторыПриИзменении(Элемент)
	
	ЗаполнитьДокументПоФакторамИРаботам();
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ВредныеИОпасныеПроизводственныеРаботыПриИзменении(Элемент)
	
	ЗаполнитьДокументПоФакторамИРаботам();
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументПоФакторамИРаботам()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.СпециальнаяОценкаРабочихМест.ЗаполнитьДокументПоВреднымИОпаснымФакторамИРаботам(ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбновитьЗаголовкиСтраниц()
	
	Элементы.Страницы.ПодчиненныеЭлементы.ГруппаРабочиеМеста.Заголовок 								= "Рабочие места (" + Объект.РабочиеМеста.Количество() + ")";
	Элементы.Страницы.ПодчиненныеЭлементы.ГруппаВрачи.Заголовок 									= "Врачи (" + Объект.Врачи.Количество() + ")";
	Элементы.Страницы.ПодчиненныеЭлементы.ГруппаВредныеИОпасныеПроизводственныеРаботы.Заголовок 	= "Вредные и (или) опасные производственные работы (" + Объект.ВредныеИОпасныеПроизводственныеРаботы.Количество() + ")";
	Элементы.Страницы.ПодчиненныеЭлементы.ГруппаВредныеИОпасныеПроизводственныеФакторы.Заголовок 	= "Вредные и (или) опасные производственные факторы (" + Объект.ВредныеИОпасныеПроизводственныеФакторы.Количество() + ")";
	Элементы.Страницы.ПодчиненныеЭлементы.ГруппаДополнительныеМедицинскиеПротивопоказания.Заголовок = "Дополнительные медицинские противопоказания (" + Объект.ДополнительныеМедицинскиеПротивопоказания.Количество() + ")";
	Элементы.Страницы.ПодчиненныеЭлементы.ГруппаЛабораторныеИФункциональныеИсследования.Заголовок 	= "Лабораторные и функциональные исследования (" + Объект.ЛабораторныеИФункциональныеИсследования.Количество() + ")";
	
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПодразделениямСогласноШтатномуРасписанию(Команда)
	
	ТипЗаполнения = "ПШР";
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормыВыбора.Вставить("Отбор",              Новый Структура("Владелец", Объект.Организация));
	
	ОткрытьФорму("Справочник.Подразделения.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПодразделениямСогласноЗанятымРабочимМестам(Команда)
	
	ТипЗаполнения = "ПЗРМ";
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормыВыбора.Вставить("Отбор",              Новый Структура("Владелец", Объект.Организация));
	
	ОткрытьФорму("Справочник.Подразделения.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоДолжностямСогласноШтатномуРасписанию(Команда)
	
	ТипЗаполнения = "ДШР";
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	
	ОткрытьФорму("Справочник.ДолжностиИПрофессии.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоДолжностямСогласноЗанятымРабочимМестам(Команда)
	
	ТипЗаполнения = "ДЗРМ";
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	
	ОткрытьФорму("Справочник.ДолжностиИПрофессии.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРабочимМестамСогласноЗанятым(Команда)
	
	ТипЗаполнения = "РМЗРМ";
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормыВыбора.Вставить("Отбор",              Новый Структура("Владелец", Объект.Организация));
	
	ОткрытьФорму("Справочник.РабочиеМестаАСТБ.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.РабочиеМестаАСТБ.Форма.ФормаВыбора" Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			ЗаполнитьРабочиеМестаДокумента(ВыбранноеЗначение,ТипЗаполнения);
			
		КонецЕсли;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.Подразделения.Форма.ФормаВыбора" Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			ЗаполнитьРабочиеМестаДокумента(ВыбранноеЗначение,ТипЗаполнения);
			
		КонецЕсли;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.ДолжностиИПрофессии.Форма.ФормаВыбора" Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			
			ЗаполнитьРабочиеМестаДокумента(ВыбранноеЗначение,ТипЗаполнения);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;

	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРабочиеМестаДокумента(ВыбранноеЗначение,ТипЗаполнения)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");	
	
	Документы.СпециальнаяОценкаРабочихМест.ЗаполнитьРабочиеМеста(ТекущийОбъект,ВыбранноеЗначение,ТипЗаполнения);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры