////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект,НОВЫЙ Структура("ИмяЭлементаДляРазмещения","ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	ВозвратСИЗ = Документы.СписаниеСредствЗащитыСотрудника.ПолучитьВозвратСИЗ(Объект.ДокументОснование,Объект.Ссылка);
	
	Если ЗначениеЗаполнено(ВозвратСИЗ) И НЕ ЗначениеЗаполнено(Объект.Ссылка)  Тогда
		
		Сообщить("На основании данного документа уже введен документ возврата!");
		Отказ = Истина;
		
	КонецЕсли;
	
	ЭтаФорма.Элементы.МОЛ.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьМассивМОЛСклада(Объект.Склад,Объект.Организация));
	
	//***НСК Трегубов А.А.*** -- Адресное хранение --  03.09.2019 <<<
	АХ_ПриСозданииНаСервере(Отказ,СтандартнаяОбработка);
	//***НСК Трегубов А.А.*** -- Адресное хранение --  03.09.2019 >>>
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	//***НСК Трегубов А.А.*** -- Адресное хранение --  03.09.2019 <<<
	АХ_ПослеЗаписиНаСервере(ТекущийОбъект,ПараметрыЗаписи);	
	//***НСК Трегубов А.А.*** -- Адресное хранение --  03.09.2019 >>>
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыКоличество" Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ПроцентИзноса) Тогда
			Элемент.ТекущиеДанные.Сумма = 0;
		Иначе
			Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
		КонецЕсли;
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТоварыНоменклатура" Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура) Тогда
			Элемент.ТекущиеДанные.Цена = ПолучитьЦенуСервер(Элемент.ТекущиеДанные.Номенклатура);
			Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ПроцентИзноса) Тогда
				Элемент.ТекущиеДанные.Сумма = 0;
			Иначе
				Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТоварыПроцентИзноса" Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ПроцентИзноса) Тогда
			Элемент.ТекущиеДанные.Сумма = 0;
		Иначе
			Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
		КонецЕсли;
	КонецЕсли;
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВА"

// СтандартныеПодсистемы.Свойства
 &НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "ПЕЧАТЬ"

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
  УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
  
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ...

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Функция ПолучитьЦенуСервер(Номенклатура)
	Цена = ЦенообразованиеСерверПереопределяемый.ПолучитьЦену(Номенклатура,Объект.Организация,Объект.Дата);
	Возврат Цена;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПоДокументуОснованию(Команда)
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Документы.ВозвратСредствЗащитыОтСотрудника.ЗаполнитьПоОснованию(Объект.ДокументОснование,Объект);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	//АСТБ_ALEXEY_70409**************************************************************
	//Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация);
	Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация,Объект.СоздательДокумента);
	//АСТБ_ALEXEY_70409**************************************************************
	Элементы.МОЛ.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьМассивМОЛСклада(Объект.Склад,Объект.Организация));
	
КонецПроцедуры

#Область АдресноеХранение

&НаСервере
Процедура АХ_ПриСозданииНаСервере(Отказ,СтандартнаяОбработка)	
	АХ_УстановитьВидимостьИДоступность();	
КонецПроцедуры

&НаСервере
Процедура АХ_ПослеЗаписиНаСервере(ТекущийОбъект,ПараметрыЗаписи)	
	АХ_УстановитьВидимостьИДоступность();	
КонецПроцедуры

&НаКлиенте
Процедура АХ_ПередатьНаСклад(Команда)
	
	МассивДанных = Новый Массив;
	МассивДанных.Добавить(Объект.Ссылка);	
	
	СтруктураОбработкиОшибок = АХ_ОбменКлиент.ИнициализироватьСтруктуруОбработкиОшибок();
	АХ_ОбменКлиент.ПередатьДанныеВАдресноеХранение(МассивДанных,ЭтотОбъект.Модифицированность,СтруктураОбработкиОшибок);	
	
	АХ_УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаСервере
Процедура АХ_УстановитьВидимостьИДоступность()
	
	СтруктураСвойствОформления = АХ_ОбменВызовСервера.МожноСформироватьПоступление(Объект);
	
	Для Каждого Свойство из СтруктураСвойствОформления Цикл
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"АХ_ПередатьНаСклад",
		Свойство.Ключ,	
		Свойство.Значение);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти