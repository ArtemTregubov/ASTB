#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка.Дата КАК Период,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка.Организация КАК Организация,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка.Склад КАК Склад,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка.ТочкаХраненияОтправитель КАК ТочкаХранения,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка.Сотрудник КАК Сотрудник,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ПеремещениеСредствЗащитыНаХранении.Товары КАК ПеремещениеСредствЗащитыНаХраненииТовары
	|ГДЕ
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка.Дата,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка.Организация,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка.СкладПолучатель,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка.ТочкаХраненияПолучатель,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка.Сотрудник,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.НомерСтроки,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Номенклатура,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.ХарактеристикаНоменклатуры,
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Количество
	|ИЗ
	|	Документ.ПеремещениеСредствЗащитыНаХранении.Товары КАК ПеремещениеСредствЗащитыНаХраненииТовары
	|ГДЕ
	|	ПеремещениеСредствЗащитыНаХраненииТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	ТаблицыДляДвижений.Вставить("ТаблицаСредстваЗащитыНаХранении", Результат);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"Накладная",
			"Накладная",
			СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати),,"Документ.ПеремещениеСредствЗащитыНаХранении.ПФ_MXL_Накладная");
				
	КонецЕсли;
		
КонецПроцедуры

Функция СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеСредствЗащитыНаХранении_ПФ_MXL_Накладная";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.СкладПолучатель.Наименование КАК ПредставлениеСкладаПолучателя,
	|	Документы.МОЛПолучателя.Наименование КАК ПредставлениеМОЛПолучателя,
	|	Документы.Склад.Наименование КАК ПредставлениеСклада,
	|	Документы.МОЛ.Наименование КАК ПредставлениеМОЛ,
	|	Документы.Организация.Префикс КАК Префикс,
	|	Документы.ТочкаХраненияОтправитель.Наименование КАК ПредставлениеТочкиХраненияОтправителя,
	|	Документы.ТочкаХраненияПолучатель.Наименование КАК ПредставлениеТочкиХраненияПолучателя
	|ИЗ
	|	Документ.ПеремещениеСредствЗащитыНаХранении КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.Цена КАК Цена,
	|	СУММА(Товары.Сумма) КАК Сумма,
	|	ВЫБОР
	|		КОГДА Товары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.Наименование
	|		ИНАЧЕ Товары.Номенклатура.Наименование + "" ("" + Товары.ХарактеристикаНоменклатуры.Наименование + "")""
	|	КОНЕЦ КАК НаименованиеТовара,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА Товары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА Товары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование
	|ИЗ
	|	Документ.ПеремещениеСредствЗащитыНаХранении.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|		ПО Товары.Ссылка.Организация = НоменклатурныеНомераОрганизаций.Организация
	|			И Товары.Номенклатура = НоменклатурныеНомераОрганизаций.Номенклатура
	|			И Товары.ХарактеристикаНоменклатуры = НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры
	|ГДЕ
	|	Товары.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.Цена,
	|	ВЫБОР
	|		КОГДА Товары.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.Наименование
	|		ИНАЧЕ Товары.Номенклатура.Наименование + "" ("" + Товары.ХарактеристикаНоменклатуры.Наименование + "")""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА Товары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА Товары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА Товары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """")
	|								ИНАЧЕ """"
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеСредствЗащитыНаХранении.ПФ_MXL_Накладная");
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
			
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(ДанныеПечати);
		
		Область.Параметры.ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(Новый Структура("Номер, Дата, Префикс", ДанныеПечати.Номер, ДанныеПечати.Дата, ДанныеПечати.Префикс), "Накладная");
		Область.Параметры.ПредставлениеОтправителя 	= "Склад: " + ДанныеПечати.ПредставлениеСклада 				+ " МОЛ: " + ДанныеПечати.ПредставлениеМОЛ 				+ " точка хранения: " + ДанныеПечати.ПредставлениеТочкиХраненияОтправителя;
		Область.Параметры.ПредставлениеПолучателя 	= "Склад: " + ДанныеПечати.ПредставлениеСкладаПолучателя 	+ " МОЛ: " + ДанныеПечати.ПредставлениеМОЛПолучателя 	+ " точка хранения: " + ДанныеПечати.ПредставлениеТочкиХраненияПолучателя;
		
		ТабличныйДокумент.Вывести(Область);
			
		СчетСтрок = 1;
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
			Область.Параметры.Заполнить(ВыборкаПоТоварам);
			Область.Параметры.НомерСтроки = СчетСтрок;
			ТабличныйДокумент.Вывести(Область);
			
			СчетСтрок = СчетСтрок + 1;
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований передано на хранение: %ВсегоНаименований%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", СчетСтрок-1);
		Область.Параметры.ИтоговаяСтрока 	= ТекстИтоговойСтроки;
		Область.Параметры.ФИОПолучателя 	= ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставлениеМОЛПолучателя);
		Область.Параметры.ФИООтправителя 	= ФизическиеЛица.ФамилияИнициалыФизЛица(ДанныеПечати.ПредставлениеМОЛ);
		ТабличныйДокумент.Вывести(Область);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//Накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ПеремещениеСредствЗащитыНаХранении";
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru = 'Накладная'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

//Процедура заполняет табличную часть документа-объекта в зависимости от вида заполнения
//Параметры:
//ТекущийОбъект - документ-объект, который заполняется
//ВидЗаполнения - может прнимать значения: "ПоПодразделению" или "ПоСпискуСотрудников".
//ЗначениеПараметраЗаполнения - значение, по которому заполняется документ-объект типа "Сотрудники" или "Подразделения"
//
Процедура ЗаполнитьТаблицуДокумента(ТекущийОбъект,ВидЗаполнения,ЗначениеПараметраЗаполнения = НЕОПРЕДЕЛЕНО) Экспорт
	
	ТекущийОбъект.Товары.Очистить();
	
	ДатаАнализа = ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка);
	
	//Если ВидЗаполнения = "ПоПодразделениям" Тогда
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	ЗанятыеРабочиеМестаОстатки.Сотрудник
	//	|ИЗ
	//	|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
	//	|			&ПериодАнализа,
	//	|			Организация = &Организация
	//	|				И Подразделение В (&СписокПодразделений)) КАК ЗанятыеРабочиеМестаОстатки
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	ЗанятыеРабочиеМестаОстатки.Сотрудник.Наименование";
	//	
	//	Запрос.УстановитьПараметр("ПериодАнализа",		ДатаАнализа);
	//	Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
	//	Запрос.УстановитьПараметр("СписокПодразделений",ЗначениеПараметраЗаполнения);
	//	
	//	МассивСотрудников = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
	//	
	//ИначеЕсли ВидЗаполнения = "ПоСпискуСотрудников" Тогда
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст =
	//	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	Сотрудники.Ссылка КАК Сотрудник
	//	|ИЗ
	//	|	Справочник.Сотрудники КАК Сотрудники
	//	|ГДЕ
	//	|	Сотрудники.Ссылка В(&СписокСотрудников)
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	Сотрудники.Наименование";
	//
	//	Запрос.УстановитьПараметр("СписокСотрудников",	ЗначениеПараметраЗаполнения);
	//	
	//	МассивСотрудников = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
	//	
	//Иначе
	//	
	//	Возврат;
	//	
	//КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СредстваЗащитыНаХраненииОстатки.Сотрудник КАК Сотрудник,
	|	СредстваЗащитыНаХраненииОстатки.Номенклатура КАК Номенклатура,
	|	СредстваЗащитыНаХраненииОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СредстваЗащитыНаХраненииОстатки.КоличествоОстаток КАК Количество,
	|	ЕСТЬNULL(ВложенныйЗапрос.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(ВложенныйЗапрос.Цена, 0) * СредстваЗащитыНаХраненииОстатки.КоличествоОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.СредстваЗащитыНаХранении.Остатки(
	|			&ДатаАнализа,
	|			Организация = &Организация
	|				И Склад = &Склад
	|				И ТочкаХранения = &ТочкаХранения
	|				И Сотрудник = &Сотрудник) КАК СредстваЗащитыНаХраненииОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|			МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|			ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|			ЦеныНоменклатурыСрезПоследних.Поставщик) КАК ВложенныйЗапрос
	|		ПО СредстваЗащитыНаХраненииОстатки.Номенклатура = ВложенныйЗапрос.Номенклатура
	|			И СредстваЗащитыНаХраненииОстатки.Номенклатура.Поставщик = ВложенныйЗапрос.Поставщик
	|
	|УПОРЯДОЧИТЬ ПО
	|	СредстваЗащитыНаХраненииОстатки.Сотрудник.Наименование,
	|	СредстваЗащитыНаХраненииОстатки.Номенклатура.Наименование,
	|	СредстваЗащитыНаХраненииОстатки.ХарактеристикаНоменклатуры.КодSAP";
	
	Запрос.УстановитьПараметр("Сотрудник",		ТекущийОбъект.Сотрудник);
	Запрос.УстановитьПараметр("ДатаАнализа",	ДатаАнализа);
	Запрос.УстановитьПараметр("Организация",	ТекущийОбъект.Организация);
	Запрос.УстановитьПараметр("Склад",			ТекущийОбъект.Склад);
	Запрос.УстановитьПараметр("ТочкаХранения",	ТекущийОбъект.ТочкаХраненияОтправитель);
		
	ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоОснованию(ТекущийОбъект,Основание) Экспорт
	
	ТекущийОбъект.Организация 				= Основание.Организация;
	ТекущийОбъект.Сотрудник 				= Основание.Сотрудник;
	ТекущийОбъект.ДокументОснование			= Основание;
	ТекущийОбъект.Склад 					= Основание.Склад;
	ТекущийОбъект.ТочкаХраненияОтправитель 	= Основание.ТочкаХранения;
	ТекущийОбъект.МОЛ 						= Основание.МОЛ;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриемСредствЗащитыНаХранениеТовары.Номенклатура КАК Номенклатура,
	|	ПриемСредствЗащитыНаХранениеТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток, 0) КАК Количество,
	|	ПриемСредствЗащитыНаХранениеТовары.Цена КАК Цена,
	|	ЕСТЬNULL(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток, 0) * ПриемСредствЗащитыНаХранениеТовары.Цена КАК Сумма
	|ИЗ
	|	Документ.ПриемСредствЗащитыНаХранение.Товары КАК ПриемСредствЗащитыНаХранениеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СредстваЗащитыНаХранении.Остатки(
	|				&ДатаАнализа,
	|				Организация = &Организация
	|					И Склад = &Склад И ТочкаХранения = &ТочкаХранения) КАК СредстваЗащитыНаХраненииОстатки
	|		ПО ПриемСредствЗащитыНаХранениеТовары.Ссылка.Сотрудник = СредстваЗащитыНаХраненииОстатки.Сотрудник
	|			И ПриемСредствЗащитыНаХранениеТовары.Номенклатура = СредстваЗащитыНаХраненииОстатки.Номенклатура
	|			И ПриемСредствЗащитыНаХранениеТовары.ХарактеристикаНоменклатуры = СредстваЗащитыНаХраненииОстатки.ХарактеристикаНоменклатуры
	|ГДЕ
	|	ПриемСредствЗащитыНаХранениеТовары.Ссылка = &ДокументОснование
	|	И НЕ ЕСТЬNULL(СредстваЗащитыНаХраненииОстатки.КоличествоОстаток, 0) = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриемСредствЗащитыНаХранениеТовары.Номенклатура.Наименование,
	|	ПриемСредствЗащитыНаХранениеТовары.ХарактеристикаНоменклатуры.КодSAP";
	
	Запрос.УстановитьПараметр("ДатаАнализа",		ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(ТекущийОбъект.Ссылка));
	Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
	Запрос.УстановитьПараметр("Склад",				ТекущийОбъект.Склад);
	Запрос.УстановитьПараметр("ТочкаХранения",		ТекущийОбъект.ТочкаХраненияОтправитель);
	Запрос.УстановитьПараметр("ДокументОснование",	Основание);
	
	ТекущийОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ТекущийОбъект.СуммаДокумента = ТекущийОбъект.Товары.Итог("Сумма");
	
КонецПроцедуры	

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой ЗапретРедактированияРеквизитовОбъектов.

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//     Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//              где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы, связанного с
//              реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
    //Результат.Добавить("ВходящийНомер");
    Возврат Результат;
	
КонецФункции

#КонецЕсли