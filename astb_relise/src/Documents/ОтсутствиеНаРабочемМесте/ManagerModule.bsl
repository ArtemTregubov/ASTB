#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтсутствиеНаРабочемМесте.Дата КАК Период,
	|	ОтсутствиеНаРабочемМесте.Организация,
	|	ОтсутствиеНаРабочемМесте.Сотрудник,
	|	ОтсутствиеНаРабочемМесте.ПричинаОтсутствия,
	|	ОтсутствиеНаРабочемМесте.ДатаНачала,
	|	ОтсутствиеНаРабочемМесте.ДатаОкончания
	|ИЗ
	|	Документ.ОтсутствиеНаРабочемМесте КАК ОтсутствиеНаРабочемМесте
	|ГДЕ
	|	ОтсутствиеНаРабочемМесте.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	
	//по регистру "Отсутствие на рабочем месте"
	ТаблицыДляДвижений.Вставить("ТаблицаОтсутствиеНаРабочемМесте", Запрос.Выполнить().Выгрузить());
	
	//Если ЗначениеЗаполнено(ДокументСсылка.КорректируемыйДокумент) Тогда //нужно строрнировать потребность старого документа и создать новую
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ВыдачаПоПотребности.Организация КАК Организация,
	//	|	ВыдачаПоПотребности.Сотрудник КАК Сотрудник,
	//	|	ВыдачаПоПотребности.НормаВыдачи КАК НормаВыдачи,
	//	|	ВыдачаПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	//	|	ВыдачаПоПотребности.ДатаПотребности КАК ДатаПотребности,
	//	|	ВыдачаПоПотребности.ДатаВыдачи КАК ДатаВыдачи,
	//	|	ВыдачаПоПотребности.ПроцентИзноса КАК ПроцентИзноса,
	//	|	ВыдачаПоПотребности.Количество КАК Количество
	//	|ПОМЕСТИТЬ ВТ_СтарыйПриходПоВПП
	//	|ИЗ
	//	|	РегистрНакопления.ВыдачаПоПотребности КАК ВыдачаПоПотребности
	//	|ГДЕ
	//	|	ВыдачаПоПотребности.Регистратор = &Регистратор
	//	|	И ВыдачаПоПотребности.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ПотребностьВыдачиСИЗ.Организация КАК Организация,
	//	|	ПотребностьВыдачиСИЗ.Сотрудник КАК Сотрудник,
	//	|	ПотребностьВыдачиСИЗ.НормаВыдачи КАК НормаВыдачи,
	//	|	ПотребностьВыдачиСИЗ.ДатаПотребности КАК ДатаПотребности,
	//	|	ПотребностьВыдачиСИЗ.Количество КАК Количество,
	//	|	ПотребностьВыдачиСИЗ.ПроцентИзноса КАК ПроцентИзноса,
	//	|	ПотребностьВыдачиСИЗ.НоменклатураНормы КАК НоменклатураНормы
	//	|ПОМЕСТИТЬ ВТ_СтарыйПриходПоПотребности
	//	|ИЗ
	//	|	РегистрНакопления.ПотребностьВыдачиСИЗ КАК ПотребностьВыдачиСИЗ
	//	|ГДЕ
	//	|	ПотребностьВыдачиСИЗ.Регистратор = &Регистратор
	//	|	И ПотребностьВыдачиСИЗ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	&Период КАК Период,
	//	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	//	|	ВТ_СтарыйПриходПоПотребности.Организация КАК Организация,
	//	|	ВТ_СтарыйПриходПоПотребности.Сотрудник КАК Сотрудник,
	//	|	ВТ_СтарыйПриходПоПотребности.НормаВыдачи КАК НормаВыдачи,
	//	|	ВТ_СтарыйПриходПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	//	|	ВТ_СтарыйПриходПоПотребности.ДатаПотребности КАК ДатаПотребности,
	//	|	ВТ_СтарыйПриходПоПотребности.Количество КАК Количество,
	//	|	ВТ_СтарыйПриходПоПотребности.ПроцентИзноса КАК ПроцентИзноса
	//	|ИЗ
	//	|	ВТ_СтарыйПриходПоПотребности КАК ВТ_СтарыйПриходПоПотребности
	//	|
	//	|ОБЪЕДИНИТЬ ВСЕ
	//	|
	//	|ВЫБРАТЬ
	//	|	&Период,
	//	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	//	|	ВТ_СтарыйПриходПоПотребности.Организация,
	//	|	ВТ_СтарыйПриходПоПотребности.Сотрудник,
	//	|	ВТ_СтарыйПриходПоПотребности.НормаВыдачи,
	//	|	ВТ_СтарыйПриходПоПотребности.НоменклатураНормы,
	//	|	&НоваяДатаПотребности,
	//	|	ВТ_СтарыйПриходПоПотребности.Количество,
	//	|	ВТ_СтарыйПриходПоПотребности.ПроцентИзноса
	//	|ИЗ
	//	|	ВТ_СтарыйПриходПоПотребности КАК ВТ_СтарыйПриходПоПотребности
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	//	|	&Период КАК Период,
	//	|	ВТ_СтарыйПриходПоВПП.Организация КАК Организация,
	//	|	ВТ_СтарыйПриходПоВПП.Сотрудник КАК Сотрудник,
	//	|	ВТ_СтарыйПриходПоВПП.НормаВыдачи КАК НормаВыдачи,
	//	|	ВТ_СтарыйПриходПоВПП.НоменклатураНормы КАК НоменклатураНормы,
	//	|	ВТ_СтарыйПриходПоВПП.ДатаПотребности КАК ДатаПотребности,
	//	|	ВТ_СтарыйПриходПоВПП.ДатаВыдачи КАК ДатаВыдачи,
	//	|	ВТ_СтарыйПриходПоВПП.ПроцентИзноса КАК ПроцентИзноса,
	//	|	ВТ_СтарыйПриходПоВПП.Количество КАК Количество
	//	|ИЗ
	//	|	ВТ_СтарыйПриходПоВПП КАК ВТ_СтарыйПриходПоВПП
	//	|
	//	|ОБЪЕДИНИТЬ ВСЕ
	//	|
	//	|ВЫБРАТЬ
	//	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	//	|	&Период,
	//	|	ВТ_СтарыйПриходПоВПП.Организация,
	//	|	ВТ_СтарыйПриходПоВПП.Сотрудник,
	//	|	ВТ_СтарыйПриходПоВПП.НормаВыдачи,
	//	|	ВТ_СтарыйПриходПоВПП.НоменклатураНормы,
	//	|	&НоваяДатаПотребности,
	//	|	ВТ_СтарыйПриходПоВПП.ДатаВыдачи,
	//	|	ВТ_СтарыйПриходПоВПП.ПроцентИзноса,
	//	|	ВТ_СтарыйПриходПоВПП.Количество
	//	|ИЗ
	//	|	ВТ_СтарыйПриходПоВПП КАК ВТ_СтарыйПриходПоВПП";
	//	
	//	Запрос.УстановитьПараметр("Регистратор",			ДокументСсылка.КорректируемыйДокумент);
	//	Запрос.УстановитьПараметр("Период",					ДокументСсылка.Дата);
	//	Запрос.УстановитьПараметр("НоваяДатаПотребности",	НачалоДня((КонецДня(ДокументСсылка.ДатаОкончания) + 1)));
	//	
	//	Результат = Запрос.ВыполнитьПакет();
	//	
	//	//по регистру "ПотребностьВыдачиСИЗ"
	//	ТаблицыДляДвижений.Вставить("ТаблицаПотребностьВыдачиСИЗ", Результат[2].Выгрузить());
	//	
	//	//по регистру "ВыдачаПоПотребности"
	//	ТаблицыДляДвижений.Вставить("ТаблицаВыдачаПоПотребности", Результат[3].Выгрузить());
	//	
	//Иначе	
		
		//по регистру "ПотребностьВыдачиСИЗ"
		ТаблицыДляДвижений.Вставить("ТаблицаПотребностьВыдачиСИЗ", ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуДвиженийПоПотребности(ДокументСсылка));
		
		//по регистру "ВыдачаПоПотребности"
		ТаблицыДляДвижений.Вставить("ТаблицаВыдачаПоПотребности", ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуДвиженийВыдачиПоПотребности(ДокументСсылка,ТаблицыДляДвижений.ТаблицаПотребностьВыдачиСИЗ));
		
	//КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой ЗапретРедактированияРеквизитовОбъектов.

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//     Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//              где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы, связанного с
//              реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
    Результат.Добавить("ВходящийНомер");
	Результат.Добавить("ДатаВходящегоДокумента");
    Возврат Результат;
	
КонецФункции

#КонецЕсли