////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект,НОВЫЙ Структура("ИмяЭлементаДляРазмещения","ГруппаДополнительныеРеквизиты"));
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	ЭтаФорма.Элементы.МОЛ.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьМассивМОЛСклада(Объект.Склад,Объект.Организация));
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
 	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыКоличество" Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ПроцентИзноса) Тогда
			Элемент.ТекущиеДанные.Сумма = 0;
		Иначе
			Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
		КонецЕсли;
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТоварыНоменклатура" Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура) Тогда
			Элемент.ТекущиеДанные.Цена = ПолучитьЦенуСервер(Элемент.ТекущиеДанные.Номенклатура);
			Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ПроцентИзноса) Тогда
				Элемент.ТекущиеДанные.Сумма = 0;
			Иначе
				Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТоварыПроцентИзноса" Тогда	
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ПроцентИзноса) Тогда
			Элемент.ТекущиеДанные.Сумма = 0;
		Иначе
			Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура) Тогда
		Элемент.ТекущиеДанные.КоличествоПоУчету = ПолучитьОстаток(Элемент.ТекущиеДанные.Номенклатура,Элемент.ТекущиеДанные.ХарактеристикаНоменклатуры);
		Элемент.ТекущиеДанные.СуммаПоУчету 		= Элемент.ТекущиеДанные.КоличествоПоУчету * Элемент.ТекущиеДанные.Цена; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОстаток(Номенклатура,ХарактеристикаНоменклатуры)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ОстаткиНоменклатурыОстатки.ПроцентИзноса КАК ПроцентИзноса
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&ДатаАнализа,
	|			Организация = &ОрганизацияДляОстатков
	|				И Склад = &Склад
	|				И Номенклатура = &Номенклатура
	|				И ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
	|				И ПроцентИзноса = ЗНАЧЕНИЕ(Справочник.ПроцентыИзноса.ПустаяСсылка)) КАК ОстаткиНоменклатурыОстатки";
	
	Запрос.УстановитьПараметр("ДатаАнализа",				ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Объект.Ссылка));
	Запрос.УстановитьПараметр("Склад",						Объект.Склад);
	Запрос.УстановитьПараметр("Номенклатура",				Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры",	ХарактеристикаНоменклатуры);
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",		?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"),Справочники.Организации.ПустаяСсылка(),Объект.Организация));
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат 0;
	Иначе
		Возврат Запрос.Выполнить().Выгрузить()[0].КоличествоОстаток;
	КонецЕсли;
	
КонецФункции	

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "СВОЙСТВА"

// СтандартныеПодсистемы.Свойства
 &НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ "ПЕЧАТЬ"

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
  	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
  
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ...

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Функция ПолучитьЦенуСервер(Номенклатура)
	Цена = ЦенообразованиеСерверПереопределяемый.ПолучитьЦену(Номенклатура,Объект.Организация,Объект.Дата);
	Возврат Цена;
КонецФункции

&НаСервере	
Функция ЗаполнитьПоОстаткамНоменклатуры()
	
	лДок = РеквизитФормыВЗначение("Объект");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ЕСТЬNULL(Цены.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(Цены.Цена, 0) * ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК Сумма,
	|	ОстаткиНоменклатурыОстатки.ПроцентИзноса КАК ПроцентИзноса
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&ДатаЗапроса,
	|			Организация = &ОрганизацияДляОстатков
	|				И Склад = &Склад) КАК ОстаткиНоменклатурыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЦеныНоменклатурыСрезПоследних.Организация КАК Организация,
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|			МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|			ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаЗапроса, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|			ЦеныНоменклатурыСрезПоследних.Организация,
	|			ЦеныНоменклатурыСрезПоследних.Поставщик) КАК Цены
	|		ПО ОстаткиНоменклатурыОстатки.Номенклатура = Цены.Номенклатура
	|			И ОстаткиНоменклатурыОстатки.Номенклатура.Поставщик = Цены.Поставщик
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОстаткиНоменклатурыОстатки.Номенклатура.Наименование,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры.КодSAP,
	|	ПроцентИзноса";
	
	Запрос.УстановитьПараметр("Склад",					лДок.Склад);
	Запрос.УстановитьПараметр("ДатаЗапроса",			лДок.Дата);
	Запрос.УстановитьПараметр("Организация",			лДок.Организация);
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",	?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"),Справочники.Организации.ПустаяСсылка(),лДок.Организация));
	
	ТЗ = Запрос.Выполнить().Выбрать();
	
	Пока ТЗ.Следующий() Цикл
		
		СтрокаТЗ = лДок.Товары.Добавить();
		СтрокаТЗ.Номенклатура 				= ТЗ.Номенклатура;
		СтрокаТЗ.ХарактеристикаНоменклатуры = ТЗ.ХарактеристикаНоменклатуры;
		СтрокаТЗ.ПроцентИзноса 				= ТЗ.ПроцентИзноса;
		СтрокаТЗ.ПроцентИзносаПоУчету 		= ТЗ.ПроцентИзноса;
		СтрокаТЗ.КоличествоПоУчету 			= ТЗ.КоличествоОстаток;
		СтрокаТЗ.Количество 				= ТЗ.КоличествоОстаток;
		СтрокаТЗ.Цена 						= ТЗ.Цена;
		Если ЗначениеЗаполнено(ТЗ.ПроцентИзноса) Тогда
			СтрокаТЗ.Сумма 			= 0;
			СтрокаТЗ.СуммаПоУчету 	= 0;
		Иначе
			СтрокаТЗ.Сумма 			= ТЗ.Сумма;
			СтрокаТЗ.СуммаПоУчету 	= ТЗ.Сумма;
		КонецЕсли;
	
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(лДок,"Объект");
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	
	Если Объект.Товары.Количество() > 0 Тогда

		Текст = "ru = ""Табличная часть будет очищена! Продолжить выполнение операции?"";";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,НСтр(Текст),РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ЗаполнитьПоОстаткамНоменклатуры();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    Объект.Товары.Очистить();

	ЗаполнитьПоОстаткамНоменклатуры();
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	//АСТБ_ALEXEY_70409**************************************************************
	//Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация);
	Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация,Объект.СоздательДокумента);
	//АСТБ_ALEXEY_70409**************************************************************
	Элементы.МОЛ.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьМассивМОЛСклада(Объект.Склад,Объект.Организация));
	
	ЭтаФорма.УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	//АСТБ_ALEXEY_70409**************************************************************
	//Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация);
	Объект.МОЛ = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(Объект.Склад,Объект.Организация,Объект.СоздательДокумента);
	//АСТБ_ALEXEY_70409**************************************************************
	Элементы.МОЛ.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьМассивМОЛСклада(Объект.Склад,Объект.Организация));
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииЯчейки(Элемент)
	
	Если Элементы.Товары.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыПроцентИзноса" Тогда
		
		ЭтаФорма.Элементы.Товары.ПодчиненныеЭлементы.ГруппаПроцентИзноса.ПодчиненныеЭлементы.ТоварыПроцентИзноса.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРаботыСНормамиСервер.ПолучитьСписокДопустимыхПроцентовИзноса(Объект.Организация));
		
	КонецЕсли;
	
КонецПроцедуры

#Область АдресноеХранение

&НаКлиенте
Процедура АХ_ЗаполнитьПоОстаткам(Команда)
		
	Если Объект.Товары.Количество() > 0 Тогда
		
		Текст = "ru = ""Заполнить по данным табличной части или по остаткам?"";";
		
		Оповещение = Новый ОписаниеОповещения("АХ_ПослеЗакрытияВопроса", ЭтаФорма, Параметры);
		
		СписокВопросов = Новый СписокЗначений;
		СписокВопросов.Добавить(КодВозвратаДиалога.Да,"По данным табличной части");
		СписокВопросов.Добавить(КодВозвратаДиалога.Нет,"По остаткам");
		
		ПоказатьВопрос(Оповещение,НСтр(Текст),СписокВопросов);
		
	Иначе
		
		АХ_ЗаполнитьПоОстаткамНаСервере();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура АХ_ПослеЗакрытияВопроса(Результат,ДополнительныеПараметры) Экспорт	
	
	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Нет Тогда 
		//заполнение по остаткам
		
		Объект.Товары.Очистить();
		
	КонецЕсли;
	
	АХ_ЗаполнитьПоОстаткамНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура АХ_ЗаполнитьПоОстаткамНаСервере()
	
	СтруктураОбработкиОшибок = АХ_ОбменВызовСервера.ИнициализироватьСтруктуруОбработкиОшибок();
	
	Прокси = АХ_ОбменВызовСервера.ПолучитьПрокси(СтруктураОбработкиОшибок);
	Если Прокси = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	//если в табличной части есть товары, то получаем по ним остатки, если нет, то все остатки
	
	ТаблицаТоваровКПолучениюОстатков = Неопределено;
	
	Если Объект.Товары.Количество() <> 0 Тогда
		
		ТаблицаТовары = Объект.Товары.Выгрузить(,"Номенклатура,ХарактеристикаНоменклатуры");
		ТаблицаТовары.Свернуть("Номенклатура,ХарактеристикаНоменклатуры");
		
		ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(200));
		
		ТаблицаТоваровКПолучениюОстатков = Новый ТаблицаЗначений;
		ТаблицаТоваровКПолучениюОстатков.Колонки.Добавить("Номенклатура",ОписаниеТиповСтрока);
		ТаблицаТоваровКПолучениюОстатков.Колонки.Добавить("ХарактеристикаНоменклатуры",ОписаниеТиповСтрока);
		
		Для Каждого СтрокаТаблицыТовары из ТаблицаТовары Цикл
			
			НоваяСтрока = ТаблицаТоваровКПолучениюОстатков.Добавить();
			
			Если ЗначениеЗаполнено(СтрокаТаблицыТовары.Номенклатура) Тогда
				НоваяСтрока.Номенклатура = Строка(СтрокаТаблицыТовары.Номенклатура.УникальныйИдентификатор());
			иначе
				НоваяСтрока.Номенклатура = "";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаТаблицыТовары.ХарактеристикаНоменклатуры) Тогда
				НоваяСтрока.ХарактеристикаНоменклатуры = Строка(СтрокаТаблицыТовары.ХарактеристикаНоменклатуры.УникальныйИдентификатор());
			иначе
				НоваяСтрока.ХарактеристикаНоменклатуры = "";
			КонецЕсли;
			
		КонецЦикла;
		
		ТаблицаТоваровКПолучениюОстатков = СериализаторXDTO.ЗаписатьXDTO(ТаблицаТоваровКПолучениюОстатков);
		
	КонецЕсли;
	
	МассивКодовУзловТочекХранения = Новый Массив;
	МассивКодовУзловТочекХранения.Добавить(Объект.Склад.АХ_КодУзлаТочкиХранения);
	
	ТаблицаИдентификаторовXDTO = Прокси.ПолучитьОстаткиНоменклатуры(Объект.Дата,ТаблицаТоваровКПолучениюОстатков,СериализаторXDTO.ЗаписатьXDTO(МассивКодовУзловТочекХранения));	
	
	ТаблицаИдентификаторов = СериализаторXDTO.ПрочитатьXDTO(ТаблицаИдентификаторовXDTO);	
	
	КЧ = Новый КвалификаторыЧисла(15,3);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);

	ТаблицаТоваров = Новый ТаблицаЗначений;
	ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаТоваров.Колонки.Добавить("ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаТоваров.Колонки.Добавить("КоличествоОстаток",ОписаниеТиповЧ);
	
	Для Каждого СтрокаТаблицыИдентификаторов из ТаблицаИдентификаторов цикл
		
		НоваяСтрокаТаблицыТоваров = ТаблицаТоваров.Добавить();
		НоваяСтрокаТаблицыТоваров.Номенклатура 				 = АХ_ОбменПравилаЗагрузки.ДесериализоватьСсылкуНаСправочник(СтрокаТаблицыИдентификаторов.Номенклатура,"Номенклатура");
		НоваяСтрокаТаблицыТоваров.ХарактеристикаНоменклатуры = АХ_ОбменПравилаЗагрузки.ДесериализоватьСсылкуНаСправочник(СтрокаТаблицыИдентификаторов.ХарактеристикаНоменклатуры,"ХарактеристикиНоменклатуры");
		НоваяСтрокаТаблицыТоваров.КоличествоОстаток			 = СтрокаТаблицыИдентификаторов.КоличествоОстаток;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаТоваров.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровБезЦен.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровБезЦен.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаТоваровБезЦен.ПроцентИзноса КАК ПроцентИзноса,
	|	СУММА(ТаблицаТоваровБезЦен.КоличествоПоУчету) КАК КоличествоПоУчету,
	|	СУММА(ТаблицаТоваровБезЦен.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_ТоварыБезЦен
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	|		ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ОстаткиНоменклатурыОстатки.ПроцентИзноса КАК ПроцентИзноса,
	|		ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоПоУчету,
	|		0 КАК Количество
	|	ИЗ
	|		РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|				&ДатаЗапроса,
	|				Организация = &ОрганизацияДляОстатков
	|					И Склад = &Склад
	|					И &ПараметризацияПоТоварам) КАК ОстаткиНоменклатурыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_ТаблицаТоваров.Номенклатура,
	|		ВТ_ТаблицаТоваров.ХарактеристикаНоменклатуры,
	|		ЗНАЧЕНИЕ(Справочник.ПроцентыИзноса.ПустаяСсылка),
	|		0,
	|		ВТ_ТаблицаТоваров.КоличествоОстаток
	|	ИЗ
	|		ВТ_ТаблицаТоваров КАК ВТ_ТаблицаТоваров) КАК ТаблицаТоваровБезЦен
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваровБезЦен.ХарактеристикаНоменклатуры,
	|	ТаблицаТоваровБезЦен.Номенклатура,
	|	ТаблицаТоваровБезЦен.ПроцентИзноса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТоварыБезЦен.Номенклатура КАК Номенклатура,
	|	ВТ_ТоварыБезЦен.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТоварыБезЦен.ПроцентИзноса КАК ПроцентИзноса,
	|	ВТ_ТоварыБезЦен.КоличествоПоУчету КАК КоличествоПоУчету,
	|	ВТ_ТоварыБезЦен.Количество КАК Количество,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * ВТ_ТоварыБезЦен.КоличествоПоУчету КАК СуммаПоУчету,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * ВТ_ТоварыБезЦен.Количество КАК Сумма
	|ИЗ
	|	ВТ_ТоварыБезЦен КАК ВТ_ТоварыБезЦен
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаЗапроса, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ВТ_ТоварыБезЦен.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ТоварыБезЦен.Номенклатура.Наименование";
	
	Запрос.УстановитьПараметр("ТаблицаТоваров",         ТаблицаТоваров);	
	Запрос.УстановитьПараметр("Склад",					Объект.Склад);
	Запрос.УстановитьПараметр("ДатаЗапроса",			Объект.Дата);
	Запрос.УстановитьПараметр("Организация",			Объект.Организация);
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",	?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"),Справочники.Организации.ПустаяСсылка(),Объект.Организация));
	
	Если Объект.Товары.Количество() <> 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ПараметризацияПоТоварам","(Номенклатура,ХарактеристикаНоменклатуры) В (Выбрать ВТ_ТаблицаТоваров.Номенклатура,ВТ_ТаблицаТоваров.ХарактеристикаНоменклатуры из ВТ_ТаблицаТоваров как ВТ_ТаблицаТоваров)"); 
	Иначе
		Запрос.УстановитьПараметр("ПараметризацияПоТоварам",Истина);
	КонецЕсли;
	
	//очищаем, даже если были позиции в таблице, все заполнится из запроса
	Объект.Товары.Очистить();
	
	ТЗ = Запрос.Выполнить().Выбрать();
	
	Пока ТЗ.Следующий() Цикл
		
		СтрокаТЗ = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЗ,ТЗ);
		
		Если ЗначениеЗаполнено(ТЗ.ПроцентИзноса) Тогда
			СтрокаТЗ.Сумма 			= 0;
			СтрокаТЗ.СуммаПоУчету 	= 0;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
