#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Инвентаризация") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
														"Инвентаризация", 
														"Инвентаризация товаров на складе", 
														ПечатьИнвентаризации(МассивОбъектов, 
														ОбъектыПечати), , "Документ.ИнвентаризацияНоменклатуры.ПФ_MXL_ИнвентаризацияТоваровНаСкладе");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ИНВ3", 
															"ИНВ-3 (Инвентаризационная опись товаров)", 
															ПечатьИнв3(МассивОбъектов, ОбъектыПечати), , "Документ.ИнвентаризацияНоменклатуры.ПФ_MXL_ИНВ3");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИНВ19") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ИНВ19", 
															"ИНВ-19 (Сличительная ведомость)", 
															ПечатьИНВ19(МассивОбъектов, ОбъектыПечати), , "Документ.ИнвентаризацияНоменклатуры.ПФ_MXL_ИНВ19");
	КонецЕсли;
	
	//АСТБ_Овсянников ------------
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентаризацияБланкЗаполнения") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
															"ИнвентаризацияБланкЗаполнения", 
															"Инвентаризация (бланк ручного заполнения)", 
															ПечатьИнвентаризацияБланк(МассивОбъектов, ОбъектыПечати), , "Документ.ИнвентаризацияНоменклатуры.ПФ_MXL_ИнвентаризацияБланкЗаполнения");
	КонецЕсли;
	//АСТБ_Овсянников ------------
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентаризацияСИзносом") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
														"ИнвентаризацияСИзносом", 
														"Инвентаризация товаров на складе (с % износа)", 
														ПечатьИнвентаризацииСИзносом(МассивОбъектов, 
														ОбъектыПечати), , "Документ.ИнвентаризацияНоменклатуры.ПФ_MXL_ИнвентаризацияТоваровНаСкладеСИзносом");
	КонецЕсли;
													
КонецПроцедуры

Функция ПолучитьПакетЗапросов(МассивОбъектов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияНоменклатуры.Ссылка КАК Ссылка,
	|	ИнвентаризацияНоменклатуры.Номер КАК Номер,
	|	ИнвентаризацияНоменклатуры.Дата КАК Дата,
	|	ИнвентаризацияНоменклатуры.Организация КАК Организация,
	|	ИнвентаризацияНоменклатуры.Склад КАК ПредставлениеСклада
	|ИЗ
	|	Документ.ИнвентаризацияНоменклатуры КАК ИнвентаризацияНоменклатуры
	|ГДЕ
	|	ИнвентаризацияНоменклатуры.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
	|	ИнвентаризацияНоменклатурыТовары.Номенклатура КАК Номенклатура,
	|	ИнвентаризацияНоменклатурыТовары.Номенклатура.НаименованиеПолное КАК Товар,
	|	ИнвентаризацияНоменклатурыТовары.Номенклатура.Наименование КАК ТоварКратко,
	|	ИнвентаризацияНоменклатурыТовары.Количество КАК Количество,
	|	ИнвентаризацияНоменклатурыТовары.КоличествоПоУчету КАК КоличествоПоУчету,
	|	ИнвентаризацияНоменклатурыТовары.Цена КАК Цена,
	|	ИнвентаризацияНоменклатурыТовары.Сумма КАК Сумма,
	|	ИнвентаризацияНоменклатурыТовары.СуммаПоУчету КАК СуммаПоУчету,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияНоменклатурыТовары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА ИнвентаризацияНоменклатурыТовары.Номенклатура.Артикул
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИнвентаризацияНоменклатурыТовары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|					ТОГДА ИнвентаризацияНоменклатурыТовары.Номенклатура.Код
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ИнвентаризацияНоменклатурыТовары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|							ТОГДА ИнвентаризацияНоменклатурыТовары.Номенклатура.КодСинхронизации
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ИнвентаризацияНоменклатурыТовары.Ссылка.Организация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|									ТОГДА ЕСТЬNULL(НоменклатурныеНомераОрганизаций.НоменклатурныйНомер, """""""")
	|								ИНАЧЕ """"""""
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК КодАртикул,
	|	ИнвентаризацияНоменклатурыТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ИнвентаризацияНоменклатурыТовары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ИнвентаризацияНоменклатурыТовары.Ссылка КАК Ссылка,
	|	ИнвентаризацияНоменклатурыТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ИнвентаризацияНоменклатурыТовары.Номенклатура.КодСинхронизации КАК КодСинхронизации,
	|	ИнвентаризацияНоменклатурыТовары.ПроцентИзноса КАК ПроцентИзноса,
	|	ИнвентаризацияНоменклатурыТовары.ПроцентИзносаПоУчету КАК ПроцентИзносаПоУчету
	|ИЗ
	|	Документ.ИнвентаризацияНоменклатуры.Товары КАК ИнвентаризацияНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|		ПО ИнвентаризацияНоменклатурыТовары.Ссылка.Организация = НоменклатурныеНомераОрганизаций.Организация
	|			И ИнвентаризацияНоменклатурыТовары.Номенклатура = НоменклатурныеНомераОрганизаций.Номенклатура
	|			И ИнвентаризацияНоменклатурыТовары.ХарактеристикаНоменклатуры = НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры
	|ГДЕ
	|	ИнвентаризацияНоменклатурыТовары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";

	Возврат Запрос.ВыполнитьПакет();

КонецФункции

Функция ПечатьИнвентаризации(МассивОбъектов, ОбъектыПечати)

	ПакетЗапросов = ПолучитьПакетЗапросов(МассивОбъектов);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияНоменклатуры_ИнвентаризацияТоваровНаСкладе";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияНоменклатуры.ПФ_MXL_ИнвентаризацияТоваровНаСкладе");
	ПервыйДокумент = Истина;
	
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(ДанныеПечати, 
																					"Инвентаризация номенклатуры");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим данные об организации и складе
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		СведенияОбОрганизации    = ФормированиеПечатныхФормПереопределяемый.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		ПредставлениеОрганизации = ФормированиеПечатныхФормПереопределяемый.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку таблицы
		ОбластьШапки = "ШапкаТаблицы";
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабДокумент.Вывести(ОбластьМакета);

		ИтогСуммы        = 0;
		ИтогСуммыПоУчету = 0;

		ОбластьСтроки = "Строка";
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		
		ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			ОбластьМакета.Параметры.Товар = ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(ВыборкаСтрокТовары.Номенклатура,ВыборкаСтрокТовары.ХарактеристикаНоменклатуры);
			
			ИтогСуммы        = ИтогСуммы        + ВыборкаСтрокТовары.Сумма;
			ИтогСуммыПоУчету = ИтогСуммыПоУчету + ВыборкаСтрокТовары.СуммаПоУчету;
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла;

		// Вывести Итого
		ОбластьМакета                        = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего        = ФормированиеПечатныхФормПереопределяемый.ФорматСумм(ИтогСуммы);
		ОбластьМакета.Параметры.ВсегоПоУчету = ФормированиеПечатныхФормПереопределяемый.ФорматСумм(ИтогСуммыПоУчету);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим подписи к документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;	//Шапки.Следующий() 
	
	Возврат ТабДокумент;

КонецФункции

Функция ПечатьИнвентаризацииСИзносом(МассивОбъектов, ОбъектыПечати)

	ПакетЗапросов = ПолучитьПакетЗапросов(МассивОбъектов);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияНоменклатуры_ИнвентаризацияТоваровНаСкладеСИзносом";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияНоменклатуры.ПФ_MXL_ИнвентаризацияТоваровНаСкладеСИзносом");
	ПервыйДокумент = Истина;
	
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(ДанныеПечати, 
																					"Инвентаризация номенклатуры");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим данные об организации и складе
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		СведенияОбОрганизации    = ФормированиеПечатныхФормПереопределяемый.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		ПредставлениеОрганизации = ФормированиеПечатныхФормПереопределяемый.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку таблицы
		ОбластьШапки = "ШапкаТаблицы";
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабДокумент.Вывести(ОбластьМакета);

		ИтогСуммы        = 0;
		ИтогСуммыПоУчету = 0;

		ОбластьСтроки = "Строка";
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		
		ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			ОбластьМакета.Параметры.Товар = ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(ВыборкаСтрокТовары.Номенклатура,ВыборкаСтрокТовары.ХарактеристикаНоменклатуры);
			
			ИтогСуммы        = ИтогСуммы        + ВыборкаСтрокТовары.Сумма;
			ИтогСуммыПоУчету = ИтогСуммыПоУчету + ВыборкаСтрокТовары.СуммаПоУчету;
			ТабДокумент.Вывести(ОбластьМакета);

		КонецЦикла;

		// Вывести Итого
		ОбластьМакета                        = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего        = ФормированиеПечатныхФормПереопределяемый.ФорматСумм(ИтогСуммы);
		ОбластьМакета.Параметры.ВсегоПоУчету = ФормированиеПечатныхФормПереопределяемый.ФорматСумм(ИтогСуммыПоУчету);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим подписи к документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;	//Шапки.Следующий() 
	
	Возврат ТабДокумент;

КонецФункции

//АСТБ_Овсянников ------------

Функция ПечатьИнвентаризацияБланк(МассивОбъектов, ОбъектыПечати)

	ПакетЗапросов = ПолучитьПакетЗапросов(МассивОбъектов);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияНоменклатуры_ИнвентаризацияБланкЗаполнения";

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияНоменклатуры.ПФ_MXL_ИнвентаризацияБланкЗаполнения");
	ПервыйДокумент = Истина;
	
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ПроцедурыРаботыСНормамиСервер.СформироватьЗаголовокДокумента(ДанныеПечати, 
																					"Инвентаризация номенклатуры");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим данные об организации и складе
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		СведенияОбОрганизации    = ФормированиеПечатныхФормПереопределяемый.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		ПредставлениеОрганизации = ФормированиеПечатныхФормПереопределяемый.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку таблицы
		ОбластьШапки = "ШапкаТаблицы";
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьСтроки = "Строка";
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		
		ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакета.Параметры.Товар = ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(ВыборкаСтрокТовары.Номенклатура,ВыборкаСтрокТовары.ХарактеристикаНоменклатуры);
						
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;

		// Выводим подписи к документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;	//Шапки.Следующий() 
	
	Возврат ТабДокумент;

КонецФункции

//-АСТБ_Овсянников ------------

Функция ПечатьИнв3(МассивОбъектов, ОбъектыПечати)

	ПакетЗапросов = ПолучитьПакетЗапросов(МассивОбъектов);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияНоменклатуры_ИНВ3";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияНоменклатуры.ПФ_MXL_ИНВ3");
	ПервыйДокумент = Истина;

	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();

		//////////////////////////////////////////////////////////////////////
		// 1-я страница формы

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		СведенияОбОрганизации    = ФормированиеПечатныхФормПереопределяемый.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		ПредставлениеОрганизации = ФормированиеПечатныхФормПереопределяемый.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		
		ОбластьМакета.Параметры.ДатаДокумента            = ДанныеПечати.Дата;
		ОбластьМакета.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Истина, Истина);
		
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		//////////////////////////////////////////////////////////////////////
		// 2-я страница формы

		ИтогФактКоличество = 0;
		ИтогФактСумма      = 0;
		ИтогФактСуммаВсего = 0;
		ИтогБухКоличество  = 0;
		ИтогБухСумма       = 0;

		КолвоСтрокПоСтранице = 0;
		КолвоПоСтранице      = 0;
		СуммаЛиста           = 0;
		ИтогоКолво           = 0;
		
		НомерСтраницы = 2;
		Ном = 0;

		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабДокумент.Вывести(ЗаголовокТаблицы);

		// Выводим многострочную часть документа
		ПодвалСтраницы  = Макет.ПолучитьОбласть("ПодвалСтраницы");	
			
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			Ном = Ном + 1;
			СтрокаТаблицы   = Макет.ПолучитьОбласть("Строка");
			СтрокаТаблицы.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(СтрокаТаблицы);
			СтрокаСПодвалом.Добавить(ПодвалСтраницы);
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда

				ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
				ПараметрыОбласти = ОбластьИтоговПоСтранице.Параметры;

				ПараметрыОбласти.ИтогоФактКоличество = ИтогФактКоличество;
				ПараметрыОбласти.ИтогоФактСумма      = ИтогФактСумма;
				ПараметрыОбласти.ИтогоБухКоличество  = ИтогБухКоличество;
				ПараметрыОбласти.ИтогоБухСумма       = ИтогБухСумма;

				ПараметрыОбласти.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
				ПараметрыОбласти.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ПроцедурыРаботыСНормамиСервер.КоличествоПрописью(КолвоПоСтранице);
				ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);

				ИтогФактКоличество = 0;
				ИтогФактСумма      = 0;
				ИтогБухКоличество  = 0;
				ИтогБухСумма       = 0;

				КолвоСтрокПоСтранице = 0;
				КолвоПоСтранице      = 0;
				СуммаЛиста           = 0;

			КонецЕсли;

			СтрокаТаблицы.Параметры.Номер = Ном;
			СтрокаТаблицы.Параметры.ТоварНаименование = ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(ВыборкаСтрокТовары.Номенклатура,ВыборкаСтрокТовары.ХарактеристикаНоменклатуры);

			ТабДокумент.Вывести(СтрокаТаблицы);

			ИтогФактКоличество = ИтогФактКоличество + ВыборкаСтрокТовары.Количество;
			ИтогФактСумма      = ИтогФактСумма      + ВыборкаСтрокТовары.Сумма;
			ИтогФактСуммаВсего = ИтогФактСуммаВсего + ВыборкаСтрокТовары.Сумма;
			ИтогБухКоличество  = ИтогБухКоличество  + ВыборкаСтрокТовары.КоличествоПоУчету;
			ИтогБухСумма       = ИтогБухСумма       + ВыборкаСтрокТовары.СуммаПоУчету;
			ИтогоКолво         = ИтогоКолво         + ВыборкаСтрокТовары.Количество;

			КолвоСтрокПоСтранице = КолвоСтрокПоСтранице + 1;
			КолвоПоСтранице      = КолвоПоСтранице      + ВыборкаСтрокТовары.Количество;
			СуммаЛиста           = СуммаЛиста           + ВыборкаСтрокТовары.Сумма;

		КонецЦикла;

		// Выводим итоги по последней странице
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
		ПараметрыОбласти = ОбластьИтоговПоСтранице.Параметры;

		ПараметрыОбласти.ИтогоФактКоличество  = ИтогФактКоличество;
		ПараметрыОбласти.ИтогоФактСумма       = ИтогФактСумма;
		ПараметрыОбласти.ИтогоБухКоличество   = ИтогБухКоличество;
		ПараметрыОбласти.ИтогоБухСумма        = ИтогБухСумма;
		ПараметрыОбласти.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
		ПараметрыОбласти.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ПроцедурыРаботыСНормамиСервер.КоличествоПрописью(КолвоПоСтранице);
		ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

		// Выводим подвал документа
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписи");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ПроцедурыРаботыСНормамиСервер.КоличествоПрописью(ИтогоКолво);
		ОбластьМакета.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью     = ЧислоПрописью(ВыборкаСтрокТовары.Количество(), ,",,,,,,,,0");
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписиМОЛ");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.НачальныйНомерПоПорядку = 1;
		ОбластьМакета.Параметры.НомерКонца              = ВыборкаСтрокТовары.Количество();
		ОбластьМакета.Параметры.ДатаДокумента 	= ДанныеПечати.Дата;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;	//Шапки.Следующий() 

	Возврат ТабДокумент;

КонецФункции

Функция ПечатьИНВ19(МассивОбъектов, ОбъектыПечати)

	ПакетЗапросов = ПолучитьПакетЗапросов(МассивОбъектов);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияНоменклатуры_ИНВ19";
	
	// Получение областей макета.
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ИнвентаризацияНоменклатуры.ПФ_MXL_ИНВ19");
	ПервыйДокумент = Истина;

	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ВыборкаСтрокТовары = ВыборкаПоДокументам.Выбрать();
		
		ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы1");
		ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("СтрокаТаблицы1");
		ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоТаблицы1");
		ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");

		// Вывод шапки документа.
		ОбластьМакетаШапка.Параметры.Заполнить(ДанныеПечати);
		
		СведенияОбОрганизации    = ФормированиеПечатныхФормПереопределяемый.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		ПредставлениеОрганизации = ФормированиеПечатныхФормПереопределяемый.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		
		ОбластьМакетаШапка.Параметры.ДатаДокумента            = ДанныеПечати.Дата;
		ОбластьМакетаШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Истина, Истина);
		
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		НомерСтраницы   = 2;
		НомерСтроки     = 1;
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();

		ИтогоРезультатИзлишекКоличество   = 0;
		ИтогоРезультатИзлишекСумма        = 0;
		ИтогоРезультатНедостачаКоличество = 0;
		ИтогоРезультатНедостачаСумма      = 0;

		// Вывод заголовка таблицы.
		ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

		// Вывод многострочной части докмента.
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакетаСтрока.Параметры.ТоварНаименование = ПроцедурыРаботыСНормамиСервер.ПолучитьПредставлениеНоменклатуры(ВыборкаСтрокТовары.Номенклатура,ВыборкаСтрокТовары.ХарактеристикаНоменклатуры);

			Разница     = 0;
			РазницаСумм = 0;

			Разница     = ВыборкаСтрокТовары.Количество - ВыборкаСтрокТовары.КоличествоПоУчету;
			РазницаСумм = ВыборкаСтрокТовары.Сумма      - ВыборкаСтрокТовары.СуммаПоУчету;
			
			Если Разница = 0 Тогда
				Продолжить;
			КонецЕсли;

			ОбластьМакетаСтрока.Параметры.Номер = НомерСтроки;
			
			Если Разница < 0 Тогда
				
				ОбластьМакетаСтрока.Параметры.РезультатНедостачаКоличество = - Разница;
				ОбластьМакетаСтрока.Параметры.РезультатНедостачаСумма      = - РазницаСумм;
				ОбластьМакетаСтрока.Параметры.РезультатИзлишекКоличество   = 0;
				ОбластьМакетаСтрока.Параметры.РезультатИзлишекСумма        = 0;

				ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество + ( - Разница);
				ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма      + ( - РазницаСумм);
				ИтогоРезультатИзлишекКоличество   = ИтогоРезультатИзлишекКоличество   + 0;
				ИтогоРезультатИзлишекСумма        = ИтогоРезультатИзлишекСумма        + 0;
				
			Иначе
				
				ОбластьМакетаСтрока.Параметры.РезультатНедостачаКоличество = 0;
				ОбластьМакетаСтрока.Параметры.РезультатНедостачаСумма      = 0;
				ОбластьМакетаСтрока.Параметры.РезультатИзлишекКоличество   = Разница;
				ОбластьМакетаСтрока.Параметры.РезультатИзлишекСумма        = РазницаСумм;

				ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество + 0;
				ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма      + 0;
				ИтогоРезультатИзлишекКоличество   = ИтогоРезультатИзлишекКоличество   + Разница;
				ИтогоРезультатИзлишекСумма        = ИтогоРезультатИзлишекСумма        + РазницаСумм;
				
			КонецЕсли;

			// Проверка вывода.
			СтрокаСПодвалом = Новый Массив();
			СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
				
				Если КоличествоСтрок <> 1 Тогда
			
					// Вывод итого по странице.
					ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
					
					// Вывод разделителя страниц.
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
					// Вывод заголовка таблицы.
					НомерСтраницы = НомерСтраницы + 1;
					ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
					
				КонецЕсли;

			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
			
			НомерСтроки = НомерСтроки + 1;

		КонецЦикла;

		// Вывод итого по странице.
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоРезультатИзлишекКоличество   = ИтогоРезультатИзлишекКоличество;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоРезультатИзлишекСумма        = ИтогоРезультатИзлишекСумма;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоРезультатНедостачаКоличество = ИтогоРезультатНедостачаКоличество;
		ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоРезультатНедостачаСумма      = ИтогоРезультатНедостачаСумма;
		ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
		
		// Вывод подвала.
		ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеПечати);
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		
	КонецЦикла;	//Шапки.Следующий() 

	Возврат ТабДокумент;

КонецФункции

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//инвентаризация
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ИнвентаризацияНоменклатуры";
	КомандаПечати.Идентификатор = "Инвентаризация";
	КомандаПечати.Представление = НСтр("ru = 'Инвентаризация товаров на складе'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//инвентаризация
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ИнвентаризацияНоменклатуры";
	КомандаПечати.Идентификатор = "ИНВ3";
	КомандаПечати.Представление = НСтр("ru = 'Инвентаризационная опись (ИНВ-3)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//инвентаризация
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ИнвентаризацияНоменклатуры";
	КомандаПечати.Идентификатор = "ИНВ19";
	КомандаПечати.Представление = НСтр("ru = 'Сличительная ведомость (ИНВ-19)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	//АСТБ_Овсянников ------------
	//инвентаризация
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ИнвентаризацияНоменклатуры";
	КомандаПечати.Идентификатор = "ИнвентаризацияБланкЗаполнения";
	КомандаПечати.Представление = НСтр("ru = 'Бланк инвентаризации'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//АСТБ_Овсянников ------------
	
	//инвентаризация с учетом % износа
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ИнвентаризацияНоменклатуры";
	КомандаПечати.Идентификатор = "ИнвентаризацияСИзносом";
	КомандаПечати.Представление = НСтр("ru = 'Инвентаризация товаров на складе (с % износа)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ИспользоватьПроцентИзноса";
	КомандаПечати.СписокФорм =   		"ФормаДокумента";
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интерфейс для работы с подсистемой ЗапретРедактированияРеквизитовОбъектов.

// Возвращает описание блокируемых реквизитов.
//
// Возвращаемое значение:
//     Массив - содержит строки в формате ИмяРеквизита[;ИмяЭлементаФормы,...]
//              где ИмяРеквизита - имя реквизита объекта, ИмяЭлементаФормы - имя элемента формы, связанного с
//              реквизитом.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
    Результат.Добавить("ВходящийНомер");
    Возврат Результат;
	
КонецФункции

#КонецЕсли