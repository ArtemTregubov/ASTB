#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки") Тогда
		МодульДополнительныеОтчетыИОбработки = ОбщегоНазначения.ОбщийМодуль("ДополнительныеОтчетыИОбработки");
		МодульДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.Дата.Имя);
	
КонецПроцедуры



#КонецОбласти

//АсТБ_Alexey_74963_********************************************************************

&НаСервере
Процедура ОтправитьСейчасНаСервере(МассивВыделенныхСтрок)
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПочтовыйКлиент") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьЖурналаРегистрации(УправлениеЭлектроннойПочтой.СобытиеЖурналаРегистрации(), 
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru = 'Начата ручная отправка сообщений SMS'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		
	Если Не ОтправкаSMS.НастройкаОтправкиSMSВыполнена() Тогда
			ЗаписьЖурналаРегистрации(УправлениеЭлектроннойПочтой.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Ошибка, , ,
			НСтр("ru = 'Не выполнены настройки отправки SMS.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		Возврат;
	КонецЕсли;
	
	Если Не ОтправкаSMS.НастройкаОтправкиSMSВыполнена() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выполнены настройки отправки SMS.'"),,"Объект");
		Возврат;
	КонецЕсли;
	
	ТаблицаАдресатовСообщения = Новый ТаблицаЗначений;
	ТаблицаАдресатовСообщения.Колонки.Добавить("НомерСтроки");
	ТаблицаАдресатовСообщения.Колонки.Добавить("НомерДляОтправки");
	ТаблицаАдресатовСообщения.Колонки.Добавить("КакСвязаться");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СообщениеSMS.Ссылка КАК Ссылка,
	               |	СообщениеSMS.ТекстСообщения КАК ТекстСообщения,
	               |	СообщениеSMS.ОтправлятьВТранслите КАК ОтправлятьВТранслите,
	               |	СообщениеSMSАдресаты.НомерСтроки КАК НомерСтроки,
	               |	СообщениеSMSАдресаты.НомерДляОтправки КАК НомерДляОтправки,
	               |	СообщениеSMSАдресаты.КакСвязаться КАК КакСвязаться
	               |ИЗ
	               |	Документ.СообщениеSMS.Адресаты КАК СообщениеSMSАдресаты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СообщениеSMS КАК СообщениеSMS
	               |		ПО СообщениеSMSАдресаты.Ссылка = СообщениеSMS.Ссылка
	               |ГДЕ
	               |	(СообщениеSMSАдресаты.СостояниеСообщения = ЗНАЧЕНИЕ(Перечисление.СостоянияСообщенияSMS.Черновик)
	               |			ИЛИ СообщениеSMSАдресаты.СостояниеСообщения = ЗНАЧЕНИЕ(Перечисление.СостоянияСообщенияSMS.Исходящее)
	               |				И НЕ СообщениеSMS.ПометкаУдаления
	               |				И ВЫБОР
	               |					КОГДА СообщениеSMS.ДатаАктуальностиОтправки = ДАТАВРЕМЯ(1, 1, 1)
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ СообщениеSMS.ДатаАктуальностиОтправки > &ТекущаяДата
	               |				КОНЕЦ
	               |				И СообщениеSMS.Ссылка В (&МассивСсылок)
	               |				И СообщениеSMSАдресаты.Ссылка В (&МассивСсылок))
	               |ИТОГИ ПО
	               |	Ссылка";
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивВыделенныхСтрок);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	ВыборкаДокументы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаДокументы.Следующий() Цикл
		
		ТаблицаАдресатовСообщения.Очистить();
		
		ВыборкаАдресаты = ВыборкаДокументы.Выбрать();
		Пока ВыборкаАдресаты.Следующий() Цикл
			
			ТекстСообщения       = ВыборкаАдресаты.ТекстСообщения;
			ОтправлятьВТранслите = ВыборкаАдресаты.ОтправлятьВТранслите;
			
			НоваяСтрока = ТаблицаАдресатовСообщения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаАдресаты);
			
		КонецЦикла;
		
		Если ТаблицаАдресатовСообщения.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		МассивНомеров = ТаблицаАдресатовСообщения.ВыгрузитьКолонку("НомерДляОтправки");
		РезультатОтправки = ОтправкаSMS.ОтправитьSMS(МассивНомеров, ТекстСообщения, "", ОтправлятьВТранслите);
		
		Если РезультатОтправки.ОтправленныеСообщения.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = ВыборкаДокументы.Ссылка.ПолучитьОбъект();
		ОтразитьРезультатыОтправкиSMSВДокументе(ДокументОбъект, РезультатОтправки);
		ДокументОбъект.ДополнительныеСвойства.Вставить("НеЗаписыватьКонтакты", Истина);
		ДокументОбъект.Записать();
		
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации(УправлениеЭлектроннойПочтой.СобытиеЖурналаРегистрации(), 
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru = 'Закончена ручная отправка сообщений SMS'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСейчас(Команда)
	
	МассивВыделенныхСтрок = Элементы.Список.ВыделенныеСтроки;
	
	Если МассивВыделенныхСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	ОтправитьСейчасНаСервере(МассивВыделенныхСтрок);
	
КонецПроцедуры

// Устанавливает состояние документа "Сообщение SMS" в зависимости от состояний отдельных сообщений различным контактам.
//
// Параметры:
//  ДокументОбъект     - ДокументОбъект.СообщениеSMS - документ, для которого определяется состояние.
//  РезультатОтправки  - Структура - результат отправки сообщения SMS.
//
Процедура ОтразитьРезультатыОтправкиSMSВДокументе(ДокументОбъект, РезультатОтправки)
	
	Для Каждого ОтправленноеСообщение Из РезультатОтправки.ОтправленныеСообщения Цикл
		Для Каждого НайденнаяСтрока Из ДокументОбъект.Адресаты.НайтиСтроки(Новый Структура("НомерДляОтправки",ОтправленноеСообщение.НомерПолучателя)) Цикл
			НайденнаяСтрока.ИдентификаторСообщения = ОтправленноеСообщение.ИдентификаторСообщения;
			НайденнаяСтрока.СостояниеСообщения     = Перечисления.СостоянияСообщенияSMS.ОтправляетсяПровайдером;
		КонецЦикла;
	КонецЦикла;
	
	ДокументОбъект.Состояние = СостояниеДокументаСообщениеSMS(ДокументОбъект);
	
КонецПроцедуры

// Определяет статус документа "Сообщение SMS" по состоянию входящих в него сообщений SMS.
//
// Параметры:
//  СообщениеSMS  - ДокументОбъект.СообщениеSMS - документ, для которого необходимо определить
//                                                статус.
//
// Возвращаемое значение:
//   Перечисления.СостоянияДокументаСообщениеSMS   - рассчитанный статус документа.
//
Функция СостояниеДокументаСообщениеSMS(СообщениеSMS)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Адресаты.СостояниеСообщения КАК Состояние
	|ПОМЕСТИТЬ Состояния
	|ИЗ
	|	&Адресаты КАК Адресаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Состояния.Состояние
	|ИЗ
	|	Состояния КАК Состояния";
	
	Запрос.УстановитьПараметр("Адресаты", СообщениеSMS.Адресаты.Выгрузить());
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Перечисления.СостоянияДокументаСообщениеSMS.Черновик;
	КонецЕсли;
	
	ТекущийСтатус = Неопределено;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		Если Выборка.Состояние = Перечисления.СостоянияСообщенияSMS.Исходящее Тогда
			
			Возврат  Перечисления.СостоянияДокументаСообщениеSMS.Исходящее;
			
		ИначеЕсли Выборка.Состояние = Перечисления.СостоянияСообщенияSMS.Черновик Тогда
			
			Возврат Перечисления.СостоянияСообщенияSMS.Черновик;
			
		ИначеЕсли Выборка.Состояние = Перечисления.СостоянияСообщенияSMS.НеУдалосьПередатьПровайдеру Тогда
			
			Если ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.Доставлено Тогда
				ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.ЧастичноДоставлено;
			Иначе
				ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.НеДоставлено;
			КонецЕсли;
			
		ИначеЕсли Выборка.Состояние = Перечисления.СостоянияСообщенияSMS.ОтправляетсяПровайдером 
			      ИЛИ Выборка.Состояние = Перечисления.СостоянияСообщенияSMS.ОтправленоПровайдером
			      ИЛИ Выборка.Состояние = Перечисления.СостоянияСообщенияSMS.ОшибкаПолученияСтатусаУПровайдера
			      ИЛИ Выборка.Состояние = Перечисления.СостоянияСообщенияSMS.НеОтправленоПровайдером Тогда
			Возврат Перечисления.СостоянияДокументаСообщениеSMS.Доставляется;
		ИначеЕсли Выборка.Состояние = Перечисления.СостоянияСообщенияSMS.Доставлено Тогда
			Если ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.Доставлено
				 ИЛИ ТекущийСтатус = Неопределено Тогда
				ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.Доставлено;
			Иначе
				ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.ЧастичноДоставлено;
			КонецЕсли;
		ИначеЕсли Выборка.Состояние = Перечисления.СостоянияСообщенияSMS.НеДоставлено Тогда
			Если ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.Доставлено Тогда
				ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.ЧастичноДоставлено;
			Иначе
				ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.НеДоставлено;
			КонецЕсли;
		ИначеЕсли Выборка.Состояние = Перечисления.СостоянияСообщенияSMS.НеОпознаноПровайдером Тогда
			Если ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.Доставлено Тогда
				ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.ЧастичноДоставлено;
			Иначе
				ТекущийСтатус = Перечисления.СостоянияДокументаСообщениеSMS.НеДоставлено;
			КонецЕсли;
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат ТекущийСтатус;

КонецФункции

//АсТБ_Alexey_74963_********************************************************************