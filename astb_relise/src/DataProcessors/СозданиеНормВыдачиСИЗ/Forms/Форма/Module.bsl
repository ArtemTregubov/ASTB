&НаСервере
Перем ТаблицаОКПДТР;

&НаКлиенте
Процедура ЗагрузкаИзФайла(Команда)
	
	Элементы.ФормаЗагрузкаИзФайла.Пометка = НЕ Элементы.ФормаЗагрузкаИзФайла.Пометка;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура НормыВыдачиСИЗПриАктивизацииСтроки(Элемент)
	
	Если ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока = Неопределено Тогда
		ТекущаяНормаВыдачи = ПредопределенноеЗначение("Справочник.НормыВыдачиСИЗ.ПустаяСсылка");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Истина);
	Иначе
		Если ЗначениеЗаполнено(ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока) Тогда
			ТекущаяНормаВыдачи = ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока;
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Истина);
		Иначе
			ТекущаяНормаВыдачи = ПредопределенноеЗначение("Справочник.НормыВыдачиСИЗ.ПустаяСсылка");
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьТаблицуИспользованияНорм(ТекущаяНормаВыдачи);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуИспользованияНорм(ТекущаяНормаВыдачи)
	
	ТаблицаИспользования = РеквизитФормыВЗначение("ТаблицаИспользованияНорм");
	ТаблицаИспользования.Очистить();
	
	МассивНормВыдачи = Новый Массив;
	МассивНормВыдачи.Добавить(ТекущаяНормаВыдачи);
	
	ТаблицаИспользования = ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуИспользованияНормы(МассивНормВыдачи);
	
	ЗначениеВРеквизитФормы(ТаблицаИспользования,"ТаблицаИспользованияНорм");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.Элементы.ФормаЗагрузкаИзФайла.Пометка = Ложь;
	ЭтаФорма.Элементы.ВыполнитьЗагрузкуНорм.Доступность = ЗначениеЗаполнено(Объект.ФайлЗагрузки);
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.НормыВыдачиСИЗ.Отбор, "Владелец", Объект.Организация,ВидСравненияКомпоновкиДанных.Равно, "Владелец", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ИсходныеНормы.Отбор, "Организация", Объект.Организация,ВидСравненияКомпоновкиДанных.Равно, "Организация", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ЦелевыеНормы.Отбор, "Организация", Объект.Организация,ВидСравненияКомпоновкиДанных.Равно, "Организация", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.НормыВыдачиСИЗ.Отбор, "Владелец", Объект.Организация,ВидСравненияКомпоновкиДанных.Равно, "Владелец", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ИсходныеНормы.Отбор, "Организация", Объект.Организация,ВидСравненияКомпоновкиДанных.Равно, "Организация", Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ЦелевыеНормы.Отбор, "Организация", Объект.Организация,ВидСравненияКомпоновкиДанных.Равно, "Организация", Истина);
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуИсходныхНорм(СтруктураОтбора)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УточненныеОснованияНормВыдачи.Подразделение КАК Подразделение,
	|	УточненныеОснованияНормВыдачи.Должность КАК Должность,
	|	УточненныеОснованияНормВыдачи.РабочееМесто КАК РабочееМесто,
	|	УточненныеОснованияНормВыдачи.НормаВыдачи КАК НормаВыдачи,
	|	УточненныеОснованияНормВыдачи.Основание КАК Основание,
	|	УточненныеОснованияНормВыдачи.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_УточненныеОснования
	|ИЗ
	|	РегистрСведений.УточненныеОснованияНормВыдачи КАК УточненныеОснованияНормВыдачи
	|ГДЕ
	|	УточненныеОснованияНормВыдачи.Организация = &Организация
	|	И (УточненныеОснованияНормВыдачи.Подразделение = &Подразделение
	|			ИЛИ УточненныеОснованияНормВыдачи.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|	И (УточненныеОснованияНормВыдачи.Должность = &Должность
	|			ИЛИ УточненныеОснованияНормВыдачи.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
	|	И (УточненныеОснованияНормВыдачи.РабочееМесто = &РабочееМесто
	|			ИЛИ УточненныеОснованияНормВыдачи.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Подразделение КАК Подразделение,
	|	ВТ_УточненныеОснования.Должность КАК Должность,
	|	ВТ_УточненныеОснования.РабочееМесто КАК РабочееМесто,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	НЕ ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Подразделение КАК Подразделение,
	|	ВТ_УточненныеОснования.Должность КАК Должность,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	НЕ ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Подразделение КАК Подразделение,
	|	ВТ_УточненныеОснования.РабочееМесто КАК РабочееМесто,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	НЕ ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Подразделение КАК Подразделение,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	НЕ ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Должность КАК Должность,
	|	ВТ_УточненныеОснования.РабочееМесто КАК РабочееМесто,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Должность КАК Должность,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.РабочееМесто КАК РабочееМесто,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.Организация КАК Организация,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.Подразделение КАК Подразделение,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.Должность КАК Должность,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.РабочееМесто КАК РабочееМесто,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.УсловиеНормы КАК УсловиеНормы,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.НормаВыдачи КАК НормаВыдачи,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.Использовать КАК Использовать,
	|	НормыВыдачиСИЗСоставНормы.НоменклатураНормы КАК НоменклатураНормы,
	|	НормыВыдачиСИЗСоставНормы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи КАК ПериодичностьВыдачи,
	|	НормыВыдачиСИЗСоставНормы.ГОСТ КАК ГОСТ,
	|	НормыВыдачиСИЗСоставНормы.Ссылка.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	НормыВыдачиСИЗСоставНормы.Ссылка.ОснованиеНормы КАК ОснованиеНормы,
	|	НормыВыдачиСИЗСоставНормы.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ИсходныеНормы
	|ИЗ
	|	РегистрСведений.ИсходныеНормыВыдачиСИЗ КАК РегистрСведенийИсходныеНормыВыдачиСИЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|		ПО РегистрСведенийИсходныеНормыВыдачиСИЗ.НормаВыдачи = НормыВыдачиСИЗСоставНормы.Ссылка
	|ГДЕ
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.Организация = &Организация
	|	И РегистрСведенийИсходныеНормыВыдачиСИЗ.Подразделение = &Подразделение
	|	И РегистрСведенийИсходныеНормыВыдачиСИЗ.Должность = &Должность
	|	И РегистрСведенийИсходныеНормыВыдачиСИЗ.РабочееМесто = &РабочееМесто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсходныеНормы.Организация КАК Организация,
	|	ВТ_ИсходныеНормы.Подразделение КАК Подразделение,
	|	ВТ_ИсходныеНормы.Должность КАК Должность,
	|	ВТ_ИсходныеНормы.РабочееМесто КАК РабочееМесто,
	|	ВТ_ИсходныеНормы.УсловиеНормы КАК УсловиеНормы,
	|	ВТ_ИсходныеНормы.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ИсходныеНормы.Использовать КАК Использовать,
	|	ВТ_ИсходныеНормы.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ИсходныеНормы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ИсходныеНормы.ПериодичностьВыдачи КАК ПериодичностьВыдачи,
	|	ВТ_ИсходныеНормы.ГОСТ КАК ГОСТ,
	|	ВТ_ИсходныеНормы.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ВТ_ИсходныеНормы.ОснованиеНормы КАК ОснованиеНормы,
	|	ВТ_ИсходныеНормы.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВТ_ИсходныеНормы.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|			ТОГДА """"
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.Основание ЕСТЬ NULL
	|					ТОГДА ВЫБОР
	|							КОГДА ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто.Основание ЕСТЬ NULL
	|								ТОГДА ВЫБОР
	|										КОГДА ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто.Основание ЕСТЬ NULL
	|											ТОГДА ВЫБОР
	|													КОГДА ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто.Основание ЕСТЬ NULL
	|														ТОГДА ВЫБОР
	|																КОГДА ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто.Основание ЕСТЬ NULL
	|																	ТОГДА ВЫБОР
	|																			КОГДА ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто.Основание ЕСТЬ NULL
	|																				ТОГДА ВЫБОР
	|																						КОГДА ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто.Основание ЕСТЬ NULL
	|																							ТОГДА ВЫБОР
	|																									КОГДА ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто.Основание ЕСТЬ NULL
	|																										ТОГДА """"
	|																									ИНАЧЕ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто.Основание
	|																								КОНЕЦ
	|																						ИНАЧЕ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто.Основание
	|																					КОНЕЦ
	|																			ИНАЧЕ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто.Основание
	|																		КОНЕЦ
	|																ИНАЧЕ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто.Основание
	|															КОНЕЦ
	|													ИНАЧЕ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто.Основание
	|												КОНЕЦ
	|										ИНАЧЕ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто.Основание
	|									КОНЕЦ
	|							ИНАЧЕ ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто.Основание
	|						КОНЕЦ
	|				ИНАЧЕ ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.Основание
	|			КОНЕЦ
	|	КОНЕЦ КАК УточненноеОснованиеНормы
	|ИЗ
	|	ВТ_ИсходныеНормы КАК ВТ_ИсходныеНормы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто КАК ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто
	|		ПО ВТ_ИсходныеНормы.Подразделение = ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.Подразделение
	|			И ВТ_ИсходныеНормы.Должность = ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.Должность
	|			И ВТ_ИсходныеНормы.РабочееМесто = ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.РабочееМесто
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто КАК ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто
	|		ПО ВТ_ИсходныеНормы.Подразделение = ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто.Подразделение
	|			И ВТ_ИсходныеНормы.Должность = ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто.Должность
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто КАК ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто
	|		ПО ВТ_ИсходныеНормы.Подразделение = ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто.Подразделение
	|			И ВТ_ИсходныеНормы.РабочееМесто = ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто.РабочееМесто
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто КАК ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто
	|		ПО ВТ_ИсходныеНормы.Подразделение = ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто.Подразделение
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто КАК ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто
	|		ПО ВТ_ИсходныеНормы.Должность = ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто.Должность
	|			И ВТ_ИсходныеНормы.РабочееМесто = ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто.РабочееМесто
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто КАК ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто
	|		ПО ВТ_ИсходныеНормы.Должность = ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто.Должность
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто КАК ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто
	|		ПО ВТ_ИсходныеНормы.РабочееМесто = ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто.РабочееМесто
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто КАК ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто
	|		ПО ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто.НормаВыдачи";
	
	Запрос.УстановитьПараметр("Организация", 	СтруктураОтбора.Организация);
	Запрос.УстановитьПараметр("Подразделение", 	СтруктураОтбора.Подразделение);
	Запрос.УстановитьПараметр("Должность", 		СтруктураОтбора.Должность);
	Запрос.УстановитьПараметр("РабочееМесто", 	СтруктураОтбора.РабочееМесто);
	
	ИсходныеНормыТаблица = Запрос.Выполнить().Выгрузить();
	
	об=РеквизитФормыВЗначение("Объект");
    об.ИсходныеНормыТаблица.Загрузить(ИсходныеНормыТаблица);
    ЗначениеВРеквизитФормы(об, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуЦелевыхНорм(СтруктураОтбора)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УточненныеОснованияНормВыдачи.Подразделение КАК Подразделение,
	|	УточненныеОснованияНормВыдачи.Должность КАК Должность,
	|	УточненныеОснованияНормВыдачи.РабочееМесто КАК РабочееМесто,
	|	УточненныеОснованияНормВыдачи.НормаВыдачи КАК НормаВыдачи,
	|	УточненныеОснованияНормВыдачи.Основание КАК Основание,
	|	УточненныеОснованияНормВыдачи.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_УточненныеОснования
	|ИЗ
	|	РегистрСведений.УточненныеОснованияНормВыдачи КАК УточненныеОснованияНормВыдачи
	|ГДЕ
	|	УточненныеОснованияНормВыдачи.Организация = &Организация
	|	И (УточненныеОснованияНормВыдачи.Подразделение = &Подразделение
	|			ИЛИ УточненныеОснованияНормВыдачи.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|	И (УточненныеОснованияНормВыдачи.Должность = &Должность
	|			ИЛИ УточненныеОснованияНормВыдачи.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
	|	И (УточненныеОснованияНормВыдачи.РабочееМесто = &РабочееМесто
	|			ИЛИ УточненныеОснованияНормВыдачи.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Подразделение КАК Подразделение,
	|	ВТ_УточненныеОснования.Должность КАК Должность,
	|	ВТ_УточненныеОснования.РабочееМесто КАК РабочееМесто,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	НЕ ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Подразделение КАК Подразделение,
	|	ВТ_УточненныеОснования.Должность КАК Должность,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	НЕ ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Подразделение КАК Подразделение,
	|	ВТ_УточненныеОснования.РабочееМесто КАК РабочееМесто,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	НЕ ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Подразделение КАК Подразделение,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	НЕ ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Должность КАК Должность,
	|	ВТ_УточненныеОснования.РабочееМесто КАК РабочееМесто,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.Должность КАК Должность,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.РабочееМесто КАК РабочееМесто,
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И НЕ ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УточненныеОснования.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УточненныеОснования.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто
	|ИЗ
	|	ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|ГДЕ
	|	ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|	И ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.Организация КАК Организация,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.Подразделение КАК Подразделение,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.Должность КАК Должность,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.РабочееМесто КАК РабочееМесто,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.УсловиеНормы КАК УсловиеНормы,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.НормаВыдачи КАК НормаВыдачи,
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.Использовать КАК Использовать,
	|	НормыВыдачиСИЗСоставНормы.НоменклатураНормы КАК НоменклатураНормы,
	|	НормыВыдачиСИЗСоставНормы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи КАК ПериодичностьВыдачи,
	|	НормыВыдачиСИЗСоставНормы.ГОСТ КАК ГОСТ,
	|	НормыВыдачиСИЗСоставНормы.Ссылка.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	НормыВыдачиСИЗСоставНормы.Ссылка.ОснованиеНормы КАК ОснованиеНормы,
	|	НормыВыдачиСИЗСоставНормы.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ИсходныеНормы
	|ИЗ
	|	РегистрСведений.ИсходныеНормыВыдачиСИЗ КАК РегистрСведенийИсходныеНормыВыдачиСИЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|		ПО РегистрСведенийИсходныеНормыВыдачиСИЗ.НормаВыдачи = НормыВыдачиСИЗСоставНормы.Ссылка
	|ГДЕ
	|	РегистрСведенийИсходныеНормыВыдачиСИЗ.Организация = &Организация
	|	И РегистрСведенийИсходныеНормыВыдачиСИЗ.Подразделение = &Подразделение
	|	И РегистрСведенийИсходныеНормыВыдачиСИЗ.Должность = &Должность
	|	И РегистрСведенийИсходныеНормыВыдачиСИЗ.РабочееМесто = &РабочееМесто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсходныеНормы.Организация КАК Организация,
	|	ВТ_ИсходныеНормы.Подразделение КАК Подразделение,
	|	ВТ_ИсходныеНормы.Должность КАК Должность,
	|	ВТ_ИсходныеНормы.РабочееМесто КАК РабочееМесто,
	|	ВТ_ИсходныеНормы.УсловиеНормы КАК УсловиеНормы,
	|	ВТ_ИсходныеНормы.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ИсходныеНормы.Использовать КАК Использовать,
	|	ВТ_ИсходныеНормы.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ИсходныеНормы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ИсходныеНормы.ПериодичностьВыдачи КАК ПериодичностьВыдачи,
	|	ВТ_ИсходныеНормы.ГОСТ КАК ГОСТ,
	|	ВТ_ИсходныеНормы.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ВТ_ИсходныеНормы.ОснованиеНормы КАК ОснованиеНормы,
	|	ВТ_ИсходныеНормы.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВТ_ИсходныеНормы.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|			ТОГДА """"
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.Основание ЕСТЬ NULL
	|					ТОГДА ВЫБОР
	|							КОГДА ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто.Основание ЕСТЬ NULL
	|								ТОГДА ВЫБОР
	|										КОГДА ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто.Основание ЕСТЬ NULL
	|											ТОГДА ВЫБОР
	|													КОГДА ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто.Основание ЕСТЬ NULL
	|														ТОГДА ВЫБОР
	|																КОГДА ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто.Основание ЕСТЬ NULL
	|																	ТОГДА ВЫБОР
	|																			КОГДА ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто.Основание ЕСТЬ NULL
	|																				ТОГДА ВЫБОР
	|																						КОГДА ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто.Основание ЕСТЬ NULL
	|																							ТОГДА ВЫБОР
	|																									КОГДА ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто.Основание ЕСТЬ NULL
	|																										ТОГДА """"
	|																									ИНАЧЕ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто.Основание
	|																								КОНЕЦ
	|																						ИНАЧЕ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто.Основание
	|																					КОНЕЦ
	|																			ИНАЧЕ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто.Основание
	|																		КОНЕЦ
	|																ИНАЧЕ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто.Основание
	|															КОНЕЦ
	|													ИНАЧЕ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто.Основание
	|												КОНЕЦ
	|										ИНАЧЕ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто.Основание
	|									КОНЕЦ
	|							ИНАЧЕ ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто.Основание
	|						КОНЕЦ
	|				ИНАЧЕ ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.Основание
	|			КОНЕЦ
	|	КОНЕЦ КАК УточненноеОснованиеНормы
	|ИЗ
	|	ВТ_ИсходныеНормы КАК ВТ_ИсходныеНормы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто КАК ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто
	|		ПО ВТ_ИсходныеНормы.Подразделение = ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.Подразделение
	|			И ВТ_ИсходныеНормы.Должность = ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.Должность
	|			И ВТ_ИсходныеНормы.РабочееМесто = ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.РабочееМесто
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_Подразделение_Должность_РабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто КАК ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто
	|		ПО ВТ_ИсходныеНормы.Подразделение = ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто.Подразделение
	|			И ВТ_ИсходныеНормы.Должность = ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто.Должность
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_Подразделение_Должность_ПустоеРабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто КАК ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто
	|		ПО ВТ_ИсходныеНормы.Подразделение = ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто.Подразделение
	|			И ВТ_ИсходныеНормы.РабочееМесто = ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто.РабочееМесто
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_РабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто КАК ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто
	|		ПО ВТ_ИсходныеНормы.Подразделение = ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто.Подразделение
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_Подразделение_ПустаяДолжность_ПустоеРабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто КАК ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто
	|		ПО ВТ_ИсходныеНормы.Должность = ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто.Должность
	|			И ВТ_ИсходныеНормы.РабочееМесто = ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто.РабочееМесто
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_ПустоеПодразделение_Должность_РабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто КАК ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто
	|		ПО ВТ_ИсходныеНормы.Должность = ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто.Должность
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_ПустоеПодразделение_Должность_ПустоеРабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто КАК ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто
	|		ПО ВТ_ИсходныеНормы.РабочееМесто = ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто.РабочееМесто
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_РабочееМесто.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто КАК ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто
	|		ПО ВТ_ИсходныеНормы.НормаВыдачи = ВТ_УточненныеОснования_ПустоеПодразделение_ПустаяДолжность_ПустоеРабочееМесто.НормаВыдачи";
	
	Запрос.УстановитьПараметр("Организация", 	СтруктураОтбора.Организация);
	Запрос.УстановитьПараметр("Подразделение", 	СтруктураОтбора.Подразделение);
	Запрос.УстановитьПараметр("Должность", 		СтруктураОтбора.Должность);
	Запрос.УстановитьПараметр("РабочееМесто", 	СтруктураОтбора.РабочееМесто);
	
	ЦелевыеНормыТаблица = Запрос.Выполнить().Выгрузить();
	
	об=РеквизитФормыВЗначение("Объект");
    об.ЦелевыеНормыТаблица.Загрузить(ЦелевыеНормыТаблица);
    ЗначениеВРеквизитФормы(об, "Объект");
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИспользованияНормПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока = Неопределено Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	Если Метаданные.Справочники.Найти("НормыОрганизаций") = Неопределено Тогда
		
		 ЭтаФорма.Элементы.ФормаЗагрузитьИзСтарыхДанных.Видимость = Ложь;
		 
	Иначе
		 
		 ЭтаФорма.Элементы.ФормаЗагрузитьИзСтарыхДанных.Видимость = Истина;
		
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ЭтаФорма.Элементы.ТаблицаИспользованияНорм.ПодчиненныеЭлементы.ТаблицаИспользованияНормРабочееМесто.Видимость 	= Объект.Организация.ИспользоватьРабочиеМеста; 
		ЭтаФорма.Элементы.ИсходныеНормы.ПодчиненныеЭлементы.ИсходныеНормыРабочееМесто.Видимость 						= Объект.Организация.ИспользоватьРабочиеМеста;
		ЭтаФорма.Элементы.ЦелевыеНормы.ПодчиненныеЭлементы.ЦелевыеНормыРабочееМесто.Видимость 							= Объект.Организация.ИспользоватьРабочиеМеста;
	Иначе
		ЭтаФорма.Элементы.ТаблицаИспользованияНормРабочееМесто.Видимость 	= Истина;
	КонецЕсли;
	
	ЭтаФорма.Элементы.ГруппаЗагрузкаИзФайла.Видимость 	= ЭтаФорма.Элементы.ФормаЗагрузкаИзФайла.Пометка;
	ЭтаФорма.Элементы.ГруппаНормыВыдачи.ТолькоПросмотр = НЕ ЗначениеЗаполнено(Объект.Организация);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеИсходныхНормВыдачиСИЗ(ТекущаяНормаВыдачи)
	
	ТаблицаДляЗаписи = РеквизитФормыВЗначение("ТаблицаИспользованияНорм");
	
	НаборЗаписей = РегистрыСведений.ИсходныеНормыВыдачиСИЗ.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
	НаборЗаписей.Отбор.НормаВыдачи.Установить(ТекущаяНормаВыдачи);
	НаборЗаписей.Прочитать();
	
	Если НЕ НаборЗаписей.Количество() = 0 Тогда
		
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
	ТаблицаДляЗаписи.Свернуть("Подразделение,Должность,РабочееМесто,УсловиеНормы,Использовать");
	
	Для Каждого СтрокаТаблицыДляЗаписи Из ТаблицаДляЗаписи Цикл
		
		НоваяЗапись 				= НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись,СтрокаТаблицыДляЗаписи);
		НоваяЗапись.Организация 	= Объект.Организация;
		НоваяЗапись.НормаВыдачи 	= ТекущаяНормаВыдачи;
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТаблицаДляЗаписи,"ТаблицаИспользованияНорм");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИспользованияНормПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущиеДанные = ЭтаФорма.Элементы.ТаблицаИспользованияНорм.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.УсловиеНормы) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока = Неопределено Тогда
		ТекущаяНормаВыдачи = ПредопределенноеЗначение("Справочник.НормыВыдачиСИЗ.ПустаяСсылка");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Истина);
	Иначе
		Если ЗначениеЗаполнено(ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока) Тогда
			ТекущаяНормаВыдачи = ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока;
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Истина);
		Иначе
			ТекущаяНормаВыдачи = ПредопределенноеЗначение("Справочник.НормыВыдачиСИЗ.ПустаяСсылка");
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьДанныеИсходныхНормВыдачиСИЗ(ТекущаяНормаВыдачи);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИспользованияНормПослеУдаления(Элемент)
	
	Если ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока = Неопределено Тогда
		ТекущаяНормаВыдачи = ПредопределенноеЗначение("Справочник.НормыВыдачиСИЗ.ПустаяСсылка");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Истина);
	Иначе
		Если ЗначениеЗаполнено(ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока) Тогда
			ТекущаяНормаВыдачи = ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока;
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Истина);
		Иначе
			ТекущаяНормаВыдачи = ПредопределенноеЗначение("Справочник.НормыВыдачиСИЗ.ПустаяСсылка");
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьДанныеИсходныхНормВыдачиСИЗ(ТекущаяНормаВыдачи);
	
КонецПроцедуры

&НаСервере
Функция ИзСтрокиСРазделителями(Значение,Разделитель = ";")
	
	ДлинаРазделителя = СтрДлина(Разделитель);
	
	Рез = Новый Массив();
	Стр = СокрЛП(Значение);
	
	Если Стр = "" Тогда
		Возврат Рез; 
	КонецЕсли; 
	
	Поз = Найти(Стр,Разделитель);
	Пока Поз > 0 Цикл
		Рез.Добавить(СокрЛП(Лев(Стр,Поз-1)));
		Стр = Прав(Стр,СтрДлина(Стр) - Поз - ДлинаРазделителя + 1);
		Поз = Найти(Стр,Разделитель);
	КонецЦикла;
	
	Рез.Добавить(СокрЛП(Стр));
	
	Возврат Рез;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьЗагрузкуНорм(Команда)
	
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(НОВЫЙ ДвоичныеДанные(Объект.ФайлЗагрузки),ЭтаФорма.УникальныйИдентификатор);
	
	ВыполнитьЗагрузкуНормНаСервере(АдресВременногоХранилища);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.НормыВыдачиСИЗ.Отбор, "Владелец", Объект.Организация,ВидСравненияКомпоновкиДанных.Равно, "Владелец", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗагрузкуНормНаСервере(АдресВременногоХранилища)
	
	ТаблицаОКПДТР = ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуДолжностейИзОКПДТР();
	
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	ВременныйФайл = ПолучитьИмяВременногоФайла("xls");
	
	ДвоичныеДанныеФайла.Записать(ВременныйФайл);
	
	Попытка
		xl 				= Новый COMОбъект("Excel.Application");  
		Книга 			= xl.Application.Workbooks.Open(ВременныйФайл);
		ТекущийЛист 	= Книга.WorkSheets(1);
		КоличествоСтрок = ТекущийЛист.Cells(1,1).SpecialCells(11).Row;
	Исключение
		Сообщить("Не удалось открыть файл в Excel");
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	ТаблицаДанныхФайла = Новый ТаблицаЗначений;
	ТаблицаДанныхФайла.Колонки.Добавить("КодПодразделения", 			Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(20)));
	ТаблицаДанныхФайла.Колонки.Добавить("НаименованиеДолжности", 		Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТаблицаДанныхФайла.Колонки.Добавить("НаименованиеНоменклатурыНормы",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(150)));
	ТаблицаДанныхФайла.Колонки.Добавить("КоличествоВПериоде", 			Новый ОписаниеТипов("Число"));
	ТаблицаДанныхФайла.Колонки.Добавить("КодЕдиницыИзмерения", 			Новый ОписаниеТипов("Число"));
	ТаблицаДанныхФайла.Колонки.Добавить("Основание", 					Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТаблицаДанныхФайла.Колонки.Добавить("ГОСТ", 						Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(200)));
	ТаблицаДанныхФайла.Колонки.Добавить("КоличествоПериодов", 			Новый ОписаниеТипов("Число"));
 	ТаблицаДанныхФайла.Колонки.Добавить("ТипПериода", 					Новый ОписаниеТипов("ПеречислениеСсылка.ДоступныеПериодыОтчета"));
	ТаблицаДанныхФайла.Колонки.Добавить("ВидРасчета", 					Новый ОписаниеТипов("ПеречислениеСсылка.ВидыРасчетаНорм"));
	ТаблицаДанныхФайла.Колонки.Добавить("УсловиеНормы", 				Новый ОписаниеТипов("СправочникСсылка.УсловияНорм"));
	ТаблицаДанныхФайла.Колонки.Добавить("НомерГруппы", 					Новый ОписаниеТипов("Число"));
	ТаблицаДанныхФайла.Колонки.Добавить("ВидВыдачи", 					Новый ОписаниеТипов("ПеречислениеСсылка.ВидыВыдачиСИЗ"));
	ТаблицаДанныхФайла.Колонки.Добавить("НомерТОН", 					Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(10)));
	ТаблицаДанныхФайла.Колонки.Добавить("НомерПриложенияТОН", 			Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(5)));
	ТаблицаДанныхФайла.Колонки.Добавить("НомерПрофессииТОН",			Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(25)));
	
	//читаем исходный файл и помещает данные в таблицу для дальнейшей обработки
	Для Сч = 2 По КоличествоСтрок Цикл
		
		НомерПоПорядку 						= СокрЛП(ТекущийЛист.Cells(Сч, 1).Value);
		МассивОКПДТР 						= ИзСтрокиСРазделителями(СокрЛП(ТекущийЛист.Cells(Сч, 2).Value));
		МассивДолжностей 					= ИзСтрокиСРазделителями(СокрЛП(ТекущийЛист.Cells(Сч, 3).Value));
		Основание							= СокрЛП(ТекущийЛист.Cells(Сч, 4).Value);
		НомерТОН							= СокрЛП(ТекущийЛист.Cells(Сч, 5).Value);
		НомерПриложенияТОН					= СокрЛП(ТекущийЛист.Cells(Сч, 6).Value);
		НомерПрофессииТОН					= ?(ЗначениеЗаполнено(СокрЛП(ТекущийЛист.Cells(Сч, 7).Value)),Число(СокрЛП(ТекущийЛист.Cells(Сч, 7).Value)),0);
		УсловиеНормы						= ПроцедурыРаботыСНормамиСервер.ПолучитьУсловиеНормы(СокрЛП(ТекущийЛист.Cells(Сч, 8).Value));
		НомерГруппы							= ?(ЗначениеЗаполнено(СокрЛП(ТекущийЛист.Cells(Сч, 9).Value)),Число(СокрЛП(ТекущийЛист.Cells(Сч, 9).Value)),0);
		Наименование						= СокрЛП(ТекущийЛист.Cells(Сч,10).Value);
		ГОСТ								= СокрЛП(ТекущийЛист.Cells(Сч,11).Value);
		УсловныеОбозначенияЗащитныхСвойств	= СокрЛП(ТекущийЛист.Cells(Сч,12).Value);
		КоличествоВПериоде					= ?(ЗначениеЗаполнено(СокрЛП(ТекущийЛист.Cells(Сч, 13).Value)),Число(СокрЛП(ТекущийЛист.Cells(Сч, 13).Value)),0);
		КодЕдиницыИзмерения					= СокрЛП(ТекущийЛист.Cells(Сч, 14).Value);
		КоличествоПериодов					= ?(ЗначениеЗаполнено(СокрЛП(ТекущийЛист.Cells(Сч, 15).Value)),Число(СокрЛП(ТекущийЛист.Cells(Сч, 15).Value)),0);
		НаименованиеПериода					= СокрЛП(ТекущийЛист.Cells(Сч, 16).Value);
		КодПодразделения					= СокрЛП(ТекущийЛист.Cells(Сч, 17).Value);
		НаименованиеПодразделения			= СокрЛП(ТекущийЛист.Cells(Сч, 18).Value);
		ВидВыдачи							= СокрЛП(ТекущийЛист.Cells(Сч, 19).Value);
		ВидРасчета							= СокрЛП(ТекущийЛист.Cells(Сч, 20).Value);
		
		Для Каждого ЭлементМассива Из МассивДолжностей Цикл
			
			НоваяСтрока 								= ТаблицаДанныхФайла.Добавить();
			НоваяСтрока.КодПодразделения 				= КодПодразделения;
			НоваяСтрока.НаименованиеДолжности 			= ПроцедурыРаботыСНормамиСервер.НормализоватьНаименование(ЭлементМассива);
			НоваяСтрока.НаименованиеНоменклатурыНормы 	= ПроцедурыРаботыСНормамиСервер.НормализоватьНаименование(Наименование);
			НоваяСтрока.КоличествоВПериоде 				= КоличествоВПериоде;
			НоваяСтрока.КодЕдиницыИзмерения 			= КодЕдиницыИзмерения;
			НоваяСтрока.Основание 						= Основание;
			НоваяСтрока.ГОСТ 							= ГОСТ;
			НоваяСтрока.КоличествоПериодов 				= КоличествоПериодов;
			НоваяСтрока.УсловиеНормы 					= УсловиеНормы;
			НоваяСтрока.НомерГруппы 					= НомерГруппы;
			НоваяСтрока.НомерТОН 						= НомерТОН;
			НоваяСтрока.НомерПриложенияТОН 				= НомерПриложенияТОН;
			НоваяСтрока.НомерПрофессииТОН 				= ?(ЗначениеЗаполнено(НомерПрофессииТОН),НомерПрофессииТОН,"Не задан");
			
			Если НРег(НаименованиеПериода) = "год" Тогда
				НоваяСтрока.ТипПериода = Перечисления.ДоступныеПериодыОтчета.Год;
			ИначеЕсли НРег(НаименованиеПериода) = "месяц" Тогда
				НоваяСтрока.ТипПериода = Перечисления.ДоступныеПериодыОтчета.Месяц;
			Иначе
				НоваяСтрока.ТипПериода = Перечисления.ДоступныеПериодыОтчета.ПустаяСсылка();
			КонецЕсли;
			
			Если НРег(ВидРасчета) = "период" Тогда
				НоваяСтрока.ВидРасчета = Перечисления.ВидыРасчетаНорм.Период;
			ИначеЕсли НРег(ВидРасчета) = "дежурные" Тогда
				НоваяСтрока.ВидРасчета = Перечисления.ВидыРасчетаНорм.Дежурный;
			ИначеЕсли НРег(ВидРасчета) = "до износа" Тогда
				НоваяСтрока.ВидРасчета = Перечисления.ВидыРасчетаНорм.ДоИзноса;
			Иначе
				НоваяСтрока.ВидРасчета = Перечисления.ВидыРасчетаНорм.ПустаяСсылка();
			КонецЕсли;
			
			Если НРег(ВидВыдачи) = "персонально" Тогда
				НоваяСтрока.ВидВыдачи = Перечисления.ВидыВыдачиСИЗ.ПерсональнаяВыдача;
			Иначе
				НоваяСтрока.ВидВыдачи = Перечисления.ВидыВыдачиСИЗ.КоллективнаяВыдача;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДляПоискаДанных.КодПодразделения,
	|	ТаблицаДляПоискаДанных.НаименованиеДолжности,
	|	ТаблицаДляПоискаДанных.НаименованиеНоменклатурыНормы,
	|	ТаблицаДляПоискаДанных.КоличествоВПериоде,
	|	ТаблицаДляПоискаДанных.КоличествоПериодов,
	|	ТаблицаДляПоискаДанных.ТипПериода,
	|	ТаблицаДляПоискаДанных.КодЕдиницыИзмерения,
	|	ТаблицаДляПоискаДанных.НомерГруппы,
	|	ТаблицаДляПоискаДанных.НомерТОН,
	|	ТаблицаДляПоискаДанных.НомерПриложенияТОН,
	|	ТаблицаДляПоискаДанных.НомерПрофессииТОН
	|ПОМЕСТИТЬ ТаблицаДляПоискаДанных
	|ИЗ
	|	&ТаблицаДляПоискаДанных КАК ТаблицаДляПоискаДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляПоискаДанных.КодПодразделения,
	|	ЕСТЬNULL(Подразделения.Ссылка, ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)) КАК Подразделение
	|ИЗ
	|	ТаблицаДляПоискаДанных КАК ТаблицаДляПоискаДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подразделения КАК Подразделения
	|		ПО ТаблицаДляПоискаДанных.КодПодразделения = Подразделения.КодСинхронизации
	|ГДЕ
	|	Подразделения.Владелец = &Организация
	|	И НЕ ТаблицаДляПоискаДанных.КодПодразделения = """"
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДляПоискаДанных.КодПодразделения,
	|	ЕСТЬNULL(Подразделения.Ссылка, ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляПоискаДанных.НаименованиеДолжности,
	|	ЕСТЬNULL(ДолжностиИПрофессии.Ссылка, ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)) КАК Должность
	|ИЗ
	|	ТаблицаДляПоискаДанных КАК ТаблицаДляПоискаДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДолжностиИПрофессии КАК ДолжностиИПрофессии
	|		ПО ТаблицаДляПоискаДанных.НаименованиеДолжности = ДолжностиИПрофессии.Наименование
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДляПоискаДанных.НаименованиеДолжности,
	|	ЕСТЬNULL(ДолжностиИПрофессии.Ссылка, ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляПоискаДанных.НаименованиеНоменклатурыНормы КАК НаименованиеНоменклатурыНормы,
	|	ЕСТЬNULL(НоменклатураНорм.Ссылка, ЗНАЧЕНИЕ(Справочник.НоменклатураНормОрганизации.ПустаяСсылка)) КАК НоменклатураНормы
	|ИЗ
	|	ТаблицаДляПоискаДанных КАК ТаблицаДляПоискаДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НоменклатураНормОрганизации.Ссылка КАК Ссылка,
	|			НоменклатураНормОрганизации.Наименование КАК Наименование
	|		ИЗ
	|			Справочник.НоменклатураНормОрганизации КАК НоменклатураНормОрганизации
	|		ГДЕ
	|			НоменклатураНормОрганизации.Владелец = &Организация) КАК НоменклатураНорм
	|		ПО ТаблицаДляПоискаДанных.НаименованиеНоменклатурыНормы = НоменклатураНорм.Наименование
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДляПоискаДанных.НаименованиеНоменклатурыНормы,
	|	ЕСТЬNULL(НоменклатураНорм.Ссылка, ЗНАЧЕНИЕ(Справочник.НоменклатураНормОрганизации.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляПоискаДанных.КодЕдиницыИзмерения,
	|	ЕСТЬNULL(ЕдиницыИзмерения.Ссылка, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения
	|ИЗ
	|	ТаблицаДляПоискаДанных КАК ТаблицаДляПоискаДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО ТаблицаДляПоискаДанных.КодЕдиницыИзмерения = ЕдиницыИзмерения.Код
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДляПоискаДанных.КодЕдиницыИзмерения,
	|	ЕСТЬNULL(ЕдиницыИзмерения.Ссылка, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляПоискаДанных.КоличествоВПериоде,
	|	ТаблицаДляПоискаДанных.КоличествоПериодов,
	|	ТаблицаДляПоискаДанных.ТипПериода,
	|	ЕСТЬNULL(ПериодичностьВыдачиСИЗ.Ссылка, ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)) КАК ПериодичностьВыдачи
	|ИЗ
	|	ТаблицаДляПоискаДанных КАК ТаблицаДляПоискаДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПериодичностьВыдачиСИЗ КАК ПериодичностьВыдачиСИЗ
	|		ПО ТаблицаДляПоискаДанных.КоличествоВПериоде = ПериодичностьВыдачиСИЗ.КоличествоВПериоде
	|			И ТаблицаДляПоискаДанных.КоличествоПериодов = ПериодичностьВыдачиСИЗ.КоличествоПериодов
	|			И ТаблицаДляПоискаДанных.ТипПериода = ПериодичностьВыдачиСИЗ.ТипПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДляПоискаДанных.КоличествоВПериоде,
	|	ТаблицаДляПоискаДанных.КоличествоПериодов,
	|	ТаблицаДляПоискаДанных.ТипПериода,
	|	ЕСТЬNULL(ПериодичностьВыдачиСИЗ.Ссылка, ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляПоискаДанных.НомерГруппы КАК НомерГруппы,
	|	ТаблицаДляПоискаДанных.НаименованиеДолжности
	|ИЗ
	|	ТаблицаДляПоискаДанных КАК ТаблицаДляПоискаДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДляПоискаДанных.НомерГруппы,
	|	ТаблицаДляПоискаДанных.НаименованиеДолжности
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерГруппы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДляПоискаДанных.НомерТОН,
	|	ТаблицаДляПоискаДанных.НомерПриложенияТОН,
	|	ТаблицаДляПоискаДанных.НомерПрофессииТОН,
	|	ПунктыТОН.Владелец КАК ТОН,
	|	ПунктыТОН.Ссылка КАК ПунктТОН
	|ИЗ
	|	ТаблицаДляПоискаДанных КАК ТаблицаДляПоискаДанных
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПунктыТОН КАК ПунктыТОН
	|		ПО (ВЫБОР
	|				КОГДА ТаблицаДляПоискаДанных.НомерПриложенияТОН = """"
	|					ТОГДА ""ТОН №"" + ТаблицаДляПоискаДанных.НомерТОН
	|				ИНАЧЕ ""ТОН №"" + ТаблицаДляПоискаДанных.НомерТОН + "", приложение №"" + ТаблицаДляПоискаДанных.НомерПриложенияТОН
	|			КОНЕЦ = ПунктыТОН.Владелец.Наименование)
	|			И (ВЫБОР
	|				КОГДА ТаблицаДляПоискаДанных.НомерПрофессииТОН = ""Не задан""
	|					ТОГДА ТаблицаДляПоискаДанных.НомерПрофессииТОН = ПунктыТОН.Наименование
	|				ИНАЧЕ ""№"" + ТаблицаДляПоискаДанных.НомерПрофессииТОН = ПунктыТОН.Наименование
	|			КОНЕЦ)
	|ГДЕ
	|	НЕ ТаблицаДляПоискаДанных.НомерТОН = """"";
	
	Запрос.УстановитьПараметр("ТаблицаДляПоискаДанных",	ТаблицаДанныхФайла);
	Запрос.УстановитьПараметр("Организация",			Объект.Организация);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаПодразделений 		= Результат[1].Выгрузить();
	ТаблицаДолжностей 			= Результат[2].Выгрузить();
	ТаблицаНоменклатурыНормы 	= Результат[3].Выгрузить();
	ТаблицаЕдиницИзмерения 		= Результат[4].Выгрузить();
	ТаблицаПериодичностиВыдачи 	= Результат[5].Выгрузить();
	ТаблицаГрупп 				= Результат[6].Выгрузить();
	ТаблицаТОН                  = Результат[7].Выгрузить();
	
	//заполняем пустые должности в таблице
	Для Каждого СтрокаТаблицыДолжностей Из ТаблицаДолжностей Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицыДолжностей.Должность) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицыДолжностей.Должность = ПроцедурыРаботыСНормамиСервер.ПолучитьДолжность(ТаблицаОКПДТР,СтрокаТаблицыДолжностей.НаименованиеДолжности);
		
	КонецЦикла;
	
	//заполняем пустые ТОНы и пункты ТОН
	Для Каждого СтрокаТаблицыТОН Из ТаблицаТОН Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицыТОН.ТОН) Тогда
			СтрокаТаблицыТОН.ТОН = ПроцедурыРаботыСНормамиСервер.ПолучитьТОН("ТОН №" + СтрокаТаблицыТОН.НомерТОН + ?(ЗначениеЗаполнено(СтрокаТаблицыТОН.НомерПриложенияТОН),", приложение №" + СтрокаТаблицыТОН.НомерПриложенияТОН,""));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицыТОН.ПунктТОН) Тогда
			СтрокаТаблицыТОН.ПунктТОН = ПроцедурыРаботыСНормамиСервер.ПолучитьПунктТОН(СтрокаТаблицыТОН.ТОН,СтрокаТаблицыТОН.НомерПрофессииТОН);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Объект.УчитыватьШтатноеРасписание Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ШтатноеРасписаниеСрезПоследних.Должность КАК Должность,
		|	ШтатноеРасписаниеСрезПоследних.Подразделение КАК Подразделение
		|ИЗ
		|	РегистрСведений.ШтатноеРасписание.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И Должность В (&МассивДолжностей)
		|				И КоличествоСтавок > 0) КАК ШтатноеРасписаниеСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ШтатноеРасписаниеСрезПоследних.Должность,
		|	ШтатноеРасписаниеСрезПоследних.Подразделение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Должность,
		|	Подразделение";
		
		Запрос.УстановитьПараметр("Организация",		Объект.Организация);
		Запрос.УстановитьПараметр("МассивДолжностей",	ТаблицаДолжностей.ВыгрузитьКолонку("Должность"));
		Запрос.УстановитьПараметр("Период",				ТекущаяДата());
		
		ТаблицаШтатногоРасписания = Запрос.Выполнить().Выгрузить();
		
	Иначе
		
		ТаблицаШтатногоРасписания = Неопределено;
		
	КонецЕсли;
	
	//заполняем пустые значения номенклатуры норм 
	Для Каждого СтрокаТаблицыНоменклатурыНорм Из ТаблицаНоменклатурыНормы Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицыНоменклатурыНорм.НоменклатураНормы) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицыНоменклатурыНорм.НоменклатураНормы = ПроцедурыРаботыСНормамиСервер.ПолучитьНоменклатуруНормыОрганизации(СтрокаТаблицыНоменклатурыНорм.НаименованиеНоменклатурыНормы,Объект.Организация);
		
	КонецЦикла;
	
	//заполняем пустые единицы измерения
	Для Каждого СтрокаТаблицыЕдиницИзмерения Из ТаблицаЕдиницИзмерения Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицыЕдиницИзмерения.ЕдиницаИзмерения) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицыЕдиницИзмерения.ЕдиницаИзмерения = ПроцедурыРаботыСНормамиСервер.ПолучитьЕдиницуИзмерения(СтрокаТаблицыЕдиницИзмерения.КодЕдиницыИзмерения);
		
	КонецЦикла;
	
	//заполняем пустые значения периодичности
	Для Каждого СтрокаТаблицыПериодичностиВыдачи Из ТаблицаПериодичностиВыдачи Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицыПериодичностиВыдачи.ПериодичностьВыдачи) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицыПериодичностиВыдачи.ПериодичностьВыдачи = ПроцедурыРаботыСНормамиСервер.ПолучитьПериодичностьВыдачи(СтрокаТаблицыПериодичностиВыдачи.ТипПериода,СтрокаТаблицыПериодичностиВыдачи.КоличествоПериодов,СтрокаТаблицыПериодичностиВыдачи.КоличествоВПериоде);
		
	КонецЦикла;	
	
	ТаблицаСоставаНормы = Новый ТаблицаЗначений;
	ТаблицаСоставаНормы.Колонки.Добавить("НомерСтроки",				Новый ОписаниеТипов("Число"));
	ТаблицаСоставаНормы.Колонки.Добавить("НоменклатураНормы",		Новый ОписаниеТипов("СправочникСсылка.НоменклатураНормОрганизации"));
	ТаблицаСоставаНормы.Колонки.Добавить("ЕдиницаИзмерения",		Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
	ТаблицаСоставаНормы.Колонки.Добавить("ПериодичностьВыдачи",		Новый ОписаниеТипов("СправочникСсылка.ПериодичностьВыдачиСИЗ"));
	ТаблицаСоставаНормы.Колонки.Добавить("ГОСТ",					Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(200)));
	ТаблицаСоставаНормы.Колонки.Добавить("УчитыватьВПотребности",	Новый ОписаниеТипов("Булево"));
	
	ТаблицаДляЗаписиНормВыдачиСИЗ = Новый ТаблицаЗначений;
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("Организация",	Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("Подразделение",	Новый ОписаниеТипов("СправочникСсылка.Подразделения"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("Должность",		Новый ОписаниеТипов("СправочникСсылка.ДолжностиИПрофессии"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("РабочееМесто",	Новый ОписаниеТипов("СправочникСсылка.РабочиеМестаАСТБ"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("УсловиеНормы",	Новый ОписаниеТипов("СправочникСсылка.УсловияНорм"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("НормаВыдачи",	Новый ОписаниеТипов("СправочникСсылка.НормыВыдачиСИЗ"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("Использовать",	Новый ОписаниеТипов("Булево"));
	
	//создаем нормы выдачи
	СтарыйНомерГруппы = 0;
	НомерСтроки = 1;
	
	Для Каждого СтрокаТаблицыГрупп Из ТаблицаГрупп Цикл
		
		НайденныеСтрокиГруппы = ТаблицаДанныхФайла.НайтиСтроки(НОВЫЙ Структура("НомерГруппы,НаименованиеДолжности",СтрокаТаблицыГрупп.НомерГруппы,СтрокаТаблицыГрупп.НаименованиеДолжности));
		
		Если СтрокаТаблицыГрупп.НомерГруппы = 0 Тогда //это не группа
			
			Для Каждого НайденнаяСтрока Из НайденныеСтрокиГруппы Цикл
				
				СтруктураПоискаПВ = Новый Структура("КоличествоВПериоде,КоличествоПериодов,ТипПериода",НайденнаяСтрока.КоличествоВПериоде,НайденнаяСтрока.КоличествоПериодов,НайденнаяСтрока.ТипПериода);
				
				ТаблицаСоставаНормы.Очистить();
				НоваяСтрокаСостава 							= ТаблицаСоставаНормы.Добавить();
				СтрокаНН 									= ТаблицаНоменклатурыНормы.Найти(НайденнаяСтрока.НаименованиеНоменклатурыНормы,"НаименованиеНоменклатурыНормы");
				НоваяСтрокаСостава.НоменклатураНормы 		= СтрокаНН.НоменклатураНормы;
				СтрокаЕИ 									= ТаблицаЕдиницИзмерения.Найти(НайденнаяСтрока.КодЕдиницыИзмерения,"КодЕдиницыИзмерения");
				НоваяСтрокаСостава.ЕдиницаИзмерения 		= СтрокаЕИ.ЕдиницаИзмерения;
				СтрокиПВ 									= ТаблицаПериодичностиВыдачи.НайтиСтроки(СтруктураПоискаПВ);
				НоваяСтрокаСостава.ПериодичностьВыдачи 		= СтрокиПВ[0].ПериодичностьВыдачи;
				НоваяСтрокаСостава.ГОСТ				 		= НайденнаяСтрока.ГОСТ;
				НоваяСтрокаСостава.НомерСтроки 				= 1;
				НоваяСтрокаСостава.УчитыватьВПотребности	= ЗначениеЗаполнено(НоваяСтрокаСостава.ПериодичностьВыдачи);
				
				ВидВыдачиСИЗ = НайденнаяСтрока.ВидВыдачи;
				
				Если ЗначениеЗаполнено(НайденнаяСтрока.НомерТОН) Тогда
					НайденныеСтроки = ТаблицаТОН.НайтиСтроки(Новый Структура("НомерТОН, НомерПриложенияТОН, НомерПрофессииТОН",НайденнаяСтрока.НомерТОН,НайденнаяСтрока.НомерПриложенияТОН,НайденнаяСтрока.НомерПрофессииТОН));
					ТекущееОснование = НайденныеСтроки[0].ПунктТОН;
				Иначе
					ТекущееОснование = НайденнаяСтрока.Основание;
				КонецЕсли;
				
				СтруктураНормы = Новый Структура("Организация, ВидРасчета, ВидВыдачиСИЗ, ОснованиеНормы",Объект.Организация,НайденнаяСтрока.ВидРасчета,ВидВыдачиСИЗ,ТекущееОснование);
				
				НормаВыдачи = ПроцедурыРаботыСНормамиСервер.ПолучитьНормуВыдачиСИЗ(ТаблицаСоставаНормы,СтруктураНормы);
				
				СтрокаДолжности = ТаблицаДолжностей.Найти(НайденнаяСтрока.НаименованиеДолжности,"НаименованиеДолжности");
				
				Если ЗначениеЗаполнено(НайденнаяСтрока.КодПодразделения) Тогда
					
					СтрокаПодразделения = ТаблицаПодразделений.Найти(НайденнаяСтрока.КодПодразделения,"КодПодразделения");
					
					Если СтрокаПодразделения = Неопределено Тогда
						Сообщить("Не найдено подразделение по коду: " + НайденнаяСтрока.КодПодразделения + Символы.ПС + "Норма не загружена.");
						Продолжить;
					КонецЕсли;
					
					НоваяСтрока 				= ТаблицаДляЗаписиНормВыдачиСИЗ.Добавить();
					НоваяСтрока.Организация 	= Объект.Организация;
					НоваяСтрока.Подразделение 	= СтрокаПодразделения.Подразделение;
					НоваяСтрока.Должность 		= СтрокаДолжности.Должность;
					НоваяСтрока.РабочееМесто    = Справочники.РабочиеМеста.ПустаяСсылка();
					НоваяСтрока.УсловиеНормы    = НайденнаяСтрока.УсловиеНормы;
					НоваяСтрока.НормаВыдачи    	= НормаВыдачи;
					НоваяСтрока.Использовать    = Истина;
					
				Иначе
					
					Если Объект.УчитыватьШтатноеРасписание Тогда
						
						СтрокиПодразделений = ТаблицаШтатногоРасписания.НайтиСтроки(Новый Структура("Должность",СтрокаДолжности.Должность));
						
						Для Каждого СтрокаПодразделения Из СтрокиПодразделений Цикл
							
							НоваяСтрока 				= ТаблицаДляЗаписиНормВыдачиСИЗ.Добавить();
							НоваяСтрока.Организация 	= Объект.Организация;
							НоваяСтрока.Подразделение 	= СтрокаПодразделения.Подразделение;
							НоваяСтрока.Должность 		= СтрокаДолжности.Должность;
							НоваяСтрока.РабочееМесто    = Справочники.РабочиеМеста.ПустаяСсылка();
							НоваяСтрока.УсловиеНормы    = НайденнаяСтрока.УсловиеНормы;
							НоваяСтрока.НормаВыдачи    	= НормаВыдачи;
							НоваяСтрока.Использовать    = Истина;
							
						КонецЦикла;
						
					Иначе
						
						НоваяСтрока 				= ТаблицаДляЗаписиНормВыдачиСИЗ.Добавить();
						НоваяСтрока.Организация 	= Объект.Организация;
						НоваяСтрока.Подразделение 	= Справочники.Подразделения.ПустаяСсылка();
						НоваяСтрока.Должность 		= СтрокаДолжности.Должность;
						НоваяСтрока.РабочееМесто    = Справочники.РабочиеМеста.ПустаяСсылка();
						НоваяСтрока.УсловиеНормы    = НайденнаяСтрока.УсловиеНормы;
						НоваяСтрока.НормаВыдачи    	= НормаВыдачи;
						НоваяСтрока.Использовать    = Истина;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			НомерСтроки	= 1;
			
			ТаблицаСоставаНормы.Очистить();
			
			Для Каждого НайденнаяСтрока Из НайденныеСтрокиГруппы Цикл
				
				СтруктураПоискаПВ = Новый Структура("КоличествоВПериоде,КоличествоПериодов,ТипПериода",НайденнаяСтрока.КоличествоВПериоде,НайденнаяСтрока.КоличествоПериодов,НайденнаяСтрока.ТипПериода);
				
				НоваяСтрокаСостава 							= ТаблицаСоставаНормы.Добавить();
				СтрокаНН 									= ТаблицаНоменклатурыНормы.Найти(НайденнаяСтрока.НаименованиеНоменклатурыНормы,"НаименованиеНоменклатурыНормы");
				НоваяСтрокаСостава.НоменклатураНормы 		= СтрокаНН.НоменклатураНормы;
				СтрокаЕИ 									= ТаблицаЕдиницИзмерения.Найти(НайденнаяСтрока.КодЕдиницыИзмерения,"КодЕдиницыИзмерения");
				НоваяСтрокаСостава.ЕдиницаИзмерения 		= СтрокаЕИ.ЕдиницаИзмерения;
				СтрокиПВ 									= ТаблицаПериодичностиВыдачи.НайтиСтроки(СтруктураПоискаПВ);
				НоваяСтрокаСостава.ПериодичностьВыдачи 		= СтрокиПВ[0].ПериодичностьВыдачи;
				НоваяСтрокаСостава.ГОСТ				 		= НайденнаяСтрока.ГОСТ;
				НоваяСтрокаСостава.НомерСтроки 				= НомерСтроки;
				НоваяСтрокаСостава.УчитыватьВПотребности	= ЗначениеЗаполнено(НоваяСтрокаСостава.ПериодичностьВыдачи);
				
				НомерСтроки	= НомерСтроки + 1;
				
			КонецЦикла;
			
			ВидВыдачиСИЗ = НайденнаяСтрока.ВидВыдачи;
			
			Если ЗначениеЗаполнено(НайденнаяСтрока.НомерТОН) Тогда
				НайденныеСтроки = ТаблицаТОН.НайтиСтроки(Новый Структура("НомерТОН, НомерПриложенияТОН, НомерПрофессииТОН",НайденнаяСтрока.НомерТОН,НайденнаяСтрока.НомерПриложенияТОН,НайденнаяСтрока.НомерПрофессииТОН));
				ТекущееОснование = НайденныеСтроки[0].ПунктТОН;
			Иначе
				ТекущееОснование = НайденнаяСтрока.Основание;
			КонецЕсли;
				
			СтруктураНормы = Новый Структура("Организация, ВидРасчета, ВидВыдачиСИЗ, ОснованиеНормы",Объект.Организация,НайденнаяСтрока.ВидРасчета,ВидВыдачиСИЗ,ТекущееОснование);
			
			НормаВыдачи = ПроцедурыРаботыСНормамиСервер.ПолучитьНормуВыдачиСИЗ(ТаблицаСоставаНормы,СтруктураНормы);
			
			СтрокаДолжности = ТаблицаДолжностей.Найти(НайденнаяСтрока.НаименованиеДолжности,"НаименованиеДолжности");
			
			Если ЗначениеЗаполнено(НайденнаяСтрока.КодПодразделения) Тогда
				
				СтрокаПодразделения = ТаблицаПодразделений.Найти(НайденнаяСтрока.КодПодразделения,"КодПодразделения");
				
				Если СтрокаПодразделения = Неопределено Тогда
					Сообщить("Не найдено подразделение по коду: " + НайденнаяСтрока.КодПодразделения + Символы.ПС + "Норма не загружена.");
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока 				= ТаблицаДляЗаписиНормВыдачиСИЗ.Добавить();
				НоваяСтрока.Организация 	= Объект.Организация;
				НоваяСтрока.Подразделение 	= СтрокаПодразделения.Подразделение;
				НоваяСтрока.Должность 		= СтрокаДолжности.Должность;
				НоваяСтрока.РабочееМесто    = Справочники.РабочиеМеста.ПустаяСсылка();
				НоваяСтрока.УсловиеНормы    = НайденнаяСтрока.УсловиеНормы;
				НоваяСтрока.НормаВыдачи    	= НормаВыдачи;
				НоваяСтрока.Использовать    = Истина;
				
			Иначе
				
				Если Объект.УчитыватьШтатноеРасписание Тогда
					
					СтрокиПодразделений = ТаблицаШтатногоРасписания.НайтиСтроки(Новый Структура("Должность",СтрокаДолжности.Должность));
					
					Для Каждого СтрокаПодразделения Из СтрокиПодразделений Цикл
						
						НоваяСтрока 				= ТаблицаДляЗаписиНормВыдачиСИЗ.Добавить();
						НоваяСтрока.Организация 	= Объект.Организация;
						НоваяСтрока.Подразделение 	= СтрокаПодразделения.Подразделение;
						НоваяСтрока.Должность 		= СтрокаДолжности.Должность;
						НоваяСтрока.РабочееМесто    = Справочники.РабочиеМеста.ПустаяСсылка();
						НоваяСтрока.УсловиеНормы    = НайденнаяСтрока.УсловиеНормы;
						НоваяСтрока.НормаВыдачи    	= НормаВыдачи;
						НоваяСтрока.Использовать    = Истина;
						
					КонецЦикла;
					
				Иначе
					
					НоваяСтрока 				= ТаблицаДляЗаписиНормВыдачиСИЗ.Добавить();
					НоваяСтрока.Организация 	= Объект.Организация;
					НоваяСтрока.Подразделение 	= Справочники.Подразделения.ПустаяСсылка();
					НоваяСтрока.Должность 		= СтрокаДолжности.Должность;
					НоваяСтрока.РабочееМесто    = Справочники.РабочиеМеста.ПустаяСсылка();
					НоваяСтрока.УсловиеНормы    = НайденнаяСтрока.УсловиеНормы;
					НоваяСтрока.НормаВыдачи    	= НормаВыдачи;
					НоваяСтрока.Использовать    = Истина;
					
				КонецЕсли;
				
			КонецЕсли;

		КонецЕсли;
		
		СтарыйНомерГруппы = СтрокаТаблицыГрупп.НомерГруппы;
		
	КонецЦикла;
	
	//получаем существующие записи
	ТаблицаИспользованияНормы = ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуИспользованияНормы(ТаблицаДляЗаписиНормВыдачиСИЗ.ВыгрузитьКолонку("НормаВыдачи"));
	
	//собираем таблицы
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеИзФайла.Подразделение,
	|	ДанныеИзФайла.Должность,
	|	ДанныеИзФайла.РабочееМесто,
	|	ДанныеИзФайла.УсловиеНормы,
	|	ДанныеИзФайла.НормаВыдачи,
	|	ДанныеИзФайла.Использовать
	|ПОМЕСТИТЬ ДанныеИзФайла
	|ИЗ
	|	&ДанныеИзФайла КАК ДанныеИзФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеИзБазы.Подразделение,
	|	ДанныеИзБазы.Должность,
	|	ДанныеИзБазы.РабочееМесто,
	|	ДанныеИзБазы.УсловиеНормы,
	|	ДанныеИзБазы.НормаВыдачи,
	|	ДанныеИзБазы.Использовать
	|ПОМЕСТИТЬ ДанныеИзБазы
	|ИЗ
	|	&ДанныеИзБазы КАК ДанныеИзБазы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляЗаписи.Подразделение,
	|	ДанныеДляЗаписи.Должность,
	|	ДанныеДляЗаписи.РабочееМесто,
	|	ДанныеДляЗаписи.УсловиеНормы,
	|	ДанныеДляЗаписи.НормаВыдачи,
	|	МАКСИМУМ(ДанныеДляЗаписи.Использовать) КАК Использовать
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеИзФайла.Подразделение КАК Подразделение,
	|		ДанныеИзФайла.Должность КАК Должность,
	|		ДанныеИзФайла.РабочееМесто КАК РабочееМесто,
	|		ДанныеИзФайла.УсловиеНормы КАК УсловиеНормы,
	|		ДанныеИзФайла.НормаВыдачи КАК НормаВыдачи,
	|		ДанныеИзФайла.Использовать КАК Использовать
	|	ИЗ
	|		ДанныеИзФайла КАК ДанныеИзФайла
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеИзБазы.Подразделение,
	|		ДанныеИзБазы.Должность,
	|		ДанныеИзБазы.РабочееМесто,
	|		ДанныеИзБазы.УсловиеНормы,
	|		ДанныеИзБазы.НормаВыдачи,
	|		ДанныеИзБазы.Использовать
	|	ИЗ
	|		ДанныеИзБазы КАК ДанныеИзБазы) КАК ДанныеДляЗаписи
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляЗаписи.Подразделение,
	|	ДанныеДляЗаписи.Должность,
	|	ДанныеДляЗаписи.РабочееМесто,
	|	ДанныеДляЗаписи.УсловиеНормы,
	|	ДанныеДляЗаписи.НормаВыдачи";
	
	Запрос.УстановитьПараметр("ДанныеИзФайла",	ТаблицаДляЗаписиНормВыдачиСИЗ);
	Запрос.УстановитьПараметр("ДанныеИзБазы",	ТаблицаИспользованияНормы);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		НаборЗаписей = РегистрыСведений.ИсходныеНормыВыдачиСИЗ.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
		НаборЗаписей.Отбор.Подразделение.Установить(СтрокаТаблицыЗапроса.Подразделение);
		НаборЗаписей.Отбор.Должность.Установить(СтрокаТаблицыЗапроса.Должность);
		НаборЗаписей.Отбор.РабочееМесто.Установить(СтрокаТаблицыЗапроса.РабочееМесто);
		НаборЗаписей.Отбор.УсловиеНормы.Установить(СтрокаТаблицыЗапроса.УсловиеНормы);
		НаборЗаписей.Отбор.НормаВыдачи.Установить(СтрокаТаблицыЗапроса.НормаВыдачи);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() = 0 Тогда
			
			НоваяЗапись 				= НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись,СтрокаТаблицыЗапроса);
			НоваяЗапись.Организация 	= Объект.Организация;
			
		Иначе
			
			НаборЗаписей[0].Использовать = СтрокаТаблицыЗапроса.Использовать;
			
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
	xl.WorkBooks.Close(); 
	xl = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//ОбменДаннымиКлиент.ОбработчикВыбораФайла(Объект,"ФайлЗагрузки",СтандартнаяОбработка, НСтр("ru = 'Документ MS EXCEL(*.xls)|*.xls'"), Истина);
	
	НастройкиДиалога = Новый Структура;
	НастройкиДиалога.Вставить("Фильтр", НСтр("ru = 'Документ MS EXCEL(*.xls)|*.xls'"));
	НастройкиДиалога.Вставить("ПроверятьСуществованиеФайла", Истина);
	
	ОбменДаннымиКлиент.ОбработчикВыбораФайла(Объект, "ФайлЗагрузки", СтандартнаяОбработка, НастройкиДиалога);
	
	ЭтаФорма.Элементы.ВыполнитьЗагрузкуНорм.Доступность = ЗначениеЗаполнено(Объект.ФайлЗагрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ОбработчикОткрытияФайлаИлиКаталога(Объект,"ФайлЗагрузки",СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗагрузкиПриИзменении(Элемент)
	
	ЭтаФорма.Элементы.ВыполнитьЗагрузкуНорм.Доступность = ЗначениеЗаполнено(Объект.ФайлЗагрузки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзСтарыхДанных(Команда)
	
	ВыполнитьЗагрузкуНормИзСтарыхДанныхНаСервере();	
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.НормыВыдачиСИЗ.Отбор, "Владелец", Объект.Организация,ВидСравненияКомпоновкиДанных.Равно, "Владелец", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗагрузкуНормИзСтарыхДанныхНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СоставНормОрганизации.Родитель.Код, """") КАК КодГруппы,
	|	СоставНормОрганизации.Владелец.Подразделение,
	|	СоставНормОрганизации.Владелец.Профессия,
	|	СоставНормОрганизации.Владелец.УсловиеНормы,
	|	СоставНормОрганизации.Владелец.РабочееМесто,
	|	СоставНормОрганизации.Наименование,
	|	СоставНормОрганизации.НоменклатураНормыОрганизации,
	|	СоставНормОрганизации.ЕдиницаИзмерения,
	|	СоставНормОрганизации.ВидРасчетаНормы,
	|	СоставНормОрганизации.ТипПериода,
	|	СоставНормОрганизации.КоличествоПериодов,
	|	СоставНормОрганизации.КоличествоНоменклатуры,
	|	СоставНормОрганизации.КоллективнаяВыдача,
	|	СоставНормОрганизации.Ссылка
	|ПОМЕСТИТЬ ДанныеСоставаНорм
	|ИЗ
	|	Справочник.СоставНормОрганизации КАК СоставНормОрганизации
	|ГДЕ
	|	СоставНормОрганизации.Владелец.Владелец = &Организация
	|	И СоставНормОрганизации.ПометкаУдаления = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСоставаНорм.КодГруппы КАК КодГруппы
	|ИЗ
	|	ДанныеСоставаНорм КАК ДанныеСоставаНорм
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСоставаНорм.КодГруппы
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодГруппы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСоставаНорм.КодГруппы КАК КодГруппы,
	|	ДанныеСоставаНорм.ВладелецПодразделение КАК Подразделение,
	|	ДанныеСоставаНорм.ВладелецПрофессия КАК Должность,
	|	ДанныеСоставаНорм.ВладелецУсловиеНормы КАК УсловиеНормы,
	|	ДанныеСоставаНорм.ВладелецРабочееМесто КАК РабочееМесто,
	|	ДанныеСоставаНорм.Наименование,
	|	ДанныеСоставаНорм.НоменклатураНормыОрганизации КАК НоменклатураНормы,
	|	ДанныеСоставаНорм.ЕдиницаИзмерения,
	|	ДанныеСоставаНорм.ВидРасчетаНормы,
	|	ДанныеСоставаНорм.ТипПериода,
	|	ДанныеСоставаНорм.КоличествоПериодов,
	|	ДанныеСоставаНорм.КоличествоНоменклатуры КАК КоличествоВПериоде,
	|	ДанныеСоставаНорм.КоллективнаяВыдача,
	|	ДанныеСоставаНорм.Ссылка,
	|	ДанныеСоставаНорм.Ссылка.Владелец.Владелец КАК Организация,
	|	ИСТИНА КАК Использовать
	|ИЗ
	|	ДанныеСоставаНорм КАК ДанныеСоставаНорм
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодГруппы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВзаимозаменяемыеНоменклатурныеНормыШтатныхЕдиницСрезПоследних.Подразделение КАК Подразделение,
	|	ВзаимозаменяемыеНоменклатурныеНормыШтатныхЕдиницСрезПоследних.Профессия КАК Профессия,
	|	ВзаимозаменяемыеНоменклатурныеНормыШтатныхЕдиницСрезПоследних.ОсновнаяНоменклатурнаяНорма КАК ОсновнаяНоменклатурнаяНорма,
	|	ВзаимозаменяемыеНоменклатурныеНормыШтатныхЕдиницСрезПоследних.ВозможнаяНоменклатурнаяНорма КАК ВозможнаяНоменклатурнаяНорма
	|ИЗ
	|	РегистрСведений.ВзаимозаменяемыеНоменклатурныеНормыШтатныхЕдиниц.СрезПоследних(&Период, ПризнакДействия) КАК ВзаимозаменяемыеНоменклатурныеНормыШтатныхЕдиницСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзаимозаменяемыеНоменклатурныеНормыШтатныхЕдиницСрезПоследних.Подразделение,
	|	ВзаимозаменяемыеНоменклатурныеНормыШтатныхЕдиницСрезПоследних.Профессия,
	|	ВзаимозаменяемыеНоменклатурныеНормыШтатныхЕдиницСрезПоследних.ОсновнаяНоменклатурнаяНорма,
	|	ВзаимозаменяемыеНоменклатурныеНормыШтатныхЕдиницСрезПоследних.ВозможнаяНоменклатурнаяНорма
	|
	|УПОРЯДОЧИТЬ ПО
	|	Подразделение,
	|	Профессия,
	|	ОсновнаяНоменклатурнаяНорма,
	|	ВозможнаяНоменклатурнаяНорма";
	
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	Запрос.УстановитьПараметр("Период",		ТекущаяДата());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаГрупп 	= Результат[1].Выгрузить();
	ТаблицаСостава 	= Результат[2].Выгрузить();
	ТаблицаГруппИЛИ	= Результат[3].Выгрузить();
	
	ТаблицаСоставаНормы = Новый ТаблицаЗначений;
	ТаблицаСоставаНормы.Колонки.Добавить("НомерСтроки",				Новый ОписаниеТипов("Число"));
	ТаблицаСоставаНормы.Колонки.Добавить("НоменклатураНормы",		Новый ОписаниеТипов("СправочникСсылка.НоменклатураНормОрганизации"));
	ТаблицаСоставаНормы.Колонки.Добавить("ЕдиницаИзмерения",		Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
	ТаблицаСоставаНормы.Колонки.Добавить("ПериодичностьВыдачи",		Новый ОписаниеТипов("СправочникСсылка.ПериодичностьВыдачиСИЗ"));
	ТаблицаСоставаНормы.Колонки.Добавить("ГОСТ",					Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(200)));
	ТаблицаСоставаНормы.Колонки.Добавить("УчитыватьВПотребности",	Новый ОписаниеТипов("Булево"));
	
	ТаблицаДляЗаписиНормВыдачиСИЗ = Новый ТаблицаЗначений;
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("Организация",	Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("Подразделение",	Новый ОписаниеТипов("СправочникСсылка.Подразделения"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("Должность",		Новый ОписаниеТипов("СправочникСсылка.ДолжностиИПрофессии"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("РабочееМесто",	Новый ОписаниеТипов("СправочникСсылка.РабочиеМестаАСТБ"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("УсловиеНормы",	Новый ОписаниеТипов("СправочникСсылка.УсловияНорм"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("НормаВыдачи",	Новый ОписаниеТипов("СправочникСсылка.НормыВыдачиСИЗ"));
	ТаблицаДляЗаписиНормВыдачиСИЗ.Колонки.Добавить("Использовать",	Новый ОписаниеТипов("Булево"));
	
	Для Каждого СтрокаТаблицыГрупп Из ТаблицаГрупп Цикл
		
		НайденныеСтроки = ТаблицаСостава.НайтиСтроки(Новый Структура("КодГруппы",СтрокаТаблицыГрупп.КодГруппы));
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицыГрупп.КодГруппы) Тогда
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				Сч = 1;
				
				ПериодичностьВыдачи = ПроцедурыРаботыСНормамиСервер.ПолучитьПериодичностьВыдачи(НайденнаяСтрока.ТипПериода,НайденнаяСтрока.КоличествоПериодов,НайденнаяСтрока.КоличествоВПериоде);
				
				ВидВыдачиСИЗ = ?(НайденнаяСтрока.КоллективнаяВыдача,Перечисления.ВидыВыдачиСИЗ.КоллективнаяВыдача,Перечисления.ВидыВыдачиСИЗ.ПерсональнаяВыдача);
				
				СтруктураНормы = Новый Структура("Организация, ВидРасчета, ВидВыдачиСИЗ, ОснованиеНормы",Объект.Организация,НайденнаяСтрока.ВидРасчетаНормы,ВидВыдачиСИЗ,"");
				
				ТаблицаСоставаНормы.Очистить();
				
				НоваяСтрока 						= ТаблицаСоставаНормы.Добавить();
				НоваяСтрока.НомерСтроки 			= Сч;
				НоваяСтрока.НоменклатураНормы 		= НайденнаяСтрока.НоменклатураНормы;
				НоваяСтрока.ЕдиницаИзмерения 		= НайденнаяСтрока.ЕдиницаИзмерения;
				НоваяСтрока.ПериодичностьВыдачи 	= ПериодичностьВыдачи;
				НоваяСтрока.ГОСТ 					= ?(НайденнаяСтрока.Ссылка.ГОСТы.Количество() > 0,НайденнаяСтрока.Ссылка.ГОСТы[0].ГОСТ,"");
				НоваяСтрока.УчитыватьВПотребности	= Истина;
				
				Сч = Сч + 1;
				
				СтруктураПоиска = Новый Структура("Подразделение,Профессия,ОсновнаяНоменклатурнаяНорма",НайденнаяСтрока.Подразделение,НайденнаяСтрока.Должность,НайденнаяСтрока.НоменклатураНормы);
				
				НайденныеСтрокиТаблицыГруппИЛИ  = ТаблицаГруппИЛИ.НайтиСтроки(СтруктураПоиска);
				
				Если НайденныеСтрокиТаблицыГруппИЛИ.Количество() > 0 Тогда
					
					Для Каждого НайденнаяСтрокаТаблицыГруппИЛИ Из НайденныеСтрокиТаблицыГруппИЛИ Цикл
						
						Если НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма = НайденнаяСтрока.НоменклатураНормы Тогда
							Продолжить;
						КонецЕсли;	
						
						НоваяСтрока 						= ТаблицаСоставаНормы.Добавить();
						НоваяСтрока.НомерСтроки 			= Сч;
						НоваяСтрока.НоменклатураНормы 		= НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма;
						НоваяСтрока.ЕдиницаИзмерения 		= НайденнаяСтрока.ЕдиницаИзмерения;
						НоваяСтрока.ПериодичностьВыдачи 	= ПериодичностьВыдачи;
						НоваяСтрока.ГОСТ 					= ?(НайденнаяСтрока.Ссылка.ГОСТы.Количество() > 0,НайденнаяСтрока.Ссылка.ГОСТы[0].ГОСТ,"");
						НоваяСтрока.УчитыватьВПотребности	= Истина;
						
						Сч = Сч + 1;
						
					КонецЦикла;
					
				Иначе //ищем пустое подразделение и непустую должность
					
					СтруктураПоиска = Новый Структура("Подразделение,Профессия,ОсновнаяНоменклатурнаяНорма",Справочники.Подразделения.ПустаяСсылка(),НайденнаяСтрока.Должность,НайденнаяСтрока.НоменклатураНормы);
					
					НайденныеСтрокиТаблицыГруппИЛИ  = ТаблицаГруппИЛИ.НайтиСтроки(СтруктураПоиска);
					
					Если НайденныеСтрокиТаблицыГруппИЛИ.Количество() > 0 Тогда
						
						Для Каждого НайденнаяСтрокаТаблицыГруппИЛИ Из НайденныеСтрокиТаблицыГруппИЛИ Цикл
							
							Если НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма = НайденнаяСтрока.НоменклатураНормы Тогда
								Продолжить;
							КонецЕсли;	
							
							НоваяСтрока 						= ТаблицаСоставаНормы.Добавить();
							НоваяСтрока.НомерСтроки 			= Сч;
							НоваяСтрока.НоменклатураНормы 		= НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма;
							НоваяСтрока.ЕдиницаИзмерения 		= НайденнаяСтрока.ЕдиницаИзмерения;
							НоваяСтрока.ПериодичностьВыдачи 	= ПериодичностьВыдачи;
							НоваяСтрока.ГОСТ 					= ?(НайденнаяСтрока.Ссылка.ГОСТы.Количество() > 0,НайденнаяСтрока.Ссылка.ГОСТы[0].ГОСТ,"");
							НоваяСтрока.УчитыватьВПотребности	= Истина;
							
							Сч = Сч + 1;
							
						КонецЦикла;
						
					Иначе //ищем пустое подразделение и пустую должность
						
						СтруктураПоиска = Новый Структура("Подразделение,Профессия,ОсновнаяНоменклатурнаяНорма",Справочники.Подразделения.ПустаяСсылка(),Справочники.ДолжностиИПрофессии.ПустаяСсылка(),НайденнаяСтрока.НоменклатураНормы);
						
						НайденныеСтрокиТаблицыГруппИЛИ  = ТаблицаГруппИЛИ.НайтиСтроки(СтруктураПоиска);
						
						Если НайденныеСтрокиТаблицыГруппИЛИ.Количество() > 0 Тогда
							
							Для Каждого НайденнаяСтрокаТаблицыГруппИЛИ Из НайденныеСтрокиТаблицыГруппИЛИ Цикл
								
								Если НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма = НайденнаяСтрока.НоменклатураНормы Тогда
									Продолжить;
								КонецЕсли;	
								
								НоваяСтрока 						= ТаблицаСоставаНормы.Добавить();
								НоваяСтрока.НомерСтроки 			= Сч;
								НоваяСтрока.НоменклатураНормы 		= НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма;
								НоваяСтрока.ЕдиницаИзмерения 		= НайденнаяСтрока.ЕдиницаИзмерения;
								НоваяСтрока.ПериодичностьВыдачи 	= ПериодичностьВыдачи;
								НоваяСтрока.ГОСТ 					= ?(НайденнаяСтрока.Ссылка.ГОСТы.Количество() > 0,НайденнаяСтрока.Ссылка.ГОСТы[0].ГОСТ,"");
								НоваяСтрока.УчитыватьВПотребности	= Истина;
								
								Сч = Сч + 1;
								
							КонецЦикла;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
				НоваяСтрока 			= ТаблицаДляЗаписиНормВыдачиСИЗ.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
				НоваяСтрока.НормаВыдачи = ПроцедурыРаботыСНормамиСервер.ПолучитьНормуВыдачиСИЗ(ТаблицаСоставаНормы,СтруктураНормы);
				
			КонецЦикла;
			
		Иначе
			
			ТаблицаСоставаНормы.Очистить();
			
			Сч = 1;
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				ПериодичностьВыдачи = ПроцедурыРаботыСНормамиСервер.ПолучитьПериодичностьВыдачи(НайденнаяСтрока.ТипПериода,НайденнаяСтрока.КоличествоПериодов,НайденнаяСтрока.КоличествоВПериоде);
				
				НоваяСтрока 						= ТаблицаСоставаНормы.Добавить();
				НоваяСтрока.НомерСтроки 			= 1;
				НоваяСтрока.НоменклатураНормы 		= НайденнаяСтрока.НоменклатураНормы;
				НоваяСтрока.ЕдиницаИзмерения 		= НайденнаяСтрока.ЕдиницаИзмерения;
				НоваяСтрока.ПериодичностьВыдачи 	= ПериодичностьВыдачи;
				НоваяСтрока.ГОСТ 					= ?(НайденнаяСтрока.Ссылка.ГОСТы.Количество() > 0,НайденнаяСтрока.Ссылка.ГОСТы[0].ГОСТ,"");
				НоваяСтрока.УчитыватьВПотребности	= Истина;
				
				Сч = Сч + 1;
				
				СтруктураПоиска = Новый Структура("Подразделение,Профессия,ОсновнаяНоменклатурнаяНорма",НайденнаяСтрока.Подразделение,НайденнаяСтрока.Должность,НайденнаяСтрока.НоменклатураНормы);
				
				НайденныеСтрокиТаблицыГруппИЛИ  = ТаблицаГруппИЛИ.НайтиСтроки(СтруктураПоиска);
				
				Если НайденныеСтрокиТаблицыГруппИЛИ.Количество() > 0 Тогда
					
					Для Каждого НайденнаяСтрокаТаблицыГруппИЛИ Из НайденныеСтрокиТаблицыГруппИЛИ Цикл
						
						Если НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма = НайденнаяСтрока.НоменклатураНормы Тогда
							Продолжить;
						КонецЕсли;	
						
						НоваяСтрока 						= ТаблицаСоставаНормы.Добавить();
						НоваяСтрока.НомерСтроки 			= Сч;
						НоваяСтрока.НоменклатураНормы 		= НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма;
						НоваяСтрока.ЕдиницаИзмерения 		= НайденнаяСтрока.ЕдиницаИзмерения;
						НоваяСтрока.ПериодичностьВыдачи 	= ПериодичностьВыдачи;
						НоваяСтрока.ГОСТ 					= ?(НайденнаяСтрока.Ссылка.ГОСТы.Количество() > 0,НайденнаяСтрока.Ссылка.ГОСТы[0].ГОСТ,"");
						НоваяСтрока.УчитыватьВПотребности	= Истина;
						
						Сч = Сч + 1;
						
					КонецЦикла;
					
				Иначе
					
					СтруктураПоиска = Новый Структура("Подразделение,Профессия,ОсновнаяНоменклатурнаяНорма",Справочники.Подразделения.ПустаяСсылка(),НайденнаяСтрока.Должность,НайденнаяСтрока.НоменклатураНормы);
				
					НайденныеСтрокиТаблицыГруппИЛИ  = ТаблицаГруппИЛИ.НайтиСтроки(СтруктураПоиска);
					
					Если НайденныеСтрокиТаблицыГруппИЛИ.Количество() > 0 Тогда
						
						Для Каждого НайденнаяСтрокаТаблицыГруппИЛИ Из НайденныеСтрокиТаблицыГруппИЛИ Цикл
							
							Если НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма = НайденнаяСтрока.НоменклатураНормы Тогда
								Продолжить;
							КонецЕсли;	
							
							НоваяСтрока 						= ТаблицаСоставаНормы.Добавить();
							НоваяСтрока.НомерСтроки 			= Сч;
							НоваяСтрока.НоменклатураНормы 		= НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма;
							НоваяСтрока.ЕдиницаИзмерения 		= НайденнаяСтрока.ЕдиницаИзмерения;
							НоваяСтрока.ПериодичностьВыдачи 	= ПериодичностьВыдачи;
							НоваяСтрока.ГОСТ 					= ?(НайденнаяСтрока.Ссылка.ГОСТы.Количество() > 0,НайденнаяСтрока.Ссылка.ГОСТы[0].ГОСТ,"");
							НоваяСтрока.УчитыватьВПотребности	= Истина;
							
							Сч = Сч + 1;
							
						КонецЦикла;
						
					Иначе
						
						СтруктураПоиска = Новый Структура("Подразделение,Профессия,ОсновнаяНоменклатурнаяНорма",Справочники.Подразделения.ПустаяСсылка(),Справочники.ДолжностиИПрофессии.ПустаяСсылка(),НайденнаяСтрока.НоменклатураНормы);
						
						НайденныеСтрокиТаблицыГруппИЛИ  = ТаблицаГруппИЛИ.НайтиСтроки(СтруктураПоиска);
						
						Если НайденныеСтрокиТаблицыГруппИЛИ.Количество() > 0 Тогда
							
							Для Каждого НайденнаяСтрокаТаблицыГруппИЛИ Из НайденныеСтрокиТаблицыГруппИЛИ Цикл
								
								Если НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма = НайденнаяСтрока.НоменклатураНормы Тогда
									Продолжить;
								КонецЕсли;	
								
								НоваяСтрока 						= ТаблицаСоставаНормы.Добавить();
								НоваяСтрока.НомерСтроки 			= Сч;
								НоваяСтрока.НоменклатураНормы 		= НайденнаяСтрокаТаблицыГруппИЛИ.ВозможнаяНоменклатурнаяНорма;
								НоваяСтрока.ЕдиницаИзмерения 		= НайденнаяСтрока.ЕдиницаИзмерения;
								НоваяСтрока.ПериодичностьВыдачи 	= ПериодичностьВыдачи;
								НоваяСтрока.ГОСТ 					= ?(НайденнаяСтрока.Ссылка.ГОСТы.Количество() > 0,НайденнаяСтрока.Ссылка.ГОСТы[0].ГОСТ,"");
								НоваяСтрока.УчитыватьВПотребности	= Истина;
								
								Сч = Сч + 1;
								
							КонецЦикла;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ВидВыдачиСИЗ = ?(НайденнаяСтрока.КоллективнаяВыдача,Перечисления.ВидыВыдачиСИЗ.КоллективнаяВыдача,Перечисления.ВидыВыдачиСИЗ.ПерсональнаяВыдача);
			
			СтруктураНормы = Новый Структура("Организация, ВидРасчета, ВидВыдачиСИЗ, ОснованиеНормы",Объект.Организация,НайденнаяСтрока.ВидРасчетаНормы,ВидВыдачиСИЗ,"");
			
			НоваяСтрока 			= ТаблицаДляЗаписиНормВыдачиСИЗ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
			НоваяСтрока.НормаВыдачи = ПроцедурыРаботыСНормамиСервер.ПолучитьНормуВыдачиСИЗ(ТаблицаСоставаНормы,СтруктураНормы);
				
		КонецЕсли;
		
	КонецЦикла;
	
	//получаем существующие записи
	ТаблицаИспользованияНормы = ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуИспользованияНормы(ТаблицаДляЗаписиНормВыдачиСИЗ.ВыгрузитьКолонку("НормаВыдачи"));
	
	//собираем таблицы
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеИзФайла.Подразделение,
	|	ДанныеИзФайла.Должность,
	|	ДанныеИзФайла.РабочееМесто,
	|	ДанныеИзФайла.УсловиеНормы,
	|	ДанныеИзФайла.НормаВыдачи,
	|	ДанныеИзФайла.Использовать
	|ПОМЕСТИТЬ ДанныеИзФайла
	|ИЗ
	|	&ДанныеИзФайла КАК ДанныеИзФайла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеИзБазы.Подразделение,
	|	ДанныеИзБазы.Должность,
	|	ДанныеИзБазы.РабочееМесто,
	|	ДанныеИзБазы.УсловиеНормы,
	|	ДанныеИзБазы.НормаВыдачи,
	|	ДанныеИзБазы.Использовать
	|ПОМЕСТИТЬ ДанныеИзБазы
	|ИЗ
	|	&ДанныеИзБазы КАК ДанныеИзБазы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляЗаписи.Подразделение,
	|	ДанныеДляЗаписи.Должность,
	|	ДанныеДляЗаписи.РабочееМесто,
	|	ДанныеДляЗаписи.УсловиеНормы,
	|	ДанныеДляЗаписи.НормаВыдачи,
	|	МАКСИМУМ(ДанныеДляЗаписи.Использовать) КАК Использовать
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеИзФайла.Подразделение КАК Подразделение,
	|		ДанныеИзФайла.Должность КАК Должность,
	|		ДанныеИзФайла.РабочееМесто КАК РабочееМесто,
	|		ДанныеИзФайла.УсловиеНормы КАК УсловиеНормы,
	|		ДанныеИзФайла.НормаВыдачи КАК НормаВыдачи,
	|		ДанныеИзФайла.Использовать КАК Использовать
	|	ИЗ
	|		ДанныеИзФайла КАК ДанныеИзФайла
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеИзБазы.Подразделение,
	|		ДанныеИзБазы.Должность,
	|		ДанныеИзБазы.РабочееМесто,
	|		ДанныеИзБазы.УсловиеНормы,
	|		ДанныеИзБазы.НормаВыдачи,
	|		ДанныеИзБазы.Использовать
	|	ИЗ
	|		ДанныеИзБазы КАК ДанныеИзБазы) КАК ДанныеДляЗаписи
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляЗаписи.Подразделение,
	|	ДанныеДляЗаписи.Должность,
	|	ДанныеДляЗаписи.РабочееМесто,
	|	ДанныеДляЗаписи.УсловиеНормы,
	|	ДанныеДляЗаписи.НормаВыдачи";
	
	Запрос.УстановитьПараметр("ДанныеИзФайла",	ТаблицаДляЗаписиНормВыдачиСИЗ);
	Запрос.УстановитьПараметр("ДанныеИзБазы",	ТаблицаИспользованияНормы);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		НаборЗаписей = РегистрыСведений.ИсходныеНормыВыдачиСИЗ.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
		НаборЗаписей.Отбор.Подразделение.Установить(СтрокаТаблицыЗапроса.Подразделение);
		НаборЗаписей.Отбор.Должность.Установить(СтрокаТаблицыЗапроса.Должность);
		НаборЗаписей.Отбор.РабочееМесто.Установить(СтрокаТаблицыЗапроса.РабочееМесто);
		НаборЗаписей.Отбор.УсловиеНормы.Установить(СтрокаТаблицыЗапроса.УсловиеНормы);
		НаборЗаписей.Отбор.НормаВыдачи.Установить(СтрокаТаблицыЗапроса.НормаВыдачи);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() = 0 Тогда
			
			НоваяЗапись 				= НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись,СтрокаТаблицыЗапроса);
			НоваяЗапись.Организация 	= Объект.Организация;
			
		Иначе
			
			НаборЗаписей[0].Использовать = СтрокаТаблицыЗапроса.Использовать;
			
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИспользованияНормПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	ТекущиеДанные = ЭтаФорма.Элементы.ТаблицаИспользованияНорм.ТекущиеДанные;
	
	Если (Не ТекущиеДанные = Неопределено) И (Не ЗначениеЗаполнено(ТекущиеДанные.УсловиеНормы)) И (Не ЗначениеЗаполнено(ТекущиеДанные.Должность)) Тогда
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ТекущиеДанные = ЭтаФорма.Элементы.ТаблицаИспользованияНорм.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	Иначе
		Если ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока = Неопределено Тогда
			ТекущаяНормаВыдачи = ПредопределенноеЗначение("Справочник.НормыВыдачиСИЗ.ПустаяСсылка");
		Иначе
			Если ЗначениеЗаполнено(ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока) Тогда
				ТекущаяНормаВыдачи = ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока;
			Иначе
				ТекущаяНормаВыдачи = ПредопределенноеЗначение("Справочник.НормыВыдачиСИЗ.ПустаяСсылка");
			КонецЕсли;
		КонецЕсли;
		Если ЭтаФорма.Элементы.ТаблицаИспользованияНорм.ТекущийЭлемент.Имя = "ТаблицаИспользованияНормПодразделение" Тогда
			ЗаполнитьНаСервере(ТекущаяНормаВыдачи,Новый Структура("Должность,РабочееМесто,УсловиеНормы,Использовать",ТекущиеДанные.Должность,ТекущиеДанные.РабочееМесто,ТекущиеДанные.УсловиеНормы,ТекущиеДанные.Использовать),"Подразделение");
		ИначеЕсли ЭтаФорма.Элементы.ТаблицаИспользованияНорм.ТекущийЭлемент.Имя = "ТаблицаИспользованияНормДолжность" Тогда
			ЗаполнитьНаСервере(ТекущаяНормаВыдачи,Новый Структура("Подразделение,РабочееМесто,УсловиеНормы,Использовать",ТекущиеДанные.Подразделение,ТекущиеДанные.РабочееМесто,ТекущиеДанные.УсловиеНормы,ТекущиеДанные.Использовать),"Должность");
		ИначеЕсли ЭтаФорма.Элементы.ТаблицаИспользованияНорм.ТекущийЭлемент.Имя = "ТаблицаИспользованияНормРабочееМесто" Тогда
			ЗаполнитьНаСервере(ТекущаяНормаВыдачи,Новый Структура("Подразделение,Должность,УсловиеНормы,Использовать",ТекущиеДанные.Подразделение,ТекущиеДанные.Должность,ТекущиеДанные.УсловиеНормы,ТекущиеДанные.Использовать),"РабочееМесто");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере(ТекущаяНормаВыдачи,ДанныеСтроки,ЧтоЗаполнять)
	
	Если ЧтоЗаполнять = "Подразделение" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Подразделения.Ссылка
		|ИЗ
		|	Справочник.Подразделения КАК Подразделения
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИсходныеНормыВыдачиСИЗ.НормаВыдачи КАК НормаВыдачи,
		|			ИсходныеНормыВыдачиСИЗ.Подразделение КАК Подразделение
		|		ИЗ
		|			РегистрСведений.ИсходныеНормыВыдачиСИЗ КАК ИсходныеНормыВыдачиСИЗ
		|		ГДЕ
		|			ИсходныеНормыВыдачиСИЗ.Организация = &Организация
		|			И ИсходныеНормыВыдачиСИЗ.Должность = &Должность
		|			И ИсходныеНормыВыдачиСИЗ.РабочееМесто = &РабочееМесто
		|			И ИсходныеНормыВыдачиСИЗ.УсловиеНормы = &УсловиеНормы
		|			И ИсходныеНормыВыдачиСИЗ.НормаВыдачи = &НормаВыдачи) КАК ИсходныеНормы
		|		ПО Подразделения.Ссылка = ИсходныеНормы.Подразделение
		|ГДЕ
		|	ИсходныеНормы.НормаВыдачи ЕСТЬ NULL 
		|	И Подразделения.Владелец = &Организация";
		
		Запрос.УстановитьПараметр("Организация",  Объект.Организация);
		Запрос.УстановитьПараметр("Должность", 	  ДанныеСтроки.Должность);
		Запрос.УстановитьПараметр("НормаВыдачи",  ТекущаяНормаВыдачи);
		Запрос.УстановитьПараметр("РабочееМесто", ДанныеСтроки.РабочееМесто);
		Запрос.УстановитьПараметр("УсловиеНормы", ДанныеСтроки.УсловиеНормы);
		
		ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
		
		Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
			
			НоваяЗапись 				= РегистрыСведений.ИсходныеНормыВыдачиСИЗ.СоздатьМенеджерЗаписи();
			НоваяЗапись.Организация 	= Объект.Организация;
			НоваяЗапись.Подразделение 	= СтрокаТаблицыЗапроса.Ссылка;
			НоваяЗапись.Должность 		= ДанныеСтроки.Должность;
			НоваяЗапись.РабочееМесто 	= ДанныеСтроки.РабочееМесто;
			НоваяЗапись.УсловиеНормы 	= ДанныеСтроки.УсловиеНормы;
			НоваяЗапись.НормаВыдачи 	= ТекущаяНормаВыдачи;
			НоваяЗапись.Использовать 	= ДанныеСтроки.Использовать;
			НоваяЗапись.Записать(Истина);
			
		КонецЦикла;
		
	ИначеЕсли ЧтоЗаполнять = "Должность" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДолжностиИПрофессии.Ссылка
		|ИЗ
		|	Справочник.ДолжностиИПрофессии КАК ДолжностиИПрофессии
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИсходныеНормыВыдачиСИЗ.НормаВыдачи КАК НормаВыдачи,
		|			ИсходныеНормыВыдачиСИЗ.Должность КАК Должность
		|		ИЗ
		|			РегистрСведений.ИсходныеНормыВыдачиСИЗ КАК ИсходныеНормыВыдачиСИЗ
		|		ГДЕ
		|			ИсходныеНормыВыдачиСИЗ.Организация = &Организация
		|			И ИсходныеНормыВыдачиСИЗ.РабочееМесто = &РабочееМесто
		|			И ИсходныеНормыВыдачиСИЗ.УсловиеНормы = &УсловиеНормы
		|			И ИсходныеНормыВыдачиСИЗ.НормаВыдачи = &НормаВыдачи
		|			И ИсходныеНормыВыдачиСИЗ.Подразделение = &Подразделение) КАК ИсходныеНормы
		|		ПО ДолжностиИПрофессии.Ссылка = ИсходныеНормы.Должность
		|ГДЕ
		|	ИсходныеНормы.НормаВыдачи ЕСТЬ NULL ";
		
		Запрос.УстановитьПараметр("Организация",  Объект.Организация);
		Запрос.УстановитьПараметр("Подразделение",ДанныеСтроки.Подразделение);
		Запрос.УстановитьПараметр("НормаВыдачи",  ТекущаяНормаВыдачи);
		Запрос.УстановитьПараметр("РабочееМесто", ДанныеСтроки.РабочееМесто);
		Запрос.УстановитьПараметр("УсловиеНормы", ДанныеСтроки.УсловиеНормы);
		
		ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
		
		Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
			
			НоваяЗапись 				= РегистрыСведений.ИсходныеНормыВыдачиСИЗ.СоздатьМенеджерЗаписи();
			НоваяЗапись.Организация 	= Объект.Организация;
			НоваяЗапись.Подразделение 	= ДанныеСтроки.Подразделение;
			НоваяЗапись.Должность 		= СтрокаТаблицыЗапроса.Ссылка;
			НоваяЗапись.РабочееМесто 	= ДанныеСтроки.РабочееМесто;
			НоваяЗапись.УсловиеНормы 	= ДанныеСтроки.УсловиеНормы;
			НоваяЗапись.НормаВыдачи 	= ТекущаяНормаВыдачи;
			НоваяЗапись.Использовать 	= ДанныеСтроки.Использовать;
			НоваяЗапись.Записать(Истина);
			
		КонецЦикла;
		
	ИначеЕсли ЧтоЗаполнять = "РабочееМесто" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РабочиеМестаАСТБ.Ссылка,
		|	ИсходныеНормы.НормаВыдачи
		|ИЗ
		|	Справочник.РабочиеМестаАСТБ КАК РабочиеМестаАСТБ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИсходныеНормыВыдачиСИЗ.НормаВыдачи КАК НормаВыдачи,
		|			ИсходныеНормыВыдачиСИЗ.РабочееМесто КАК РабочееМесто
		|		ИЗ
		|			РегистрСведений.ИсходныеНормыВыдачиСИЗ КАК ИсходныеНормыВыдачиСИЗ
		|		ГДЕ
		|			ИсходныеНормыВыдачиСИЗ.Организация = &Организация
		|			И ИсходныеНормыВыдачиСИЗ.Должность = &Должность
		|			И ИсходныеНормыВыдачиСИЗ.УсловиеНормы = &УсловиеНормы
		|			И ИсходныеНормыВыдачиСИЗ.НормаВыдачи = &НормаВыдачи
		|			И ИсходныеНормыВыдачиСИЗ.Подразделение = &Подразделение) КАК ИсходныеНормы
		|		ПО РабочиеМестаАСТБ.Ссылка = ИсходныеНормы.РабочееМесто
		|ГДЕ
		|	ИсходныеНормы.НормаВыдачи ЕСТЬ NULL 
		|	И РабочиеМестаАСТБ.Владелец = &Организация";
		
		Запрос.УстановитьПараметр("Организация",  Объект.Организация);
		Запрос.УстановитьПараметр("Подразделение",ДанныеСтроки.Подразделение);
		Запрос.УстановитьПараметр("НормаВыдачи",  ТекущаяНормаВыдачи);
		Запрос.УстановитьПараметр("Должность", 	  ДанныеСтроки.Должность);
		Запрос.УстановитьПараметр("УсловиеНормы", ДанныеСтроки.УсловиеНормы);
		
		ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
		
		Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
			
			НоваяЗапись 				= РегистрыСведений.ИсходныеНормыВыдачиСИЗ.СоздатьМенеджерЗаписи();
			НоваяЗапись.Организация 	= Объект.Организация;
			НоваяЗапись.Подразделение 	= ДанныеСтроки.Подразделение;
			НоваяЗапись.Должность 		= ДанныеСтроки.Должность;
			НоваяЗапись.РабочееМесто 	= СтрокаТаблицыЗапроса.Ссылка;
			НоваяЗапись.УсловиеНормы 	= ДанныеСтроки.УсловиеНормы;
			НоваяЗапись.НормаВыдачи 	= ТекущаяНормаВыдачи;
			НоваяЗапись.Использовать 	= ДанныеСтроки.Использовать;
			НоваяЗапись.Записать(Истина);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьТаблицуИспользованияНорм(ТекущаяНормаВыдачи);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИспользованияНормПриАктивизацииЯчейки(Элемент)
	
	ТекущиеДанные = ЭтаФорма.Элементы.ТаблицаИспользованияНорм.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		ЭтаФорма.Элементы.ТаблицаИспользованияНормЗаполнить.Доступность = Ложь;
		ВсеНормыВыдачи.Очистить();
		Возврат;
		
	Иначе
		
		Если Элемент.ТекущийЭлемент.Имя = "ТаблицаИспользованияНормПодразделение" Тогда
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Подразделение) Тогда
				ЭтаФорма.Элементы.ТаблицаИспользованияНормЗаполнить.Доступность = Истина;
			Иначе
				ЭтаФорма.Элементы.ТаблицаИспользованияНормЗаполнить.Доступность = Ложь;
			КонецЕсли;
		//ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТаблицаИспользованияНормДолжность" Тогда
		//	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Должность) Тогда
		//		ЭтаФорма.Элементы.ТаблицаИспользованияНормЗаполнить.Доступность = Истина;
		//	Иначе
		//		ЭтаФорма.Элементы.ТаблицаИспользованияНормЗаполнить.Доступность = Ложь;
		//	КонецЕсли;
		ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТаблицаИспользованияНормРабочееМесто" Тогда
			Если НЕ ЗначениеЗаполнено(ТекущиеДанные.РабочееМесто) Тогда
				ЭтаФорма.Элементы.ТаблицаИспользованияНормЗаполнить.Доступность = Истина;
			Иначе
				ЭтаФорма.Элементы.ТаблицаИспользованияНормЗаполнить.Доступность = Ложь;
			КонецЕсли;
		Иначе
			ЭтаФорма.Элементы.ТаблицаИспользованияНормЗаполнить.Доступность = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьВсеНормыВыдачи(ТекущиеДанные.Подразделение,ТекущиеДанные.Должность,ТекущиеДанные.РабочееМесто,ТекущиеДанные.УсловиеНормы);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВсеНормыВыдачи(Подразделение,Должность,РабочееМесто,УсловиеНормы)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныеНормыВыдачиСИЗ.НормаВыдачи
	|ИЗ
	|	РегистрСведений.ИсходныеНормыВыдачиСИЗ КАК ИсходныеНормыВыдачиСИЗ
	|ГДЕ
	|	ИсходныеНормыВыдачиСИЗ.Организация = &Организация
	|	И ИсходныеНормыВыдачиСИЗ.Подразделение = &Подразделение
	|	И ИсходныеНормыВыдачиСИЗ.Должность = &Должность
	|	И ИсходныеНормыВыдачиСИЗ.РабочееМесто = &РабочееМесто
	|	И ИсходныеНормыВыдачиСИЗ.УсловиеНормы = &УсловиеНормы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсходныеНормыВыдачиСИЗ.НормаВыдачи.Наименование";
	
	Запрос.УстановитьПараметр("Организация",	Объект.Организация);
	Запрос.УстановитьПараметр("Подразделение",	Подразделение);
	Запрос.УстановитьПараметр("Должность",		Должность);
	Запрос.УстановитьПараметр("РабочееМесто",	РабочееМесто);
	Запрос.УстановитьПараметр("УсловиеНормы",	УсловиеНормы);
	
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(),"ВсеНормыВыдачи");
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиНаОсновании(Команда)
	
	ТекущиеДанные = ЭтаФорма.Элементы.ТаблицаИспользованияНорм.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	АдресВременногоХранилища = ВыгрузитьТаблицуВсехНормВоВременноеХранилище();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВременногоХранилищаТаблицы",	АдресВременногоХранилища);
	ПараметрыФормы.Вставить("Организация",						Объект.Организация);
	ПараметрыФормы.Вставить("Подразделение",					ТекущиеДанные.Подразделение);
	ПараметрыФормы.Вставить("Должность",						ТекущиеДанные.Должность);
	ПараметрыФормы.Вставить("УсловиеНормы",						ТекущиеДанные.УсловиеНормы);
	ПараметрыФормы.Вставить("РабочееМесто",						ТекущиеДанные.РабочееМесто);
	ПараметрыФормы.Вставить("Использовать",						ТекущиеДанные.Использовать);
	
	ОткрытьФорму("Обработка.СозданиеНормВыдачиСИЗ.Форма.ФормаВводаНаОсновании",ПараметрыФормы,ЭтаФорма,УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьТаблицуВсехНормВоВременноеХранилище()
	
	ТаблицаВсеНормыВыдачи = РеквизитФормыВЗначение("ВсеНормыВыдачи");
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаВсеНормыВыдачи,ЭтаФорма.УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.СозданиеНормВыдачиСИЗ.Форма.ФормаВводаНаОсновании" Тогда
		
		Если ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока = Неопределено Тогда
			ТекущаяНормаВыдачи = ПредопределенноеЗначение("Справочник.НормыВыдачиСИЗ.ПустаяСсылка");
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Истина);
		Иначе
			Если ЗначениеЗаполнено(ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока) Тогда
				ТекущаяНормаВыдачи = ЭтаФорма.Элементы.НормыВыдачиСИЗ.ТекущаяСтрока;
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Истина);
			Иначе
				ТекущаяНормаВыдачи = ПредопределенноеЗначение("Справочник.НормыВыдачиСИЗ.ПустаяСсылка");
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СоставНормыВыдачи.Отбор, "Ссылка", ТекущаяНормаВыдачи,ВидСравненияКомпоновкиДанных.Равно, "Ссылка", Ложь);
			КонецЕсли;
		КонецЕсли;
		
		ЗаполнитьТаблицуИспользованияНорм(ТекущаяНормаВыдачи);
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.НормыВыдачиСИЗ.Форма.ФормаВыбора" Тогда
		
		МассивИдентификаторовВыделенныхСтрок = Элементы.ТаблицаИспользованияНорм.ВыделенныеСтроки;
		
		МассивНомеровСтрок = Новый Массив;
		
		Для Каждого ИдентификаторСтроки Из МассивИдентификаторовВыделенныхСтрок Цикл
			
			ТекущиеДанные = Элементы.НормыВыдачиСИЗ.ТекущиеДанные;
			Если ТекущиеДанные = Неопределено Тогда
				Возврат;
			КонецЕсли;	
			
			Подразделение 	= Элементы.ТаблицаИспользованияНорм.ДанныеСтроки(ИдентификаторСтроки).Подразделение;
			Должность 		= Элементы.ТаблицаИспользованияНорм.ДанныеСтроки(ИдентификаторСтроки).Должность;
			УсловиеНормы 	= Элементы.ТаблицаИспользованияНорм.ДанныеСтроки(ИдентификаторСтроки).УсловиеНормы;
			РабочееМесто 	= Элементы.ТаблицаИспользованияНорм.ДанныеСтроки(ИдентификаторСтроки).РабочееМесто;
			Использовать 	= Элементы.ТаблицаИспользованияНорм.ДанныеСтроки(ИдентификаторСтроки).Использовать;
			НормаВыдачи		= ТекущиеДанные.Ссылка;
			
			ИзменитьНормуВыдачиНаСервере(Подразделение,Должность,РабочееМесто,УсловиеНормы,НормаВыдачи,ВыбранноеЗначение,Использовать);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеНормыПриАктивизацииСтроки(Элемент)
	
	Если ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные = Неопределено Тогда
		ТекущееПодразделение 	= ПредопределенноеЗначение("Справочник.Подразделения.ПустаяСсылка");
		ТекущаяДолжность 		= ПредопределенноеЗначение("Справочник.ДолжностиИПрофессии.ПустаяСсылка");
		ТекущееРабочееМесто 	= ПредопределенноеЗначение("Справочник.РабочиеМестаАСТБ.ПустаяСсылка");
	Иначе
		ТекущееПодразделение 	= ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные.Подразделение;
		ТекущаяДолжность 		= ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные.Должность;
		ТекущееРабочееМесто 	= ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные.РабочееМесто;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ИсходныеНормыПодробно.Отбор, "Организация", 	Объект.Организация,ВидСравненияКомпоновкиДанных.Равно, 	"Организация", 	Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ИсходныеНормыПодробно.Отбор, "Подразделение", ТекущееПодразделение,ВидСравненияКомпоновкиДанных.Равно,"Подразделение",Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ИсходныеНормыПодробно.Отбор, "Должность", 	ТекущаяДолжность,ВидСравненияКомпоновкиДанных.Равно, 	"Должность", 	Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ИсходныеНормыПодробно.Отбор, "РабочееМесто", 	ТекущееРабочееМесто,ВидСравненияКомпоновкиДанных.Равно, "РабочееМесто", Истина);
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Объект.Организация);
	СтруктураОтбора.Вставить("Подразделение", ТекущееПодразделение);
	СтруктураОтбора.Вставить("Должность", ТекущаяДолжность);
	СтруктураОтбора.Вставить("РабочееМесто", ТекущееРабочееМесто);
	
	ЗаполнитьТаблицуИсходныхНорм(СтруктураОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦелевыеНормыПриАктивизацииСтроки(Элемент)
	
	Если ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные = Неопределено Тогда
		ТекущееПодразделение 	= ПредопределенноеЗначение("Справочник.Подразделения.ПустаяСсылка");
		ТекущаяДолжность 		= ПредопределенноеЗначение("Справочник.ДолжностиИПрофессии.ПустаяСсылка");
		ТекущееРабочееМесто 	= ПредопределенноеЗначение("Справочник.РабочиеМестаАСТБ.ПустаяСсылка");
	Иначе
		ТекущееПодразделение 	= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.Подразделение;
		ТекущаяДолжность 		= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.Должность;
		ТекущееРабочееМесто 	= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.РабочееМесто;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ЦелевыеНормыПодробно.Отбор, "Организация", 	Объект.Организация,ВидСравненияКомпоновкиДанных.Равно, 	"Организация", 	Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ЦелевыеНормыПодробно.Отбор, "Подразделение", 	ТекущееПодразделение,ВидСравненияКомпоновкиДанных.Равно,"Подразделение",Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ЦелевыеНормыПодробно.Отбор, "Должность", 		ТекущаяДолжность,ВидСравненияКомпоновкиДанных.Равно, 	"Должность", 	Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.ЦелевыеНормыПодробно.Отбор, "РабочееМесто", 	ТекущееРабочееМесто,ВидСравненияКомпоновкиДанных.Равно, "РабочееМесто", Истина);
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Объект.Организация);
	СтруктураОтбора.Вставить("Подразделение", ТекущееПодразделение);
	СтруктураОтбора.Вставить("Должность", ТекущаяДолжность);
	СтруктураОтбора.Вставить("РабочееМесто", ТекущееРабочееМесто);
	
	ЗаполнитьТаблицуЦелевыхНорм(СтруктураОтбора);
	
КонецПроцедуры

&НаСервере
Функция СравнитьНормыНаСервере(СтруктураДляСравнения)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = НОВЫЙ Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныеНормыВыдачиСИЗ.Подразделение,
	|	ИсходныеНормыВыдачиСИЗ.Должность,
	|	ИсходныеНормыВыдачиСИЗ.РабочееМесто,
	|	ИсходныеНормыВыдачиСИЗ.УсловиеНормы,
	|	ИсходныеНормыВыдачиСИЗ.НормаВыдачи,
	|	ИсходныеНормыВыдачиСИЗ.Использовать
	|ПОМЕСТИТЬ ВТ_ВсеНормы
	|ИЗ
	|	РегистрСведений.ИсходныеНормыВыдачиСИЗ КАК ИсходныеНормыВыдачиСИЗ
	|ГДЕ
	|	ИсходныеНормыВыдачиСИЗ.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НормыВыдачиСИЗСоставНормы.Ссылка КАК НормаВыдачи,
	|	НормыВыдачиСИЗСоставНормы.НоменклатураНормы,
	|	НормыВыдачиСИЗСоставНормы.ЕдиницаИзмерения,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи
	|ПОМЕСТИТЬ ВТ_СоставНормы
	|ИЗ
	|	Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеНормы.Использовать,
	|	ВТ_ВсеНормы.УсловиеНормы,
	|	ВТ_ВсеНормы.НормаВыдачи,
	|	ВТ_СоставНормы.НоменклатураНормы,
	|	ВТ_СоставНормы.ЕдиницаИзмерения,
	|	ВТ_СоставНормы.ПериодичностьВыдачи
	|ПОМЕСТИТЬ ВТ_ИсходныеНормы
	|ИЗ
	|	ВТ_ВсеНормы КАК ВТ_ВсеНормы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоставНормы КАК ВТ_СоставНормы
	|		ПО ВТ_ВсеНормы.НормаВыдачи = ВТ_СоставНормы.НормаВыдачи
	|ГДЕ
	|	ВТ_ВсеНормы.Подразделение = &ИсходноеПодразделение
	|	И ВТ_ВсеНормы.Должность = &ИсходнаяДолжность
	|	И ВТ_ВсеНормы.РабочееМесто = &ИсходноеРабочееМесто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеНормы.Использовать,
	|	ВТ_ВсеНормы.УсловиеНормы,
	|	ВТ_ВсеНормы.НормаВыдачи,
	|	ВТ_СоставНормы.НоменклатураНормы,
	|	ВТ_СоставНормы.ЕдиницаИзмерения,
	|	ВТ_СоставНормы.ПериодичностьВыдачи
	|ПОМЕСТИТЬ ВТ_ЦелевыеНормы
	|ИЗ
	|	ВТ_ВсеНормы КАК ВТ_ВсеНормы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоставНормы КАК ВТ_СоставНормы
	|		ПО ВТ_ВсеНормы.НормаВыдачи = ВТ_СоставНормы.НормаВыдачи
	|ГДЕ
	|	ВТ_ВсеНормы.Подразделение = &ЦелевоеПодразделение
	|	И ВТ_ВсеНормы.Должность = &ЦелеваяДолжность
	|	И ВТ_ВсеНормы.РабочееМесто = &ЦелевоеРабочееМесто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ИсходныеНормы.Использовать, ВТ_ЦелевыеНормы.Использовать) КАК Использовать,
	|	ЕСТЬNULL(ВТ_ИсходныеНормы.УсловиеНормы, ВТ_ЦелевыеНормы.УсловиеНормы) КАК УсловиеНормы,
	|	ЕСТЬNULL(ВТ_ИсходныеНормы.НоменклатураНормы, ЗНАЧЕНИЕ(Справочник.НоменклатураНормОрганизации.ПустаяСсылка)) КАК ИсходнаяНоменклатураНормы,
	|	ЕСТЬNULL(ВТ_ИсходныеНормы.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ИсходнаяЕдиницаИзмерения,
	|	ЕСТЬNULL(ВТ_ИсходныеНормы.ПериодичностьВыдачи, ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)) КАК ИсходнаяПериодичностьВыдачи,
	|	ЕСТЬNULL(ВТ_ЦелевыеНормы.НоменклатураНормы, ЗНАЧЕНИЕ(Справочник.НоменклатураНормОрганизации.ПустаяСсылка)) КАК ЦелеваяНоменклатураНормы,
	|	ЕСТЬNULL(ВТ_ЦелевыеНормы.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ЦелеваяЕдиницаИзмерения,
	|	ЕСТЬNULL(ВТ_ЦелевыеНормы.ПериодичностьВыдачи, ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)) КАК ЦелеваяПериодичностьВыдачи
	|ИЗ
	|	ВТ_ИсходныеНормы КАК ВТ_ИсходныеНормы
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ЦелевыеНормы КАК ВТ_ЦелевыеНормы
	|		ПО ВТ_ИсходныеНормы.УсловиеНормы = ВТ_ЦелевыеНормы.УсловиеНормы
	|			И ВТ_ИсходныеНормы.НормаВыдачи = ВТ_ЦелевыеНормы.НормаВыдачи
	|			И ВТ_ИсходныеНормы.Использовать = ВТ_ЦелевыеНормы.Использовать
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ИсходныеНормы.УсловиеНормы.Наименование,
	|	ВТ_ЦелевыеНормы.УсловиеНормы.Наименование,
	|	ВТ_ИсходныеНормы.НоменклатураНормы.Наименование,
	|	ВТ_ЦелевыеНормы.НоменклатураНормы.Наименование,
	|	ВТ_ИсходныеНормы.ПериодичностьВыдачи.Наименование,
	|	ВТ_ЦелевыеНормы.ПериодичностьВыдачи.Наименование";
	
	Запрос.УстановитьПараметр("Организация",			Объект.Организация);
	Запрос.УстановитьПараметр("ИсходноеПодразделение",	СтруктураДляСравнения.ИсходноеПодразделение);
	Запрос.УстановитьПараметр("ИсходнаяДолжность",		СтруктураДляСравнения.ИсходнаяДолжность);
	Запрос.УстановитьПараметр("ИсходноеРабочееМесто",	СтруктураДляСравнения.ИсходноеРабочееМесто);
	Запрос.УстановитьПараметр("ЦелевоеПодразделение",	СтруктураДляСравнения.ЦелевоеПодразделение);
	Запрос.УстановитьПараметр("ЦелеваяДолжность",		СтруктураДляСравнения.ЦелеваяДолжность);
	Запрос.УстановитьПараметр("ЦелевоеРабочееМесто",	СтруктураДляСравнения.ЦелевоеРабочееМесто);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СравнениеНорм";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	Макет = ЭтотОбъект.РеквизитФормыВЗначение("Объект").ПолучитьМакет("СравнениеНорм");
	  
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(СтруктураДляСравнения);
	Область.Параметры.Организация = Объект.Организация;
	ТабличныйДокумент.Вывести(Область);
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(Область);
		
	КонецЦикла;	
	
	ТабличныйДокумент.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ОтображатьЗаголовки 	= Ложь;
	ТабличныйДокумент.ОтображатьСетку 		= Ложь;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаКлиенте
Процедура СравнитьНормы(Команда)
	
	Если ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные = Неопределено Тогда
		ИсходноеПодразделение 	= ПредопределенноеЗначение("Справочник.Подразделения.ПустаяСсылка");
		ИсходнаяДолжность 		= ПредопределенноеЗначение("Справочник.ДолжностиИПрофессии.ПустаяСсылка");
		ИсходноеРабочееМесто 	= ПредопределенноеЗначение("Справочник.РабочиеМестаАСТБ.ПустаяСсылка");
	Иначе
		ИсходноеПодразделение 	= ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные.Подразделение;
		ИсходнаяДолжность 		= ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные.Должность;
		ИсходноеРабочееМесто 	= ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные.РабочееМесто;
	КонецЕсли;
	
	Если ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные = Неопределено Тогда
		ЦелевоеПодразделение 	= ПредопределенноеЗначение("Справочник.Подразделения.ПустаяСсылка");
		ЦелеваяДолжность 		= ПредопределенноеЗначение("Справочник.ДолжностиИПрофессии.ПустаяСсылка");
		ЦелевоеРабочееМесто 	= ПредопределенноеЗначение("Справочник.РабочиеМестаАСТБ.ПустаяСсылка");
	Иначе
		ЦелевоеПодразделение 	= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.Подразделение;
		ЦелеваяДолжность 		= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.Должность;
		ЦелевоеРабочееМесто 	= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.РабочееМесто;
	КонецЕсли;
	
	СтруктураДляСравнения = НОВЫЙ Структура("ИсходноеПодразделение,ИсходнаяДолжность,ИсходноеРабочееМесто,ЦелевоеПодразделение,ЦелеваяДолжность,ЦелевоеРабочееМесто",
									ИсходноеПодразделение,ИсходнаяДолжность,ИсходноеРабочееМесто,ЦелевоеПодразделение,ЦелеваяДолжность,ЦелевоеРабочееМесто);
	
	ТабличныйДокумент = СравнитьНормыНаСервере(СтруктураДляСравнения);
	
	ТабличныйДокумент.Показать("Сравнение норм");
	
КонецПроцедуры

&НаСервере
Процедура ЗаменитьНормыНаСервере(СтруктураДляЗамены)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсходныеНормыВыдачиСИЗ.Организация КАК Организация,
	|	ИсходныеНормыВыдачиСИЗ.Подразделение КАК Подразделение,
	|	ИсходныеНормыВыдачиСИЗ.Должность КАК Должность,
	|	ИсходныеНормыВыдачиСИЗ.РабочееМесто КАК РабочееМесто,
	|	ИсходныеНормыВыдачиСИЗ.УсловиеНормы КАК УсловиеНормы,
	|	ИсходныеНормыВыдачиСИЗ.НормаВыдачи КАК НормаВыдачи,
	|	ИсходныеНормыВыдачиСИЗ.Использовать КАК Использовать
	|ИЗ
	|	РегистрСведений.ИсходныеНормыВыдачиСИЗ КАК ИсходныеНормыВыдачиСИЗ
	|ГДЕ
	|	ИсходныеНормыВыдачиСИЗ.Организация = &Организация
	|	И ИсходныеНормыВыдачиСИЗ.Подразделение = &Подразделение
	|	И ИсходныеНормыВыдачиСИЗ.Должность = &Должность
	|	И ИсходныеНормыВыдачиСИЗ.РабочееМесто = &РабочееМесто";
	
	Запрос.УстановитьПараметр("Организация",	Объект.Организация);
	Запрос.УстановитьПараметр("Подразделение",	СтруктураДляЗамены.ИсходноеПодразделение);
	Запрос.УстановитьПараметр("Должность",		СтруктураДляЗамены.ИсходнаяДолжность);
	Запрос.УстановитьПараметр("РабочееМесто",	СтруктураДляЗамены.ИсходноеРабочееМесто);
	
	ТаблицаИсходнойНормы = Запрос.Выполнить().Выгрузить();
	
	//очистка записей целевой нормы
	ЦелевойНаборЗаписей = РегистрыСведений.ИсходныеНормыВыдачиСИЗ.СоздатьНаборЗаписей();
	ЦелевойНаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
	ЦелевойНаборЗаписей.Отбор.Подразделение.Установить(СтруктураДляЗамены.ЦелевоеПодразделение);
	ЦелевойНаборЗаписей.Отбор.Должность.Установить(СтруктураДляЗамены.ЦелеваяДолжность);
	ЦелевойНаборЗаписей.Отбор.РабочееМесто.Установить(СтруктураДляЗамены.ЦелевоеРабочееМесто);
	ЦелевойНаборЗаписей.Очистить();
	ЦелевойНаборЗаписей.Записать();
	
	Для Каждого СтрокаТаблицыИсходнойНормы Из ТаблицаИсходнойНормы Цикл
		
		НоваяЗапись 				= ЦелевойНаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись,СтрокаТаблицыИсходнойНормы);
		НоваяЗапись.Подразделение 	= СтруктураДляЗамены.ЦелевоеПодразделение;
		НоваяЗапись.Должность 		= СтруктураДляЗамены.ЦелеваяДолжность;
		НоваяЗапись.РабочееМесто 	= СтруктураДляЗамены.ЦелевоеРабочееМесто;
		
	КонецЦикла;
	
	ЦелевойНаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьНормы(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОтветНаВопрос", ЭтаФорма);
	
	ПоказатьВопрос(Оповещение,"Будет выполнена полная замена текущих целевых норм на исходные. Выполнить?",РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветНаВопрос(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

	Если ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	Иначе
		ИсходноеПодразделение 	= ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные.Подразделение;
		ИсходнаяДолжность 		= ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные.Должность;
		ИсходноеРабочееМесто 	= ЭтаФорма.Элементы.ИсходныеНормы.ТекущиеДанные.РабочееМесто;
	КонецЕсли;
	
	Если ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	Иначе
		ЦелевоеПодразделение 	= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.Подразделение;
		ЦелеваяДолжность 		= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.Должность;
		ЦелевоеРабочееМесто 	= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.РабочееМесто;
	КонецЕсли;
	
	СтруктураДляЗамены = НОВЫЙ Структура("ИсходноеПодразделение,ИсходнаяДолжность,ИсходноеРабочееМесто,ЦелевоеПодразделение,ЦелеваяДолжность,ЦелевоеРабочееМесто",
									ИсходноеПодразделение,ИсходнаяДолжность,ИсходноеРабочееМесто,ЦелевоеПодразделение,ЦелеваяДолжность,ЦелевоеРабочееМесто);
									
	ЗаменитьНормыНаСервере(СтруктураДляЗамены);
	
	ЦелевыеНормыПриАктивизацииСтроки(Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьНормуВыдачиНаСервере(Подразделение,Должность,РабочееМесто,УсловиеНормы,СтараяНормаВыдачи,НоваяНормаВыдачи,Использовать)
	
	//очистка записей нормы
	ЦелевойНаборЗаписей = РегистрыСведений.ИсходныеНормыВыдачиСИЗ.СоздатьНаборЗаписей();
	ЦелевойНаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
	ЦелевойНаборЗаписей.Отбор.Подразделение.Установить(Подразделение);
	ЦелевойНаборЗаписей.Отбор.Должность.Установить(Должность);
	ЦелевойНаборЗаписей.Отбор.РабочееМесто.Установить(РабочееМесто);
	ЦелевойНаборЗаписей.Отбор.УсловиеНормы.Установить(УсловиеНормы);
	ЦелевойНаборЗаписей.Отбор.НормаВыдачи.Установить(СтараяНормаВыдачи);
	ЦелевойНаборЗаписей.Записать();
	
	ЦелевойНаборЗаписей = РегистрыСведений.ИсходныеНормыВыдачиСИЗ.СоздатьНаборЗаписей();
	ЦелевойНаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
	ЦелевойНаборЗаписей.Отбор.Подразделение.Установить(Подразделение);
	ЦелевойНаборЗаписей.Отбор.Должность.Установить(Должность);
	ЦелевойНаборЗаписей.Отбор.РабочееМесто.Установить(РабочееМесто);
	ЦелевойНаборЗаписей.Отбор.УсловиеНормы.Установить(УсловиеНормы);
	ЦелевойНаборЗаписей.Отбор.НормаВыдачи.Установить(НоваяНормаВыдачи);
	ЦелевойНаборЗаписей.Прочитать();
	
	НоваяЗапись 				= ЦелевойНаборЗаписей.Добавить();
	НоваяЗапись.Организация 	= Объект.Организация;
	НоваяЗапись.Подразделение 	= Подразделение;
	НоваяЗапись.Должность 		= Должность;
	НоваяЗапись.РабочееМесто 	= РабочееМесто;
	НоваяЗапись.УсловиеНормы 	= УсловиеНормы;
	НоваяЗапись.НормаВыдачи 	= НоваяНормаВыдачи;
	НоваяЗапись.Использовать 	= Использовать;
		
	ЦелевойНаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНормуВыдачи(Команда)
	
	ТекущиеДанные = Элементы.НормыВыдачиСИЗ.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		НормаВыдачи = ПредопределенноеЗначение("Справочник.НормыВыдачиСИЗ.ПустаяСсылка");
	Иначе
		НормаВыдачи = ТекущиеДанные.Ссылка;
	КонецЕсли;
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна",  РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормыВыбора.Вставить("РежимВыбора",        Истина);
	ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Ложь);
	ПараметрыФормыВыбора.Вставить("Отбор",              Новый Структура("Владелец", Объект.Организация));
	ПараметрыФормыВыбора.Вставить("НормаВыдачи", 		НормаВыдачи);
	
	ОткрытьФорму("Справочник.НормыВыдачиСИЗ.Форма.ФормаВыбора",ПараметрыФормыВыбора,ЭтаФорма,УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиНормы(Команда)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Переносить", Истина);
	НайденныеСтроки = Объект.ИсходныеНормыТаблица.НайтиСтроки(Отбор);
	
	Для Каждого Стр ИЗ НайденныеСтроки Цикл
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ВидВыдачиСИЗ", 		Стр.ВидВыдачиСИЗ);
		СтруктураОтбора.Вставить("ГОСТ", 				Стр.ГОСТ);
		СтруктураОтбора.Вставить("ЕдиницаИзмерения", 	Стр.ЕдиницаИзмерения);
		СтруктураОтбора.Вставить("Использовать", 		Стр.Использовать);
		СтруктураОтбора.Вставить("НоменклатураНормы", 	Стр.НоменклатураНормы);
		СтруктураОтбора.Вставить("НормаВыдачи", 		Стр.НормаВыдачи);
		СтруктураОтбора.Вставить("ОснованиеНормы", 		Стр.ОснованиеНормы);
		СтруктураОтбора.Вставить("ПериодичностьВыдачи", Стр.ПериодичностьВыдачи);
		СтруктураОтбора.Вставить("УсловиеНормы", 		Стр.УсловиеНормы);
		
		НайденныеСтрокиОтбор = Объект.ЦелевыеНормыТаблица.НайтиСтроки(СтруктураОтбора);
		Если НайденныеСтрокиОтбор.Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Объект.ЦелевыеНормыТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
		ТекущееПодразделение 		= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.Подразделение;
		ТекущаяДолжность 			= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.Должность;
		ТекущееРабочееМесто 		= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.РабочееМесто;
		НоваяСтрока.Подразделение 	= ТекущееПодразделение;
		НоваяСтрока.Должность 		= ТекущаяДолжность;
		НоваяСтрока.РабочееМесто 	= ТекущееРабочееМесто;
		
	КонецЦикла;
	
	//АсТБ_Alexey_100197_********************************************************************
	Текст = "ru = ""Перенести также уточненные основания норм выдачи?"";";
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, Параметры);
	ПоказатьВопрос(Оповещение,НСтр(Текст),РежимДиалогаВопрос.ДаНет);
	//АсТБ_Alexey_100197_********************************************************************
	
КонецПроцедуры

//АсТБ_Alexey_100197_********************************************************************
&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, ПереноситьУточненныеОснования) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Возврат;
    КонецЕсли;
	
	Для Каждого СтрокаТаблицы ИЗ Объект.ЦелевыеНормыТаблица Цикл
		
	    СтрокаТаблицы.УточненноеОснованиеНормы = "";
		
	КонецЦикла;
	
КонецПроцедуры
//АсТБ_Alexey_100197_********************************************************************

&НаСервере
Процедура ЗаписатьНормыНаСервере(СтруктураДляЗамены)
	
	//очистка записей целевой нормы
	ЦелевойНаборЗаписей = РегистрыСведений.ИсходныеНормыВыдачиСИЗ.СоздатьНаборЗаписей();
	ЦелевойНаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
	ЦелевойНаборЗаписей.Отбор.Подразделение.Установить(СтруктураДляЗамены.ТекущееПодразделение);
	ЦелевойНаборЗаписей.Отбор.Должность.Установить(СтруктураДляЗамены.ТекущаяДолжность);
	ЦелевойНаборЗаписей.Отбор.РабочееМесто.Установить(СтруктураДляЗамены.ТекущееРабочееМесто);
	ЦелевойНаборЗаписей.Очистить();
	ЦелевойНаборЗаписей.Записать();
	
	Для Каждого СтрокаТаблицыИсходнойНормы Из Объект.ЦелевыеНормыТаблица Цикл
		
		НоваяЗапись 				= ЦелевойНаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись,СтрокаТаблицыИсходнойНормы);
		//НоваяЗапись.Подразделение 	= СтруктураДляЗамены.ТекущееПодразделение;
		//НоваяЗапись.Должность 		= СтруктураДляЗамены.ТекущаяДолжность;
		//НоваяЗапись.РабочееМесто 	= СтруктураДляЗамены.ТекущееРабочееМесто;
		
	КонецЦикла;
	
	ЦелевойНаборЗаписей.Записать();
	
	//АсТБ_Alexey_100197_********************************************************************
	//запись уточненных оснований
	Для Каждого СтрокаТаблицыИсходнойНормы Из Объект.ЦелевыеНормыТаблица Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицыИсходнойНормы.Подразделение) Тогда
			Продолжить;
		КонецЕсли;	
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицыИсходнойНормы.УточненноеОснованиеНормы) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.УточненныеОснованияНормВыдачи.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(Объект.Организация);
		НаборЗаписей.Отбор.НормаВыдачи.Установить(СтрокаТаблицыИсходнойНормы.НормаВыдачи);
		НаборЗаписей.Отбор.Подразделение.Установить(СтрокаТаблицыИсходнойНормы.Подразделение);
		НаборЗаписей.Отбор.РабочееМесто.Установить(СтрокаТаблицыИсходнойНормы.РабочееМесто);
		НаборЗаписей.Отбор.Должность.Установить(СтрокаТаблицыИсходнойНормы.Должность);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() = 0 Тогда
			
			НоваяЗапись = НаборЗаписей.Добавить();
			
			НоваяЗапись.Организация 	= Объект.Организация;
			НоваяЗапись.НормаВыдачи 	= СтрокаТаблицыИсходнойНормы.НормаВыдачи;
			НоваяЗапись.Подразделение 	= СтрокаТаблицыИсходнойНормы.Подразделение;
			НоваяЗапись.Должность 		= СтрокаТаблицыИсходнойНормы.Должность;
			НоваяЗапись.РабочееМесто 	= СтрокаТаблицыИсходнойНормы.РабочееМесто;
			НоваяЗапись.Основание 		= СтрокаТаблицыИсходнойНормы.УточненноеОснованиеНормы;
			
			НаборЗаписей.Записать();
			
		КонецЕсли;		

	КонецЦикла;	
	//АсТБ_Alexey_100197_********************************************************************
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНормы(Команда)
	
	ТекущееПодразделение 	= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.Подразделение;
	ТекущаяДолжность 		= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.Должность;
	ТекущееРабочееМесто 	= ЭтаФорма.Элементы.ЦелевыеНормы.ТекущиеДанные.РабочееМесто;
	
	СтруктураДляЗамены = Новый Структура;
	СтруктураДляЗамены.Вставить("ТекущееПодразделение", ТекущееПодразделение);
	СтруктураДляЗамены.Вставить("ТекущаяДолжность", ТекущаяДолжность);
	СтруктураДляЗамены.Вставить("ТекущееРабочееМесто", ТекущееРабочееМесто);
	
	ЗаписатьНормыНаСервере(СтруктураДляЗамены);
КонецПроцедуры

&НаСервере
Процедура УстановитьСнятьФлажкиНаСервере(ЗначениеФлажка)
	
	ТаблицаДокумента = Объект.ИсходныеНормыТаблица.Выгрузить();
	ТаблицаДокумента.ЗаполнитьЗначения(ЗначениеФлажка, "Переносить");
	Объект.ИсходныеНормыТаблица.Загрузить(ТаблицаДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	УстановитьСнятьФлажкиНаСервере(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	УстановитьСнятьФлажкиНаСервере(Ложь);
КонецПроцедуры

// Четаев С.В. { 
&НаКлиенте
Процедура ОткрытьМастерНорм(Команда)
	ОткрытьФорму("Обработка.СозданиеНормВыдачиСИЗ.Форма.ФормаМастерНорм",, ЭтаФорма, УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

// } Четаев С.В.