
&НаКлиенте
Процедура ЗагрузитьСтатистикуРаспределенияРазмеров(Команда)
	
	ВыполнитьЗагрузкуНаСервере();	
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗагрузкуНаСервере()
	
	//чтение схемы из макета
	ВременныйФайлСхемы = ПолучитьИмяВременногоФайла();
	
	МакетСхемы = Справочники.ХарактеристикиНоменклатуры.ПолучитьМакет("СхемаXML");
	МакетСхемы.Записать(ВременныйФайлСхемы);
	
	ЧтениеСхемы = Новый ЧтениеXML;
	ЧтениеСхемы.ОткрытьФайл(ВременныйФайлСхемы);

	Построитель_DOM = Новый ПостроительDOM;
	Документ_DOM 	= Построитель_DOM.Прочитать(ЧтениеСхемы);
	
	ПостроительСхем_XML = Новый ПостроительСхемXML;
	Схема_XML 			= ПостроительСхем_XML.СоздатьСхемуXML(Документ_DOM);
	
	НаборСхем = Новый НаборСхемXML;
	НаборСхем.Добавить(Схема_XML);
	
	НоваяФабрика = Новый ФабрикаXDTO(НаборСхем);
	
	//чтение данных из макета
	ВременныйФайлНоменклатуры 	= ПолучитьИмяВременногоФайла();
	МакетДанных 				= Справочники.ХарактеристикиНоменклатуры.ПолучитьМакет("ДанныеXML");
	МакетДанных.Записать(ВременныйФайлНоменклатуры);
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ВременныйФайлНоменклатуры);
	
	Попытка
		Данные = НоваяФабрика.ПрочитатьXML(Чтение);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивКодовОракл = Новый Массив;
	
	Для Каждого Элемент Из Данные.NOM Цикл
		
		МассивКодовОракл.Добавить(Число(Элемент.Id));		
			
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Номенклатура.Ссылка,
	|	Номенклатура.КодСинхронизации
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ЭтоГруппа = ЛОЖЬ
	|	И Номенклатура.КодСинхронизации В(&КодСинхронизации)";
	
	Запрос.УстановитьПараметр("КодСинхронизации",МассивКодовОракл);
	
	ТаблицаНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Элемент Из Данные.NOM Цикл
		
		ТекущийКодОракл = Число(Элемент.Id);
		
		СтрокаТаблицыНоменклатуры = ТаблицаНоменклатуры.Найти(ТекущийКодОракл,"КодСинхронизации");
		
		Если СтрокаТаблицыНоменклатуры = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		ТекущаяНоменклатура = СтрокаТаблицыНоменклатуры.Ссылка;
		
		Если ТипЗнч(Элемент.Metrika) = Тип("ОбъектXDTO") Тогда
			
			ТекущаяМетрика = Справочники.ХарактеристикиНоменклатуры.НайтиПоКоду(Число(Элемент.Metrika.metrika_id),,,ТекущаяНоменклатура);
			
			Если ЗначениеЗаполнено(ТекущаяМетрика) Тогда
				
				МетрикаОбъект 									= ТекущаяМетрика.ПолучитьОбъект();
				МетрикаОбъект.СтатистикаРаспределенияРазмера 	= Число(Элемент.Metrika.PERCENT);
				МетрикаОбъект.Записать();
				
				Сообщить("Загружено: " + ТекущаяНоменклатура + " --> " + ТекущаяМетрика + " --> " + Элемент.Metrika.PERCENT + "%");
				
			КонецЕсли;
			
		Иначе
			
			Для Каждого Метрика Из Элемент.Metrika Цикл
				
				ТекущаяМетрика = Справочники.ХарактеристикиНоменклатуры.НайтиПоКоду(Число(Метрика.metrika_id),,,ТекущаяНоменклатура);
				
				Если ЗначениеЗаполнено(ТекущаяМетрика) Тогда
					
					МетрикаОбъект 									= ТекущаяМетрика.ПолучитьОбъект();
					МетрикаОбъект.СтатистикаРаспределенияРазмера 	= Число(Метрика.PERCENT);
					МетрикаОбъект.Записать();
					
					Сообщить("Загружено: " + ТекущаяНоменклатура + " --> " + ТекущаяМетрика + " --> " + Метрика.PERCENT + "%");
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
	
	КонецЦикла;
	
	Сообщить("Обработка завершена.");
	
КонецПроцедуры
