&НаКлиенте
Перем ТекущийЯзык;
&НаКлиенте
Перем ВРегистр;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	
	// Описание полей : ИмяКоманды~Картинка~Ширина~Загловок (` - разделитель)

	РусскийМассив=Новый Массив;
	РусскийМассив.Добавить("1`2`3`4`5`6`7`8`9`0`-`+");
	РусскийМассив.Добавить("й`ц`у`к`е`н`г`ш`щ`з`х`ъ");
	РусскийМассив.Добавить("ВерхнихРегистр~ПереместитьВверх~~ `ф`ы`в`а`п`р`о`л`д`ж`э");
	РусскийМассив.Добавить("я`ч`с`м`и`т`ь`б`ю`<`>`=");
	//РусскийМассив.Добавить("ПереключениеРаскладкиНажатие~ГеографическаяСхема~~ `.`?`~3.4~ `/`\`(`)`BackSpace~ПереместитьВлево~2.2~ ");
	РусскийМассив.Добавить("ПереключениеРаскладкиНажатие~ГеографическаяСхема~~ `.`?`~3.4~ `/`\`(`)`BackSpace~ПереместитьВлево~~ `Enter~Enter_24~~ ");

	EnglishМассив=Новый Массив;
	EnglishМассив.Добавить("1`2`3`4`5`6`7`8`9`0`-`+");
	EnglishМассив.Добавить("q`w`e`r`t`y`u`i`o`p`[`]");
	EnglishМассив.Добавить("ВерхнихРегистр~ПереместитьВверх~~ `a`s`d`f`g`h`j`k`l`;`'");
	//EnglishМассив.Добавить("z`x`c`v`b`n`m`,`.`/`BackSpace~ПереместитьВлево~2.2~ ");
	EnglishМассив.Добавить("z`x`c`v`b`n`m`,`.`/`BackSpace~ПереместитьВлево~~ `Enter~Enter_24~~ ");
	EnglishМассив.Добавить("ПереключениеРаскладкиНажатие~ГеографическаяСхема~~ `@`?`~4.7~ `*`:`%");

	ЭтаФорма.СтруктураКнопок=Новый Структура("English,Русский",EnglishМассив,РусскийМассив);	

	Настройки = ХранилищеСистемныхНастроек.Загрузить("ОбщаяФорма.ВиртуальнаяКлавиатура", "ХранилищеНастроекФормы");	   
	Если Настройки <> Неопределено Тогда
		ЭтаФорма.РазмерШрифта = Настройки.Получить("РазмерШрифта");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТекущийЯзык=?(ТекущийЯзык=Неопределено,"Русский",ТекущийЯзык);// инициализируем переменную на клиенте
	ВРегистр=Ложь;
	Если РазмерШрифта=0 тогда РазмерШрифта=16;КонецЕсли;
	
	СоздатьИРасположитьКнопки(ТекущийЯзык,ВРегистр);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьИРасположитьКнопки(Язык,ВРегистр)
	
	МассивКнопок=Новый Массив;
	ОчиститьСтраницуКнопки();
	ЭтаФорма.СтруктураКнопок.Свойство(Язык,МассивКнопок);
	ТекущийЯзык=Язык;
	мШирина=Окр(РазмерШрифта*4/10,0,РежимОкругления.Окр15как10);
	Элементы.БМасштаб.Шрифт=Новый Шрифт("Tahoma",РазмерШрифта,1); Элементы.БМасштаб.Ширина=мШирина;
	Элементы.ММасштаб.Шрифт=Новый Шрифт("Tahoma",РазмерШрифта,1); Элементы.ММасштаб.Ширина=мШирина;
	Элементы.Текст.Шрифт=Новый Шрифт("Tahoma",РазмерШрифта,1);
	Элементы.Enter.Шрифт=Новый Шрифт("Tahoma",РазмерШрифта,1);

	Для з=0 по МассивКнопок.Количество()-1 цикл
		
		Группа=СоздатьИРасположитьГруппу("РядКнопок"+Строка(з),,Элементы.ГруппаКнопки);
		
		МассивПолей = РазложитьСтрокуВМассивПодстрок(МассивКнопок[з], "`");

		Для ш=0 по МассивПолей.Количество()-1 цикл			
			Кн1=Элементы.Добавить("БКнопка_"+Строка(з)+строка(ш),Тип("КнопкаФормы"),Группа);			
			ДанныеПоКнопке = РазложитьСтрокуВМассивПодстрок(МассивПолей[ш], "~");			
			Кн1.Заголовок=?(ВРегистр,ВРег(ДанныеПоКнопке[ДанныеПоКнопке.Количество()-1]),ДанныеПоКнопке[ДанныеПоКнопке.Количество()-1]);
			Кн1.Вид=ВидКнопкиФормы.ОбычнаяКнопка;
			Кн1.Шрифт=Новый Шрифт("Tahoma",РазмерШрифта,1);
			Кн1.Ширина=мШирина;
			Если ДанныеПоКнопке.Количество()=2 и ЗначениеЗаполнено(ДанныеПоКнопке[0]) тогда  //установка ширины
				Кн1.Ширина=Окр(Число(ДанныеПоКнопке[0])*мШирина,0,РежимОкругления.Окр15как10);
			ИначеЕсли ДанныеПоКнопке.Количество()=3 тогда   //установка картинки
				Если ЗначениеЗаполнено(ДанныеПоКнопке[0])  тогда
					Кн1.Картинка=БиблиотекаКартинок[ДанныеПоКнопке[0]];
					Кн1.Отображение=?(Кн1.Заголовок=" ",ОтображениеКнопки.Картинка,ОтображениеКнопки.КартинкаИТекст);
				КонецЕсли;
				Если ЗначениеЗаполнено(ДанныеПоКнопке[1])  тогда
					Кн1.Ширина=Окр(Число(ДанныеПоКнопке[1])*мШирина,0,РежимОкругления.Окр15как10);
				КонецЕсли;
			ИначеЕсли ДанныеПоКнопке.Количество()=4 тогда      // установка команды
				Если ЗначениеЗаполнено(ДанныеПоКнопке[0])  тогда
					Кн1.ИмяКоманды=ДанныеПоКнопке[0];	
				КонецЕсли;				
				Если ЗначениеЗаполнено(ДанныеПоКнопке[1])  тогда
					Кн1.Картинка=БиблиотекаКартинок[ДанныеПоКнопке[1]];
					Кн1.Отображение=?(Кн1.Заголовок=" ",ОтображениеКнопки.Картинка,ОтображениеКнопки.КартинкаИТекст);
				КонецЕсли;
				Если ЗначениеЗаполнено(ДанныеПоКнопке[2])  тогда
					Кн1.Ширина=Окр(Число(ДанныеПоКнопке[2])*мШирина,0,РежимОкругления.Окр15как10);
				КонецЕсли;							
			КонецЕсли;						
			Кн1.Высота=1;
			Если Не ЗначениеЗаполнено(Кн1.ИмяКоманды) тогда
				НоваяКоманда = ЭтаФорма.Команды.Добавить("БКнопка" + Строка(з)+строка(ш));
				НоваяКоманда.Действие = "БукваНажатие";	
				Кн1.ИмяКоманды=НоваяКоманда.Имя;
			КонецЕсли;
		КонецЦикла;
		
	конецЦикла;	
	
	//УстановитьЦветРамкиБыстрыхКнопок();
	
КонецПроцедуры

&НаСервере
Функция СоздатьИРасположитьГруппу(Имя,Заголовок=Неопределено,Родитель)
	
	Группа=Элементы.Добавить(Имя,Тип("ГруппаФормы"),Родитель);
	Группа.Вид=ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Отображение=?(Заголовок=неопределено,ОтображениеОбычнойГруппы.Нет,ОтображениеОбычнойГруппы.СлабоеВыделение);
	Группа.Группировка=ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
	Группа.Заголовок=Заголовок;
	Группа.ОтображатьЗаголовок=?(Заголовок=неопределено,Ложь,Истина);
	Группа.ШрифтЗаголовка=Новый Шрифт(,10,1);
	Группа.ШиринаПодчиненныхЭлементов=ШиринаПодчиненныхЭлементовФормы.Авто;
	
	Возврат  Группа;

КонецФункции

&НаСервере
Процедура ОчиститьСтраницуКнопки()
	
	// удаляем кнопки
	СписокЭлементов=Новый СписокЗначений;
	Для каждого Группа из Элементы.ГруппаКнопки.ПодчиненныеЭлементы цикл
		СписокЭлементов.Добавить(Группа);
	КонецЦикла;	
	Для каждого Эл из СписокЭлементов цикл
		Элементы.Удалить(Эл.Значение);
	КонецЦикла;	
	
	// удаляем команды
	СписокКоманд=Новый СписокЗначений;
	Для каждого Команда из ЭтаФорма.Команды цикл
		Если Лев(Команда.Имя,7)<>"БКнопка" тогда Продолжить; КонецЕсли;
		СписокКоманд.Добавить(Команда);
	КонецЦикла;
	Для каждого Эл из СписокКоманд цикл
		ЭтаФорма.Команды.Удалить(Эл.Значение);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключениеРаскладкиНажатие(Команда)
	
	ТекущийЯзык=?(ТекущийЯзык="English","Русский","English");
	СоздатьИРасположитьКнопки(ТекущийЯзык,ВРегистр);

КонецПроцедуры

&НаКлиенте
Процедура ВерхнихРегистр(Команда)
	
	ВРегистр=Не ВРегистр;	
	СоздатьИРасположитьКнопки(ТекущийЯзык,ВРегистр);
	
КонецПроцедуры

&НаКлиенте
Процедура BackSpace(Команда)
	
	Текст = Лев(Текст, СтрДлина(Текст)-1);

КонецПроцедуры

&НаКлиенте
Процедура БукваНажатие(Команда)
	
	Текст = Текст + ЭтаФорма.ТекущийЭлемент.Заголовок;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ЭтаФорма.Закрыть(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура БМасштаб(Команда)

	РазмерШрифта=РазмерШрифта+2;
	Если РазмерШрифта>16 тогда РазмерШрифта=16; КонецЕсли;
		
	СоздатьИРасположитьКнопки(ТекущийЯзык,ВРегистр);
	
КонецПроцедуры

&НаКлиенте
Процедура ММасштаб(Команда)
	
	РазмерШрифта=РазмерШрифта-2;
	Если РазмерШрифта<10 тогда РазмерШрифта=10; КонецЕсли;
	
	СоздатьИРасположитьКнопки(ТекущийЯзык,ВРегистр);

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Структура = Новый Структура("ТекстСВиртуальнойКлавиатуры", Текст);
	
	ОповеститьОВыборе(Структура);
		
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	Настройки = Новый Соответствие;
	Настройки.Вставить("РазмерШрифта",РазмерШрифта);
	ХранилищеСистемныхНастроек.Сохранить("ОбщаяФорма.ВиртуальнаяКлавиатура", "ХранилищеНастроекФормы", Настройки);

КонецПроцедуры

&НаСервере
// Разбивает строку на несколько строк по разделителю. Разделитель может иметь любую длину.
//
// Параметры:
//  Строка                 - Строка - текст с разделителями;
//  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат.
//     - если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение "" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
//
// Возвращаемое значение:
//  Массив - массив строк.
//
// Примеры:
//  РазложитьСтрокуВМассивПодстрок(",один,,два,", ",") - возвратит массив из 5 элементов, три из которых  - пустые строки;
//  РазложитьСтрокуВМассивПодстрок(",один,,два,", ",", Истина) - возвратит массив из двух элементов;
//  РазложитьСтрокуВМассивПодстрок(" один   два  ", " ") - возвратит массив из двух элементов;
//  РазложитьСтрокуВМассивПодстрок("") - возвратит пустой массив;
//  РазложитьСтрокуВМассивПодстрок("",,Ложь) - возвратит массив с одним элементом "" (пустой строкой);
//  РазложитьСтрокуВМассивПодстрок("", " ") - возвратит массив с одним элементом "" (пустой строкой);
//
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь) Экспорт
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Строка));
		Иначе
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

&НаКлиенте
Процедура Enter(Команда)
	
	Текст = Текст + Символы.ПС;
	
КонецПроцедуры



