
&НаКлиенте
Процедура ПорядокОтбораПриИзменении(Элемент)
	
	 УстановитьПорядокТаблицОтбора();
	 ЗаполнитьТаблицыОтбора();
	 
	 //ЭтаФорма.Модифицированность = Истина;
	 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Объект.ПорядокОтбора = "НоменклатураНормы";
	УстановитьПорядокТаблицОтбора();
	ЗаполнитьТаблицыОтбора();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПорядокТаблицОтбора()
	
	Если Объект.ПорядокОтбора = "НоменклатураНормы" Тогда
		Элементы.Переместить(Элементы.ТаблицаНоменклатурыНормы,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаСотрудников,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаПодразделений,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаДолжностей,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаНоменклатуры,Элементы.ГруппаФильтры);
	ИначеЕсли Объект.ПорядокОтбора = "Сотрудник" Тогда
		Элементы.Переместить(Элементы.ТаблицаСотрудников,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаПодразделений,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаДолжностей,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаНоменклатурыНормы,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаНоменклатуры,Элементы.ГруппаФильтры);
	ИначеЕсли Объект.ПорядокОтбора = "Подразделение" Тогда
		Элементы.Переместить(Элементы.ТаблицаПодразделений,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаДолжностей,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаСотрудников,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаНоменклатурыНормы,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаНоменклатуры,Элементы.ГруппаФильтры);
	ИначеЕсли Объект.ПорядокОтбора = "Должность" Тогда
		Элементы.Переместить(Элементы.ТаблицаДолжностей,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаПодразделений,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаСотрудников,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаНоменклатурыНормы,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаНоменклатуры,Элементы.ГруппаФильтры);
	ИначеЕсли Объект.ПорядокОтбора = "Номенклатура" Тогда
		Элементы.Переместить(Элементы.ТаблицаНоменклатуры,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаНоменклатурыНормы,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаСотрудников,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаПодразделений,Элементы.ГруппаФильтры);
		Элементы.Переместить(Элементы.ТаблицаДолжностей,Элементы.ГруппаФильтры);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыОтбора()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ТекущийОбъект.ПорядокОтбора = "НоменклатураНормы" Тогда
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Сотрудник" Тогда
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Подразделение" Тогда
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Должность" Тогда
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Номенклатура" Тогда
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
	КонецЕсли;
	
	ЗаполнитьИсходныеДанные(ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуСИерархиейПодразделений(МассивСотрудников = Неопределено, МассивПодразделений = Неопределено, МассивДолжностей = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник,
	|	ЗанятыеРабочиеМестаОстатки.Подразделение КАК Подразделение,
	|	ЗанятыеРабочиеМестаОстатки.Должность КАК Должность
	|ИЗ
	|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
	|			&ДатаАнализа,
	|			Организация = &Организация
	|				И (&НеИспользоватьОтборПоСотрудникам
	|					ИЛИ Сотрудник В (&МассивСотрудников))
	|				И (&НеИспользоватьОтборПоПодразделениям
	|					ИЛИ Подразделение В (&МассивПодразделений))
	|				И (&НеИспользоватьОтборПоДолжностям
	|					ИЛИ Должность В (&МассивДолжностей))) КАК ЗанятыеРабочиеМестаОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Подразделение,
	|	Должность";
	
	Запрос.УстановитьПараметр("ДатаАнализа",						ТекущаяДата());
	Запрос.УстановитьПараметр("Организация",						Объект.Организация);
	Запрос.УстановитьПараметр("НеИспользоватьОтборПоСотрудникам",	МассивСотрудников = Неопределено);
	Запрос.УстановитьПараметр("НеИспользоватьОтборПоПодразделениям",МассивПодразделений = Неопределено);
	Запрос.УстановитьПараметр("НеИспользоватьОтборПоДолжностям",	МассивДолжностей = Неопределено);
	Запрос.УстановитьПараметр("МассивСотрудников",					МассивСотрудников);
	Запрос.УстановитьПараметр("МассивПодразделений",				МассивПодразделений);
	Запрос.УстановитьПараметр("МассивДолжностей",					МассивДолжностей);
		
		
	ТаблицаЗапроса 		= Запрос.Выполнить().Выгрузить();
	ТаблицаСИерархией 	= ТаблицаЗапроса.Скопировать();
	
	//анализ иерархии подразделений выключен 13.11.2017
	
	//Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
	//	
	//	Если ЗначениеЗаполнено(СтрокаТаблицыЗапроса.Подразделение.Родитель) Тогда
	//		
	//		ДобавитьРодительскоеПодразделение(ТаблицаСИерархией,СтрокаТаблицыЗапроса,СтрокаТаблицыЗапроса.Подразделение.Родитель);
	//		
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	Возврат ТаблицаСИерархией;
	
КонецФункции

//анализ иерархии подразделений выключен 13.11.2017

//&НаСервере
//Процедура ДобавитьРодительскоеПодразделение(ТаблицаСИерархией,СтрокаТаблицыЗапроса,Подразделение)
//	
//	НоваяСтрока = ТаблицаСИерархией.Добавить();
//	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыЗапроса);
//	НоваяСтрока.Подразделение = Подразделение;
//	
//	Если ЗначениеЗаполнено(Подразделение.Родитель) Тогда
//		
//	    ДобавитьРодительскоеПодразделение(ТаблицаСИерархией,СтрокаТаблицыЗапроса,Подразделение.Родитель);
//		
//	КонецЕсли;
//	
//КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект)
	
	Запрос = НОВЫЙ Запрос;
	
	Если ТекущийОбъект.ПорядокОтбора = "НоменклатураНормы" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации КАК НоменклатураНормыОрганизации,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрСведений.СоответствияНоменклатурыВыдачи.СрезПоследних(&ДатаАнализа, ) КАК СоответствияНоменклатурыВыдачиСрезПоследних
		|ГДЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации.Владелец = &Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",ТекущийОбъект.Организация);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Сотрудник" Тогда
		
		ТаблицаСотрудников = ТекущийОбъект.ТаблицаСотрудников.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы КАК НоменклатураНормыОрганизации,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Сотрудник В (&МассивСотрудников)) КАК ПотребностьВыдачиСИЗОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивСотрудников",	ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник"));
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Подразделение" ИЛИ ТекущийОбъект.ПорядокОтбора = "Должность" Тогда
		
		ТаблицаПодразделений 	= ТекущийОбъект.ТаблицаПодразделений.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаДолжностей 		= ТекущийОбъект.ТаблицаДолжностей.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УстановленныеНормыВыдачиСИЗСрезПоследних.Подразделение КАК Подразделение,
		|	УстановленныеНормыВыдачиСИЗСрезПоследних.Должность КАК Должность,
		|	УстановленныеНормыВыдачиСИЗСрезПоследних.НормаВыдачи КАК НормаВыдачи
		|ПОМЕСТИТЬ ВТ_УстановленныеНормы
		|ИЗ
		|	РегистрСведений.УстановленныеНормыВыдачиСИЗ.СрезПоследних(&ДатаАнализа, Организация = &Организация) КАК УстановленныеНормыВыдачиСИЗСрезПоследних
		|ГДЕ
		|	УстановленныеНормыВыдачиСИЗСрезПоследних.Использовать
		|	И (УстановленныеНормыВыдачиСИЗСрезПоследних.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
		|			ИЛИ УстановленныеНормыВыдачиСИЗСрезПоследних.Должность В (&МассивДолжностей))
		|	И (УстановленныеНормыВыдачиСИЗСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
		|			ИЛИ УстановленныеНормыВыдачиСИЗСрезПоследних.Подразделение В ИЕРАРХИИ (&МассивПодразделений))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НормыВыдачиСИЗСоставНормы.Ссылка КАК НормаВыдачи,
		|	НормыВыдачиСИЗСоставНормы.НоменклатураНормы КАК НоменклатураНормы
		|ПОМЕСТИТЬ ВТ_СоставНормыВыдачи
		|ИЗ
		|	Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_СоставНормыВыдачи.НоменклатураНормы КАК НоменклатураНормыОрганизации,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	ВТ_УстановленныеНормы КАК ВТ_УстановленныеНормы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоставНормыВыдачи КАК ВТ_СоставНормыВыдачи
		|		ПО ВТ_УстановленныеНормы.НормаВыдачи = ВТ_СоставНормыВыдачи.НормаВыдачи
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_СоставНормыВыдачи.НоменклатураНормы.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивПодразделений",	ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение"));
		Запрос.УстановитьПараметр("МассивДолжностей",		ТаблицаДолжностей.ВыгрузитьКолонку("Должность"));
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Номенклатура" Тогда
		
		ТаблицаНоменклатуры = ТекущийОбъект.ТаблицаНоменклатуры.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрСведений.СоответствияНоменклатурыВыдачи.СрезПоследних(&ДатаАнализа, ) КАК СоответствияНоменклатурыВыдачиСрезПоследних
		|ГДЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации.Владелец = &Организация
		|	И СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура В(&МассивНоменклатуры)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивНоменклатуры",	ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура"));
		
	КонецЕсли;
	
	ТекущийОбъект.ТаблицаНоменклатурыНормы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСотрудников(ТекущийОбъект)
	
	Запрос = НОВЫЙ Запрос;
	
	Если ТекущийОбъект.ПорядокОтбора = "НоменклатураНормы" Тогда
		
		ТаблицаНоменклатурыНормы = ТекущийОбъект.ТаблицаНоменклатурыНормы.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И НоменклатураНормы В (&МассивНоменклатурыНормы)) КАК ПотребностьВыдачиСИЗОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник.Наименование"; 
		
		Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивНоменклатурыНормы",ТаблицаНоменклатурыНормы.ВыгрузитьКолонку("НоменклатураНормыОрганизации"));
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Сотрудник" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&ДатаАнализа, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Подразделение" ИЛИ ТекущийОбъект.ПорядокОтбора = "Должность" Тогда
		
		ТаблицаПодразделений 	= ТекущийОбъект.ТаблицаПодразделений.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаДолжностей 		= ТекущийОбъект.ТаблицаДолжностей.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Подразделение В (&МассивПодразделений)
		|				И Должность В (&МассивДолжностей)) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивПодразделений",	ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение"));
		Запрос.УстановитьПараметр("МассивДолжностей",		ТаблицаДолжностей.ВыгрузитьКолонку("Должность"));
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Номенклатура" Тогда
		
		ТаблицаСИерархией = ПолучитьТаблицуСИерархиейПодразделений();
		
		ТаблицаНоменклатуры = ТекущийОбъект.ТаблицаНоменклатуры.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы
		|ПОМЕСТИТЬ ВТ_Потребность
		|ИЗ
		|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация) КАК ПотребностьВыдачиСИЗОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Сотрудник,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Подразделение,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Должность
		|ПОМЕСТИТЬ ВТ_Маппинг
		|ИЗ
		|	РегистрСведений.СоответствияНоменклатурыВыдачи.СрезПоследних(&ДатаАнализа, ) КАК СоответствияНоменклатурыВыдачиСрезПоследних
		|ГДЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Использовать
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСИерархией.Сотрудник КАК Сотрудник,
		|	ТаблицаСИерархией.Подразделение КАК Подразделение,
		|	ТаблицаСИерархией.Должность КАК Должность
		|ПОМЕСТИТЬ ВТ_ТаблицаСИерархией
		|ИЗ
		|	&ТаблицаСИерархией КАК ТаблицаСИерархией
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Потребность.Сотрудник,
		|	ВТ_Потребность.НоменклатураНормы,
		|	ВТ_ТаблицаСИерархией.Подразделение,
		|	ВТ_ТаблицаСИерархией.Должность
		|ПОМЕСТИТЬ ВТ_Потребность_ИерархияПодразделений
		|ИЗ
		|	ВТ_Потребность КАК ВТ_Потребность
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСИерархией КАК ВТ_ТаблицаСИерархией
		|		ПО ВТ_Потребность.Сотрудник = ВТ_ТаблицаСИерархией.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Потребность_ИерархияПодразделений.Сотрудник,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	ВТ_Потребность_ИерархияПодразделений КАК ВТ_Потребность_ИерархияПодразделений
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Маппинг КАК ВТ_Маппинг
		|		ПО (ВТ_Маппинг.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|				ИЛИ ВТ_Потребность_ИерархияПодразделений.Сотрудник = ВТ_Маппинг.Сотрудник)
		|			И ВТ_Потребность_ИерархияПодразделений.НоменклатураНормы = ВТ_Маппинг.НоменклатураНормыОрганизации
		|			И (ВТ_Маппинг.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
		|				ИЛИ ВТ_Потребность_ИерархияПодразделений.Должность = ВТ_Маппинг.Должность)
		|			И (ВТ_Маппинг.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
		|				ИЛИ ВТ_Потребность_ИерархияПодразделений.Подразделение = ВТ_Маппинг.Подразделение)
		|ГДЕ
		|	ВТ_Маппинг.Номенклатура ЕСТЬ NULL 
		|	И ВТ_Маппинг.Номенклатура В(&МассивНоменклатуры)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_Потребность_ИерархияПодразделений.Сотрудник.Наименование"; 
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивНоменклатуры",	ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура"));
		Запрос.УстановитьПараметр("ТаблицаСИерархией",	ТаблицаСИерархией);
		
	КонецЕсли;
	
	ТекущийОбъект.ТаблицаСотрудников.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПодразделений(ТекущийОбъект)
	
	Запрос = НОВЫЙ Запрос;
	
	Если ТекущийОбъект.ПорядокОтбора = "НоменклатураНормы" Тогда
		
		ТаблицаНоменклатурыНормы 	= ТекущийОбъект.ТаблицаНоменклатурыНормы.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаСотрудников 			= ТекущийОбъект.ТаблицаСотрудников.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы
		|ПОМЕСТИТЬ ВТ_Потребность
		|ИЗ
		|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И НоменклатураНормы В (&МассивНоменклатурыНормы)
		|				И Сотрудник В (&МассивСотрудников)) КАК ПотребностьВыдачиСИЗОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Подразделение,
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник
		|ПОМЕСТИТЬ ВТ_ЗанятыеРабочиеМеста
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Сотрудник В (&МассивСотрудников)) КАК ЗанятыеРабочиеМестаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ЗанятыеРабочиеМеста.Подразделение,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	ВТ_Потребность КАК ВТ_Потребность
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗанятыеРабочиеМеста КАК ВТ_ЗанятыеРабочиеМеста
		|		ПО ВТ_Потребность.Сотрудник = ВТ_ЗанятыеРабочиеМеста.Сотрудник
		|ГДЕ
		|	НЕ ВТ_ЗанятыеРабочиеМеста.Подразделение ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ЗанятыеРабочиеМеста.Подразделение.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивСотрудников",		ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник"));
		Запрос.УстановитьПараметр("МассивНоменклатурыНормы",ТаблицаНоменклатурыНормы.ВыгрузитьКолонку("НоменклатураНормыОрганизации"));
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Сотрудник" Тогда
		
		ТаблицаСотрудников = ТекущийОбъект.ТаблицаСотрудников.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Подразделение,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&ДатаАнализа, Организация = &Организация И Сотрудник В (&МассивСотрудников)) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Подразделение.Наименование";		
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивСотрудников",	ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник"));
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Подразделение" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Подразделение,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&ДатаАнализа, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Подразделение.Наименование";		
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Должность" Тогда	
		
		ТаблицаДолжностей = ТекущийОбъект.ТаблицаДолжностей.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Подразделение,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&ДатаАнализа, Организация = &Организация И Должность В (&МассивДолжностей)) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Подразделение.Наименование";		
		
		Запрос.УстановитьПараметр("ДатаАнализа",		ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",		ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивДолжностей",	ТаблицаДолжностей.ВыгрузитьКолонку("Должность"));
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Номенклатура" Тогда
		
		ТаблицаНоменклатурыНормы 	= ТекущийОбъект.ТаблицаНоменклатурыНормы.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаНоменклатуры		 	= ТекущийОбъект.ТаблицаНоменклатуры.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаСотрудников 			= ТекущийОбъект.ТаблицаСотрудников.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура
		|ПОМЕСТИТЬ ВТ_Маппинг
		|ИЗ
		|	РегистрСведений.СоответствияНоменклатурыВыдачи.СрезПоследних(&ДатаАнализа, ) КАК СоответствияНоменклатурыВыдачиСрезПоследних
		|ГДЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Использовать
		|	И СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура В(&МассивНоменклатуры)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы
		|ПОМЕСТИТЬ ВТ_Потребность
		|ИЗ
		|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И НоменклатураНормы В (&МассивНоменклатурыНормы)
		|				И Сотрудник В (&МассивСотрудников)) КАК ПотребностьВыдачиСИЗОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Подразделение,
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник
		|ПОМЕСТИТЬ ВТ_ЗанятыеРабочиеМеста
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Сотрудник В (&МассивСотрудников)) КАК ЗанятыеРабочиеМестаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВТ_ЗанятыеРабочиеМеста.Подразделение,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	ВТ_Маппинг КАК ВТ_Маппинг
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Потребность КАК ВТ_Потребность
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗанятыеРабочиеМеста КАК ВТ_ЗанятыеРабочиеМеста
		|			ПО ВТ_Потребность.Сотрудник = ВТ_ЗанятыеРабочиеМеста.Сотрудник
		|		ПО ВТ_Маппинг.НоменклатураНормыОрганизации = ВТ_Потребность.НоменклатураНормы
		|ГДЕ
		|	НЕ ВТ_ЗанятыеРабочиеМеста.Подразделение ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ЗанятыеРабочиеМеста.Подразделение.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивСотрудников",		ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник"));
		Запрос.УстановитьПараметр("МассивНоменклатурыНормы",ТаблицаНоменклатурыНормы.ВыгрузитьКолонку("НоменклатураНормыОрганизации"));
		Запрос.УстановитьПараметр("МассивНоменклатуры",		ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура"));
		
	КонецЕсли;
	
	ТекущийОбъект.ТаблицаПодразделений.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДолжностей(ТекущийОбъект)
	
	Запрос = НОВЫЙ Запрос;
	
	Если ТекущийОбъект.ПорядокОтбора = "НоменклатураНормы" Тогда
		
		ТаблицаНоменклатурыНормы 	= ТекущийОбъект.ТаблицаНоменклатурыНормы.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаСотрудников 			= ТекущийОбъект.ТаблицаСотрудников.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаПодразделений 		= ТекущийОбъект.ТаблицаПодразделений.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы
		|ПОМЕСТИТЬ ВТ_Потребность
		|ИЗ
		|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И НоменклатураНормы В (&МассивНоменклатурыНормы)
		|				И Сотрудник В (&МассивСотрудников)) КАК ПотребностьВыдачиСИЗОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник,
		|	ЗанятыеРабочиеМестаОстатки.Должность
		|ПОМЕСТИТЬ ВТ_ЗанятыеРабочиеМеста
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Сотрудник В (&МассивСотрудников)
		|				И Подразделение В (&МассивПодразделений)) КАК ЗанятыеРабочиеМестаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИСТИНА КАК Использовать,
		|	ВТ_ЗанятыеРабочиеМеста.Должность
		|ИЗ
		|	ВТ_Потребность КАК ВТ_Потребность
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗанятыеРабочиеМеста КАК ВТ_ЗанятыеРабочиеМеста
		|		ПО ВТ_Потребность.Сотрудник = ВТ_ЗанятыеРабочиеМеста.Сотрудник
		|ГДЕ
		|	НЕ ВТ_ЗанятыеРабочиеМеста.Должность ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ЗанятыеРабочиеМеста.Должность.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивСотрудников",		ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник"));
		Запрос.УстановитьПараметр("МассивПодразделений",	ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение"));
		Запрос.УстановитьПараметр("МассивНоменклатурыНормы",ТаблицаНоменклатурыНормы.ВыгрузитьКолонку("НоменклатураНормыОрганизации"));
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Сотрудник" Тогда
		
		ТаблицаСотрудников 		= ТекущийОбъект.ТаблицаСотрудников.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаПодразделений 	= ТекущийОбъект.ТаблицаПодразделений.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Должность,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Подразделение В (&МассивПодразделений)
		|				И Сотрудник В (&МассивСотрудников)) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Должность.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивСотрудников",		ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник"));
		Запрос.УстановитьПараметр("МассивПодразделений",	ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение"));
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Подразделение" Тогда
		
		ТаблицаПодразделений = ТекущийОбъект.ТаблицаПодразделений.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Должность,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Подразделение В (&МассивПодразделений)) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Должность.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивПодразделений",	ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение"));
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Должность" Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Должность,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗанятыеРабочиеМестаОстатки.Должность.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Номенклатура" Тогда
		
		ТаблицаНоменклатурыНормы 	= ТекущийОбъект.ТаблицаНоменклатурыНормы.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаНоменклатуры		 	= ТекущийОбъект.ТаблицаНоменклатуры.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаСотрудников 			= ТекущийОбъект.ТаблицаСотрудников.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаПодразделений 		= ТекущийОбъект.ТаблицаПодразделений.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура
		|ПОМЕСТИТЬ ВТ_Маппинг
		|ИЗ
		|	РегистрСведений.СоответствияНоменклатурыВыдачи.СрезПоследних(&ДатаАнализа, ) КАК СоответствияНоменклатурыВыдачиСрезПоследних
		|ГДЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Использовать
		|	И СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура В(&МассивНоменклатуры)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы
		|ПОМЕСТИТЬ ВТ_Потребность
		|ИЗ
		|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И НоменклатураНормы В (&МассивНоменклатурыНормы)
		|				И Сотрудник В (&МассивСотрудников)) КАК ПотребностьВыдачиСИЗОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник,
		|	ЗанятыеРабочиеМестаОстатки.Должность
		|ПОМЕСТИТЬ ВТ_ЗанятыеРабочиеМеста
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И Сотрудник В (&МассивСотрудников)
		|				И Подразделение В (&МассивПодразделений)) КАК ЗанятыеРабочиеМестаОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИСТИНА КАК Использовать,
		|	ВТ_ЗанятыеРабочиеМеста.Должность
		|ИЗ
		|	ВТ_Маппинг КАК ВТ_Маппинг
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Потребность КАК ВТ_Потребность
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗанятыеРабочиеМеста КАК ВТ_ЗанятыеРабочиеМеста
		|			ПО ВТ_Потребность.Сотрудник = ВТ_ЗанятыеРабочиеМеста.Сотрудник
		|		ПО ВТ_Маппинг.НоменклатураНормыОрганизации = ВТ_Потребность.НоменклатураНормы
		|ГДЕ
		|	НЕ ВТ_ЗанятыеРабочиеМеста.Должность ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_ЗанятыеРабочиеМеста.Должность.Наименование";
		
		Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивСотрудников",		ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник"));
		Запрос.УстановитьПараметр("МассивНоменклатурыНормы",ТаблицаНоменклатурыНормы.ВыгрузитьКолонку("НоменклатураНормыОрганизации"));
		Запрос.УстановитьПараметр("МассивНоменклатуры",		ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура"));
		Запрос.УстановитьПараметр("МассивПодразделений",	ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение"));
		
	КонецЕсли;
	
	ТекущийОбъект.ТаблицаДолжностей.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект)
	
	Запрос = НОВЫЙ Запрос;
	
	Если ТекущийОбъект.ПорядокОтбора = "НоменклатураНормы" 
		ИЛИ ТекущийОбъект.ПорядокОтбора = "Сотрудник" 
		ИЛИ ТекущийОбъект.ПорядокОтбора = "Подразделение" 
		ИЛИ ТекущийОбъект.ПорядокОтбора = "Должность" Тогда
		
		ТаблицаНоменклатурыНормы 	= ТекущийОбъект.ТаблицаНоменклатурыНормы.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаСотрудников 			= ТекущийОбъект.ТаблицаСотрудников.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаПодразделений 		= ТекущийОбъект.ТаблицаПодразделений.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		ТаблицаДолжностей 			= ТекущийОбъект.ТаблицаДолжностей.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
		
		ТаблицаСИерархией = ПолучитьТаблицуСИерархиейПодразделений(ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник"),ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение"),ТаблицаДолжностей.ВыгрузитьКолонку("Должность"));
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
		|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы
		|ПОМЕСТИТЬ ВТ_Потребность
		|ИЗ
		|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
		|			&ДатаАнализа,
		|			Организация = &Организация
		|				И НоменклатураНормы В (&МассивНоменклатурыНормы)
		|				И Сотрудник В (&МассивСотрудников)) КАК ПотребностьВыдачиСИЗОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Сотрудник,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Подразделение,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Должность
		|ПОМЕСТИТЬ ВТ_Маппинг
		|ИЗ
		|	РегистрСведений.СоответствияНоменклатурыВыдачи.СрезПоследних(&ДатаАнализа, ) КАК СоответствияНоменклатурыВыдачиСрезПоследних
		|ГДЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Использовать
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСИерархией.Сотрудник КАК Сотрудник,
		|	ТаблицаСИерархией.Подразделение КАК Подразделение,
		|	ТаблицаСИерархией.Должность КАК Должность
		|ПОМЕСТИТЬ ВТ_ТаблицаСИерархией
		|ИЗ
		|	&ТаблицаСИерархией КАК ТаблицаСИерархией
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Потребность.Сотрудник,
		|	ВТ_Потребность.НоменклатураНормы,
		|	ВТ_ТаблицаСИерархией.Подразделение,
		|	ВТ_ТаблицаСИерархией.Должность
		|ПОМЕСТИТЬ ВТ_Потребность_ИерархияПодразделений
		|ИЗ
		|	ВТ_Потребность КАК ВТ_Потребность
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСИерархией КАК ВТ_ТаблицаСИерархией
		|		ПО ВТ_Потребность.Сотрудник = ВТ_ТаблицаСИерархией.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Маппинг.Номенклатура,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	ВТ_Потребность_ИерархияПодразделений КАК ВТ_Потребность_ИерархияПодразделений
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Маппинг КАК ВТ_Маппинг
		|		ПО (ВТ_Маппинг.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|				ИЛИ ВТ_Потребность_ИерархияПодразделений.Сотрудник = ВТ_Маппинг.Сотрудник)
		|			И ВТ_Потребность_ИерархияПодразделений.НоменклатураНормы = ВТ_Маппинг.НоменклатураНормыОрганизации
		|			И (ВТ_Маппинг.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
		|				ИЛИ ВТ_Потребность_ИерархияПодразделений.Должность = ВТ_Маппинг.Должность)
		|			И (ВТ_Маппинг.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
		|				ИЛИ ВТ_Потребность_ИерархияПодразделений.Подразделение = ВТ_Маппинг.Подразделение)
		|ГДЕ
		|	НЕ ВТ_Маппинг.Номенклатура ЕСТЬ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТ_Маппинг.Номенклатура.Наименование"; 
		
		Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",			ТекущийОбъект.Организация);
		Запрос.УстановитьПараметр("МассивНоменклатурыНормы",ТаблицаНоменклатурыНормы.ВыгрузитьКолонку("НоменклатураНормыОрганизации"));
		Запрос.УстановитьПараметр("МассивСотрудников",		ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник"));
		Запрос.УстановитьПараметр("ТаблицаСИерархией",		ТаблицаСИерархией);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Номенклатура" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура,
		|	ИСТИНА КАК Использовать
		|ИЗ
		|	РегистрСведений.СоответствияНоменклатурыВыдачи.СрезПоследних(&ДатаАнализа, ) КАК СоответствияНоменклатурыВыдачиСрезПоследних
		|ГДЕ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации.Владелец = &Организация
		|	И СоответствияНоменклатурыВыдачиСрезПоследних.Использовать
		|
		|УПОРЯДОЧИТЬ ПО
		|	СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура.Наименование";		
		
		Запрос.УстановитьПараметр("ДатаАнализа",ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",ТекущийОбъект.Организация);
		
	КонецЕсли;
	
	ТекущийОбъект.ТаблицаНоменклатуры.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьФлажкиНаСервере(ЗначениеФлажка,ИмяТаблицыОбъекта)
	
	ТаблицаОбъекта = Объект[ИмяТаблицыОбъекта].Выгрузить();
	ТаблицаОбъекта.ЗаполнитьЗначения(ЗначениеФлажка,"Использовать");
	Объект[ИмяТаблицыОбъекта].Загрузить(ТаблицаОбъекта);

	Выполнить(ИмяТаблицыОбъекта + "ПриИзмененииНаСервере()");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеНоменклатурыНормы(Команда)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_УстановитьФлажкиВТаблицеНоменклатурыНормы", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
		
	Иначе
		
		ИзменитьФлажкиНаСервере(Истина,"ТаблицаНоменклатурыНормы");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_УстановитьФлажкиВТаблицеНоменклатурыНормы(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    ИзменитьФлажкиНаСервере(Истина,"ТаблицаНоменклатурыНормы");

КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеНоменклатурыНормы(Команда)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_СнятьФлажкиВТаблицеНоменклатурыНормы", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ИзменитьФлажкиНаСервере(Ложь,"ТаблицаНоменклатурыНормы");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_СнятьФлажкиВТаблицеНоменклатурыНормы(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    ИзменитьФлажкиНаСервере(Ложь,"ТаблицаНоменклатурыНормы");

КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеСотрудников(Команда)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_УстановитьФлажкиВТаблицеСотрудников", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ИзменитьФлажкиНаСервере(Истина,"ТаблицаСотрудников");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_УстановитьФлажкиВТаблицеСотрудников(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    ИзменитьФлажкиНаСервере(Истина,"ТаблицаСотрудников");

КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеСотрудников(Команда)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_СнятьФлажкиВТаблицеСотрудников", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
		
	Иначе
		
		ИзменитьФлажкиНаСервере(Ложь,"ТаблицаСотрудников");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_СнятьФлажкиВТаблицеСотрудников(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    ИзменитьФлажкиНаСервере(Ложь,"ТаблицаСотрудников");

КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеПодразделений(Команда)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_УстановитьФлажкиВТаблицеПодразделений", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
		
	Иначе
		
		ИзменитьФлажкиНаСервере(Истина,"ТаблицаПодразделений");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_УстановитьФлажкиВТаблицеПодразделений(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    ИзменитьФлажкиНаСервере(Истина,"ТаблицаПодразделений");

КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеПодразделений(Команда)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_СнятьФлажкиВТаблицеПодразделений", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ИзменитьФлажкиНаСервере(Ложь,"ТаблицаПодразделений");
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_СнятьФлажкиВТаблицеПодразделений(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    ИзменитьФлажкиНаСервере(Ложь,"ТаблицаПодразделений");

КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеДолжностей(Команда)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_УстановитьФлажкиВТаблицеДолжностей", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
		
	Иначе
		
		ИзменитьФлажкиНаСервере(Истина,"ТаблицаДолжностей");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_УстановитьФлажкиВТаблицеДолжностей(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

    ИзменитьФлажкиНаСервере(Истина,"ТаблицаДолжностей");

КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеДолжностей(Команда)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_СнятьФлажкиВТаблицеДолжностей", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
		
	Иначе
		
		ИзменитьФлажкиНаСервере(Ложь,"ТаблицаДолжностей");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_СнятьФлажкиВТаблицеДолжностей(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

   ИзменитьФлажкиНаСервере(Ложь,"ТаблицаДолжностей");

КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеНоменклатуры(Команда)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_УстановитьФлажкиВТаблицеНоменклатуры", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
		
	Иначе
		
		ИзменитьФлажкиНаСервере(Истина,"ТаблицаНоменклатуры");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_УстановитьФлажкиВТаблицеНоменклатуры(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

   ИзменитьФлажкиНаСервере(Истина,"ТаблицаНоменклатуры");

КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеНоменклатуры(Команда)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_СнятьФлажкиВТаблицеНоменклатуры", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
		
	Иначе
		
		ИзменитьФлажкиНаСервере(Ложь,"ТаблицаНоменклатуры");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_СнятьФлажкиВТаблицеНоменклатуры(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

   ИзменитьФлажкиНаСервере(Ложь,"ТаблицаНоменклатуры");

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНоменклатурыНормыПриИзменении(Элемент)
	
	ТаблицаНоменклатурыНормыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаНоменклатурыНормыПриИзмененииНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ТекущийОбъект.ПорядокОтбора = "НоменклатураНормы" Тогда
		
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Сотрудник" ИЛИ ТекущийОбъект.ПорядокОтбора = "Подразделение" ИЛИ ТекущийОбъект.ПорядокОтбора = "Должность" Тогда
		
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Номенклатура" Тогда
		
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		
	КонецЕсли;
	
	ЗаполнитьИсходныеДанные(ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСотрудниковПриИзменении(Элемент)
	
	ТаблицаСотрудниковПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаСотрудниковПриИзмененииНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ТекущийОбъект.ПорядокОтбора = "НоменклатураНормы" Тогда
		
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Сотрудник" Тогда
		
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Подразделение" ИЛИ ТекущийОбъект.ПорядокОтбора = "Должность" Тогда
		
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Номенклатура" Тогда
		
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		
	КонецЕсли;
	
	ЗаполнитьИсходныеДанные(ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодразделенийПриИзменении(Элемент)
	
	ТаблицаПодразделенийПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаПодразделенийПриИзмененииНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ТекущийОбъект.ПорядокОтбора = "НоменклатураНормы" Тогда
		
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Сотрудник" Тогда
		
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Подразделение" Тогда
		
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Должность" Тогда
		
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Номенклатура" Тогда
		
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		
	КонецЕсли;	
	
	ЗаполнитьИсходныеДанные(ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДолжностейПриИзменении(Элемент)
	
	ТаблицаДолжностейПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаДолжностейПриИзмененииНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ТекущийОбъект.ПорядокОтбора = "НоменклатураНормы" Тогда
		
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Сотрудник" Тогда
		
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Подразделение" Тогда
		
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	ИначеЕсли ТекущийОбъект.ПорядокОтбора = "Должность" Тогда
		
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуНоменклатуры(ТекущийОбъект);
		
	КонецЕсли;
	
	ЗаполнитьИсходныеДанные(ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНоменклатурыПриИзменении(Элемент)
	
	ТаблицаНоменклатурыПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаНоменклатурыПриИзмененииНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ТекущийОбъект.ПорядокОтбора = "Номенклатура" Тогда
		
		ЗаполнитьТаблицуНоменклатурыНормы(ТекущийОбъект);
		ЗаполнитьТаблицуСотрудников(ТекущийОбъект);
		ЗаполнитьТаблицуПодразделений(ТекущийОбъект);
		ЗаполнитьТаблицуДолжностей(ТекущийОбъект);
		
	КонецЕсли;
	
	ЗаполнитьИсходныеДанные(ТекущийОбъект);
	
	ЗначениеВРеквизитФормы(ТекущийОбъект,"Объект");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИсходныеДанные(ТекущийОбъект)
	
	ТаблицаПодразделений 		= ТекущийОбъект.ТаблицаПодразделений.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
	ТаблицаДолжностей 			= ТекущийОбъект.ТаблицаДолжностей.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
	ТаблицаСотрудников 			= ТекущийОбъект.ТаблицаСотрудников.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
	ТаблицаНоменклатуры			= ТекущийОбъект.ТаблицаНоменклатуры.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
	ТаблицаНоменклатурыНормы 	= ТекущийОбъект.ТаблицаНоменклатурыНормы.Выгрузить(НОВЫЙ Структура("Использовать",Истина));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации КАК НоменклатураНормыОрганизации,
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура КАК Номенклатура,
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Сотрудник КАК Сотрудник,
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Подразделение КАК Подразделение,
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Должность КАК Должность,
	|	СоответствияНоменклатурыВыдачиСрезПоследних.УсловиеСоответствия КАК УсловиеСоответствия,
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Приоритет КАК Приоритет,
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Использовать КАК Использовать
	|ИЗ
	|	РегистрСведений.СоответствияНоменклатурыВыдачи.СрезПоследних(&ДатаАнализа, ) КАК СоответствияНоменклатурыВыдачиСрезПоследних
	|ГДЕ
	|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации В(&МассивНоменклатурыНормыОрганизации)
	|	И СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура В(&МассивНоменклатуры)
	|	И (СоответствияНоменклатурыВыдачиСрезПоследних.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|			ИЛИ СоответствияНоменклатурыВыдачиСрезПоследних.Сотрудник В (&МассивСотрудников))
	|	И (СоответствияНоменклатурыВыдачиСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|			ИЛИ СоответствияНоменклатурыВыдачиСрезПоследних.Подразделение В (&МассивПодразделений))
	|	И (СоответствияНоменклатурыВыдачиСрезПоследних.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|			ИЛИ СоответствияНоменклатурыВыдачиСрезПоследних.Должность В (&МассивДолжностей))
	|
	|УПОРЯДОЧИТЬ ПО
	|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации.Наименование,
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Сотрудник.Наименование,
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Подразделение.Наименование,
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Должность.Наименование,
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Приоритет";
	
	Запрос.УстановитьПараметр("ДатаАнализа",ТекущаяДата());
	Запрос.УстановитьПараметр("МассивНоменклатурыНормыОрганизации",ТаблицаНоменклатурыНормы.ВыгрузитьКолонку("НоменклатураНормыОрганизации"));
	Запрос.УстановитьПараметр("МассивНоменклатуры",ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("МассивСотрудников",ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник"));
	Запрос.УстановитьПараметр("МассивПодразделений",ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение"));
	Запрос.УстановитьПараметр("МассивДолжностей",ТаблицаДолжностей.ВыгрузитьКолонку("Должность"));
	
	ТекущийОбъект.ИсходныеДанные.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ЭтаФорма.Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗаполнитьТаблицыОтбора();
	
КонецПроцедуры

&НаСервере
Процедура ПеренестиВДанныеДляЗаписиНаСервере()
	
	ТаблицаДанныхДляЗаписи = Объект.ДанныеДляЗаписи.Выгрузить();
	
	Для Каждого СтрокаТаблицыИсходныхДанных Из Объект.ИсходныеДанные Цикл
	
	    СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("НоменклатураНормыОрганизации",СтрокаТаблицыИсходныхДанных.НоменклатураНормыОрганизации);
		СтруктураПоиска.Вставить("Номенклатура",				СтрокаТаблицыИсходныхДанных.Номенклатура);
		СтруктураПоиска.Вставить("Сотрудник",					СтрокаТаблицыИсходныхДанных.Сотрудник);
		СтруктураПоиска.Вставить("Подразделение",				СтрокаТаблицыИсходныхДанных.Подразделение);
		СтруктураПоиска.Вставить("Должность",					СтрокаТаблицыИсходныхДанных.Должность);
		СтруктураПоиска.Вставить("УсловиеСоответствия",			СтрокаТаблицыИсходныхДанных.УсловиеСоответствия);
		
		НайденныеСтроки = ТаблицаДанныхДляЗаписи.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаДанныхДляЗаписи.Добавить(),СтрокаТаблицыИсходныхДанных);
		Иначе
			НайденныеСтроки[0].Использовать = СтрокаТаблицыИсходныхДанных.Использовать;
		КонецЕсли;
				
	КонецЦикла;
	
	ОбработатьТаблицуДанныхДляЗаписи(ТаблицаДанныхДляЗаписи);
	
	Объект.ДанныеДляЗаписи.Загрузить(ТаблицаДанныхДляЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьТаблицуДанныхДляЗаписи(ТаблицаДанныхДляЗаписи)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДанныхДляЗаписи.НоменклатураНормыОрганизации,
	|	ТаблицаДанныхДляЗаписи.Сотрудник,
	|	ТаблицаДанныхДляЗаписи.Подразделение,
	|	ТаблицаДанныхДляЗаписи.Должность,
	|	ТаблицаДанныхДляЗаписи.Номенклатура,
	|	ТаблицаДанныхДляЗаписи.УсловиеСоответствия,
	|	ТаблицаДанныхДляЗаписи.Использовать,
	|	ТаблицаДанныхДляЗаписи.Приоритет
	|ПОМЕСТИТЬ ВТ_ДанныеДляЗаписи
	|ИЗ
	|	&ТаблицаДанныхДляЗаписи КАК ТаблицаДанныхДляЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДанныеДляЗаписи.НоменклатураНормыОрганизации КАК НоменклатураНормыОрганизации,
	|	ВТ_ДанныеДляЗаписи.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеДляЗаписи.Подразделение КАК Подразделение,
	|	ВТ_ДанныеДляЗаписи.Должность КАК Должность,
	|	ВТ_ДанныеДляЗаписи.УсловиеСоответствия КАК УсловиеСоответствия,
	|	ВТ_ДанныеДляЗаписи.Использовать КАК Использовать
	|ИЗ
	|	ВТ_ДанныеДляЗаписи КАК ВТ_ДанныеДляЗаписи
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураНормыОрганизации,
	|	Сотрудник,
	|	Подразделение,
	|	Должность,
	|	УсловиеСоответствия,
	|	Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляЗаписи.НоменклатураНормыОрганизации,
	|	ВТ_ДанныеДляЗаписи.Сотрудник,
	|	ВТ_ДанныеДляЗаписи.Подразделение,
	|	ВТ_ДанныеДляЗаписи.Должность,
	|	ВТ_ДанныеДляЗаписи.Номенклатура,
	|	ВТ_ДанныеДляЗаписи.УсловиеСоответствия,
	|	ВТ_ДанныеДляЗаписи.Использовать,
	|	ВТ_ДанныеДляЗаписи.Приоритет
	|ИЗ
	|	ВТ_ДанныеДляЗаписи КАК ВТ_ДанныеДляЗаписи";
	
	Запрос.УстановитьПараметр("ТаблицаДанныхДляЗаписи",ТаблицаДанныхДляЗаписи);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДляПоиска 	= Результат[1].Выгрузить();
	ТаблицаДляОбработки = Результат[2].Выгрузить();
	
	//расстановка приоритетов
	Для Каждого СтрокаТаблицыДляПоиска Из ТаблицаДляПоиска Цикл
		
		СтруктураПоиска = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицыДляПоиска);
		
		НайденныеСтроки = ТаблицаДляОбработки.НайтиСтроки(СтруктураПоиска);
		
		ТекущийПриоритет = 1;
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			Если НайденнаяСтрока.Использовать Тогда
				НайденнаяСтрока.Приоритет = ТекущийПриоритет;
				ТекущийПриоритет = ТекущийПриоритет + 1;
			Иначе
				//НайденнаяСтрока.Приоритет = 0;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	//сравнение с данными в базе
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДанныхДляЗаписи.НоменклатураНормыОрганизации,
	|	ТаблицаДанныхДляЗаписи.Сотрудник,
	|	ТаблицаДанныхДляЗаписи.Подразделение,
	|	ТаблицаДанныхДляЗаписи.Должность,
	|	ТаблицаДанныхДляЗаписи.Номенклатура,
	|	ТаблицаДанныхДляЗаписи.УсловиеСоответствия,
	|	ТаблицаДанныхДляЗаписи.Использовать,
	|	ТаблицаДанныхДляЗаписи.Приоритет
	|ПОМЕСТИТЬ ВТ_ДанныеДляЗаписи
	|ИЗ
	|	&ТаблицаДанныхДляЗаписи КАК ТаблицаДанныхДляЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляЗаписи.НоменклатураНормыОрганизации,
	|	ВТ_ДанныеДляЗаписи.Сотрудник,
	|	ВТ_ДанныеДляЗаписи.Подразделение,
	|	ВТ_ДанныеДляЗаписи.Должность,
	|	ВТ_ДанныеДляЗаписи.Номенклатура,
	|	ВТ_ДанныеДляЗаписи.УсловиеСоответствия,
	|	ВТ_ДанныеДляЗаписи.Использовать,
	|	ВТ_ДанныеДляЗаписи.Приоритет,
	|	ВЫБОР
	|		КОГДА СоответствияНоменклатурыВыдачиСрезПоследних.Использовать ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьВБазе
	|ИЗ
	|	ВТ_ДанныеДляЗаписи КАК ВТ_ДанныеДляЗаписи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствияНоменклатурыВыдачи.СрезПоследних(&ДатаАнализа, ) КАК СоответствияНоменклатурыВыдачиСрезПоследних
	|		ПО ВТ_ДанныеДляЗаписи.НоменклатураНормыОрганизации = СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации
	|			И ВТ_ДанныеДляЗаписи.Сотрудник = СоответствияНоменклатурыВыдачиСрезПоследних.Сотрудник
	|			И ВТ_ДанныеДляЗаписи.Подразделение = СоответствияНоменклатурыВыдачиСрезПоследних.Подразделение
	|			И ВТ_ДанныеДляЗаписи.Должность = СоответствияНоменклатурыВыдачиСрезПоследних.Должность
	|			И ВТ_ДанныеДляЗаписи.Номенклатура = СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура
	|			И ВТ_ДанныеДляЗаписи.УсловиеСоответствия = СоответствияНоменклатурыВыдачиСрезПоследних.УсловиеСоответствия
	|			И ВТ_ДанныеДляЗаписи.Использовать = СоответствияНоменклатурыВыдачиСрезПоследних.Использовать
	|			И ВТ_ДанныеДляЗаписи.Приоритет = СоответствияНоменклатурыВыдачиСрезПоследних.Приоритет";
	
	Запрос.УстановитьПараметр("ТаблицаДанныхДляЗаписи",	ТаблицаДляОбработки);
	Запрос.УстановитьПараметр("ДатаАнализа",			ТекущаяДата());
	
	ТаблицаДанныхДляЗаписи = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДанныеДляЗаписи(Команда)
	
	ПеренестиВДанныеДляЗаписиНаСервере();
	
	ЭтаФорма.Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Функция СоздатьДокументОтменыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДанныхДляЗаписи.НоменклатураНормыОрганизации КАК НоменклатураНормыОрганизации,
	|	ТаблицаДанныхДляЗаписи.Сотрудник КАК Сотрудник,
	|	ТаблицаДанныхДляЗаписи.Подразделение КАК Подразделение,
	|	ТаблицаДанныхДляЗаписи.Должность КАК Должность,
	|	ТаблицаДанныхДляЗаписи.Номенклатура КАК Номенклатура,
	|	ТаблицаДанныхДляЗаписи.УсловиеСоответствия КАК УсловиеСоответствия,
	|	ТаблицаДанныхДляЗаписи.Использовать КАК Использовать,
	|	ТаблицаДанныхДляЗаписи.Приоритет КАК Приоритет,
	|	ТаблицаДанныхДляЗаписи.ЕстьВБазе КАК ЕстьВБазе
	|ПОМЕСТИТЬ ВТ_ДанныеДляЗаписи
	|ИЗ
	|	&ТаблицаДанныхДляЗаписи КАК ТаблицаДанныхДляЗаписи
	|ГДЕ
	|	НЕ ТаблицаДанныхДляЗаписи.ЕстьВБазе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляЗаписи.НоменклатураНормыОрганизации КАК НоменклатураНормы,
	|	ВТ_ДанныеДляЗаписи.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеДляЗаписи.Подразделение КАК Подразделение,
	|	ВТ_ДанныеДляЗаписи.Должность КАК Должность,
	|	ВТ_ДанныеДляЗаписи.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляЗаписи.УсловиеСоответствия КАК УсловиеСоответствия,
	|	ВТ_ДанныеДляЗаписи.Использовать КАК Использовать,
	|	ВТ_ДанныеДляЗаписи.Приоритет КАК Приоритет
	|ИЗ
	|	ВТ_ДанныеДляЗаписи КАК ВТ_ДанныеДляЗаписи
	|ГДЕ
	|	НЕ ВТ_ДанныеДляЗаписи.Использовать";
	
	Запрос.УстановитьПараметр("ТаблицаДанныхДляЗаписи",	Объект.ДанныеДляЗаписи.Выгрузить());
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаЗапроса.Количество() = 0 Тогда
		Возврат Документы.УстановкаСоответствийНоменклатурыВыдачи.ПустаяСсылка();
	КонецЕсли;
	
	НовыйДокумент = Документы.УстановкаСоответствийНоменклатурыВыдачи.СоздатьДокумент();
	
	НовыйДокумент.Дата 					= ТекущаяДата();
	НовыйДокумент.Комментарий 			= "Сформирован автоматически";
	НовыйДокумент.Организация 			= Объект.Организация;
	НовыйДокумент.Ответственный 		= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.СоздательДокумента 	= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Соответствия.Загрузить(ТаблицаЗапроса);
	НовыйДокумент.УстановитьНовыйНомер();

	Попытка
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		Для Каждого СтрокаТаблицы Из Объект.ДанныеДляЗаписи Цикл
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("НоменклатураНормы", 	СтрокаТаблицы.НоменклатураНормыОрганизации);
			СтруктураПоиска.Вставить("Сотрудник", 			СтрокаТаблицы.Сотрудник);
			СтруктураПоиска.Вставить("Подразделение", 		СтрокаТаблицы.Подразделение);
			СтруктураПоиска.Вставить("Должность", 			СтрокаТаблицы.Должность);
			СтруктураПоиска.Вставить("Номенклатура", 		СтрокаТаблицы.Номенклатура);
			СтруктураПоиска.Вставить("УсловиеСоответствия", СтрокаТаблицы.УсловиеСоответствия);
			СтруктураПоиска.Вставить("Использовать", 		СтрокаТаблицы.Использовать);
			СтруктураПоиска.Вставить("Приоритет", 			СтрокаТаблицы.Приоритет);
			НайденныеСтроки = ТаблицаЗапроса.НайтиСтроки(СтруктураПоиска);
			СтрокаТаблицы.ЕстьВбазе = НЕ НайденныеСтроки.Количество() = 0;				
		КонецЦикла;
	    Возврат НовыйДокумент.Ссылка;
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Документы.УстановкаСоответствийНоменклатурыВыдачи.ПустаяСсылка();
	КонецПопытки;
		
КонецФункции

&НаСервере
Функция СоздатьДокументУстановкиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДанныхДляЗаписи.НоменклатураНормыОрганизации КАК НоменклатураНормыОрганизации,
	|	ТаблицаДанныхДляЗаписи.Сотрудник КАК Сотрудник,
	|	ТаблицаДанныхДляЗаписи.Подразделение КАК Подразделение,
	|	ТаблицаДанныхДляЗаписи.Должность КАК Должность,
	|	ТаблицаДанныхДляЗаписи.Номенклатура КАК Номенклатура,
	|	ТаблицаДанныхДляЗаписи.УсловиеСоответствия КАК УсловиеСоответствия,
	|	ТаблицаДанныхДляЗаписи.Использовать КАК Использовать,
	|	ТаблицаДанныхДляЗаписи.Приоритет КАК Приоритет,
	|	ТаблицаДанныхДляЗаписи.ЕстьВБазе КАК ЕстьВБазе
	|ПОМЕСТИТЬ ВТ_ДанныеДляЗаписи
	|ИЗ
	|	&ТаблицаДанныхДляЗаписи КАК ТаблицаДанныхДляЗаписи
	|ГДЕ
	|	НЕ ТаблицаДанныхДляЗаписи.ЕстьВБазе
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляЗаписи.НоменклатураНормыОрганизации КАК НоменклатураНормы,
	|	ВТ_ДанныеДляЗаписи.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеДляЗаписи.Подразделение КАК Подразделение,
	|	ВТ_ДанныеДляЗаписи.Должность КАК Должность,
	|	ВТ_ДанныеДляЗаписи.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляЗаписи.УсловиеСоответствия КАК УсловиеСоответствия,
	|	ВТ_ДанныеДляЗаписи.Использовать КАК Использовать,
	|	ВТ_ДанныеДляЗаписи.Приоритет КАК Приоритет
	|ИЗ
	|	ВТ_ДанныеДляЗаписи КАК ВТ_ДанныеДляЗаписи
	|ГДЕ
	|	ВТ_ДанныеДляЗаписи.Использовать";
	
	Запрос.УстановитьПараметр("ТаблицаДанныхДляЗаписи",	Объект.ДанныеДляЗаписи.Выгрузить());
	
	НовыйДокумент = Документы.УстановкаСоответствийНоменклатурыВыдачи.СоздатьДокумент();
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаЗапроса.Количество() = 0 Тогда
		Возврат Документы.УстановкаСоответствийНоменклатурыВыдачи.ПустаяСсылка();
	КонецЕсли;	
	
	НовыйДокумент.Дата 					= ТекущаяДата();
	НовыйДокумент.Комментарий 			= "Сформирован автоматически";
	НовыйДокумент.Организация 			= Объект.Организация;
	НовыйДокумент.Ответственный 		= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.СоздательДокумента 	= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Соответствия.Загрузить(ТаблицаЗапроса);
	НовыйДокумент.УстановитьНовыйНомер();

	Попытка
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		Для Каждого СтрокаТаблицы Из Объект.ДанныеДляЗаписи Цикл
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("НоменклатураНормы", 	СтрокаТаблицы.НоменклатураНормыОрганизации);
			СтруктураПоиска.Вставить("Сотрудник", 			СтрокаТаблицы.Сотрудник);
			СтруктураПоиска.Вставить("Подразделение", 		СтрокаТаблицы.Подразделение);
			СтруктураПоиска.Вставить("Должность", 			СтрокаТаблицы.Должность);
			СтруктураПоиска.Вставить("Номенклатура", 		СтрокаТаблицы.Номенклатура);
			СтруктураПоиска.Вставить("УсловиеСоответствия", СтрокаТаблицы.УсловиеСоответствия);
			СтруктураПоиска.Вставить("Использовать", 		СтрокаТаблицы.Использовать);
			СтруктураПоиска.Вставить("Приоритет", 			СтрокаТаблицы.Приоритет);
			НайденныеСтроки = ТаблицаЗапроса.НайтиСтроки(СтруктураПоиска);
			СтрокаТаблицы.ЕстьВбазе = НЕ НайденныеСтроки.Количество() = 0;				
		КонецЦикла;
	    Возврат НовыйДокумент.Ссылка;
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Документы.УстановкаСоответствийНоменклатурыВыдачи.ПустаяСсылка();
	КонецПопытки;
		
КонецФункции

&НаКлиенте
Процедура СоздатьДокумент(Команда)
	
	ДокументОтмены 		= СоздатьДокументОтменыНаСервере();
	ДокументУстановки 	= СоздатьДокументУстановкиНаСервере();
	
	Если ЗначениеЗаполнено(ДокументОтмены) Тогда
		
		ПараметрыФормы = Новый Структура("Ключ", ДокументОтмены);
		ОткрытьФорму("Документ.УстановкаСоответствийНоменклатурыВыдачи.Форма.ФормаДокумента", ПараметрыФормы);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументУстановки) Тогда
		
		ПараметрыФормы = Новый Структура("Ключ", ДокументУстановки);
		ОткрытьФорму("Документ.УстановкаСоответствийНоменклатурыВыдачи.Форма.ФормаДокумента", ПараметрыФормы);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЕстьНесохраненныеДанные() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаИсходныхДанных.НоменклатураНормыОрганизации,
	|	ТаблицаИсходныхДанных.Сотрудник,
	|	ТаблицаИсходныхДанных.Подразделение,
	|	ТаблицаИсходныхДанных.Должность,
	|	ТаблицаИсходныхДанных.Номенклатура,
	|	ТаблицаИсходныхДанных.УсловиеСоответствия,
	|	ТаблицаИсходныхДанных.Использовать
	|ПОМЕСТИТЬ ВТ_ИсходныеДанные
	|ИЗ
	|	&ТаблицаИсходныхДанных КАК ТаблицаИсходныхДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДляЗаписи.НоменклатураНормыОрганизации,
	|	ТаблицаДанныхДляЗаписи.Сотрудник,
	|	ТаблицаДанныхДляЗаписи.Подразделение,
	|	ТаблицаДанныхДляЗаписи.Должность,
	|	ТаблицаДанныхДляЗаписи.Номенклатура,
	|	ТаблицаДанныхДляЗаписи.УсловиеСоответствия,
	|	ТаблицаДанныхДляЗаписи.Использовать
	|ПОМЕСТИТЬ ВТ_ДанныеДляЗаписи
	|ИЗ
	|	&ТаблицаДанныхДляЗаписи КАК ТаблицаДанныхДляЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляЗаписи.НоменклатураНормыОрганизации
	|ИЗ
	|	ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеДляЗаписи КАК ВТ_ДанныеДляЗаписи
	|		ПО ВТ_ИсходныеДанные.НоменклатураНормыОрганизации = ВТ_ДанныеДляЗаписи.НоменклатураНормыОрганизации
	|			И ВТ_ИсходныеДанные.Сотрудник = ВТ_ДанныеДляЗаписи.Сотрудник
	|			И ВТ_ИсходныеДанные.Подразделение = ВТ_ДанныеДляЗаписи.Подразделение
	|			И ВТ_ИсходныеДанные.Должность = ВТ_ДанныеДляЗаписи.Должность
	|			И ВТ_ИсходныеДанные.Номенклатура = ВТ_ДанныеДляЗаписи.Номенклатура
	|			И ВТ_ИсходныеДанные.Использовать = ВТ_ДанныеДляЗаписи.Использовать
	|			И ВТ_ИсходныеДанные.УсловиеСоответствия = ВТ_ДанныеДляЗаписи.УсловиеСоответствия
	|ГДЕ
	|	ВТ_ДанныеДляЗаписи.НоменклатураНормыОрганизации ЕСТЬ NULL ";
	
	Запрос.УстановитьПараметр("ТаблицаИсходныхДанных",Объект.ИсходныеДанные.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаДанныхДляЗаписи",Объект.ДанныеДляЗаписи.Выгрузить());
	
	Возврат Запрос.Выполнить().Выбрать().Следующий();
	
КонецФункции

&НаКлиенте
Процедура ТаблицаНоменклатурыНормыПередНачаломИзменения(Элемент, Отказ)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_ТаблицаПередНачаломИзменения", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_ТаблицаПередНачаломИзменения(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        Отказ = Истина;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСотрудниковПередНачаломИзменения(Элемент, Отказ)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_ТаблицаПередНачаломИзменения", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодразделенийПередНачаломИзменения(Элемент, Отказ)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_ТаблицаПередНачаломИзменения", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДолжностейПередНачаломИзменения(Элемент, Отказ)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_ТаблицаПередНачаломИзменения", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНоменклатурыПередНачаломИзменения(Элемент, Отказ)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_ТаблицаПередНачаломИзменения", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеДанныеПриИзменении(Элемент)
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокОтбораОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЭтаФорма.Модифицированность И ЕстьНесохраненныеДанные() Тогда
		
		Текст = "Информация не перенесена в данные для сохранения и будет потеряна. Продолжить?";
		
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса_ПорядокОтбораОбработкаВыбора", ЭтаФорма, Параметры);
		
		ПоказатьВопрос(Оповещение,Текст,РежимДиалогаВопрос.ДаНет);	
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса_ПорядокОтбораОбработкаВыбора(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
        СтандартнаяОбработка = Ложь;
    КонецЕсли;

КонецПроцедуры
