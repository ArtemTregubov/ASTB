&НаКлиенте
Перем ПереноситьВДокумент;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Документ = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Предусмотрено открытие обработки только из документов.'");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Организация) Тогда
		Сообщить(НСтр("ru='В документе не заполнена организация.'"));
		Отказ = Истина;
	КонецЕсли;
		
	ТаблицаДокумента = ПолучитьИзВременногоХранилища(Параметры.АдресВременногоХранилищаТаблицы);
	
	Объект.ПодобранныеСотрудники.Загрузить(ТаблицаДокумента);
	
	УстановитьПараметрыОтбораНаСервере();
	
	ВосстановитьНастройкиФормы();
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиФормы()
	
	//Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Обработка_ПодборСотрудниковПодразделения_ФормаПодбора");
		
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыОтбораНаСервере()
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокСотрудников,	"Дата",			ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Параметры.Документ),Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокСотрудников,	"Организация",	Параметры.Организация,																Истина);
	
	Если ЗначениеЗаполнено(Параметры.СписокДолжностей) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокСотрудников.Отбор, "Должность", Параметры.СписокДолжностей,ВидСравненияКомпоновкиДанных.ВСписке, "Должность", Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокСотрудников.Отбор, "Должность", Параметры.СписокДолжностей,ВидСравненияКомпоновкиДанных.ВСписке, "Должность", Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.СписокПодразделений) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокСотрудников.Отбор, "Подразделение", Параметры.СписокПодразделений,ВидСравненияКомпоновкиДанных.ВСписке, "Подразделение", Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокСотрудников.Отбор, "Подразделение", Параметры.СписокПодразделений,ВидСравненияКомпоновкиДанных.ВСписке, "Подразделение", Ложь);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.СписокРабочихМест) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокСотрудников.Отбор, "РабочееМесто", Параметры.СписокРабочихМест,ВидСравненияКомпоновкиДанных.ВСписке, "РабочееМесто", Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокСотрудников.Отбор, "РабочееМесто", Параметры.СписокРабочихМест,ВидСравненияКомпоновкиДанных.ВСписке, "РабочееМесто", Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	ПереноситьВДокумент = Истина;	
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СохранитьНастройкиФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиФормыНаСервере()
	
	//ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Обработка_ПодборСотрудниковПодразделения_ФормаПодбора", );
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПереноситьВДокумент = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ПереноситьВДокумент Тогда
		
		АдресРезультатаПодбораВХранилище = ПоместитьРезультатыПодбораВХранилище();
		
		Структура = Новый Структура("АдресРезультатаПодбораВХранилище", АдресРезультатаПодбораВХранилище);
		ОповеститьОВыборе(Структура);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьРезультатыПодбораВХранилище()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	АдресРезультатаПодбораВХранилище = ПоместитьВоВременноеХранилище(ТекущийОбъект.ПодобранныеСотрудники.Выгрузить(), УникальныйИдентификатор);
	
	Возврат АдресРезультатаПодбораВХранилище;
	
КонецФункции

&НаКлиенте
Процедура СписокСотрудниковОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	МассивНовыхСтрок = Новый Массив;
	МассивПереносимыхСотрудников = ПараметрыПеретаскивания.Значение;
		
	Для Каждого ЭлементМассива Из МассивПереносимыхСотрудников Цикл
		Элементы.СписокСотрудников.ТекущаяСтрока = ЭлементМассива;
		ТекущиеДанные = Элементы.СписокСотрудников.ТекущиеДанные;
				
		НайденныеСтроки = Объект.ПодобранныеСотрудники.НайтиСтроки(НОВЫЙ Структура("Сотрудник,Подразделение,Должность,РабочееМесто,ЗанимаемыхСтавок", ТекущиеДанные.Сотрудник,ТекущиеДанные.Подразделение,ТекущиеДанные.Должность,ТекущиеДанные.РабочееМесто,1));
		Если НайденныеСтроки.Количество() = 0 Тогда
			ТекущаяСтрока = Объект.ПодобранныеСотрудники.Добавить();
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока,ТекущиеДанные);
		Иначе
			ТекущаяСтрока 				= НайденныеСтроки[0]; 
			ТекущаяСтрока.ЗанимаемыхСтавок = ТекущаяСтрока.ЗанимаемыхСтавок + 1;
		КонецЕсли;

	КонецЦикла;
			
	Если НЕ МассивПереносимыхСотрудников.Количество() = 0 Тогда   
		Элементы.ПодобранныеСотрудники.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();  //???
	КонецЕсли;
	
КонецПроцедуры



