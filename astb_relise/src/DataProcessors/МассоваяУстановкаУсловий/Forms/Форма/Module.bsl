
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьОтборы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)	
	ЗаполнитьОтборы();
	УстановитьВидимостьИДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСфоромированныхДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		Если Поле.Гиперссылкаячейки Тогда		
			ПоказатьЗначение(,Элемент.ТекущиеДанные.Документ);
		КонецЕсли;
		
	КонецЕСли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьДокументыУстановкиУсловий(Команда)
	СформироватьДокументыУстановкиУсловийНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицаДолжностей(Команда)	
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаДолжностей");	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеПодразделений(Команда)
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаПодразделений");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеРабочихМест(Команда)
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаРабочихМест");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеСотрудников(Команда)
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаСотрудников");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеУсловий(Команда)
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаУсловий");
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицаДолжностей(Команда)
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаДолжностей");
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеПодразделений(Команда)
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаПодразделений");
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеРабочихМест(Команда)
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаРабочихМест");
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеСотрудников(Команда)
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаСотрудников");
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеУсловий(Команда)
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаУсловий");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоУстановленнымОтборамНаСервере()
	
	МассивОтборов_ТаблицаПодразделений = Объект.ТаблицаПодразделений.Выгрузить(Новый Структура("Использовать",Истина));
	МассивОтборов_ТаблицаПодразделений = МассивОтборов_ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение");
	ЕстьОтбор_Подразделения = МассивОтборов_ТаблицаПодразделений.Количество() > 0;
	
	МассивОтборов_ТаблицаДолжностей = Объект.ТаблицаДолжностей.Выгрузить(Новый Структура("Использовать",Истина));
	МассивОтборов_ТаблицаДолжностей = МассивОтборов_ТаблицаДолжностей.ВыгрузитьКолонку("Должность");
	ЕстьОтбор_Должности = МассивОтборов_ТаблицаДолжностей.Количество() > 0;
	
	МассивОтборов_ТаблицаСотрудников = Объект.ТаблицаСотрудников.Выгрузить(Новый Структура("Использовать",Истина));
	МассивОтборов_ТаблицаСотрудников = МассивОтборов_ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
	ЕстьОтбор_Сотрудники = МассивОтборов_ТаблицаСотрудников.Количество() > 0;
	
	МассивОтборов_ТаблицаУсловий = Объект.ТаблицаУсловий.Выгрузить(Новый Структура("Использовать",Истина));
	МассивОтборов_ТаблицаУсловий = МассивОтборов_ТаблицаУсловий.ВыгрузитьКолонку("Условие");
	ЕстьОтбор_Условия = МассивОтборов_ТаблицаУсловий.Количество() > 0;
	
	МассивОтборов_ТаблицаРабочихМест = Объект.ТаблицаРабочихМест.Выгрузить(Новый Структура("Использовать",Истина));
	МассивОтборов_ТаблицаРабочихМест = МассивОтборов_ТаблицаРабочихМест.ВыгрузитьКолонку("РабочееМесто");
	ЕстьОтбор_РабочиеМеста = МассивОтборов_ТаблицаРабочихМест.Количество() > 0;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
		|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Подразделение КАК Подразделение,
		|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Должность КАК Должность,
		|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.РабочееМесто КАК РабочееМесто,
		|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Условие КАК Условие,
		|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Использовать КАК Использовать,
		|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Использовать КАК ИспользоватьДо
		|ИЗ
		|	РегистрСведений.ДоступныеУсловияРаботыСотрудника.СрезПоследних(
		|			,
		|			Сотрудник.Владелец = &Организация
		|				И ВЫБОР
		|					КОГДА &ЕстьОтбор_Подразделения
		|						ТОГДА Подразделение В (&МассивОтборов_ТаблицаПодразделений)
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ЕстьОтбор_Должности
		|						ТОГДА Должность В (&МассивОтборов_ТаблицаДолжностей)
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ЕстьОтбор_Сотрудники
		|						ТОГДА Сотрудник В (&МассивОтборов_ТаблицаСотрудников)
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ЕстьОтбор_Условия
		|						ТОГДА Условие В (&МассивОтборов_ТаблицаУсловий)
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ЕстьОтбор_РабочиеМеста
		|						ТОГДА РабочееМесто В (&МассивОтборов_ТаблицаРабочихМест)
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ДоступныеУсловияРаботыСотрудникаСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
		|		ПО ДоступныеУсловияРаботыСотрудникаСрезПоследних.Сотрудник = ЗанятыеРабочиеМестаОстатки.Сотрудник
		|			И ДоступныеУсловияРаботыСотрудникаСрезПоследних.Подразделение = ЗанятыеРабочиеМестаОстатки.Подразделение
		|			И ДоступныеУсловияРаботыСотрудникаСрезПоследних.Должность = ЗанятыеРабочиеМестаОстатки.Должность
		|			И ДоступныеУсловияРаботыСотрудникаСрезПоследних.РабочееМесто = ЗанятыеРабочиеМестаОстатки.РабочееМесто
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Подразделение.Наименование,
		|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Должность.Наименование,
		|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Сотрудник.Наименование,
		|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Условие.Наименование";
	
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	
	Запрос.УстановитьПараметр("ЕстьОтбор_Подразделения",ЕстьОтбор_Подразделения);
	Запрос.УстановитьПараметр("МассивОтборов_ТаблицаПодразделений",МассивОтборов_ТаблицаПодразделений);
	
	Запрос.УстановитьПараметр("ЕстьОтбор_Должности",ЕстьОтбор_Должности);
	Запрос.УстановитьПараметр("МассивОтборов_ТаблицаДолжностей",МассивОтборов_ТаблицаДолжностей);
	
	Запрос.УстановитьПараметр("ЕстьОтбор_Сотрудники",ЕстьОтбор_Сотрудники);
	Запрос.УстановитьПараметр("МассивОтборов_ТаблицаСотрудников",МассивОтборов_ТаблицаСотрудников);
	
	Запрос.УстановитьПараметр("ЕстьОтбор_Условия",ЕстьОтбор_Условия);
	Запрос.УстановитьПараметр("МассивОтборов_ТаблицаУсловий",МассивОтборов_ТаблицаУсловий);
	
	Запрос.УстановитьПараметр("ЕстьОтбор_РабочиеМеста",ЕстьОтбор_РабочиеМеста);
	Запрос.УстановитьПараметр("МассивОтборов_ТаблицаРабочихМест",МассивОтборов_ТаблицаРабочихМест);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Объект.ТаблицаУстановленныхНорм.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУстановленнымОтборам(Команда)
	ЗаполнитьПоУстановленнымОтборамНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеУстановленныхНормы(Команда)
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаУстановленныхНорм");	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеУстановленныхНормы(Команда)
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаУстановленныхНорм");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОтборы()
	
	Объект.ТаблицаУстановленныхНорм.Очистить();
	Объект.ТаблицаСфоромированныхДокументов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки";
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	МассивСотрудников = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Сотрудник");
	
	ТаблицаУсловийРаботыСотрудников = Документы.УстановкаУсловийРаботыСотрудника.ПолучитьУсловияРаботыСотрудников(МассивСотрудников,Неопределено);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаУсловийРаботыСотрудников",ТаблицаУсловийРаботыСотрудников);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Выразить(ТаблицаУсловийРаботыСотрудников.Сотрудник КАК Справочник.Сотрудники) КАК Сотрудник,
	|	Выразить(ТаблицаУсловийРаботыСотрудников.Подразделение КАК Справочник.Подразделения) КАК Подразделение,
	|	ВЫразить(ТаблицаУсловийРаботыСотрудников.Должность КАК Справочник.ДолжностиИПрофессии) КАК Должность,
	|	Выразить(ТаблицаУсловийРаботыСотрудников.РабочееМесто КАК Справочник.РабочиеМестаАСТБ) КАК РабочееМесто,
	|	ВЫразить(ТаблицаУсловийРаботыСотрудников.Условие КАК Справочник.УсловияНорм) КАК Условие
	|ПОМЕСТИТЬ ВТ_ДоступныеУсловия
	|ИЗ
	|	&ТаблицаУсловийРаботыСотрудников КАК ТаблицаУсловийРаботыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДоступныеУсловия.Сотрудник КАК Сотрудник,
	|	ВТ_ДоступныеУсловия.Сотрудник.Наименование КАК СотрудникНаименование
	|ИЗ
	|	ВТ_ДоступныеУсловия КАК ВТ_ДоступныеУсловия
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникНаименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДоступныеУсловия.Подразделение КАК Подразделение,
	|	ВТ_ДоступныеУсловия.Подразделение.Наименование КАК ПодразделениеНаименование
	|ИЗ
	|	ВТ_ДоступныеУсловия КАК ВТ_ДоступныеУсловия
	|ГДЕ
	|	ВТ_ДоступныеУсловия.Подразделение <> ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодразделениеНаименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДоступныеУсловия.Должность КАК Должность,
	|	ВТ_ДоступныеУсловия.Должность.Наименование КАК ДолжностьНаименование
	|ИЗ
	|	ВТ_ДоступныеУсловия КАК ВТ_ДоступныеУсловия
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДолжностьНаименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДоступныеУсловия.РабочееМесто КАК РабочееМесто,
	|	ВТ_ДоступныеУсловия.РабочееМесто.Наименование КАК РабочееМестоНаименование
	|ИЗ
	|	ВТ_ДоступныеУсловия КАК ВТ_ДоступныеУсловия
	|ГДЕ
	|	ВТ_ДоступныеУсловия.РабочееМесто <> ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РабочееМестоНаименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДоступныеУсловия.Условие КАК Условие,
	|	ВТ_ДоступныеУсловия.Условие.Наименование КАК УсловиеНаименование
	|ИЗ
	|	ВТ_ДоступныеУсловия КАК ВТ_ДоступныеУсловия
	|
	|УПОРЯДОЧИТЬ ПО
	|	УсловиеНаименование";
		
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Объект.ТаблицаСотрудников.Загрузить(РезультатЗапроса[1].Выгрузить());
	Объект.ТаблицаПодразделений.Загрузить(РезультатЗапроса[2].Выгрузить());
	Объект.ТаблицаДолжностей.Загрузить(РезультатЗапроса[3].Выгрузить());
	Объект.ТаблицаРабочихМест.Загрузить(РезультатЗапроса[4].Выгрузить());
	Объект.ТаблицаУсловий.Загрузить(РезультатЗапроса[5].Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьФлажкиНаСервере(ЗначениеФлажка,ИмяТаблицыОбъекта)
	
	ТаблицаОбъекта = Объект[ИмяТаблицыОбъекта].Выгрузить();
	ТаблицаОбъекта.ЗаполнитьЗначения(ЗначениеФлажка,"Использовать");
	Объект[ИмяТаблицыОбъекта].Загрузить(ТаблицаОбъекта);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьИДоступность()

	ИспользоватьРабочиеМеста = Объект.Организация.ИспользоватьРабочиеМеста;
	
	Элементы.ТаблицаУстановленныхНормРабочееМесто.Видимость = ИспользоватьРабочиеМеста;
	Элементы.ТаблицаРабочихМест.Видимость = ИспользоватьРабочиеМеста;


КонецПроцедуры

&НаСервере
Процедура СформироватьДокументыУстановкиУсловийНаСервере()
	
	Объект.ТаблицаСфоромированныхДокументов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаУстановленныхНорм.Подразделение КАК Подразделение,
		|	ТаблицаУстановленныхНорм.Должность КАК Должность,
		|	ТаблицаУстановленныхНорм.Сотрудник КАК Сотрудник,
		|	ТаблицаУстановленныхНорм.Условие КАК Условие,
		|	ТаблицаУстановленныхНорм.РабочееМесто КАК РабочееМесто,
		|	ТаблицаУстановленныхНорм.Использовать КАК Использовать
		|ПОМЕСТИТЬ ВТ_ТаблицаМодифицированныхУсловий
		|ИЗ
		|	&ТаблицаУстановленныхНорм КАК ТаблицаУстановленныхНорм
		|ГДЕ
		|	ТаблицаУстановленныхНорм.Использовать <> ТаблицаУстановленныхНорм.ИспользоватьДо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаМодифицированныхУсловий.Подразделение КАК Подразделение,
		|	ВТ_ТаблицаМодифицированныхУсловий.Должность КАК Должность,
		|	ВТ_ТаблицаМодифицированныхУсловий.Сотрудник КАК Сотрудник,
		|	ВТ_ТаблицаМодифицированныхУсловий.Условие КАК Условие,
		|	ВТ_ТаблицаМодифицированныхУсловий.РабочееМесто КАК РабочееМесто,
		|	ВТ_ТаблицаМодифицированныхУсловий.Использовать КАК Использовать
		|ИЗ
		|	ВТ_ТаблицаМодифицированныхУсловий КАК ВТ_ТаблицаМодифицированныхУсловий
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник
		|ИТОГИ ПО
		|	Сотрудник";
	
	Запрос.УстановитьПараметр("ТаблицаУстановленныхНорм",Объект.ТаблицаУстановленныхНорм.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСотрудник = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСотрудник.Следующий() Цикл
		
		НоваяСтрокаТаблицыДокументов = Объект.ТаблицаСфоромированныхДокументов.Добавить();
		НоваяСтрокаТаблицыДокументов.Сотрудник = ВыборкаСотрудник.Сотрудник;
		
		Попытка
			
			НачатьТранзакцию();
			
			ДокументОбъект = Документы.УстановкаУсловийРаботыСотрудника.СоздатьДокумент();
			ДокументОбъект.Дата = ТекущаяДата();
			ДокументОбъект.Организация = Объект.Организация;
			ДокументОбъект.Сотрудник = ВыборкаСотрудник.Сотрудник;
			ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
			ДокументОбъект.СоздательДокумента = Пользователи.ТекущийПользователь();
			ДокументОбъект.Комментарий = "#Создан с помощью обработки ""Массовая установка условий"""; 
			
			Выборка = ВыборкаСотрудник.Выбрать();
			Пока Выборка.Следующий() Цикл 
				
				СтрокаТабличнойЧасти = ДокументОбъект.УсловияРаботы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,Выборка);
				
			КонецЦикла;
			
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);	
			
			НоваяСтрокаТаблицыДокументов.Документ = ДокументОбъект.Ссылка;
						
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			Если ТранзакцияАктивна() Тогда 
				ОтменитьТранзакцию();
			КонецЕсли;
			
			ТекстСообщения = "В строке №%1 обнаружены ошибки при формировании документа! Причина ошибки: %2";
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
																					НоваяСтрокаТаблицыДокументов.НомерСтроки,
																					ОписаниеОшибки());
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти










