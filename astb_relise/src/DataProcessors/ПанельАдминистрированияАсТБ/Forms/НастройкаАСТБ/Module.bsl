&НаКлиенте
Перем ОбновитьИнтерфейс;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Значения реквизитов формы
	РежимРаботы = ОбщегоНазначенияПовтИсп.РежимРаботыПрограммы();
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.РезервноеКопированиеОбластейДанных") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("РезервноеКопированиеОбластейДанных");
		ПоддержкаРезервногоКопированияВМоделиСервиса = Модуль.РезервноеКопированиеИспользуется();
	КонецЕсли;
	
	РегламентноеЗадание = НайтиРегламентноеЗадание("СокращениеЖурналаРегистрации");
	Если РегламентноеЗадание <> Неопределено Тогда
		СокращениеЖурналаРегистрацииРасписание 		= РегламентноеЗадание.Расписание;
		СокращениеЖурналаРегистрацииИспользование 	= РегламентноеЗадание.Использование;
	КонецЕсли;
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность()
	
	Элементы.ОсновнаяОрганизация.Доступность 						= НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	Элементы.ГруппаНастройкиПараметровСинхронизацииСSAP.Доступность	= ПолучитьФункциональнуюОпцию("ИспользоватьСинхронизациюДанныхСАП");
	Элементы.ГруппаПараметрыПодключенияКСервису.Доступность			= ПолучитьФункциональнуюОпцию("ИспользоватьМаркировку");
	
	Если Константы.КоличествоМесяцевХраненияЖурналаРегистрации.Получить() = 0 Тогда
		Элементы.СокращениеЖурналаРегистрацииНастроитьРасписание.Доступность = Ложь;
		Элементы.СокращениеЖурналаРегистрацииИспользование.Доступность = Ложь;
		Элементы.РасписаниеСокращенияЖурналаРегистрации.Заголовок = "";
	Иначе
		Элементы.СокращениеЖурналаРегистрацииНастроитьРасписание.Доступность = Истина;
		Элементы.СокращениеЖурналаРегистрацииИспользование.Доступность = Истина;
		Элементы.РасписаниеСокращенияЖурналаРегистрации.Видимость = Истина;
		РасписаниеПредставление = Строка(СокращениеЖурналаРегистрацииРасписание);
		Представление = "Текущее расписание " + ?(СокращениеЖурналаРегистрацииИспользование,"(включено): ","(отключено): ") + ВРег(Лев(РасписаниеПредставление, 1)) + Сред(РасписаниеПредставление, 2);
		Элементы.РасписаниеСокращенияЖурналаРегистрации.Заголовок = Представление;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяОрганизацияПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	Результат = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
		ОбновитьИнтерфейс = Истина;
		#КонецЕсли
	КонецЕсли;
	
	Если Результат.Свойство("ОповещениеФорм") Тогда
		Оповестить(Результат.ОповещениеФорм.ИмяСобытия, Результат.ОповещениеФорм.Параметр, Результат.ОповещениеФорм.Источник);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	#Если НЕ ВебКлиент Тогда
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбновитьИнтерфейс();
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	Результат = Новый Структура;
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	УстановитьДоступность();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат;
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
		ОповещениеФорм = Новый Структура("ИмяСобытия, Параметр, Источник", "Запись_НаборКонстант", Новый Структура, КонстантаИмя);
		Результат.Вставить("ОповещениеФорм", ОповещениеФорм);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ОбновитьИнтерфейсПрограммы();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНесколькоОрганизацийПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособАвтоматическогоФормированияЛогиновВнешнихПользователейПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПодситемуОТиТБПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМаркировкуПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКлючДоступаОтправителяУведомлений(Команда)
	
	ПерейтиПоНавигационнойСсылке("https://pushnotifications.1c.com/push/publishers/new");	
	
КонецПроцедуры

&НаКлиенте
Процедура СокращениеЖурналаРегистрацииНастроитьРасписание(Команда)
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(СокращениеЖурналаРегистрацииРасписание);
	Диалог.Показать(Новый ОписаниеОповещения("СокращениеЖурналаРегистрацииПослеИзмененияРасписания", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура СокращениеЖурналаРегистрацииПослеИзмененияРасписания(Расписание, ПараметрыВыполнения) Экспорт
	
	Если Расписание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СокращениеЖурналаРегистрацииРасписание = Расписание;
	
	ЗаписатьРегламентноеЗадание("СокращениеЖурналаРегистрации", СокращениеЖурналаРегистрацииИспользование, СокращениеЖурналаРегистрацииРасписание, "СокращениеЖурналаРегистрацииРасписание");
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоМесяцевХраненияЖурналаРегистрацииПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
	Если НЕ КоличествоМесяцевХраненияЖурналаРегистрацииЗадано() Тогда
		
		СокращениеЖурналаРегистрацииИспользование = Ложь;
		
	    ЗаписатьРегламентноеЗадание("СокращениеЖурналаРегистрации", СокращениеЖурналаРегистрацииИспользование, СокращениеЖурналаРегистрацииРасписание, "СокращениеЖурналаРегистрацииРасписание");
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КоличествоМесяцевХраненияЖурналаРегистрацииЗадано()
	
	Возврат НЕ Константы.КоличествоМесяцевХраненияЖурналаРегистрации.Получить() = 0;
	
КонецФункции	

&НаСервере
Функция НайтиРегламентноеЗадание(ИмяПредопределенного)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Метаданные", ИмяПредопределенного);
	
	РезультатПоиска = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	Возврат ?(РезультатПоиска.Количество() = 0, Неопределено, РезультатПоиска[0]);
	
КонецФункции

&НаСервере
Процедура ЗаписатьРегламентноеЗадание(ИмяПредопределенного, Использование, Расписание, РеквизитПутьКДанным)
	
	РегламентноеЗадание = НайтиРегламентноеЗадание(ИмяПредопределенного);
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("Использование", 	Использование);
	ПараметрыЗадания.Вставить("Расписание", 	Расписание);
	
	РегламентныеЗаданияСервер.ИзменитьЗадание(РегламентноеЗадание, ПараметрыЗадания);
	
	Если РеквизитПутьКДанным <> Неопределено Тогда
		
		УстановитьДоступность();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СокращениеЖурналаРегистрацииИспользованиеПриИзменении(Элемент)
	
	ЗаписатьРегламентноеЗадание("СокращениеЖурналаРегистрации", СокращениеЖурналаРегистрацииИспользование, СокращениеЖурналаРегистрацииРасписание, "СокращениеЖурналаРегистрацииРасписание");
	
КонецПроцедуры

&НаКлиенте
Процедура АктуализироватьСтрокуСоединенияИБ(Команда)
	
	АктуализироватьСтрокуСоединенияИБ_Сервер();
	
КонецПроцедуры

&НаСервере
Процедура АктуализироватьСтрокуСоединенияИБ_Сервер()
	
	ОбщегоНазначенияПереопределяемый.УстановитьСервернуюСтрокуСоединенияИБ();
	ТекущийНаборКонстант = Константы.СоздатьНабор();
	ТекущийНаборКонстант.Прочитать();
	ЗначениеВДанныеФормы(ТекущийНаборКонстант,ЭтаФорма.НаборКонстант);
	
КонецПроцедуры

&НаКлиенте
Процедура КлючДоступаОтправителяУведомленийПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСинхронизациюСSAPПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьЗагрузкуКадровыхДанныхЧерезСервисПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры
