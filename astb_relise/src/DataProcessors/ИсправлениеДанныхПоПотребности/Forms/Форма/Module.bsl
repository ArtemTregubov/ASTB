
&НаСервере
Процедура СброситьОстаткиНаСервере()
	
	ДатаДокумента = Объект.ДатаСбросаОстатков;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПотребностьВыдачиСИЗОстатки.Организация КАК Организация,
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник КАК Сотрудник,
	|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи КАК НормаВыдачи,
	|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы КАК НоменклатураНормы,
	|	ПотребностьВыдачиСИЗОстатки.ДатаПотребности КАК ДатаПотребности,
	|	ПотребностьВыдачиСИЗОстатки.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ ВТ_ОстаткиПоПотребности
	|ИЗ
	|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
	|			&ПериодВремени,
	|			Организация = &Организация И ВЫБОР КОГДА &ЕстьОтбор ТОГДА Сотрудник В (&МассивСотрудниковПоОтбору) ИНАЧЕ ИСТИНА КОНЕЦ) КАК ПотребностьВыдачиСИЗОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыдачаПоПотребностиОстатки.Организация КАК Организация,
	|	ВыдачаПоПотребностиОстатки.Сотрудник КАК Сотрудник,
	|	ВыдачаПоПотребностиОстатки.НормаВыдачи КАК НормаВыдачи,
	|	ВыдачаПоПотребностиОстатки.НоменклатураНормы КАК НоменклатураНормы,
	|	ВыдачаПоПотребностиОстатки.ДатаВыдачи КАК ДатаВыдачи,
	|	ВыдачаПоПотребностиОстатки.ДатаПотребности КАК ДатаПотребности,
	|	ВыдачаПоПотребностиОстатки.ПроцентИзноса КАК ПроцентИзноса,
	|	ВыдачаПоПотребностиОстатки.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ ВТ_ОстаткиВыдачиПоПотребности
	|ИЗ
	|	РегистрНакопления.ВыдачаПоПотребности.Остатки(&ПериодВремени, Организация = &Организация И ВЫБОР КОГДА &ЕстьОтбор ТОГДА Сотрудник В (&МассивСотрудниковПоОтбору) ИНАЧЕ ИСТИНА КОНЕЦ) КАК ВыдачаПоПотребностиОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Активность,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ПериодВремени КАК Период,
	|	ВТ_ОстаткиПоПотребности.Организация КАК Организация,
	|	ВТ_ОстаткиПоПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_ОстаткиПоПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ОстаткиПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ОстаткиПоПотребности.ДатаПотребности КАК ДатаПотребности,
	|	ВТ_ОстаткиПоПотребности.Количество КАК Количество
	|ИЗ
	|	ВТ_ОстаткиПоПотребности КАК ВТ_ОстаткиПоПотребности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	НормаВыдачи,
	|	НоменклатураНормы,
	|	ДатаПотребности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Активность,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ПериодВремени КАК Период,
	|	ВТ_ОстаткиВыдачиПоПотребности.Организация КАК Организация,
	|	ВТ_ОстаткиВыдачиПоПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_ОстаткиВыдачиПоПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ОстаткиВыдачиПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ОстаткиВыдачиПоПотребности.ДатаПотребности КАК ДатаПотребности,
	|	ВТ_ОстаткиВыдачиПоПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ОстаткиВыдачиПоПотребности.ПроцентИзноса КАК ПроцентИзноса,
	|	ВТ_ОстаткиВыдачиПоПотребности.Количество КАК Количество
	|ИЗ
	|	ВТ_ОстаткиВыдачиПоПотребности КАК ВТ_ОстаткиВыдачиПоПотребности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	НормаВыдачи,
	|	НоменклатураНормы,
	|	ДатаПотребности";
	
	СтруктураОтбор = ПолучитьМассивСотрудниковПоОтбору(ДатаДокумента);
	
	Запрос.УстановитьПараметр("Организация",				Объект.Организация);
	Запрос.УстановитьПараметр("ЕстьОтбор",					СтруктураОтбор.ЕстьОтбор);
	Запрос.УстановитьПараметр("МассивСотрудниковПоОтбору",	СтруктураОтбор.МассивСотрудников);
	Запрос.УстановитьПараметр("ПериодВремени",				ДатаДокумента);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДвиженийПоПотребности 		= Результат[2].Выгрузить();
	ТаблицаДвиженийВыдачиПоПотребности 	= Результат[3].Выгрузить();
	
	Если ТаблицаДвиженийПоПотребности.Количество() = 0 И ТаблицаДвиженийВыдачиПоПотребности.Количество() = 0 Тогда
		Сообщить("Остатков по регистрам потребности нет.");
		Возврат;
	КонецЕсли;
	
	НовыйДокумент = Документы.КорректировкаРегистров.СоздатьДокумент();
	НовыйДокумент.Дата 					= ДатаДокумента;
	НовыйДокумент.Комментарий 			= "Сформирован обработкой исправления данных по регистрам потребности";
	НовыйДокумент.Ответственный 		= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.СоздательДокумента 	= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.УстановитьНовыйНомер();
	
	Если НЕ ТаблицаДвиженийПоПотребности.Количество() = 0 Тогда
	
		НоваяСтрока 	= НовыйДокумент.ТаблицаРегистров.Добавить();
		НоваяСтрока.Имя = "ПотребностьВыдачиСИЗ";
	
	    НовыйДокумент.Движения.ПотребностьВыдачиСИЗ.Загрузить(ТаблицаДвиженийПоПотребности);
		
	КонецЕсли;	
	
	Если НЕ ТаблицаДвиженийВыдачиПоПотребности.Количество() = 0 Тогда
		
		НоваяСтрока 	= НовыйДокумент.ТаблицаРегистров.Добавить();
		НоваяСтрока.Имя = "ВыдачаПоПотребности";
	
		НовыйДокумент.Движения.ВыдачаПоПотребности.Загрузить(ТаблицаДвиженийВыдачиПоПотребности);
		
	КонецЕсли;
	
	Попытка
		НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
		Объект.ДокументСбросаОстатков = НовыйДокумент.Ссылка;
		Объект.ДатаРасчетаПотребности = ТекущаяДата() + 1;
		//Сообщить("Сброс остатков выполнен!");
	Исключение
		Сообщить("Сброс остатков не выполнен!" + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СброситьОстатки(Команда)
	
	СброситьОстаткиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьПотребностьНаСервере()
	
	ИспользоватьАлгоритм_0_0_0_4 = Объект.Организация.ИспользоватьАлгоритм_0_0_0_4;
	
	Объект.ДанныеПоПотребности.Очистить();
	
	//1. Расчет остатков по выданным СИЗ с учетом занятых рабочих мест и периодичности	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_ЗРМ
	|ИЗ
	|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
	|			&ПериодАнализа,
	|			Организация = &Организация
	|				И ВЫБОР
	|					КОГДА &ЕстьОтбор
	|						ТОГДА Сотрудник В (&МассивСотрудниковПоОтбору)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ЗанятыеРабочиеМестаОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыданныеСредстваЗащитыОстатки.Сотрудник КАК Сотрудник,
	|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи КАК НормаВыдачи,
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы КАК НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи КАК ДатаВыдачи,
	|	ВыданныеСредстваЗащитыОстатки.ПроцентИзноса КАК ПроцентИзноса,
	|	СУММА(ВыданныеСредстваЗащитыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ВыданныеСИЗ
	|ИЗ
	|	РегистрНакопления.ВыданныеСредстваЗащиты.Остатки(
	|			&ПериодАнализа,
	|			Организация = &Организация
	|				И ВЫБОР
	|					КОГДА &ЕстьОтбор
	|						ТОГДА Сотрудник В (&МассивСотрудниковПоОтбору)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ВыданныеСредстваЗащитыОстатки
	|ГДЕ
	|	НЕ ВыданныеСредстваЗащитыОстатки.НормаВыдачи = ЗНАЧЕНИЕ(Справочник.НормыВыдачиСИЗ.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыданныеСредстваЗащитыОстатки.Сотрудник,
	|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи,
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи,
	|	ВыданныеСредстваЗащитыОстатки.ПроцентИзноса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НормыВыдачиСИЗСоставНормы.Ссылка КАК НормаВыдачи,
	|	НормыВыдачиСИЗСоставНормы.НоменклатураНормы КАК НоменклатураНормы,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи.ТипПериода КАК ТипПериода,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи.КоличествоПериодов КАК КоличествоПериодов
	|ПОМЕСТИТЬ ВТ_СоставНорм
	|ИЗ
	|	Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|ГДЕ
	|	НормыВыдачиСИЗСоставНормы.Ссылка.Владелец = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВыданныеСИЗ.Сотрудник КАК Сотрудник,
	|	ВТ_ВыданныеСИЗ.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ВыданныеСИЗ.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ВыданныеСИЗ.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ВыданныеСИЗ.ПроцентИзноса КАК ПроцентИзноса,
	|	ВТ_ВыданныеСИЗ.КоличествоОстаток КАК КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА ВТ_СоставНорм.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|			ТОГДА ДОБАВИТЬКДАТЕ(ВТ_ВыданныеСИЗ.ДатаВыдачи, МЕСЯЦ, ВТ_СоставНорм.КоличествоПериодов * 12)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(ВТ_ВыданныеСИЗ.ДатаВыдачи, МЕСЯЦ, ВТ_СоставНорм.КоличествоПериодов)
	|	КОНЕЦ КАК РасчетнаяДатаПотребности,
	|	ВТ_СоставНорм.ТипПериода КАК ТипПериода,
	|	ВТ_СоставНорм.КоличествоПериодов КАК КоличествоПериодов
	|ПОМЕСТИТЬ ВТ_АктуальныеОстакиПоВыдаче
	|ИЗ
	|	ВТ_ВыданныеСИЗ КАК ВТ_ВыданныеСИЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоставНорм КАК ВТ_СоставНорм
	|		ПО ВТ_ВыданныеСИЗ.НормаВыдачи = ВТ_СоставНорм.НормаВыдачи
	|			И ВТ_ВыданныеСИЗ.НоменклатураНормы = ВТ_СоставНорм.НоменклатураНормы
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|				КОГДА ВТ_СоставНорм.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ВТ_ВыданныеСИЗ.ДатаВыдачи, МЕСЯЦ, ВТ_СоставНорм.КоличествоПериодов * 12)
	|				ИНАЧЕ ДОБАВИТЬКДАТЕ(ВТ_ВыданныеСИЗ.ДатаВыдачи, МЕСЯЦ, ВТ_СоставНорм.КоличествоПериодов)
	|			КОНЕЦ, МЕСЯЦ) > НАЧАЛОПЕРИОДА(&ПериодАнализа, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗРМ.Сотрудник КАК Сотрудник,
	|	ВТ_АктуальныеОстакиПоВыдаче.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_АктуальныеОстакиПоВыдаче.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_АктуальныеОстакиПоВыдаче.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_АктуальныеОстакиПоВыдаче.РасчетнаяДатаПотребности КАК ДатаПотребности,
	|	ВЫБОР
	|		КОГДА &ИспользоватьАлгоритм_0_0_0_4
	|			ТОГДА ЕСТЬNULL(ВТ_АктуальныеОстакиПоВыдаче.ПроцентИзноса.Код, 0)
	|		ИНАЧЕ РАЗНОСТЬДАТ(ВТ_АктуальныеОстакиПоВыдаче.ДатаВыдачи, &ПериодАнализа, ДЕНЬ) / РАЗНОСТЬДАТ(ВТ_АктуальныеОстакиПоВыдаче.ДатаВыдачи, ВТ_АктуальныеОстакиПоВыдаче.РасчетнаяДатаПотребности, ДЕНЬ) * 100
	|	КОНЕЦ КАК ПроцентИзноса,
	|	ВТ_АктуальныеОстакиПоВыдаче.ТипПериода КАК ТипПериода,
	|	ВТ_АктуальныеОстакиПоВыдаче.КоличествоПериодов КАК КоличествоПериодов,
	|	СУММА(ВТ_АктуальныеОстакиПоВыдаче.КоличествоОстаток) КАК Количество
	|ИЗ
	|	ВТ_ЗРМ КАК ВТ_ЗРМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АктуальныеОстакиПоВыдаче КАК ВТ_АктуальныеОстакиПоВыдаче
	|		ПО ВТ_ЗРМ.Сотрудник = ВТ_АктуальныеОстакиПоВыдаче.Сотрудник
	|ГДЕ
	|	НЕ ВТ_АктуальныеОстакиПоВыдаче.КоличествоОстаток ЕСТЬ NULL
	|	И НЕ ВТ_АктуальныеОстакиПоВыдаче.НормаВыдачи.ОснованиеНормы ПОДОБНО ""%Дежурная%""
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_АктуальныеОстакиПоВыдаче.НормаВыдачи,
	|	ВТ_АктуальныеОстакиПоВыдаче.ДатаВыдачи,
	|	ВТ_АктуальныеОстакиПоВыдаче.РасчетнаяДатаПотребности,
	|	ВТ_ЗРМ.Сотрудник,
	|	ВТ_АктуальныеОстакиПоВыдаче.НоменклатураНормы,
	|	ВЫБОР
	|		КОГДА &ИспользоватьАлгоритм_0_0_0_4
	|			ТОГДА ЕСТЬNULL(ВТ_АктуальныеОстакиПоВыдаче.ПроцентИзноса.Код, 0)
	|		ИНАЧЕ РАЗНОСТЬДАТ(ВТ_АктуальныеОстакиПоВыдаче.ДатаВыдачи, &ПериодАнализа, ДЕНЬ) / РАЗНОСТЬДАТ(ВТ_АктуальныеОстакиПоВыдаче.ДатаВыдачи, ВТ_АктуальныеОстакиПоВыдаче.РасчетнаяДатаПотребности, ДЕНЬ) * 100
	|	КОНЕЦ,
	|	ВТ_АктуальныеОстакиПоВыдаче.ТипПериода,
	|	ВТ_АктуальныеОстакиПоВыдаче.КоличествоПериодов
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ЗРМ.Сотрудник.Наименование,
	|	ВТ_АктуальныеОстакиПоВыдаче.НормаВыдачи.Наименование,
	|	ВТ_АктуальныеОстакиПоВыдаче.НоменклатураНормы.Наименование";
	
	СтруктураОтбор = ПолучитьМассивСотрудниковПоОтбору(Объект.ДатаРасчетаПотребности);
	
	Запрос.УстановитьПараметр("ПериодАнализа",				Объект.ДатаРасчетаПотребности);
	Запрос.УстановитьПараметр("Организация",				Объект.Организация);
	Запрос.УстановитьПараметр("ЕстьОтбор",					СтруктураОтбор.ЕстьОтбор);
	Запрос.УстановитьПараметр("МассивСотрудниковПоОтбору",	СтруктураОтбор.МассивСотрудников);
	//***НСК Трегубов А.А.*** --  --  23.06.2021 <<<
	Запрос.УстановитьПараметр("ИспользоватьАлгоритм_0_0_0_4", ИспользоватьАлгоритм_0_0_0_4);	
	//***НСК Трегубов А.А.*** --  --  23.06.2021 >>>
	
	ТаблицаВыдачи = Запрос.Выполнить().Выгрузить();
	
	//2. Определение норм
	МассивСотрудников 			= ТаблицаВыдачи.ВыгрузитьКолонку("Сотрудник");
	ТаблицаЗанятыхРМ 			= ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуЗанятыхРабочихМестСУсловиями(МассивСотрудников,Объект.Организация,Объект.ДатаРасчетаПотребности);
	ТаблицаУстановленныхНорм 	= ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуУстановленныхНорм(Объект.Организация,Объект.ДатаРасчетаПотребности,ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Подразделение"),ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Должность"));
	ТаблицаСНормами 			= ПроцедурыРаботыСНормамиСервер.ПодобратьНормы(ТаблицаЗанятыхРМ,ТаблицаУстановленныхНорм,Объект.Организация,Объект.ДатаРасчетаПотребности);
	
	Для Каждого СтрокаТаблицыВыдачи Из ТаблицаВыдачи Цикл
		
		ОстатокВыданных = СтрокаТаблицыВыдачи.Количество;
		СтруктураПоискаТочная 	= Новый Структура("Сотрудник, НормаВыдачи, НоменклатураНормы",СтрокаТаблицыВыдачи.Сотрудник,СтрокаТаблицыВыдачи.НормаВыдачи,СтрокаТаблицыВыдачи.НоменклатураНормы);
		СтруктураПоиска 		= Новый Структура("Сотрудник, НоменклатураНормы",СтрокаТаблицыВыдачи.Сотрудник,СтрокаТаблицыВыдачи.НоменклатураНормы);
		
		//поиск с учетом нормы выдачи
		НайденныеСтроки = ТаблицаСНормами.НайтиСтроки(СтруктураПоискаТочная);
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			Если ОстатокВыданных = 0 Тогда
				Прервать;
			КонецЕсли;	
			
			НоваяСтрока = Объект.ДанныеПоПотребности.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыВыдачи);
			
			Если ОстатокВыданных > НайденнаяСтрока.КоличествоВПериоде Тогда
				ОстатокВыданных = ОстатокВыданных - НайденнаяСтрока.КоличествоВПериоде;
				НоваяСтрока.КоличествоВыдано = НайденнаяСтрока.КоличествоВПериоде;
			Иначе
				НоваяСтрока.КоличествоВыдано = ОстатокВыданных;
				ОстатокВыданных = 0;
			КонецЕсли;
			НоваяСтрока.КоличествоПотребность = НайденнаяСтрока.КоличествоВПериоде;
			
			//***НСК Трегубов А.А.*** -- №73822 проценты износа в 4 алгоритме --  21.06.2021 <<<
			Если ИспользоватьАлгоритм_0_0_0_4 Тогда 
				
				НоваяСтрока.ДатаПотребности = ПроцедурыРаботыСНормамиСервер.РассчитатьДатуПотребностиПоИзносу(СтрокаТаблицыВыдачи.ДатаВыдачи,НайденнаяСтрока.ТипПериода,
																										НайденнаяСтрока.КоличествоПериодов,			
																										Окр(СтрокаТаблицыВыдачи.ПроцентИзноса,6,РежимОкругления.Окр15как20));
				
			КонецЕсли;			
			//***НСК Трегубов А.А.*** -- №73822 проценты износа в 4 алгоритме --  21.06.2021 >>>
			
		КонецЦикла;	
		
		//поиск по номенклатуре нормы
		НайденныеСтроки = ТаблицаСНормами.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			Если ОстатокВыданных = 0 Тогда
				Прервать;
			КонецЕсли;	
			
			Если НайденнаяСтрока.КоличествоВПериоде = 0 Тогда //зачлось ранее по номенклатуре нормы
				Продолжить;
			КонецЕсли;	
			
			НоваяСтрока = Объект.ДанныеПоПотребности.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыВыдачи);
			
			Если ОстатокВыданных > НайденнаяСтрока.КоличествоВПериоде Тогда
				НоваяСтрока.КоличествоПотребность 	= НайденнаяСтрока.КоличествоВПериоде;
				НоваяСтрока.КоличествоВыдано 		= НайденнаяСтрока.КоличествоВПериоде;
				ОстатокВыданных 					= ОстатокВыданных - НайденнаяСтрока.КоличествоВПериоде;
			Иначе
				НоваяСтрока.КоличествоВыдано 		= ОстатокВыданных;
				НоваяСтрока.КоличествоПотребность 	= НайденнаяСтрока.КоличествоВПериоде;
				НайденнаяСтрока.КоличествоВПериоде = 0;
				ОстатокВыданных = 0;
			КонецЕсли;
			
			НоваяСтрока.НормаВыдачи = НайденнаяСтрока.НормаВыдачи;
			
			Если НайденнаяСтрока.ТипПериода = Перечисления.ДоступныеПериодыОтчета.Месяц Тогда
				НоваяСтрока.ДатаПотребности = ДобавитьМесяц(НоваяСтрока.ДатаВыдачи,НайденнаяСтрока.КоличествоПериодов);
			Иначе
				НоваяСтрока.ДатаПотребности = ДобавитьМесяц(НоваяСтрока.ДатаВыдачи,НайденнаяСтрока.КоличествоПериодов * 12);
			КонецЕсли;
						
			//***НСК Трегубов А.А.*** -- №73822 проценты износа в 4 алгоритме --  21.06.2021 <<<
			Если ИспользоватьАлгоритм_0_0_0_4 Тогда 
							
			НоваяСтрока.ДатаПотребности = ПроцедурыРаботыСНормамиСервер.РассчитатьДатуПотребностиПоИзносу(СтрокаТаблицыВыдачи.ДатаВыдачи,НайденнаяСтрока.ТипПериода,
																				НайденнаяСтрока.КоличествоПериодов,			
																				Окр(СтрокаТаблицыВыдачи.ПроцентИзноса,6,РежимОкругления.Окр15как20));
			КонецЕсли;			
			//***НСК Трегубов А.А.*** -- №73822 проценты износа в 4 алгоритме --  21.06.2021 >>>
			
		КонецЦикла;
		
		Если НЕ ОстатокВыданных = 0 Тогда
			
			НоваяСтрока = Объект.ДанныеПоПотребности.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыВыдачи);
			НоваяСтрока.КоличествоВыдано = ОстатокВыданных;
			НоваяСтрока.КоличествоПотребность = 0;
			
			//***НСК Трегубов А.А.*** -- №73822 проценты износа в 4 алгоритме --  21.06.2021 <<<
			Если ИспользоватьАлгоритм_0_0_0_4 Тогда 
				
				НоваяСтрока.ДатаПотребности = ПроцедурыРаботыСНормамиСервер.РассчитатьДатуПотребностиПоИзносу(СтрокаТаблицыВыдачи.ДатаВыдачи,СтрокаТаблицыВыдачи.ТипПериода,
																				СтрокаТаблицыВыдачи.КоличествоПериодов,			
																				Окр(СтрокаТаблицыВыдачи.ПроцентИзноса,6,РежимОкругления.Окр15как20));
				
			КонецЕсли;			
			//***НСК Трегубов А.А.*** -- №73822 проценты износа в 4 алгоритме --  21.06.2021 >>>
			
		КонецЕсли;	
		
	КонецЦикла;
	
	//3. уточняем потребность по отсутствию на рабочем месте
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтсутствиеНаРабочемМестеСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОтсутствиеНаРабочемМестеСрезПоследних.ДатаНачала КАК ДатаНачала,
	|	ОтсутствиеНаРабочемМестеСрезПоследних.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_Отсутствие
	|ИЗ
	|	РегистрСведений.ОтсутствиеНаРабочемМесте.СрезПоследних(&ПериодАнализа, Организация = &Организация И ВЫБОР КОГДА &ЕстьОтбор ТОГДА Сотрудник В (&МассивСотрудниковПоОтбору) ИНАЧЕ ИСТИНА КОНЕЦ) КАК ОтсутствиеНаРабочемМестеСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПоПотребности.Сотрудник КАК Сотрудник,
	|	ДанныеПоПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ДанныеПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ДанныеПоПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ДанныеПоПотребности.ДатаПотребности КАК ДатаПотребности,
	|	ДанныеПоПотребности.ПроцентИзноса КАК ПроцентИзноса,
	|	ДанныеПоПотребности.КоличествоВыдано КАК КоличествоВыдано,
	|	ДанныеПоПотребности.КоличествоПотребность КАК КоличествоПотребность
	|ПОМЕСТИТЬ ВТ_ДанныеПоПотребности
	|ИЗ
	|	&ДанныеПоПотребности КАК ДанныеПоПотребности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеПоПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеПоПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ДанныеПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ДанныеПоПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_Отсутствие.ДатаОкончания ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА ДОБАВИТЬКДАТЕ(ВТ_Отсутствие.ДатаОкончания, ДЕНЬ, 1) > ВТ_ДанныеПоПотребности.ДатаПотребности
	|						ТОГДА ДОБАВИТЬКДАТЕ(ВТ_Отсутствие.ДатаОкончания, ДЕНЬ, 1)
	|					ИНАЧЕ ВТ_ДанныеПоПотребности.ДатаПотребности
	|				КОНЕЦ
	|		ИНАЧЕ ВТ_ДанныеПоПотребности.ДатаПотребности
	|	КОНЕЦ КАК ДатаПотребности,
	|	ВТ_ДанныеПоПотребности.ПроцентИзноса КАК ПроцентИзноса,
	|	ВТ_ДанныеПоПотребности.КоличествоВыдано КАК КоличествоВыдано,
	|	ВТ_ДанныеПоПотребности.КоличествоПотребность КАК КоличествоПотребность
	|ИЗ
	|	ВТ_ДанныеПоПотребности КАК ВТ_ДанныеПоПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Отсутствие КАК ВТ_Отсутствие
	|		ПО ВТ_ДанныеПоПотребности.Сотрудник = ВТ_Отсутствие.Сотрудник";
	
	СтруктураОтбор = ПолучитьМассивСотрудниковПоОтбору(Объект.ДатаРасчетаПотребности);
	
	Запрос.УстановитьПараметр("ПериодАнализа",				Объект.ДатаРасчетаПотребности);
	Запрос.УстановитьПараметр("Организация",				Объект.Организация);
	Запрос.УстановитьПараметр("ЕстьОтбор",					СтруктураОтбор.ЕстьОтбор);
	Запрос.УстановитьПараметр("МассивСотрудниковПоОтбору",	СтруктураОтбор.МассивСотрудников);
	Запрос.УстановитьПараметр("ДанныеПоПотребности",		Объект.ДанныеПоПотребности.Выгрузить());
	
	Объект.ДанныеПоПотребности.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//4. уточняем потребность по зиме
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Нормы.Сотрудник КАК Сотрудник,
	|	Нормы.Подразделение КАК Подразделение,
	|	Нормы.НормаВыдачи КАК НормаВыдачи,
	|	Нормы.НоменклатураНормы КАК НоменклатураНормы,
	|	Нормы.ЭтоЗима КАК ЭтоЗима
	|ПОМЕСТИТЬ ВТ_Нормы
	|ИЗ
	|	&Нормы КАК Нормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПоПотребности.Сотрудник КАК Сотрудник,
	|	ДанныеПоПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ДанныеПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ДанныеПоПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ДанныеПоПотребности.ДатаПотребности КАК ДатаПотребности,
	|	ДанныеПоПотребности.ПроцентИзноса КАК ПроцентИзноса,
	|	ДанныеПоПотребности.КоличествоВыдано КАК КоличествоВыдано,
	|	ДанныеПоПотребности.КоличествоПотребность КАК КоличествоПотребность
	|ПОМЕСТИТЬ ВТ_ДанныеПоПотребности
	|ИЗ
	|	&ДанныеПоПотребности КАК ДанныеПоПотребности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеПоПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_Нормы.Подразделение КАК Подразделение,
	|	ВТ_ДанныеПоПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ДанныеПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_Нормы.ЭтоЗима КАК ЭтоЗима,
	|	ВТ_ДанныеПоПотребности.ПроцентИзноса КАК ПроцентИзноса,
	|	ВТ_ДанныеПоПотребности.ДатаПотребности КАК ДатаПотребности,
	|	ВТ_ДанныеПоПотребности.КоличествоПотребность КАК КоличествоПотребность,
	|	ВТ_ДанныеПоПотребности.КоличествоВыдано КАК КоличествоВыдано
	|ИЗ
	|	ВТ_ДанныеПоПотребности КАК ВТ_ДанныеПоПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Нормы КАК ВТ_Нормы
	|		ПО ВТ_ДанныеПоПотребности.Сотрудник = ВТ_Нормы.Сотрудник
	|			И ВТ_ДанныеПоПотребности.НормаВыдачи = ВТ_Нормы.НормаВыдачи
	|			И ВТ_ДанныеПоПотребности.НоменклатураНормы = ВТ_Нормы.НоменклатураНормы";
	
	Запрос.УстановитьПараметр("ДанныеПоПотребности",Объект.ДанныеПоПотребности.Выгрузить());
	Запрос.УстановитьПараметр("Нормы",				ТаблицаСНормами);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблицаЗапроса.Свернуть("Сотрудник, Подразделение, ЭтоЗима, НормаВыдачи, НоменклатураНормы,ДатаПотребности,ПроцентИзноса","КоличествоВыдано,КоличествоПотребность");
	
	ТаблицаДатПотребности = ТаблицаЗапроса.Скопировать(,"ДатаПотребности");
	ТаблицаДатПотребности.Свернуть("ДатаПотребности");
	
	ТаблицаЗимы = ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуЗимы(ТаблицаСНормами.ВыгрузитьКолонку("Подразделение"),Объект.Организация,Объект.ДатаРасчетаПотребности,ТаблицаДатПотребности.ВыгрузитьКолонку("ДатаПотребности"));
	
	ПроцедурыРаботыСНормамиСервер.УточнитьПотребностьПоЗиме(ТаблицаЗапроса,ТаблицаЗимы);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСУчетомЗимы.Сотрудник КАК Сотрудник,
	|	ТаблицаСУчетомЗимы.НормаВыдачи КАК НормаВыдачи,
	|	ТаблицаСУчетомЗимы.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаСУчетомЗимы.ПроцентИзноса КАК ПроцентИзноса,
	|	ТаблицаСУчетомЗимы.ДатаПотребности КАК ДатаПотребности
	|ПОМЕСТИТЬ ВТ_ТаблицаСУчетомЗимы
	|ИЗ
	|	&ТаблицаЗимы КАК ТаблицаСУчетомЗимы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПоПотребности.Сотрудник КАК Сотрудник,
	|	ДанныеПоПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ДанныеПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ДанныеПоПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ДанныеПоПотребности.ДатаПотребности КАК ДатаПотребности,
	|	ДанныеПоПотребности.ПроцентИзноса КАК ПроцентИзноса,
	|	ДанныеПоПотребности.КоличествоВыдано КАК КоличествоВыдано,
	|	ДанныеПоПотребности.КоличествоПотребность КАК КоличествоПотребность
	|ПОМЕСТИТЬ ВТ_ДанныеПоПотребности
	|ИЗ
	|	&ДанныеПоПотребности КАК ДанныеПоПотребности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеПоПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеПоПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ДанныеПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ДанныеПоПотребности.ПроцентИзноса КАК ПроцентИзноса,
	|	ВТ_ДанныеПоПотребности.КоличествоПотребность КАК КоличествоПотребность,
	|	ВТ_ДанныеПоПотребности.КоличествоВыдано КАК КоличествоВыдано,
	|	ВТ_ДанныеПоПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ТаблицаСУчетомЗимы.ДатаПотребности КАК ДатаПотребности
	|ИЗ
	|	ВТ_ДанныеПоПотребности КАК ВТ_ДанныеПоПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСУчетомЗимы КАК ВТ_ТаблицаСУчетомЗимы
	|		ПО ВТ_ДанныеПоПотребности.Сотрудник = ВТ_ТаблицаСУчетомЗимы.Сотрудник
	|			И ВТ_ДанныеПоПотребности.НормаВыдачи = ВТ_ТаблицаСУчетомЗимы.НормаВыдачи
	|			И ВТ_ДанныеПоПотребности.НоменклатураНормы = ВТ_ТаблицаСУчетомЗимы.НоменклатураНормы
	|			И ВТ_ДанныеПоПотребности.ПроцентИзноса = ВТ_ТаблицаСУчетомЗимы.ПроцентИзноса";
	
	Запрос.УстановитьПараметр("ДанныеПоПотребности",Объект.ДанныеПоПотребности.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаЗимы",		ТаблицаЗапроса);
	
	Объект.ДанныеПоПотребности.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//Если Объект.Организация.ИспользоватьАлгоритм_0_0_0_4 Тогда
	//	
	//	ТаблицаДанныхПоПотребности = Объект.ДанныеПоПотребности.Выгрузить();
	//	ТаблицаДанныхПоПотребности.ЗаполнитьЗначения(0,"ПроцентИзноса");
	//	Объект.ДанныеПоПотребности.Загрузить(ТаблицаДанныхПоПотребности);

	//КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПотребность(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументСбросаОстатков) Тогда
		Сообщить("Перед расчетом потребности необходимо сбросить остатки.");
		Возврат;
	КонецЕсли;	
	
	РассчитатьПотребностьНаСервере();
	
КонецПроцедуры

&НаСервере
Функция УстановитьНормыНаСервере()
	
	Запрос = НОВЫЙ Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗанятыеРабочиеМестаОстатки.Подразделение КАК Подразделение,
	|	ЗанятыеРабочиеМестаОстатки.Должность КАК Должность,
	|	ЗанятыеРабочиеМестаОстатки.РабочееМесто КАК РабочееМесто
	|ПОМЕСТИТЬ ВТ_ЗРМ
	|ИЗ
	|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
	|			&ПериодАнализа,
	|			Организация = &Организация И ВЫБОР КОГДА &ЕстьОтбор ТОГДА Сотрудник В (&МассивСотрудниковПоОтбору) ИНАЧЕ ИСТИНА КОНЕЦ) КАК ЗанятыеРабочиеМестаОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.Активность КАК Активность,
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.Организация КАК Организация,
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.Подразделение КАК Подразделение,
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.Должность КАК Должность,
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.УсловиеНормы КАК УсловиеНормы,
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.НормаВыдачи КАК НормаВыдачи,
	|	ИСТИНА КАК Использовать
	|ПОМЕСТИТЬ ВТ_УстановленныеНормы
	|ИЗ
	|	РегистрСведений.УстановленныеНормыВыдачиСИЗ.СрезПоследних(&ПериодАнализа, Организация = &Организация) КАК УстановленныеНормыВыдачиСИЗСрезПоследних
	|ГДЕ
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.Активность
	|	И УстановленныеНормыВыдачиСИЗСрезПоследних.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_УстановленныеНормы.Активность КАК Активность,
	|	ВТ_УстановленныеНормы.Организация КАК Организация,
	|	ВТ_УстановленныеНормы.Подразделение КАК Подразделение,
	|	ВТ_УстановленныеНормы.Должность КАК Должность,
	|	ВТ_УстановленныеНормы.РабочееМесто КАК РабочееМесто,
	|	ВТ_УстановленныеНормы.УсловиеНормы КАК УсловиеНормы,
	|	ВТ_УстановленныеНормы.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_УстановленныеНормы.Использовать КАК Использовать
	|ИЗ
	|	ВТ_ЗРМ КАК ВТ_ЗРМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УстановленныеНормы КАК ВТ_УстановленныеНормы
	|		ПО ВТ_ЗРМ.Подразделение = ВТ_УстановленныеНормы.Подразделение
	|			И ВТ_ЗРМ.Должность = ВТ_УстановленныеНормы.Должность
	|			И ВТ_ЗРМ.РабочееМесто = ВТ_УстановленныеНормы.РабочееМесто
	|ГДЕ
	|	НЕ ВТ_УстановленныеНормы.НормаВыдачи ЕСТЬ NULL";
	
	СтруктураОтбор = ПолучитьМассивСотрудниковПоОтбору(Объект.ДатаУстановкиНорм);
	
	Запрос.УстановитьПараметр("Организация",				Объект.Организация);
	Запрос.УстановитьПараметр("ЕстьОтбор",					СтруктураОтбор.ЕстьОтбор);
	Запрос.УстановитьПараметр("МассивСотрудниковПоОтбору",	СтруктураОтбор.МассивСотрудников);
	Запрос.УстановитьПараметр("ПериодАнализа",				Объект.ДатаУстановкиНорм);
	
	НовыйДокумент = Документы.ПриказПоНормамВыдачиСИЗ.СоздатьДокумент();
	НовыйДокумент.НормыВыдачиСИЗ.Загрузить(Запрос.Выполнить().Выгрузить());
	НовыйДокумент.Организация 			= Объект.Организация;
	НовыйДокумент.Дата 					= Объект.ДатаУстановкиНорм;
	НовыйДокумент.Ответственный 		= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.СоздательДокумента 	= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий 			= "Сформирован обработкой для исправления данных по потребности.";
	
	НовыйДокумент.УстановитьНовыйНомер();
	
	НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат НовыйДокумент.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура УстановитьНормы(Команда)
	
	Объект.ДокументУстановкиНорм = УстановитьНормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПотребностьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаРасчетаПотребности.Сотрудник КАК Сотрудник,
	|	ТаблицаРасчетаПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ТаблицаРасчетаПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаРасчетаПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ТаблицаРасчетаПотребности.ДатаПотребности КАК ДатаПотребности,
	|	ТаблицаРасчетаПотребности.ПроцентИзноса КАК ПроцентИзноса,
	|	ТаблицаРасчетаПотребности.КоличествоВыдано КАК КоличествоВыдано,
	|	ТаблицаРасчетаПотребности.КоличествоПотребность КАК КоличествоПотребность
	|ПОМЕСТИТЬ ВТ_ДанныеПоПотребности
	|ИЗ
	|	&ТаблицаРасчетаПотребности КАК ТаблицаРасчетаПотребности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДанныеПоПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеПоПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ДанныеПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	МАКСИМУМ(ВТ_ДанныеПоПотребности.КоличествоПотребность) КАК Количество
	|ИЗ
	|	ВТ_ДанныеПоПотребности КАК ВТ_ДанныеПоПотребности
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеПоПотребности.Сотрудник,
	|	ВТ_ДанныеПоПотребности.НормаВыдачи,
	|	ВТ_ДанныеПоПотребности.НоменклатураНормы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДанныеПоПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеПоПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ДанныеПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ДанныеПоПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ДанныеПоПотребности.ДатаПотребности КАК ДатаПотребности,
	|	ВТ_ДанныеПоПотребности.ПроцентИзноса КАК ПроцентИзноса,
	|	ВТ_ДанныеПоПотребности.КоличествоВыдано КАК Количество,
	|	0 КАК КоличествоПотребность
	|ИЗ
	|	ВТ_ДанныеПоПотребности КАК ВТ_ДанныеПоПотребности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы,
	|	ДатаВыдачи УБЫВ";
	
	Запрос.УстановитьПараметр("ТаблицаРасчетаПотребности",Объект.ДанныеПоПотребности.Выгрузить());
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаПотребности 	= Результат[1].Выгрузить();
	ТаблицаВыдачи 		= Результат[2].Выгрузить();
	
	НовыйДокумент = Документы.КорректировкаРегистров.СоздатьДокумент();
	НовыйДокумент.Дата 					= Объект.ДатаРасчетаПотребности;
	НовыйДокумент.Комментарий 			= "#РасчетПоДатеДокумента# Сформирован обработкой исправления данных по регистрам потребности";
	НовыйДокумент.Ответственный 		= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.СоздательДокумента 	= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.УстановитьНовыйНомер();
	
	НоваяСтрока 	= НовыйДокумент.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "ПотребностьВыдачиСИЗ";
	НоваяСтрока 	= НовыйДокумент.ТаблицаРегистров.Добавить();
	НоваяСтрока.Имя = "ВыдачаПоПотребности";
	
	ТаблицаДвиженийПоПотребности 		= НовыйДокумент.Движения.ПотребностьВыдачиСИЗ.Выгрузить();
	ТаблицаДвиженийВыдачиПоПотребности 	= НовыйДокумент.Движения.ВыдачаПоПотребности.Выгрузить();
	
	//распределяем потребность по выдаче
	Для Каждого СтрокаТаблицыПотребности Из ТаблицаПотребности Цикл
		
		ОстатокПоПотребности = СтрокаТаблицыПотребности.Количество;
		
		СтруктураПоиска = Новый Структура("Сотрудник, НормаВыдачи, НоменклатураНормы",СтрокаТаблицыПотребности.Сотрудник,СтрокаТаблицыПотребности.НормаВыдачи,СтрокаТаблицыПотребности.НоменклатураНормы);
		
		НайденныеСтроки = ТаблицаВыдачи.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			Если ОстатокПоПотребности = 0 Тогда
				
				//приходуем выдачу без потребности
				НоваяСтрока = ТаблицаДвиженийВыдачиПоПотребности.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
				НоваяСтрока.Активность 		= Истина;
				НоваяСтрока.Период			= Объект.ДатаРасчетаПотребности;
				НоваяСтрока.ВидДвижения 	= ВидДвиженияНакопления.Приход;
				НоваяСтрока.Организация 	= Объект.Организация;
				НоваяСтрока.ДатаПотребности = Дата(1, 1, 1, 0, 0, 0);
				
				Продолжить;
				
			КонецЕсли;
			
			Если ОстатокПоПотребности >= НайденнаяСтрока.Количество Тогда
				
				ОстатокПоПотребности = ОстатокПоПотребности - НайденнаяСтрока.Количество;
				
				//приходуем потребность
				НоваяСтрока = ТаблицаДвиженийПоПотребности.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
				НоваяСтрока.Активность 	= Истина;
				НоваяСтрока.Период		= Объект.ДатаРасчетаПотребности;
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
				НоваяСтрока.Организация = Объект.Организация;
				
				//приходуем выдачу по потребности
				НоваяСтрока = ТаблицаДвиженийВыдачиПоПотребности.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
				НоваяСтрока.Активность = Истина;
				НоваяСтрока.Период		= Объект.ДатаРасчетаПотребности;
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
				НоваяСтрока.Организация = Объект.Организация;
				
			Иначе
				
				//приходуем потребность
				НоваяСтрока = ТаблицаДвиженийПоПотребности.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
				НоваяСтрока.Активность 	= Истина;
				НоваяСтрока.Период		= Объект.ДатаРасчетаПотребности;
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
				НоваяСтрока.Организация = Объект.Организация;
				НоваяСтрока.Количество 	= ОстатокПоПотребности;
				
				//приходуем выдачу по потребности
				НоваяСтрока = ТаблицаДвиженийВыдачиПоПотребности.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
				НоваяСтрока.Активность 	= Истина;
				НоваяСтрока.Период		= Объект.ДатаРасчетаПотребности;
				НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
				НоваяСтрока.Организация = Объект.Организация;
				НоваяСтрока.Количество 	= ОстатокПоПотребности;
				
				//приходуем выдачу без потребности
				НоваяСтрока = ТаблицаДвиженийВыдачиПоПотребности.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
				НоваяСтрока.Активность 		= Истина;
				НоваяСтрока.Период			= Объект.ДатаРасчетаПотребности;
				НоваяСтрока.ВидДвижения 	= ВидДвиженияНакопления.Приход;
				НоваяСтрока.Организация 	= Объект.Организация;
				НоваяСтрока.ДатаПотребности = Дата(1, 1, 1, 0, 0, 0);
				НоваяСтрока.Количество 		= НайденнаяСтрока.Количество - ОстатокПоПотребности;
				
				ОстатокПоПотребности = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
		//потребность не закрыта выдачей, выдача по потребности не нужна
		Если ОстатокПоПотребности > 0 Тогда
			
			//приходуем потребность
			НоваяСтрока = ТаблицаДвиженийПоПотребности.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
			НоваяСтрока.Активность 		= Истина;
			НоваяСтрока.Период			= Объект.ДатаРасчетаПотребности;
			НоваяСтрока.ВидДвижения 	= ВидДвиженияНакопления.Приход;
			НоваяСтрока.Организация 	= Объект.Организация;
			НоваяСтрока.Количество 		= ОстатокПоПотребности;
			НоваяСтрока.ДатаПотребности = Объект.ДатаРасчетаПотребности;
			НоваяСтрока.ПроцентИзноса 	= 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//***НСК Трегубов А.А.*** -- №73822 проценты износа в 4 алгоритме --  22.06.2021 <<<
	Если Объект.Организация.ИспользоватьАлгоритм_0_0_0_4 Тогда 		
		ТаблицаДвиженийПоПотребности.ЗаполнитьЗначения(0,"ПроцентИзноса");
		ТаблицаДвиженийВыдачиПоПотребности.ЗаполнитьЗначения(0,"ПроцентИзноса");		
	КонецЕсли;
	//***НСК Трегубов А.А.*** -- №73822 проценты износа в 4 алгоритме --  22.06.2021 >>>
	
	НовыйДокумент.Движения.ПотребностьВыдачиСИЗ.Загрузить(ТаблицаДвиженийПоПотребности);
	НовыйДокумент.Движения.ВыдачаПоПотребности.Загрузить(ТаблицаДвиженийВыдачиПоПотребности);
	
	Попытка
		НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
		Объект.ДокументФормированияПотребности = НовыйДокумент.Ссылка;
		Объект.ДатаУстановкиНорм = ТекущаяДата() + 1;
	Исключение
		Сообщить("Формирование потребности не выполнено!" + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПотребность(Команда)
	
	Если Объект.ДанныеПоПотребности.Количество() = 0 Тогда
		Сообщить("Перед формированием потребности необходимо ее рассчитать.");
		Возврат;
	КонецЕсли;
	
	СформироватьПотребностьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ДатаСбросаОстатков = ТекущаяДата();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивСотрудниковПоОтбору(ДатаАнализа)
	
	СтруктураОтвета = Новый Структура;
	
	МассивСотрудников = Новый Массив;
	
	ЕстьОтбор = Истина;
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		МассивСотрудников.Добавить(Объект.Сотрудник);
	Иначе
		ЕстьОтбор = Ложь;
	КонецЕсли;	
	
	СтруктураОтвета.Вставить("МассивСотрудников", 	МассивСотрудников);
	СтруктураОтвета.Вставить("ЕстьОтбор", 			ЕстьОтбор);
	
	Возврат СтруктураОтвета;
	
КонецФункции

&НаСервере
Процедура ВыполнитьВсеДействияНаСервере()
	
	СброситьОстаткиНаСервере();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВсеДействия(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не выбран сотрудник!";
		СообщениеПользователю.Сообщить();
		
		Возврат;
		
	КонецЕсли;	
	
	ВыполнитьВсеДействияНаСервере();
	
	РассчитатьПотребностьНаСервере();
	
	СформироватьПотребностьНаСервере();
	
	Объект.ДокументУстановкиНорм = УстановитьНормыНаСервере();
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = "Выполнено.";
	СообщениеПользователю.Сообщить();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ОчиститьДанныеФормы();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОрганизацияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНаСервере()
	
	ОчиститьДанныеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	СотрудникПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДанныеФормы()
	
	Объект.ДанныеПоПотребности.Очистить();
	Объект.ДатаСбросаОстатков				= ТекущаяДата();
	Объект.ДатаРасчетаПотребности 			= Дата(1,1,1,0,0,0);
	Объект.ДатаУстановкиНорм 				= Дата(1,1,1,0,0,0);
	Объект.ДокументСбросаОстатков 			= Документы.КорректировкаРегистров.ПустаяСсылка();
	Объект.ДокументУстановкиНорм 			= Документы.ПриказПоНормамВыдачиСИЗ.ПустаяСсылка();
	Объект.ДокументФормированияПотребности 	= Документы.КорректировкаРегистров.ПустаяСсылка();
	
КонецПроцедуры	