//АСТБ_Горюшин_Алексей_17125

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СнятьФлажкиВТаблицеВидыВыдачи(Команда)
	ИзменитьФлажкиНаСервере(Ложь,"ВидыВыдачи");
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаВидыВыдачи" Тогда
		ОбновитьОтборы("ТаблицаВидыВыдачи");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_64400
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеМВЗ(Команда)
	ИзменитьФлажкиНаСервере(Ложь,"МВЗ");
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаМВЗ" Тогда
		ОбновитьОтборы("ТаблицаМВЗ");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_64400
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеПоставщики(Команда)
	ИзменитьФлажкиНаСервере(Ложь,"Поставщики");
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаПоставщики" Тогда
		ОбновитьОтборы("ТаблицаПоставщики");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_64400
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеСкладыВыдачи(Команда)
	ИзменитьФлажкиНаСервере(Ложь,"СкладыВыдачи");
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаСкладыВыдачи" Тогда
		ОбновитьОтборы("ТаблицаСкладыВыдачи");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_64400
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеВидыВыдачи(Команда)
	ИзменитьФлажкиНаСервере(Истина,"ВидыВыдачи");
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаВидыВыдачи" Тогда
		ОбновитьОтборы("ТаблицаВидыВыдачи");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_64400
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеМВЗ(Команда)
	ИзменитьФлажкиНаСервере(Истина,"МВЗ");
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаМВЗ" Тогда
		ОбновитьОтборы("ТаблицаМВЗ");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_64400
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеПоставщики(Команда)
	ИзменитьФлажкиНаСервере(Истина,"Поставщики");
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаПоставщики" Тогда
		ОбновитьОтборы("ТаблицаПоставщики");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_64400
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеСкладыВыдачи(Команда)
	ИзменитьФлажкиНаСервере(Истина,"СкладыВыдачи");
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаСкладыВыдачи" Тогда
		ОбновитьОтборы("ТаблицаСкладыВыдачи");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_64400
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьВлевоТаблицаВидыВыдачи(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаВидыВыдачи", "Влево");
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьВлевоТаблицаМВЗ(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаМВЗ", "Влево");
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьВлевоТаблицаПоставщики(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаПоставщики", "Влево");
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьВлевоТаблицаСкладыВыдачи(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаСкладыВыдачи", "Влево");
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьВправоТаблицаВидыВыдачи(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаВидыВыдачи", "Вправо");
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьВправоТаблицаМВЗ(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаМВЗ", "Вправо");
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьВправоТаблицаПоставщики(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаПоставщики", "Вправо");
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьВправоТаблицаСкладыВыдачи(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаСкладыВыдачи", "Вправо");
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьППС(Команда)
	
	СоздатьППСНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьОстатки(Команда)
	
	ЧтениеРегистраИЗаполнениеОтборовНаСервере();
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПредварительныйПереходПраваСобственностиПриИзменении(Элемент)
	
	ЧтениеРегистраИЗаполнениеОтборовНаСервере();
		
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ИспользованиеДокументаРазрешено();
	//+++АСТБ_Горюшин_Алексей_71389
	ОчиститьТаблицуПППС();
	//---АСТБ_Горюшин_Алексей_71389
КонецПроцедуры

//+++АСТБ_Горюшин_Алексей_71389
&НаСервере
Процедура ОчиститьТаблицуПППС()
	Объект.ТаблицаПППС.Очистить();
КонецПроцедуры //---АСТБ_Горюшин_Алексей_71389

&НаКлиенте
Процедура ВидыВыдачиИспользоватьПриИзменении(Элемент)
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаВидыВыдачи" Тогда
		ОбновитьОтборы("ТаблицаВидыВыдачи");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_6440
КонецПроцедуры

&НаКлиенте
Процедура СкладыВыдачиИспользоватьПриИзменении(Элемент)
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаСкладыВыдачи" Тогда
		ОбновитьОтборы("ТаблицаСкладыВыдачи");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_64400	
КонецПроцедуры

&НаКлиенте
Процедура МВЗИспользоватьПриИзменении(Элемент)
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаМВЗ" Тогда
		ОбновитьОтборы("ТаблицаМВЗ");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_64400
КонецПроцедуры

&НаКлиенте
Процедура ПоставщикиИспользоватьПриИзменении(Элемент)
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаПоставщики" Тогда
		ОбновитьОтборы("ТаблицаПоставщики");
	КонецЕсли;
	//было
	//ОбновитьОтборы();
	//---АСТБ_Горюшин_Алексей_64400
КонецПроцедуры

&НаСервере
Процедура ИзменитьФлажкиНаСервере(ЗначениеФлажка,ИмяТаблицыОбъекта)
	
	ТаблицаОбъекта = Объект[ИмяТаблицыОбъекта].Выгрузить();
	ТаблицаОбъекта.ЗаполнитьЗначения(ЗначениеФлажка,"Использовать");
	Объект[ИмяТаблицыОбъекта].Загрузить(ТаблицаОбъекта);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ИспользованиеДокументаРазрешено();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНомеровТаблицПоУмолчанию()
	
	НоваяСтрока = Объект.ТаблицаНомеровТаблиц.Добавить();
	НоваяСтрока.НазваниеТаблицы = "ТаблицаВидыВыдачи";
	НоваяСтрока.НомерТаблицы = "1";
	НоваяСтрока = Объект.ТаблицаНомеровТаблиц.Добавить();
	НоваяСтрока.НазваниеТаблицы = "ТаблицаСкладыВыдачи";
	НоваяСтрока.НомерТаблицы = "2";
	НоваяСтрока = Объект.ТаблицаНомеровТаблиц.Добавить();
	НоваяСтрока.НазваниеТаблицы = "ТаблицаМВЗ";
	НоваяСтрока.НомерТаблицы = "3";
	НоваяСтрока = Объект.ТаблицаНомеровТаблиц.Добавить();
	НоваяСтрока.НазваниеТаблицы = "ТаблицаПоставщики";
	НоваяСтрока.НомерТаблицы = "4";
	//+++АСТБ_Горюшин_Алексей_64400
	НоваяСтрока = Объект.ТаблицаНомеровТаблиц.Добавить();
	НоваяСтрока.НазваниеТаблицы = "ТаблицаПодразделений";
	НоваяСтрока.НомерТаблицы = "5";
	//---АСТБ_Горюшин_Алексей_64400
	
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ЗначениеЗаполнено(Объект.ПоследовательностьТЧ) Тогда
		Объект.ПоследовательностьТЧ = "12345";
	КонецЕсли;
	Если НЕ СтрДлина(Объект.ПоследовательностьТЧ) = 5 Тогда
		Объект.ПоследовательностьТЧ = "12345";
	КонецЕсли;
	//было
	//Если НЕ (ЗначениеЗаполнено(Объект.ПоследовательностьТЧ)
	//	ИЛИ СтрДлина(Объект.ПоследовательностьТЧ) = 4) Тогда
	//	Объект.ПоследовательностьТЧ = "1234";
	//КонецЕсли;
	//---АСТБ_Горюшин_Алексей_64400
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПорядокТаблицОтбора(ИмяТаблицы, Направление)

	НомерТаблицы = ПолучитьНомерТаблицы(ИмяТаблицы);
	
	ВсегоПозиций = СтрДлина(Объект.ПоследовательностьТЧ);
	
	НомерПозиции = СтрНайти(Объект.ПоследовательностьТЧ, НомерТаблицы);
	
	Если Направление = "Влево" Тогда
		НовыйНомерПозиции = НомерПозиции - 1;
	Иначе
		НовыйНомерПозиции = НомерПозиции + 1;	
	КонецЕсли;
	
	Если НовыйНомерПозиции <= 0 ИЛИ НовыйНомерПозиции > ВсегоПозиций Тогда
		//ПоказатьСообщение("Невозможно переместить таблицу."); // отладка
		Возврат;
	КонецЕсли;
	
	НомерЗамещаемойТаблицы = Сред(Объект.ПоследовательностьТЧ,НовыйНомерПозиции,1);
	НомерЗамещающейТаблицы = Сред(Объект.ПоследовательностьТЧ,НомерПозиции,1);
	
	Если Направление = "Влево" Тогда
		СтараяПоследовательность = "" + НомерЗамещаемойТаблицы + НомерЗамещающейТаблицы;
		НоваяПоследовательность	 = "" + НомерЗамещающейТаблицы + НомерЗамещаемойТаблицы;
	Иначе 
		СтараяПоследовательность = "" + НомерЗамещающейТаблицы + НомерЗамещаемойТаблицы;	
		НоваяПоследовательность  = "" + НомерЗамещаемойТаблицы + НомерЗамещающейТаблицы;
	КонецЕсли;

	Объект.ПоследовательностьТЧ = СтрЗаменить(Объект.ПоследовательностьТЧ, СтараяПоследовательность, НоваяПоследовательность); 
	//ПоказатьСообщение("Новая последовательность: " + Объект.ПоследовательностьТЧ); // отладка
	
	РазместитьОтборыНаФорме();
	
КонецПроцедуры

&НаСервере
Процедура РазместитьОтборыНаФорме()
	
	ВсегоПозиций = СтрДлина(Объект.ПоследовательностьТЧ);
	Сч = 1;
	
	Пока Сч <= ВсегоПозиций Цикл
		
		ТекущийНомер = Сред(Объект.ПоследовательностьТЧ, Сч, 1);
		
		ИмяТаблицыПоНомеру = ПолучитьИмяТаблицы(ТекущийНомер);
		
		Элементы.Переместить(Элементы[ИмяТаблицыПоНомеру],Элементы.ГруппаОтборы);
		
		Сч = Сч + 1;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНомерТаблицы(ИмяТаблицы)
	
	Строки = Объект.ТаблицаНомеровТаблиц.НайтиСтроки(Новый Структура("НазваниеТаблицы", ИмяТаблицы));
	Возврат Строки[0].НомерСтроки;
	
КонецФункции

&НаСервере
Функция ПолучитьИмяТаблицы(НомерТаблицы)
	
	Строки = Объект.ТаблицаНомеровТаблиц.НайтиСтроки(Новый Структура("НомерТаблицы", НомерТаблицы));
	Возврат Строки[0].НазваниеТаблицы;
	
КонецФункции

&НаСервере
Процедура ПоказатьСообщение(ТекстСообщения)

	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаСервере
Процедура ЧтениеРегистраИЗаполнениеОтборовНаСервере()
	
	Если НЕ ИспользованиеДокументаРазрешено() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьОстаткиПоПППС();
	ЗаполнитьОтборы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиПоПППС()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	//+++АСТБ_Горюшин_Алексей_64400
	"ВЫБРАТЬ
	|	РеализованныеСИЗОстатки.Организация КАК Организация,
	|	РеализованныеСИЗОстатки.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	РеализованныеСИЗОстатки.СкладВыдачи КАК СкладВыдачи,
	|	РеализованныеСИЗОстатки.СкладОтправитель КАК СкладОтправитель,
	|	РеализованныеСИЗОстатки.МВЗ КАК МВЗ,
	|	РеализованныеСИЗОстатки.Поставщик КАК Поставщик,
	|	РеализованныеСИЗОстатки.Номенклатура КАК Номенклатура,
	|	РеализованныеСИЗОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	РеализованныеСИЗОстатки.ДокументВыдачи КАК ДокументВыдачи,
	|	РеализованныеСИЗОстатки.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|	РеализованныеСИЗОстатки.КоличествоОстаток КАК Количество,
	|	РеализованныеСИЗОстатки.СуммаОстаток КАК Сумма,
	|	РеализованныеСИЗОстатки.ДокументВыдачи.Дата КАК ДатаВыдачи
	|ПОМЕСТИТЬ ВТ_РеализованныеСИЗОстатки
	|ИЗ
	|	РегистрНакопления.РеализованныеСИЗ.Остатки(
	|			,
	|			ВЫБОР
	|				КОГДА &ОтборПоДокументу = ИСТИНА
	//+++АСТБ_Горюшин_Алексей_71389
	|					ТОГДА ПредварительныйПереходПраваСобственности В (&ПредварительныйПереходПраваСобственности)
	//было
	//|					ТОГДА ПредварительныйПереходПраваСобственности = &ПредварительныйПереходПраваСобственности
	//---АСТБ_Горюшин_Алексей_71389
	|				ИНАЧЕ Организация = &Организация
	|			КОНЕЦ) КАК РеализованныеСИЗОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РеализованныеСИЗОстатки.Организация КАК Организация,
	|	ВТ_РеализованныеСИЗОстатки.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ВТ_РеализованныеСИЗОстатки.СкладВыдачи КАК СкладВыдачи,
	|	ВТ_РеализованныеСИЗОстатки.СкладОтправитель КАК СкладОтправитель,
	|	ВТ_РеализованныеСИЗОстатки.МВЗ КАК МВЗ,
	|	ВТ_РеализованныеСИЗОстатки.Поставщик КАК Поставщик,
	|	ВТ_РеализованныеСИЗОстатки.Номенклатура КАК Номенклатура,
	|	ВТ_РеализованныеСИЗОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_РеализованныеСИЗОстатки.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_РеализованныеСИЗОстатки.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	//+++АСТБ_Горюшин_Алексей_67614
	|	ВыдачаСредствЗащитыСотрудникуТовары.Количество КАК Количество,
	|	ВыдачаСредствЗащитыСотрудникуТовары.Сумма КАК Сумма,
	//было
	//|	ВТ_РеализованныеСИЗОстатки.Количество КАК Количество,
	//|	ВТ_РеализованныеСИЗОстатки.Сумма КАК Сумма,
	//---АСТБ_Горюшин_Алексей_67614
	|	ВТ_РеализованныеСИЗОстатки.ДатаВыдачи КАК ДатаВыдачи,
	|	ВыдачаСредствЗащитыСотрудникуТовары.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_РеализованныеСИЗОстаткиИСотрудник
	|ИЗ
	|	ВТ_РеализованныеСИЗОстатки КАК ВТ_РеализованныеСИЗОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыдачаСредствЗащитыСотруднику.Товары КАК ВыдачаСредствЗащитыСотрудникуТовары
	|		ПО ВТ_РеализованныеСИЗОстатки.ДокументВыдачи = ВыдачаСредствЗащитыСотрудникуТовары.Ссылка
	|			И ВТ_РеализованныеСИЗОстатки.Номенклатура = ВыдачаСредствЗащитыСотрудникуТовары.Номенклатура
	|			И ВТ_РеализованныеСИЗОстатки.ХарактеристикаНоменклатуры = ВыдачаСредствЗащитыСотрудникуТовары.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб1.Организация КАК Организация,
	|	Таб1.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	Таб1.СкладВыдачи КАК СкладВыдачи,
	|	Таб1.СкладОтправитель КАК СкладОтправитель,
	|	Таб1.МВЗ КАК МВЗ,
	|	Таб1.Поставщик КАК Поставщик,
	|	Таб1.Номенклатура КАК Номенклатура,
	|	Таб1.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	Таб1.ДокументВыдачи КАК ДокументВыдачи,
	|	Таб1.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|	Таб1.Количество КАК Количество,
	|	Таб1.Сумма КАК Сумма,
	|	Таб1.ДатаВыдачи КАК ДатаВыдачи,
	|	Таб1.Сотрудник КАК Сотрудник,
	|	Таб2.Подразделение КАК Подразделение,
	|	Таб2.Подразделение.Наименование КАК ПодразделениеНаименование,
	|	Таб2.Подразделение.Родитель КАК ПодразделениеРодитель,
	|	Таб2.Подразделение.Родитель.Наименование КАК ПодразделениеРодительНаименование
	|ПОМЕСТИТЬ ВТ_РеализованныеСИЗОстаткиИПодразделения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Организация КАК Организация,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.СкладВыдачи КАК СкладВыдачи,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.СкладОтправитель КАК СкладОтправитель,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.МВЗ КАК МВЗ,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Поставщик КАК Поставщик,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Номенклатура КАК Номенклатура,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.ДокументВыдачи КАК ДокументВыдачи,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Количество КАК Количество,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Сумма КАК Сумма,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.ДатаВыдачи КАК ДатаВыдачи,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Сотрудник КАК Сотрудник,
	|		МАКСИМУМ(ОсновноеМестоРаботыСотрудника.Период) КАК ПериодРаботы
	|	ИЗ
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник КАК ВТ_РеализованныеСИЗОстаткиИСотрудник
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновноеМестоРаботыСотрудника КАК ОсновноеМестоРаботыСотрудника
	|			ПО (ОсновноеМестоРаботыСотрудника.Период <= ВТ_РеализованныеСИЗОстаткиИСотрудник.ДатаВыдачи)
	|				И (ОсновноеМестоРаботыСотрудника.Сотрудник = ВТ_РеализованныеСИЗОстаткиИСотрудник.Сотрудник)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Организация,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.ВидВыдачиСИЗ,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.СкладВыдачи,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.СкладОтправитель,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.МВЗ,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Поставщик,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Номенклатура,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.ХарактеристикаНоменклатуры,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.ДокументВыдачи,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.ПредварительныйПереходПраваСобственности,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Количество,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Сумма,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.ДатаВыдачи,
	|		ВТ_РеализованныеСИЗОстаткиИСотрудник.Сотрудник) КАК Таб1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновноеМестоРаботыСотрудника КАК Таб2
	|		ПО Таб1.ПериодРаботы = Таб2.Период
	|			И Таб1.Сотрудник = Таб2.Сотрудник
	|;
	//+++АСТБ_Горюшин_Алексей_67614
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.Организация КАК Организация,
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.СкладВыдачи КАК СкладВыдачи,
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.СкладОтправитель КАК СкладОтправитель,
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.МВЗ КАК МВЗ,
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.Поставщик КАК Поставщик,
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.Номенклатура КАК Номенклатура,
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.Количество КАК Количество,
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения.Сумма КАК Сумма,
	|	ЕСТЬNULL(ВТ_РеализованныеСИЗОстаткиИПодразделения.Подразделение, ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)) КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ВТ_РеализованныеСИЗОстаткиИПодразделения.Подразделение ЕСТЬ NULL
	|			ТОГДА """"
	|		КОГДА ВТ_РеализованныеСИЗОстаткиИПодразделения.ПодразделениеРодитель = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|			ТОГДА ВТ_РеализованныеСИЗОстаткиИПодразделения.ПодразделениеНаименование
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_РеализованныеСИЗОстаткиИПодразделения.ПодразделениеРодительНаименование + "" \ "" + ВТ_РеализованныеСИЗОстаткиИПодразделения.ПодразделениеНаименование КАК СТРОКА(500))
	|	КОНЕЦ КАК ПодразделениеНаименование
	|ПОМЕСТИТЬ ВТ_ПредварительнаяСПодразделениями
	|ИЗ
	|	ВТ_РеализованныеСИЗОстаткиИПодразделения КАК ВТ_РеализованныеСИЗОстаткиИПодразделения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПредварительнаяСПодразделениями.Организация КАК Организация,
	|	ВТ_ПредварительнаяСПодразделениями.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ВТ_ПредварительнаяСПодразделениями.СкладВыдачи КАК СкладВыдачи,
	|	ВТ_ПредварительнаяСПодразделениями.СкладОтправитель КАК СкладОтправитель,
	|	ВТ_ПредварительнаяСПодразделениями.МВЗ КАК МВЗ,
	|	ВТ_ПредварительнаяСПодразделениями.Поставщик КАК Поставщик,
	|	ВТ_ПредварительнаяСПодразделениями.Номенклатура КАК Номенклатура,
	|	ВТ_ПредварительнаяСПодразделениями.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ПредварительнаяСПодразделениями.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_ПредварительнаяСПодразделениями.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|	СУММА(ВТ_ПредварительнаяСПодразделениями.Количество) КАК Количество,
	|	СУММА(ВТ_ПредварительнаяСПодразделениями.Сумма) КАК Сумма,
	|	ВТ_ПредварительнаяСПодразделениями.Подразделение КАК Подразделение,
	|	ВТ_ПредварительнаяСПодразделениями.ПодразделениеНаименование КАК ПодразделениеНаименование
	|ПОМЕСТИТЬ ВТ_СуммыСПодразделениями
	|ИЗ
	|	ВТ_ПредварительнаяСПодразделениями КАК ВТ_ПредварительнаяСПодразделениями
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПредварительнаяСПодразделениями.Организация,
	|	ВТ_ПредварительнаяСПодразделениями.ВидВыдачиСИЗ,
	|	ВТ_ПредварительнаяСПодразделениями.СкладВыдачи,
	|	ВТ_ПредварительнаяСПодразделениями.СкладОтправитель,
	|	ВТ_ПредварительнаяСПодразделениями.МВЗ,
	|	ВТ_ПредварительнаяСПодразделениями.Поставщик,
	|	ВТ_ПредварительнаяСПодразделениями.Номенклатура,
	|	ВТ_ПредварительнаяСПодразделениями.ХарактеристикаНоменклатуры,
	|	ВТ_ПредварительнаяСПодразделениями.ДокументВыдачи,
	|	ВТ_ПредварительнаяСПодразделениями.ПредварительныйПереходПраваСобственности,
	|	ВТ_ПредварительнаяСПодразделениями.Подразделение,
	|	ВТ_ПредварительнаяСПодразделениями.ПодразделениеНаименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СуммыСПодразделениями.Организация КАК Организация,
	|	ВТ_СуммыСПодразделениями.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ВТ_СуммыСПодразделениями.СкладВыдачи КАК СкладВыдачи,
	|	ВТ_СуммыСПодразделениями.СкладОтправитель КАК СкладОтправитель,
	|	ВТ_СуммыСПодразделениями.МВЗ КАК МВЗ,
	|	ВТ_СуммыСПодразделениями.Поставщик КАК Поставщик,
	|	ВТ_СуммыСПодразделениями.Номенклатура КАК Номенклатура,
	|	ВТ_СуммыСПодразделениями.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_СуммыСПодразделениями.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_СуммыСПодразделениями.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|	ВТ_СуммыСПодразделениями.Количество КАК Количество,
	|	ВТ_СуммыСПодразделениями.Сумма КАК Сумма,
	|	МАКСИМУМ(ВТ_СуммыСПодразделениями.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(ВТ_СуммыСПодразделениями.ПодразделениеНаименование) КАК ПодразделениеНаименование
	|ПОМЕСТИТЬ ВТ_СуммыСПодразделениями_БезДублей
	|ИЗ
	|	ВТ_СуммыСПодразделениями КАК ВТ_СуммыСПодразделениями
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СуммыСПодразделениями.Организация,
	|	ВТ_СуммыСПодразделениями.ВидВыдачиСИЗ,
	|	ВТ_СуммыСПодразделениями.СкладВыдачи,
	|	ВТ_СуммыСПодразделениями.СкладОтправитель,
	|	ВТ_СуммыСПодразделениями.МВЗ,
	|	ВТ_СуммыСПодразделениями.Поставщик,
	|	ВТ_СуммыСПодразделениями.Номенклатура,
	|	ВТ_СуммыСПодразделениями.ХарактеристикаНоменклатуры,
	|	ВТ_СуммыСПодразделениями.ДокументВыдачи,
	|	ВТ_СуммыСПодразделениями.ПредварительныйПереходПраваСобственности,
	|	ВТ_СуммыСПодразделениями.Количество,
	|	ВТ_СуммыСПодразделениями.Сумма
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РеализованныеСИЗОстатки.Организация КАК Организация,
	|	ВТ_РеализованныеСИЗОстатки.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ВТ_РеализованныеСИЗОстатки.СкладВыдачи КАК СкладВыдачи,
	|	ВТ_РеализованныеСИЗОстатки.СкладОтправитель КАК СкладОтправитель,
	|	ВТ_РеализованныеСИЗОстатки.МВЗ КАК МВЗ,
	|	ВТ_РеализованныеСИЗОстатки.Поставщик КАК Поставщик,
	|	ВТ_РеализованныеСИЗОстатки.Номенклатура КАК Номенклатура,
	|	ВТ_РеализованныеСИЗОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_РеализованныеСИЗОстатки.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_РеализованныеСИЗОстатки.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|	ЕСТЬNULL(ВТ_СуммыСПодразделениями_БезДублей.Количество, ВТ_РеализованныеСИЗОстатки.Количество) КАК Количество,
	|	ЕСТЬNULL(ВТ_СуммыСПодразделениями_БезДублей.Сумма, ВТ_РеализованныеСИЗОстатки.Сумма) КАК Сумма,
	|	ЕСТЬNULL(ВТ_СуммыСПодразделениями_БезДублей.Подразделение, ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)) КАК Подразделение,
	|	ЕСТЬNULL(ВТ_СуммыСПодразделениями_БезДублей.ПодразделениеНаименование, """") КАК ПодразделениеНаименование
	|ИЗ
	|	ВТ_РеализованныеСИЗОстатки КАК ВТ_РеализованныеСИЗОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыСПодразделениями_БезДублей КАК ВТ_СуммыСПодразделениями_БезДублей
	|		ПО ВТ_РеализованныеСИЗОстатки.Организация = ВТ_СуммыСПодразделениями_БезДублей.Организация
	|			И ВТ_РеализованныеСИЗОстатки.ВидВыдачиСИЗ = ВТ_СуммыСПодразделениями_БезДублей.ВидВыдачиСИЗ
	|			И ВТ_РеализованныеСИЗОстатки.СкладВыдачи = ВТ_СуммыСПодразделениями_БезДублей.СкладВыдачи
	|			И ВТ_РеализованныеСИЗОстатки.СкладОтправитель = ВТ_СуммыСПодразделениями_БезДублей.СкладОтправитель
	|			И ВТ_РеализованныеСИЗОстатки.МВЗ = ВТ_СуммыСПодразделениями_БезДублей.МВЗ
	|			И ВТ_РеализованныеСИЗОстатки.Поставщик = ВТ_СуммыСПодразделениями_БезДублей.Поставщик
	|			И ВТ_РеализованныеСИЗОстатки.Номенклатура = ВТ_СуммыСПодразделениями_БезДублей.Номенклатура
	|			И ВТ_РеализованныеСИЗОстатки.ХарактеристикаНоменклатуры = ВТ_СуммыСПодразделениями_БезДублей.ХарактеристикаНоменклатуры
	|			И ВТ_РеализованныеСИЗОстатки.ДокументВыдачи = ВТ_СуммыСПодразделениями_БезДублей.ДокументВыдачи
	|			И ВТ_РеализованныеСИЗОстатки.ПредварительныйПереходПраваСобственности = ВТ_СуммыСПодразделениями_БезДублей.ПредварительныйПереходПраваСобственности
	|			И ВТ_РеализованныеСИЗОстатки.Количество = ВТ_СуммыСПодразделениями_БезДублей.Количество
	|			И ВТ_РеализованныеСИЗОстатки.Сумма = ВТ_СуммыСПодразделениями_БезДублей.Сумма";
	//было
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.Организация КАК Организация,
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.СкладВыдачи КАК СкладВыдачи,
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.СкладОтправитель КАК СкладОтправитель,
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.МВЗ КАК МВЗ,
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.Поставщик КАК Поставщик,
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.Номенклатура КАК Номенклатура,
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.ДокументВыдачи КАК ДокументВыдачи,
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.Количество КАК Количество,
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения.Сумма КАК Сумма,
	//|	ЕСТЬNULL(ВТ_РеализованныеСИЗОстаткиИПодразделения.Подразделение, ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)) КАК Подразделение,
	//|	ВЫБОР
	//|		КОГДА ВТ_РеализованныеСИЗОстаткиИПодразделения.Подразделение ЕСТЬ NULL
	//|			ТОГДА """"
	//|		КОГДА ВТ_РеализованныеСИЗОстаткиИПодразделения.ПодразделениеРодитель = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	//|			ТОГДА ВТ_РеализованныеСИЗОстаткиИПодразделения.ПодразделениеНаименование
	//|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_РеализованныеСИЗОстаткиИПодразделения.ПодразделениеРодительНаименование + "" \ "" + ВТ_РеализованныеСИЗОстаткиИПодразделения.ПодразделениеНаименование КАК СТРОКА)
	//|	КОНЕЦ КАК ПодразделениеНаименование
	//|ИЗ
	//|	ВТ_РеализованныеСИЗОстаткиИПодразделения КАК ВТ_РеализованныеСИЗОстаткиИПодразделения";
	//---АСТБ_Горюшин_Алексей_67614
	//было
		//"ВЫБРАТЬ
		//|	РеализованныеСИЗОстатки.Организация КАК Организация,
		//|	РеализованныеСИЗОстатки.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
		//|	РеализованныеСИЗОстатки.СкладВыдачи КАК СкладВыдачи,
		//|	РеализованныеСИЗОстатки.СкладОтправитель КАК СкладОтправитель,
		//|	РеализованныеСИЗОстатки.МВЗ КАК МВЗ,
		//|	РеализованныеСИЗОстатки.Поставщик КАК Поставщик,
		//|	РеализованныеСИЗОстатки.Номенклатура КАК Номенклатура,
		//|	РеализованныеСИЗОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		//|	РеализованныеСИЗОстатки.ДокументВыдачи КАК ДокументВыдачи,
		//|	РеализованныеСИЗОстатки.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
		//|	РеализованныеСИЗОстатки.КоличествоОстаток КАК Количество,
		//|	РеализованныеСИЗОстатки.СуммаОстаток КАК Сумма
		//|ИЗ
		//|	РегистрНакопления.РеализованныеСИЗ.Остатки(
		//|			,
		//|			ВЫБОР
		//|				КОГДА &ОтборПоДокументу = ИСТИНА
		//|					ТОГДА ПредварительныйПереходПраваСобственности = &ПредварительныйПереходПраваСобственности
		//|				ИНАЧЕ Организация = &Организация
		//|			КОНЕЦ) КАК РеализованныеСИЗОстатки";
	//---АСТБ_Горюшин_Алексей_64400
	
	//+++АСТБ_Горюшин_Алексей_71389
	Запрос_ПППС = Новый Запрос;
	Запрос_ПППС.Текст =
	"ВЫБРАТЬ
	|	ТЗ_ТаблицаПППС.ПППС КАК ПППС
	|ПОМЕСТИТЬ ВТ_ПППС
	|ИЗ
	|	&ТЗ_ТаблицаПППС КАК ТЗ_ТаблицаПППС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПППС.ПППС КАК ПППС
	|ИЗ
	|	ВТ_ПППС КАК ВТ_ПППС
	|ГДЕ
	|	ВТ_ПППС.ПППС <> ЗНАЧЕНИЕ(Документ.ПредварительныйПереходПраваСобственности.ПустаяСсылка)";
	
	ТЗ_ТаблицаПППС = Объект.ТаблицаПППС.Выгрузить(); 
	Запрос_ПППС.УстановитьПараметр("ТЗ_ТаблицаПППС", ТЗ_ТаблицаПППС);
	ТЗ_ДляМассиваПППС = Запрос_ПППС.Выполнить().Выгрузить();
	МассивПППС = ТЗ_ДляМассиваПППС.ВыгрузитьКолонку("ПППС");
	
	Запрос.УстановитьПараметр("ОтборПоДокументу", МассивПППС.Количество() > 0);
	Запрос.УстановитьПараметр("ПредварительныйПереходПраваСобственности", МассивПППС);
	//было
	//Запрос.УстановитьПараметр("ОтборПоДокументу", ЗначениеЗаполнено(Объект.ПредварительныйПереходПраваСобственности));
	//Запрос.УстановитьПараметр("ПредварительныйПереходПраваСобственности", Объект.ПредварительныйПереходПраваСобственности);
	//---АСТБ_Горюшин_Алексей_71389
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Объект.ТаблицаРеализованныеСИЗ.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если Объект.ТаблицаРеализованныеСИЗ.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет остатков.");
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОтборы()
	
	ВсегоОтборов = СтрДлина(Объект.ПоследовательностьТЧ);
	Сч = 1;
	
	Пока Сч <= ВсегоОтборов Цикл
		
		ТекущийОтбор = Сред(Объект.ПоследовательностьТЧ,Сч,1);
		
		Если ТекущийОтбор = "1" Тогда
			//ВидыВыдачи	
			ТЗ_ВидыВыдачиСИЗ = Объект.ТаблицаРеализованныеСИЗ.Выгрузить(,"ВидВыдачиСИЗ");
			ТЗ_ВидыВыдачиСИЗ.Свернуть("ВидВыдачиСИЗ");
			ТЗ_ВидыВыдачиСИЗ.Колонки.Добавить("Использовать");
			ТЗ_ВидыВыдачиСИЗ.ЗаполнитьЗначения(Истина, "Использовать");
			ТЗ_ВидыВыдачиСИЗ.Сортировать("ВидВыдачиСИЗ");
			Объект.ВидыВыдачи.Загрузить(ТЗ_ВидыВыдачиСИЗ);
			
		ИначеЕсли ТекущийОтбор = "2" Тогда	
			//СкладыВыдачи
			ТЗ_СкладыВыдачи = Объект.ТаблицаРеализованныеСИЗ.Выгрузить(,"СкладВыдачи");
			ТЗ_СкладыВыдачи.Свернуть("СкладВыдачи");
			ТЗ_СкладыВыдачи.Колонки.Добавить("Использовать");
			ТЗ_СкладыВыдачи.ЗаполнитьЗначения(Истина, "Использовать");
			ТЗ_СкладыВыдачи.Сортировать("СкладВыдачи");
			Объект.СкладыВыдачи.Загрузить(ТЗ_СкладыВыдачи);
			
		ИначеЕсли ТекущийОтбор = "3" Тогда
			//ТаблицаМВЗ
			ТЗ_МВЗ = Объект.ТаблицаРеализованныеСИЗ.Выгрузить(,"МВЗ");
			ТЗ_МВЗ.Свернуть("МВЗ");
			ТЗ_МВЗ.Колонки.Добавить("Использовать");
			ТЗ_МВЗ.ЗаполнитьЗначения(Истина, "Использовать");
			ТЗ_МВЗ.Сортировать("МВЗ");
			Объект.МВЗ.Загрузить(ТЗ_МВЗ);
			
		ИначеЕсли ТекущийОтбор = "4" Тогда
			//ТаблицаПоставщики
			ТЗ_Поставщики = Объект.ТаблицаРеализованныеСИЗ.Выгрузить(,"Поставщик");
			ТЗ_Поставщики.Свернуть("Поставщик");
			ТЗ_Поставщики.Колонки.Добавить("Использовать");
			ТЗ_Поставщики.ЗаполнитьЗначения(Истина, "Использовать");
			ТЗ_Поставщики.Сортировать("Поставщик");
			Объект.Поставщики.Загрузить(ТЗ_Поставщики);
			
		//+++АСТБ_Горюшин_Алексей_64400
		ИначеЕсли ТекущийОтбор = "5" Тогда
			//ТаблицаПодразделений
			ТЗ_ТаблицаПодразделений = Объект.ТаблицаРеализованныеСИЗ.Выгрузить(,"Подразделение,ПодразделениеНаименование");
			ТЗ_ТаблицаПодразделений.Свернуть("Подразделение,ПодразделениеНаименование");
			ТЗ_ТаблицаПодразделений.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаПодразделений.ЗаполнитьЗначения(Истина, "Использовать");
			ТЗ_ТаблицаПодразделений.Сортировать("ПодразделениеНаименование");
			Объект.ТаблицаПодразделений.Загрузить(ТЗ_ТаблицаПодразделений);
		//---АСТБ_Горюшин_Алексей_64400
		
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не предусмотрен отбор с кодом """ + ТекущийОтбор + """");
		КонецЕсли;	
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ИспользованиеДокументаРазрешено()

	Если НЕ Объект.Организация.ПереходПраваСобственностиПоПредварительнойЗаявкеППС Тогда
	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("У данной организации не включена настройка использования документа ""Предварительный переход права собственности"". Выберите другую организацию.");
		
		Возврат Ложь;
		
	КонецЕсли; 
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьТаблицуНомеровТаблицПоУмолчанию();
	РазместитьОтборыНаФорме();
	//+++АСТБ_Горюшин_Алексей_48012
	УстановитьВидимостьЭлементов();
	//---АСТБ_Горюшин_Алексей_48012
	
КонецПроцедуры

&НаСервере
//+++АСТБ_Горюшин_Алексей_64400
Процедура ОбновитьОтборы(ИмяТаблицы = "")
//было
//Процедура ОбновитьОтборы();
//---АСТБ_Горюшин_Алексей_64400
	
	ВсегоОтборов = СтрДлина(Объект.ПоследовательностьТЧ);
	ТЗ_ТаблицаОтборов = Объект.ТаблицаРеализованныеСИЗ.Выгрузить();
	Сч = 1;
	
	//+++АСТБ_Горюшин_Алексей_64400
	ИзмСч = 1;
	Если ЗначениеЗаполнено(ИмяТаблицы) Тогда
		НомерТаблицы = ПолучитьНомерТаблицы(ИмяТаблицы);
		ИзмСч = СтрНайти(Объект.ПоследовательностьТЧ, НомерТаблицы);
	КонецЕсли;
	
	ИмяПоследнегоОтбора = ПолучитьИмяТаблицы(Прав(Объект.ПоследовательностьТЧ,1));
	
	// При изменении последнего отбора пересчёт не нужен
	Если ИзмСч = ВсегоОтборов И ЗначениеЗаполнено(ИмяТаблицы) Тогда
		Возврат;
	КонецЕсли;
	
	// собираем отборы до текущего
	МассивОтборов_ТаблицаВидыВыдачи 	= Новый Массив;
	МассивОтборов_ТаблицаСкладыВыдачи	= Новый Массив;
	МассивОтборов_ТаблицаМВЗ 			= Новый Массив;
	МассивОтборов_ТаблицаПоставщики 	= Новый Массив;
	МассивОтборов_ТаблицаПодразделений 	= Новый Массив;
	ЕстьОтбор_ВидыВыдачи				= Ложь;
	ЕстьОтбор_СкладыВыдачи      		= Ложь;
	ЕстьОтбор_МВЗ               		= Ложь;
	ЕстьОтбор_Поставщики        		= Ложь;
	ЕстьОтбор_Подразделения        		= Ложь;
	//---АСТБ_Горюшин_Алексей_64400
	
	//+++АСТБ_Горюшин_Алексей_64400
	Пока Сч <= ИзмСч Цикл
		
		ТекущийОтбор = Сред(Объект.ПоследовательностьТЧ,Сч,1);
		
		Если ТекущийОтбор = "1" Тогда
			//ТаблицаВидыВыдачи
		    МассивОтборов_ТаблицаВидыВыдачи = Объект.ВидыВыдачи.Выгрузить(Новый Структура("Использовать",Истина));
			МассивОтборов_ТаблицаВидыВыдачи = МассивОтборов_ТаблицаВидыВыдачи.ВыгрузитьКолонку("ВидВыдачиСИЗ");
			ЕстьОтбор_ВидыВыдачи = Истина;
		ИначеЕсли ТекущийОтбор = "2" Тогда	
			//ТаблицаСкладыВыдачи
			МассивОтборов_ТаблицаСкладыВыдачи = Объект.СкладыВыдачи.Выгрузить(Новый Структура("Использовать",Истина));
			МассивОтборов_ТаблицаСкладыВыдачи = МассивОтборов_ТаблицаСкладыВыдачи.ВыгрузитьКолонку("СкладВыдачи");
			ЕстьОтбор_СкладыВыдачи = Истина;
		ИначеЕсли ТекущийОтбор = "3" Тогда
			//ТаблицаМВЗ
			МассивОтборов_ТаблицаМВЗ = Объект.МВЗ.Выгрузить(Новый Структура("Использовать",Истина));
			МассивОтборов_ТаблицаМВЗ = МассивОтборов_ТаблицаМВЗ.ВыгрузитьКолонку("МВЗ");
			ЕстьОтбор_МВЗ = Истина;
		ИначеЕсли ТекущийОтбор = "4" Тогда
			//ТаблицаПоставщики
			МассивОтборов_ТаблицаПоставщики = Объект.Поставщики.Выгрузить(Новый Структура("Использовать",Истина));
			МассивОтборов_ТаблицаПоставщики = МассивОтборов_ТаблицаПоставщики.ВыгрузитьКолонку("Поставщик");
			ЕстьОтбор_Поставщики = Истина;
		ИначеЕсли ТекущийОтбор = "5" Тогда
			//ТаблицаПодразделений
			МассивОтборов_ТаблицаПодразделений = Объект.ТаблицаПодразделений.Выгрузить(Новый Структура("Использовать",Истина));
			МассивОтборов_ТаблицаПодразделений = МассивОтборов_ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение");
			ЕстьОтбор_Подразделения = Истина;
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не предусмотрен отбор с кодом """ + ТекущийОтбор + """");
		КонецЕсли;
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
	// накладываем отборы
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗначений.Организация КАК Организация,
	|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	|	ТаблицаЗначений.МВЗ КАК МВЗ,
	|	ТаблицаЗначений.Поставщик КАК Поставщик,
	|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|	ТаблицаЗначений.Количество КАК Количество,
	|	ТаблицаЗначений.Сумма КАК Сумма,
	|	ТаблицаЗначений.Подразделение КАК Подразделение,
	|	ТаблицаЗначений.ПодразделениеНаименование КАК ПодразделениеНаименование
	|ПОМЕСТИТЬ ТаблицаЗначений
	|ИЗ
	|	&ТЗ_ТаблицаОтборов КАК ТаблицаЗначений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗначений.Организация КАК Организация,
	|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	|	ТаблицаЗначений.МВЗ КАК МВЗ,
	|	ТаблицаЗначений.Поставщик КАК Поставщик,
	|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|	ТаблицаЗначений.Количество КАК Количество,
	|	ТаблицаЗначений.Сумма КАК Сумма,
	|	ТаблицаЗначений.Подразделение КАК Подразделение,
	|	ТаблицаЗначений.ПодразделениеНаименование КАК ПодразделениеНаименование
	|ИЗ
	|	ТаблицаЗначений КАК ТаблицаЗначений
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ЕстьОтбор_ВидыВыдачи
	|				ТОГДА ТаблицаЗначений.ВидВыдачиСИЗ В (&МассивОтборов_ТаблицаВидыВыдачи)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ЕстьОтбор_СкладыВыдачи
	|				ТОГДА ТаблицаЗначений.СкладВыдачи В (&МассивОтборов_ТаблицаСкладыВыдачи)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ЕстьОтбор_МВЗ
	|				ТОГДА ТаблицаЗначений.МВЗ В (&МассивОтборов_ТаблицаМВЗ)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ЕстьОтбор_Подразделения
	|				ТОГДА ТаблицаЗначений.Подразделение В (&МассивОтборов_ТаблицаПодразделений)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ЕстьОтбор_Поставщики
	|				ТОГДА ТаблицаЗначений.Поставщик В (&МассивОтборов_ТаблицаПоставщики)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("ТЗ_ТаблицаОтборов", 					ТЗ_ТаблицаОтборов);
	Запрос.УстановитьПараметр("МассивОтборов_ТаблицаВидыВыдачи", 	МассивОтборов_ТаблицаВидыВыдачи);
	Запрос.УстановитьПараметр("ЕстьОтбор_ВидыВыдачи", 				ЕстьОтбор_ВидыВыдачи);
	Запрос.УстановитьПараметр("МассивОтборов_ТаблицаСкладыВыдачи",	МассивОтборов_ТаблицаСкладыВыдачи);
	Запрос.УстановитьПараметр("ЕстьОтбор_СкладыВыдачи", 			ЕстьОтбор_СкладыВыдачи);
	Запрос.УстановитьПараметр("МассивОтборов_ТаблицаМВЗ", 			МассивОтборов_ТаблицаМВЗ);
	Запрос.УстановитьПараметр("ЕстьОтбор_МВЗ", 						ЕстьОтбор_МВЗ);
	Запрос.УстановитьПараметр("МассивОтборов_ТаблицаПоставщики", 	МассивОтборов_ТаблицаПоставщики);
	Запрос.УстановитьПараметр("ЕстьОтбор_Поставщики", 				ЕстьОтбор_Поставщики);
	Запрос.УстановитьПараметр("МассивОтборов_ТаблицаПодразделений",	МассивОтборов_ТаблицаПодразделений);
	Запрос.УстановитьПараметр("ЕстьОтбор_Подразделения", 			ЕстьОтбор_Подразделения);
	
	ТЗ_ТаблицаОтборов = Запрос.Выполнить().Выгрузить();
	
	// получаем новые отборы
	Сч = ИзмСч+1;
	
	Пока Сч <= ВсегоОтборов Цикл
		
		ТекущийОтбор = Сред(Объект.ПоследовательностьТЧ,Сч,1);
		
		Если ТекущийОтбор = "1" Тогда
			//ТаблицаВидыВыдачи	
			ТЗ_ТаблицаВидыВыдачи = ТЗ_ТаблицаОтборов.Скопировать(,"ВидВыдачиСИЗ");
			ТЗ_ТаблицаВидыВыдачи.Свернуть("ВидВыдачиСИЗ");
			ТЗ_ТаблицаВидыВыдачи.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаВидыВыдачи.ЗаполнитьЗначения(Истина,"Использовать");
			ТЗ_ТаблицаВидыВыдачи.Сортировать("ВидВыдачиСИЗ");
			Объект.ВидыВыдачи.Загрузить(ТЗ_ТаблицаВидыВыдачи);
			
		ИначеЕсли ТекущийОтбор = "2" Тогда	
			//ТаблицаСкладыВыдачи
			ТЗ_ТаблицаСкладыВыдачи = ТЗ_ТаблицаОтборов.Скопировать(,"СкладВыдачи");
			ТЗ_ТаблицаСкладыВыдачи.Свернуть("СкладВыдачи");
			ТЗ_ТаблицаСкладыВыдачи.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаСкладыВыдачи.ЗаполнитьЗначения(Истина,"Использовать");
			ТЗ_ТаблицаСкладыВыдачи.Сортировать("СкладВыдачи");
			Объект.СкладыВыдачи.Загрузить(ТЗ_ТаблицаСкладыВыдачи);
			
		ИначеЕсли ТекущийОтбор = "3" Тогда
			//ТаблицаМВЗ
			ТЗ_ТаблицаМВЗ = ТЗ_ТаблицаОтборов.Скопировать(,"МВЗ");
			ТЗ_ТаблицаМВЗ.Свернуть("МВЗ");
			ТЗ_ТаблицаМВЗ.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаМВЗ.ЗаполнитьЗначения(Истина,"Использовать");
			ТЗ_ТаблицаМВЗ.Сортировать("МВЗ");
			Объект.МВЗ.Загрузить(ТЗ_ТаблицаМВЗ);
			
		ИначеЕсли ТекущийОтбор = "4" Тогда
			//ТаблицаПоставщики
			ТЗ_ТаблицаПоставщики = ТЗ_ТаблицаОтборов.Скопировать(,"Поставщик");
			ТЗ_ТаблицаПоставщики.Свернуть("Поставщик");
			ТЗ_ТаблицаПоставщики.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаПоставщики.ЗаполнитьЗначения(Истина,"Использовать");
			ТЗ_ТаблицаПоставщики.Сортировать("Поставщик");
			Объект.Поставщики.Загрузить(ТЗ_ТаблицаПоставщики);
			
		ИначеЕсли ТекущийОтбор = "5" Тогда
			//ТаблицаПодразделений
			ТЗ_ТаблицаПодразделений = ТЗ_ТаблицаОтборов.Скопировать(,"Подразделение,ПодразделениеНаименование");
			ТЗ_ТаблицаПодразделений.Свернуть("Подразделение,ПодразделениеНаименование");
			ТЗ_ТаблицаПодразделений.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаПодразделений.ЗаполнитьЗначения(Истина,"Использовать");
			ТЗ_ТаблицаПодразделений.Сортировать("ПодразделениеНаименование");
			Объект.ТаблицаПодразделений.Загрузить(ТЗ_ТаблицаПодразделений);
			
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не предусмотрен отбор с кодом """ + ТекущийОтбор + """");
		КонецЕсли;
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
	Если Объект.ВидыВыдачи.Количество() = 0
		И Объект.СкладыВыдачи.Количество() = 0
		И Объект.МВЗ.Количество() = 0
		И Объект.Поставщики.Количество() = 0
		И Объект.ТаблицаПодразделений.Количество() = 0
		Тогда
		ЗаполнитьОтборы();
	КонецЕсли;	
	//было
	//Пока Сч <= ВсегоОтборов Цикл
	//	
	//	ТекущийОтбор = Сред(Объект.ПоследовательностьТЧ,Сч,1);
	//	
	//	Если ТекущийОтбор = "1" Тогда
	//		//ВидыВыдачи	
	//		ТЗ_ВидыВыдачиСИЗ = ТЗ_ТаблицаОтборов.Скопировать(,"ВидВыдачиСИЗ");
	//		ТЗ_ВидыВыдачиСИЗ.Свернуть("ВидВыдачиСИЗ");
	//		
	//		Если НЕ ТЗ_ВидыВыдачиСИЗ.Количество() = Объект.ВидыВыдачи.Количество() Тогда
	//			
	//			ТЗ_ВидыВыдачиСИЗ.Колонки.Добавить("Использовать");
	//			ТЗ_ВидыВыдачиСИЗ.ЗаполнитьЗначения(Истина,"Использовать");
	//			ТЗ_ВидыВыдачиСИЗ.Сортировать("ВидВыдачиСИЗ");
	//			Объект.ВидыВыдачи.Загрузить(ТЗ_ВидыВыдачиСИЗ);
	//		
	//		КонецЕсли;
	//		
	//		МассивОтборов_ВидыВыдачиСИЗ = Объект.ВидыВыдачи.Выгрузить(Новый Структура("Использовать",Истина));
	//		МассивОтборов_ВидыВыдачиСИЗ = МассивОтборов_ВидыВыдачиСИЗ.ВыгрузитьКолонку("ВидВыдачиСИЗ");
	//		
	//		Запрос = Новый Запрос;
	//		Запрос.Текст =
	//		"ВЫБРАТЬ
	//		|	ТаблицаЗначений.Организация КАК Организация,
	//		|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	//		|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	//		|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	//		|	ТаблицаЗначений.МВЗ КАК МВЗ,
	//		|	ТаблицаЗначений.Поставщик КАК Поставщик,
	//		|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	//		|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//		|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	//		|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	//		|	ТаблицаЗначений.Количество КАК Количество,
	//		|	ТаблицаЗначений.Сумма КАК Сумма
	//		|ПОМЕСТИТЬ ТаблицаЗначений
	//		|ИЗ
	//		|	&ТЗ_ТаблицаОтборов КАК ТаблицаЗначений
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	ТаблицаЗначений.Организация КАК Организация,
	//		|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	//		|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	//		|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	//		|	ТаблицаЗначений.МВЗ КАК МВЗ,
	//		|	ТаблицаЗначений.Поставщик КАК Поставщик,
	//		|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	//		|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//		|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	//		|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	//		|	ТаблицаЗначений.Количество КАК Количество,
	//		|	ТаблицаЗначений.Сумма КАК Сумма
	//		|ИЗ
	//		|	ТаблицаЗначений КАК ТаблицаЗначений
	//		|ГДЕ
	//		|	ТаблицаЗначений.ВидВыдачиСИЗ В(&ВидыВыдачиСИЗ)";
	//		
	//		Запрос.УстановитьПараметр("ТЗ_ТаблицаОтборов", ТЗ_ТаблицаОтборов);
	//		Запрос.УстановитьПараметр("ВидыВыдачиСИЗ", МассивОтборов_ВидыВыдачиСИЗ);
	//		
	//		ТЗ_ТаблицаОтборов = Запрос.Выполнить().Выгрузить();
	//		
	//	ИначеЕсли ТекущийОтбор = "2" Тогда	
	//		//СкладыВыдачи
	//		ТЗ_СкладыВыдачи = ТЗ_ТаблицаОтборов.Скопировать(,"СкладВыдачи");
	//		ТЗ_СкладыВыдачи.Свернуть("СкладВыдачи");
	//		
	//		Если НЕ ТЗ_СкладыВыдачи.Количество() = Объект.СкладыВыдачи.Количество() Тогда
	//			
	//			ТЗ_СкладыВыдачи.Колонки.Добавить("Использовать");
	//			ТЗ_СкладыВыдачи.ЗаполнитьЗначения(Истина,"Использовать");
	//			ТЗ_СкладыВыдачи.Сортировать("СкладВыдачи");
	//			Объект.СкладыВыдачи.Загрузить(ТЗ_СкладыВыдачи);
	//		
	//		КонецЕсли;
	//		
	//		МассивОтборов_СкладыВыдачи = Объект.СкладыВыдачи.Выгрузить(Новый Структура("Использовать",Истина));
	//		МассивОтборов_СкладыВыдачи = МассивОтборов_СкладыВыдачи.ВыгрузитьКолонку("СкладВыдачи");
	//		
	//		Запрос = Новый Запрос;
	//		Запрос.Текст =
	//		"ВЫБРАТЬ
	//		|	ТаблицаЗначений.Организация КАК Организация,
	//		|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	//		|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	//		|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	//		|	ТаблицаЗначений.МВЗ КАК МВЗ,
	//		|	ТаблицаЗначений.Поставщик КАК Поставщик,
	//		|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	//		|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//		|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	//		|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	//		|	ТаблицаЗначений.Количество КАК Количество,
	//		|	ТаблицаЗначений.Сумма КАК Сумма
	//		|ПОМЕСТИТЬ ТаблицаЗначений
	//		|ИЗ
	//		|	&ТЗ_ТаблицаОтборов КАК ТаблицаЗначений
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	ТаблицаЗначений.Организация КАК Организация,
	//		|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	//		|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	//		|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	//		|	ТаблицаЗначений.МВЗ КАК МВЗ,
	//		|	ТаблицаЗначений.Поставщик КАК Поставщик,
	//		|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	//		|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//		|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	//		|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	//		|	ТаблицаЗначений.Количество КАК Количество,
	//		|	ТаблицаЗначений.Сумма КАК Сумма
	//		|ИЗ
	//		|	ТаблицаЗначений КАК ТаблицаЗначений
	//		|ГДЕ
	//		|	ТаблицаЗначений.СкладВыдачи В(&СкладыВыдачи)";
	//		
	//		Запрос.УстановитьПараметр("ТЗ_ТаблицаОтборов", ТЗ_ТаблицаОтборов);
	//		Запрос.УстановитьПараметр("СкладыВыдачи", МассивОтборов_СкладыВыдачи);
	//		
	//		ТЗ_ТаблицаОтборов = Запрос.Выполнить().Выгрузить();
	//		
	//	ИначеЕсли ТекущийОтбор = "3" Тогда
	//		//ТаблицаМВЗ
	//		ТЗ_МВЗ = ТЗ_ТаблицаОтборов.Скопировать(,"МВЗ");
	//		ТЗ_МВЗ.Свернуть("МВЗ");
	//		
	//		Если НЕ ТЗ_МВЗ.Количество() = Объект.МВЗ.Количество() Тогда
	//			
	//			ТЗ_МВЗ.Колонки.Добавить("Использовать");
	//			ТЗ_МВЗ.ЗаполнитьЗначения(Истина,"Использовать");
	//			ТЗ_МВЗ.Сортировать("МВЗ");
	//			Объект.МВЗ.Загрузить(ТЗ_МВЗ);
	//		
	//		КонецЕсли;
	//		
	//		МассивОтборов_МВЗ = Объект.МВЗ.Выгрузить(Новый Структура("Использовать",Истина));
	//		МассивОтборов_МВЗ = МассивОтборов_МВЗ.ВыгрузитьКолонку("МВЗ");
	//		
	//		Запрос = Новый Запрос;
	//		Запрос.Текст =
	//		"ВЫБРАТЬ
	//		|	ТаблицаЗначений.Организация КАК Организация,
	//		|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	//		|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	//		|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	//		|	ТаблицаЗначений.МВЗ КАК МВЗ,
	//		|	ТаблицаЗначений.Поставщик КАК Поставщик,
	//		|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	//		|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//		|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	//		|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	//		|	ТаблицаЗначений.Количество КАК Количество,
	//		|	ТаблицаЗначений.Сумма КАК Сумма
	//		|ПОМЕСТИТЬ ТаблицаЗначений
	//		|ИЗ
	//		|	&ТЗ_ТаблицаОтборов КАК ТаблицаЗначений
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	ТаблицаЗначений.Организация КАК Организация,
	//		|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	//		|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	//		|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	//		|	ТаблицаЗначений.МВЗ КАК МВЗ,
	//		|	ТаблицаЗначений.Поставщик КАК Поставщик,
	//		|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	//		|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//		|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	//		|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	//		|	ТаблицаЗначений.Количество КАК Количество,
	//		|	ТаблицаЗначений.Сумма КАК Сумма
	//		|ИЗ
	//		|	ТаблицаЗначений КАК ТаблицаЗначений
	//		|ГДЕ
	//		|	ТаблицаЗначений.МВЗ В(&МВЗ)";
	//		
	//		Запрос.УстановитьПараметр("ТЗ_ТаблицаОтборов", ТЗ_ТаблицаОтборов);
	//		Запрос.УстановитьПараметр("МВЗ", МассивОтборов_МВЗ);
	//		
	//		ТЗ_ТаблицаОтборов = Запрос.Выполнить().Выгрузить();
	//		
	//	ИначеЕсли ТекущийОтбор = "4" Тогда
	//		//ТаблицаПоставщики
	//		ТЗ_Поставщики = ТЗ_ТаблицаОтборов.Скопировать(,"Поставщик");
	//		ТЗ_Поставщики.Свернуть("Поставщик");
	//		
	//		Если НЕ ТЗ_Поставщики.Количество() = Объект.Поставщики.Количество() Тогда
	//			
	//			ТЗ_Поставщики.Колонки.Добавить("Использовать");
	//			ТЗ_Поставщики.ЗаполнитьЗначения(Истина,"Использовать");
	//			ТЗ_Поставщики.Сортировать("Поставщик");
	//			Объект.Поставщики.Загрузить(ТЗ_Поставщики);
	//		
	//		КонецЕсли;
	//		
	//		МассивОтборов_Поставщики = Объект.Поставщики.Выгрузить(Новый Структура("Использовать",Истина));
	//		МассивОтборов_Поставщики = МассивОтборов_Поставщики.ВыгрузитьКолонку("Поставщик");
	//		
	//		Запрос = Новый Запрос;
	//		Запрос.Текст =
	//		"ВЫБРАТЬ
	//		|	ТаблицаЗначений.Организация КАК Организация,
	//		|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	//		|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	//		|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	//		|	ТаблицаЗначений.МВЗ КАК МВЗ,
	//		|	ТаблицаЗначений.Поставщик КАК Поставщик,
	//		|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	//		|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//		|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	//		|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	//		|	ТаблицаЗначений.Количество КАК Количество,
	//		|	ТаблицаЗначений.Сумма КАК Сумма
	//		|ПОМЕСТИТЬ ТаблицаЗначений
	//		|ИЗ
	//		|	&ТЗ_ТаблицаОтборов КАК ТаблицаЗначений
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	ТаблицаЗначений.Организация КАК Организация,
	//		|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	//		|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	//		|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	//		|	ТаблицаЗначений.МВЗ КАК МВЗ,
	//		|	ТаблицаЗначений.Поставщик КАК Поставщик,
	//		|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	//		|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//		|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	//		|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	//		|	ТаблицаЗначений.Количество КАК Количество,
	//		|	ТаблицаЗначений.Сумма КАК Сумма
	//		|ИЗ
	//		|	ТаблицаЗначений КАК ТаблицаЗначений
	//		|ГДЕ
	//		|	ТаблицаЗначений.Поставщик В(&Поставщики)";
	//		
	//		Запрос.УстановитьПараметр("ТЗ_ТаблицаОтборов", ТЗ_ТаблицаОтборов);
	//		Запрос.УстановитьПараметр("Поставщики", МассивОтборов_Поставщики);
	//		
	//		ТЗ_ТаблицаОтборов = Запрос.Выполнить().Выгрузить();
	//		
	//	Иначе
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не предусмотрен отбор с кодом """ + ТекущийОтбор + """");
	//	КонецЕсли;
	//	
	//	Сч = Сч + 1;
	//	
	//КонецЦикла;	
	//---АСТБ_Горюшин_Алексей_64400
	
КонецПроцедуры	

&НаСервере
Процедура СоздатьППСНаСервере()
	
	ТЗ_ТаблицаРеализованныеСИЗ = Объект.ТаблицаРеализованныеСИЗ.Выгрузить();
	
	МассивОтборов_ВидыВыдачиСИЗ	= Объект.ВидыВыдачи.Выгрузить(Новый Структура("Использовать",Истина));
	МассивОтборов_ВидыВыдачиСИЗ	= МассивОтборов_ВидыВыдачиСИЗ.ВыгрузитьКолонку("ВидВыдачиСИЗ");
	МассивОтборов_СкладыВыдачи	= Объект.СкладыВыдачи.Выгрузить(Новый Структура("Использовать",Истина));
	МассивОтборов_СкладыВыдачи	= МассивОтборов_СкладыВыдачи.ВыгрузитьКолонку("СкладВыдачи");
	МассивОтборов_МВЗ			= Объект.МВЗ.Выгрузить(Новый Структура("Использовать",Истина));
	МассивОтборов_МВЗ			= МассивОтборов_МВЗ.ВыгрузитьКолонку("МВЗ");
	МассивОтборов_Поставщики	= Объект.Поставщики.Выгрузить(Новый Структура("Использовать",Истина));
	МассивОтборов_Поставщики	= МассивОтборов_Поставщики.ВыгрузитьКолонку("Поставщик");
	//+++АСТБ_Горюшин_Алексей_64400
	МассивОтборов_Подразделения	= Объект.ТаблицаПодразделений.Выгрузить(Новый Структура("Использовать",Истина));
	МассивОтборов_Подразделения	= МассивОтборов_Подразделения.ВыгрузитьКолонку("Подразделение");
	//---АСТБ_Горюшин_Алексей_64400
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗначений.Организация КАК Организация,
	|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	|	ТаблицаЗначений.МВЗ КАК МВЗ,
	|	ТаблицаЗначений.Поставщик КАК Поставщик,
	|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|	ТаблицаЗначений.Количество КАК Количество,
	|	ТаблицаЗначений.Сумма КАК Сумма
	//+++АСТБ_Горюшин_Алексей_64400
	|	,ТаблицаЗначений.Подразделение КАК Подразделение,
	|	ТаблицаЗначений.ПодразделениеНаименование КАК ПодразделениеНаименование
	//---АСТБ_Горюшин_Алексей_64400
	|ПОМЕСТИТЬ ТаблицаЗначений
	|ИЗ
	|	&ТЗ_ТаблицаРеализованныеСИЗ КАК ТаблицаЗначений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗначений.Организация КАК Организация,
	|	ТаблицаЗначений.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ТаблицаЗначений.СкладВыдачи КАК СкладВыдачи,
	|	ТаблицаЗначений.СкладОтправитель КАК СкладОтправитель,
	|	ТаблицаЗначений.МВЗ КАК МВЗ,
	|	ТаблицаЗначений.Поставщик КАК Поставщик,
	|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаЗначений.ДокументВыдачи КАК ДокументВыдачи,
	|	ТаблицаЗначений.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|	ТаблицаЗначений.Количество КАК Количество,
	//+++АСТБ_Горюшин_Алексей_48012
	|	ВЫБОР
	|		КОГДА &РазбивкаПоСкладам
	|			ТОГДА ВЫБОР
	|					КОГДА &РазбивкаПоСкладуВыдачи
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаЗначений.ВидВыдачиСИЗ = ЗНАЧЕНИЕ(перечисление.ВидыВыдачиСИЗ.КоллективнаяВыдача)
	|									ТОГДА ТаблицаЗначений.СкладВыдачи
	|								КОГДА ТаблицаЗначений.ВидВыдачиСИЗ = ЗНАЧЕНИЕ(перечисление.ВидыВыдачиСИЗ.ПерсональнаяВыдача)
	|									ТОГДА ТаблицаЗначений.СкладВыдачи
	|								ИНАЧЕ ТаблицаЗначений.СкладВыдачи
	|							КОНЕЦ
	|					КОГДА &РазбивкаПоСкладуОтправителю
	|						ТОГДА ВЫБОР
	|								КОГДА ТаблицаЗначений.ВидВыдачиСИЗ = ЗНАЧЕНИЕ(перечисление.ВидыВыдачиСИЗ.КоллективнаяВыдача)
	|									ТОГДА ТаблицаЗначений.СкладОтправитель
	|								КОГДА ТаблицаЗначений.ВидВыдачиСИЗ = ЗНАЧЕНИЕ(перечисление.ВидыВыдачиСИЗ.ПерсональнаяВыдача)
	|									ТОГДА ТаблицаЗначений.СкладВыдачи
	|								ИНАЧЕ ТаблицаЗначений.СкладВыдачи
	|							КОНЕЦ
	|					ИНАЧЕ ТаблицаЗначений.СкладВыдачи
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ КАК СкладРазбивки,
	//---АСТБ_Горюшин_Алексей_48012
	|	ТаблицаЗначений.Сумма КАК Сумма
	//+++АСТБ_Горюшин_Алексей_64400
	|	,ТаблицаЗначений.Подразделение КАК Подразделение,
	|	ТаблицаЗначений.ПодразделениеНаименование КАК ПодразделениеНаименование,
	|	СпрНоменклатура.ВидСИЗ КАК ВидСИЗ
	//---АСТБ_Горюшин_Алексей_64400
	//+++АСТБ_Горюшин_Алексей_71389
	|ПОМЕСТИТЬ ВТ_С_Отборами
	//---АСТБ_Горюшин_Алексей_71389
	|ИЗ
	|	ТаблицаЗначений КАК ТаблицаЗначений
	//+++АСТБ_Горюшин_Алексей_64400
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО (ТаблицаЗначений.Номенклатура = СпрНоменклатура.Ссылка)
	//---АСТБ_Горюшин_Алексей_64400
	|ГДЕ
	|	ТаблицаЗначений.ВидВыдачиСИЗ В(&ВидыВыдачиСИЗ)
	|	И ТаблицаЗначений.СкладВыдачи В(&СкладыВыдачи)
	|	И ТаблицаЗначений.МВЗ В(&МВЗ)
	//+++АСТБ_Горюшин_Алексей_64400
	|	И ТаблицаЗначений.Подразделение В(&Подразделения)
	//---АСТБ_Горюшин_Алексей_64400
	//+++АСТБ_Горюшин_Алексей_71389
	|	И ТаблицаЗначений.Поставщик В(&Поставщики)
	//было
	//|	И ТаблицаЗначений.Поставщик В(&Поставщики)";
	//---АСТБ_Горюшин_Алексей_71389
	//+++АСТБ_Горюшин_Алексей_71389
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыПредварительныйПереходПраваСобственности.НачалоПериода КАК НачалоПериода,
	|	ДокументыПредварительныйПереходПраваСобственности.КонецПериода КАК КонецПериода
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	ВТ_С_Отборами КАК ВТ_С_Отборами
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПредварительныйПереходПраваСобственности КАК ДокументыПредварительныйПереходПраваСобственности
	|		ПО ВТ_С_Отборами.ПредварительныйПереходПраваСобственности = ДокументыПредварительныйПереходПраваСобственности.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_С_Отборами.Организация КАК Организация,
	|	ВТ_С_Отборами.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ВТ_С_Отборами.СкладВыдачи КАК СкладВыдачи,
	|	ВТ_С_Отборами.СкладОтправитель КАК СкладОтправитель,
	|	ВТ_С_Отборами.МВЗ КАК МВЗ,
	|	ВТ_С_Отборами.Поставщик КАК Поставщик,
	|	ВТ_С_Отборами.Номенклатура КАК Номенклатура,
	|	ВТ_С_Отборами.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_С_Отборами.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_С_Отборами.ПредварительныйПереходПраваСобственности КАК ПредварительныйПереходПраваСобственности,
	|	ВТ_С_Отборами.Количество КАК Количество,
	|	ВТ_С_Отборами.СкладРазбивки КАК СкладРазбивки,
	|	ВТ_С_Отборами.Сумма КАК Сумма,
	|	ВТ_С_Отборами.Подразделение КАК Подразделение,
	|	ВТ_С_Отборами.ПодразделениеНаименование КАК ПодразделениеНаименование,
	|	ВТ_С_Отборами.ВидСИЗ КАК ВидСИЗ
	|ИЗ
	|	ВТ_С_Отборами КАК ВТ_С_Отборами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВТ_Периоды.НачалоПериода) КАК НачалоПериода,
	|	МАКСИМУМ(ВТ_Периоды.КонецПериода) КАК КонецПериода
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды";
	//---АСТБ_Горюшин_Алексей_71389
	
	Запрос.УстановитьПараметр("ТЗ_ТаблицаРеализованныеСИЗ",	ТЗ_ТаблицаРеализованныеСИЗ);
	Запрос.УстановитьПараметр("ВидыВыдачиСИЗ",				МассивОтборов_ВидыВыдачиСИЗ);
	Запрос.УстановитьПараметр("СкладыВыдачи",				МассивОтборов_СкладыВыдачи);
	Запрос.УстановитьПараметр("МВЗ",						МассивОтборов_МВЗ);
	Запрос.УстановитьПараметр("Поставщики",					МассивОтборов_Поставщики);
	//+++АСТБ_Горюшин_Алексей_48012
	Запрос.УстановитьПараметр("РазбивкаПоСкладам",			Объект.РазбивкаПоСкладам);
	Запрос.УстановитьПараметр("РазбивкаПоСкладуВыдачи",		Объект.РазбивкаПоСкладамВыдачи);
	Запрос.УстановитьПараметр("РазбивкаПоСкладуОтправителю",Объект.РазбивкаПоСкладуОтправителю);
	//---АСТБ_Горюшин_Алексей_48012
	//+++АСТБ_Горюшин_Алексей_64400
	Запрос.УстановитьПараметр("Подразделения",				МассивОтборов_Подразделения);
	//---АСТБ_Горюшин_Алексей_64400
	
	//+++АСТБ_Горюшин_Алексей_71389
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	ТЗ_ТаблицаРеализованныеСИЗ_сОтборами = ПакетЗапросов[3].Выгрузить();
	ТЗ_Периоды                           = ПакетЗапросов[4].Выгрузить();
	//было
	//ТЗ_ТаблицаРеализованныеСИЗ_сОтборами = Запрос.Выполнить().Выгрузить();
	//---АСТБ_Горюшин_Алексей_71389
	
	//+++АСТБ_Горюшин_Алексей_48012
	//+++АСТБ_Горюшин_Алексей_64400
	ТаблицаРазбивки = ТЗ_ТаблицаРеализованныеСИЗ_сОтборами.Скопировать(,"ВидВыдачиСИЗ,СкладРазбивки,МВЗ,Поставщик,ПредварительныйПереходПраваСобственности,Подразделение,ВидСИЗ");
	//было
	//ТаблицаРазбивки = ТЗ_ТаблицаРеализованныеСИЗ_сОтборами.Скопировать(,"ВидВыдачиСИЗ,СкладРазбивки,МВЗ,Поставщик,ПредварительныйПереходПраваСобственности");
	//---АСТБ_Горюшин_Алексей_64400
	//было
	//ТаблицаРазбивки = ТЗ_ТаблицаРеализованныеСИЗ_сОтборами.Скопировать(,"ВидВыдачиСИЗ,СкладВыдачи,МВЗ,Поставщик,ПредварительныйПереходПраваСобственности");
	//---АСТБ_Горюшин_Алексей_48012
	КолонкиГруппировок = ТекстКолонокГруппировок();
	
	//+++АСТБ_Горюшин_Алексей_71389
	ВыбранОдинПППС = Ложь;
	ПППС_ДокументСсылка = Документы.ПредварительныйПереходПраваСобственности.ПустаяСсылка();
	
	ТЗ_ТаблицаПППС = Объект.ТаблицаПППС.Выгрузить();
	Если ТЗ_ТаблицаПППС.Количество() = 1
		И НЕ ТЗ_ТаблицаПППС[0].ПППС = Документы.ПредварительныйПереходПраваСобственности.ПустаяСсылка() Тогда
			ВыбранОдинПППС = Истина;
	        ПППС_ДокументСсылка = ТЗ_ТаблицаПППС[0].ПППС;
	КонецЕсли;
	//---АСТБ_Горюшин_Алексей_71389
	
	Если ЗначениеЗаполнено(КолонкиГруппировок) Тогда
		//создаём несколько ППС
		ТаблицаРазбивки.Свернуть(КолонкиГруппировок);
		
		СтруктураПоиска = Новый Структура;
		Для Каждого Колонка из ТаблицаРазбивки.Колонки цикл
			СтруктураПоиска.Вставить(Колонка.Имя);
		КонецЦикла;
		
		Для Каждого СтрокаТаблицыРазбивки из ТаблицаРазбивки цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТаблицыРазбивки);
			
			МассивНайденныхСтрок = ТЗ_ТаблицаРеализованныеСИЗ_сОтборами.НайтиСтроки(СтруктураПоиска);
			Если МассивНайденныхСтрок.Количество() = 0 тогда
				Продолжить;
			КонецЕсли;
			
			//создаем новый документ
			
			НовыйДокумент = Документы.ПереходПраваСобственности.СоздатьДокумент();
			//+++АСТБ_Горюшин_Алексей_71389
			Если ВыбранОдинПППС Тогда
				ЗаполнитьЗначенияСвойств(НовыйДокумент,ПППС_ДокументСсылка,,"Дата,Номер,ПометкаУдаления,Проведен,Комментарий");
			//было
			//Если ЗначениеЗаполнено(Объект.ПредварительныйПереходПраваСобственности) Тогда
			//	ЗаполнитьЗначенияСвойств(НовыйДокумент,Объект.ПредварительныйПереходПраваСобственности,,"Дата,Номер,ПометкаУдаления,Проведен,Комментарий");
			//---АСТБ_Горюшин_Алексей_71389	
			Иначе
				НовыйДокумент.Организация = Объект.Организация;
			КонецЕсли;
			
			НовыйДокумент.Ответственный = Пользователи.ТекущийПользователь();
			НовыйДокумент.СоздательДокумента = НовыйДокумент.Ответственный;
			//+++АСТБ_Горюшин_Алексей_71389
			Если ВыбранОдинПППС Тогда
				НовыйДокумент.ДокументОснование = ПППС_ДокументСсылка;
			//было
			//Если ЗначениеЗаполнено(Объект.ПредварительныйПереходПраваСобственности) Тогда
			//	НовыйДокумент.ДокументОснование = Объект.ПредварительныйПереходПраваСобственности;
			//---АСТБ_Горюшин_Алексей_71389
			КонецЕсли;
			
			Комментарий = "";
			
			СоответствиеККоментарию = СоответствиеПоляТаблицыИПредставления();
			Для Каждого КлючИЗначение ИЗ СтруктураПоиска Цикл
				Комментарий = Комментарий + " / " + СоответствиеККоментарию.Получить(КлючИЗначение.Ключ) + " - " + КлючИЗначение.Значение + " ";
			КонецЦикла;
			
			//+++АСТБ_Горюшин_Алексей_48012
			Если Объект.РазбивкаПоСкладамВыдачи Тогда
				Комментарий = СтрЗаменить(Комментарий,"##СкладРазбивки","Склад выдачи");
			ИначеЕсли Объект.РазбивкаПоСкладуОтправителю Тогда
				Комментарий = СтрЗаменить(Комментарий,"##СкладРазбивки","Склад-отправитель");
			КонецЕсли;
			//---АСТБ_Горюшин_Алексей_48012
			
			НовыйДокумент.Комментарий = Комментарий;
			
			//+++АСТБ_Горюшин_Алексей_71389
			Если НЕ ВыбранОдинПППС Тогда
			//было
			//Если НЕ ЗначениеЗаполнено(Объект.ПредварительныйПереходПраваСобственности) Тогда
			//---АСТБ_Горюшин_Алексей_71389
				ТаблицаДокументовОснований = ТЗ_ТаблицаРеализованныеСИЗ_сОтборами.СкопироватьКолонки("ПредварительныйПереходПраваСобственности");
			КонецЕсли;
			
			Для Каждого ЭлементМассива ИЗ МассивНайденныхСтрок Цикл
				НоваяСтрока = НовыйДокумент.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,ЭлементМассива);
				НоваяСтрока.Цена = ?(НоваяСтрока.Количество = 0, 0, НоваяСтрока.Сумма / НоваяСтрока.Количество);
				НоваяСтрока.ДокументОснование = ЭлементМассива.ПредварительныйПереходПраваСобственности;
				//+++АСТБ_Горюшин_Алексей_71389
				Если НЕ ВыбранОдинПППС Тогда
				//было
				//Если НЕ ЗначениеЗаполнено(Объект.ПредварительныйПереходПраваСобственности) Тогда
				//---АСТБ_Горюшин_Алексей_71389
					СтрокаТаблицыДокументовОснования = ТаблицаДокументовОснований.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокументовОснования,ЭлементМассива);
				КонецЕсли;
			КонецЦикла;
			
			//+++АСТБ_Горюшин_Алексей_71389
			Если НЕ ВыбранОдинПППС Тогда
			//было
			//Если НЕ ЗначениеЗаполнено(Объект.ПредварительныйПереходПраваСобственности) Тогда
			//---АСТБ_Горюшин_Алексей_71389
				НовыйДокумент.ДокументОснование = ТаблицаДокументовОснований[0].ПредварительныйПереходПраваСобственности;
			КонецЕсли;
			
			//+++АСТБ_Горюшин_Алексей_71389
			НовыйДокумент.НачалоПериода	= ТЗ_Периоды[0].НачалоПериода;
			НовыйДокумент.КонецПериода	= ТЗ_Периоды[0].КонецПериода;
			//---АСТБ_Горюшин_Алексей_71389
			
			ДокументСоздан = Ложь;
			
			Попытка
				НовыйДокумент.дата = ТекущаяДата();
				НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
				ДокументСоздан = Истина;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
			
			Если ДокументСоздан тогда
				
				Попытка
					
					НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
					
					ТекстСообщения = нСтр("ru='Создан документ : %Документ% '", "ru");
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Документ%",НовыйДокумент.Ссылка);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,НовыйДокумент.Ссылка);
					
					ДокументыСозданы = Истина;
					
				Исключение
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
				КонецПопытки;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		//создаём один ППС
		
		//создаем новый документ
		
		НовыйДокумент = Документы.ПереходПраваСобственности.СоздатьДокумент();
		//ЗаполнитьЗначенияСвойств(НовыйДокумент,Объект.ПредварительныйПереходПраваСобственности,,"Дата,Номер,ПометкаУдаления,Проведен,Комментарий");
		
		НовыйДокумент.Организация = Объект.Организация;
		НовыйДокумент.Ответственный = Пользователи.ТекущийПользователь();
		НовыйДокумент.СоздательДокумента = НовыйДокумент.Ответственный;
		
		Комментарий = " / Без разбивки";
		
		НовыйДокумент.Комментарий = Комментарий;
		
		//+++АСТБ_Горюшин_Алексей_71389
		НовыйДокумент.НачалоПериода	= ТЗ_Периоды[0].НачалоПериода;
		НовыйДокумент.КонецПериода	= ТЗ_Периоды[0].КонецПериода;
		//---АСТБ_Горюшин_Алексей_71389
			
		Для каждого Строка из ТЗ_ТаблицаРеализованныеСИЗ_сОтборами цикл
			НоваяСтрока = НовыйДокумент.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
			НоваяСтрока.Цена = ?(НоваяСтрока.Количество = 0, 0, НоваяСтрока.Сумма / НоваяСтрока.Количество);
			НоваяСтрока.ДокументОснование = Строка.ПредварительныйПереходПраваСобственности;
		КонецЦикла;
		
		НовыйДокумент.ДокументОснование = ТЗ_ТаблицаРеализованныеСИЗ_сОтборами[0].ПредварительныйПереходПраваСобственности;
		
		ДокументСоздан = Ложь;
		
		Попытка
			НовыйДокумент.дата = ТекущаяДата();
			НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
			ДокументСоздан = Истина;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
		Если ДокументСоздан тогда
			
			Попытка
				
				НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
				
				ТекстСообщения = нСтр("ru='Создан документ : %Документ% '", "ru");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Документ%",НовыйДокумент.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,НовыйДокумент.Ссылка);
				
				ДокументыСозданы = Истина;
				
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;

	ЧтениеРегистраИЗаполнениеОтборовНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ТекстКолонокГруппировок()
	
	Текст = "";
	
	Если Объект.РазбивкаПоВидамВыдачи Тогда
		Текст = Текст + "ВидВыдачиСИЗ,";		
	КонецЕсли;
	
	//+++АСТБ_Горюшин_Алексей_48012
	//было
	//Если Объект.РазбивкаПоСкладамВыдачи Тогда
	//	Текст = Текст + "СкладВыдачи,";		
	//КонецЕсли;
	//---АСТБ_Горюшин_Алексей_48012
	
	//+++АСТБ_Горюшин_Алексей_48012
	Если Объект.РазбивкаПоСкладам Тогда
		Текст = Текст + "СкладРазбивки,";		
	КонецЕсли;
	//---АСТБ_Горюшин_Алексей_48012
	
	Если Объект.РазбивкаПоПоставщикам Тогда
		Текст = Текст + "Поставщик,";		
	КонецЕсли;

	Если Объект.РазбивкаПоМВЗ Тогда
		Текст = Текст + "МВЗ,";		
	КонецЕсли;
	
	//+++АСТБ_Горюшин_Алексей_64400
	Если Объект.РазбивкаПоПодразделениям Тогда
		Текст = Текст + "Подразделение,";		
	КонецЕсли;
	
	Если Объект.РазбивкаПоВидамСИЗ Тогда
		Текст = Текст + "ВидСИЗ,";		
	КонецЕсли;
	//---АСТБ_Горюшин_Алексей_64400
	
	//+++АСТБ_Горюшин_Алексей_71389
	ВыбранОдинПППС = Ложь;
	
	ТЗ_ТаблицаПППС = Объект.ТаблицаПППС.Выгрузить();
	Если ТЗ_ТаблицаПППС.Количество() = 1
		И НЕ ТЗ_ТаблицаПППС[0].ПППС = Документы.ПредварительныйПереходПраваСобственности.ПустаяСсылка() Тогда
			ВыбранОдинПППС = Истина;
	КонецЕсли;
	
	Если ВыбранОдинПППС Тогда
	//было
	//Если ЗначениеЗаполнено(Объект.ПредварительныйПереходПраваСобственности) Тогда
	//---АСТБ_Горюшин_Алексей_71389
		Текст = Текст + "ПредварительныйПереходПраваСобственности,";
	КонецЕсли;	
		
	//удалим последнюю запятую
	Если СтрДлина(Текст) > 0 Тогда
		Текст = Лев(Текст,СтрДлина(Текст)-1);
	КонецЕсли;
	
	Возврат Текст;

КонецФункции

&НаСервере
Функция СоответствиеПоляТаблицыИПредставления()

 Соответствие = Новый Соответствие;
 Соответствие.Вставить("ВидВыдачиСИЗ",								"Вид выдачи");
 Соответствие.Вставить("СкладВыдачи",								"Склад выдачи");
 Соответствие.Вставить("Поставщик",									"Поставщик номенклатуры выдачи");
 Соответствие.Вставить("МВЗ",										"МВЗ");
 Соответствие.Вставить("ПредварительныйПереходПраваСобственности",	"Документ-основание");
 //+++АСТБ_Горюшин_Алексей_48012
 Соответствие.Вставить("СкладРазбивки",								"##СкладРазбивки");
 //---АСТБ_Горюшин_Алексей_48012
 //+++АСТБ_Горюшин_Алексей_64400
 Соответствие.Вставить("Подразделение",								"Подразделение");
 Соответствие.Вставить("ВидСИЗ",									"Вид СИЗ");
 //---АСТБ_Горюшин_Алексей_64400

 Возврат Соответствие;
 
КонецФункции

//+++АСТБ_Горюшин_Алексей_48012
&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	
	Если Объект.РазбивкаПоСкладам Тогда
		Элементы.РазбивкаПоСкладамВыдачи.Видимость = Истина;
		Элементы.РазбивкаПоСкладуОтправителю.Видимость = Истина;
	Иначе
		Элементы.РазбивкаПоСкладамВыдачи.Видимость = Ложь;
		Элементы.РазбивкаПоСкладуОтправителю.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры //---АСТБ_Горюшин_Алексей_48012

//+++АСТБ_Горюшин_Алексей_48012
&НаКлиенте
Процедура РазбивкаПоСкладамПриИзменении(Элемент)
	
	Если Объект.РазбивкаПоСкладам Тогда
		Элементы.РазбивкаПоСкладамВыдачи.Видимость = Истина;
		Элементы.РазбивкаПоСкладуОтправителю.Видимость = Истина;
	Иначе 
		Элементы.РазбивкаПоСкладамВыдачи.Видимость = Ложь;
		Элементы.РазбивкаПоСкладуОтправителю.Видимость = Ложь;
		Объект.РазбивкаПоСкладамВыдачи = Ложь;
		Объект.РазбивкаПоСкладуОтправителю = Ложь;
	КонецЕсли;
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_48012

//+++АСТБ_Горюшин_Алексей_48012
&НаКлиенте
Процедура РазбивкаПоСкладамВыдачиПриИзменении(Элемент)
	Если Объект.РазбивкаПоСкладамВыдачи Тогда
		Объект.РазбивкаПоСкладуОтправителю = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_48012

//+++АСТБ_Горюшин_Алексей_48012
&НаКлиенте
Процедура РазбивкаПоСкладуОтправителюПриИзменении(Элемент)
	Если Объект.РазбивкаПоСкладуОтправителю Тогда
		Объект.РазбивкаПоСкладамВыдачи = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_48012

//+++АСТБ_Горюшин_Алексей_64400
&НаКлиенте
Процедура ТаблицаПодразделенийИспользоватьПриИзменении(Элемент)
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаПодразделений" Тогда
		ОбновитьОтборы("ТаблицаПодразделений");
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_64400

//+++АСТБ_Горюшин_Алексей_64400
&НаКлиенте
Процедура УстановитьФлажкиВТаблицеПодразделений(Команда)
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаПодразделений");
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаПодразделений" Тогда
		ОбновитьОтборы("ТаблицаПодразделений");
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_64400

//+++АСТБ_Горюшин_Алексей_64400
&НаКлиенте
Процедура СнятьФлажкиВТаблицеПодразделений(Команда)
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаПодразделений");
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаПодразделений" Тогда
		ОбновитьОтборы("ТаблицаПодразделений");
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_64400

//+++АСТБ_Горюшин_Алексей_64400
&НаКлиенте
Процедура СдвинутьВлевоТаблицаПодразделений(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаПодразделений", "Влево");
	ОбновитьОтборы();
КонецПроцедуры //---АСТБ_Горюшин_Алексей_64400

//+++АСТБ_Горюшин_Алексей_64400
&НаКлиенте
Процедура СдвинутьВправоТаблицаПодразделений(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаПодразделений", "Вправо");
	ОбновитьОтборы();
КонецПроцедуры //---АСТБ_Горюшин_Алексей_64400
