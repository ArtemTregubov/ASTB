#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьКомпоновщикНастроек();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоОтборуНоменклатура(Команда)
	ЗаполнитьПоОтборуНоменклатураНаСервере();
КонецПроцедуры   

&НаКлиенте
Процедура ЗаполнитьПоДокументамПоступлений(Команда)
	ЗаполнитьПоДокументамПоступленийНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		
		МассивДанных = ПодготовитьМассивДанныхКВыгрузке();
		Если МассивДанных = Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(нСтр("ru='Нет данных для выгрузки'", "ru"));
			Возврат;
		КонецЕсли;
		
		СтруктураОбработкиОшибок = АХ_ОбменКлиент.ИнициализироватьСтруктуруОбработкиОшибок();
		СтруктураОбработкиОшибок.ТекстСообщенияУспешнойОтправки = нСтр("ru='Данные успешно переданны'", "ru");
		
		АХ_ОбменКлиент.ПередатьДанныеВАдресноеХранение(МассивДанных,Ложь,СтруктураОбработкиОшибок);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьКомпоновщикНастроек()
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	
	СКД_Номенклатура = ОбъектОбработки.ПолучитьМакет("СКД_Номенклатура");
	АдресВоВременномХранилище_Номенклатура = ПоместитьВоВременноеХранилище(СКД_Номенклатура,УникальныйИдентификатор);
	
	КомпоновщикНастроекНоменклатура.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресВоВременномХранилище_Номенклатура));	
	КомпоновщикНастроекНоменклатура.ЗагрузитьНастройки(СКД_Номенклатура.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОтборуНоменклатураНаСервере()
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	СКД_Номенклатура = ОбъектОбработки.ПолучитьМакет("СКД_Номенклатура");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(СКД_Номенклатура,КомпоновщикНастроекНоменклатура.ПолучитьНастройки(),,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпновки.Инициализировать(Макет);
	
	ТаблицаВывода = Новый ТаблицаЗначений;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаВывода);
	ПроцессорВывода.Вывести(ПроцессорКомпновки);
	
	ТаблицаНоменклатура.Загрузить(ТаблицаВывода);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДокументамПоступленийНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеНоменклатурыТовары.Номенклатура КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеНоменклатуры.Товары КАК ПоступлениеНоменклатурыТовары
	|ГДЕ
	|	ПоступлениеНоменклатурыТовары.Ссылка В(&массивПоступлений)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеНоменклатурыТовары.Номенклатура";
	
	Запрос.УстановитьПараметр("массивПоступлений", СписокПоступлений.ВыгрузитьЗначения());
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРезультат = РезультатЗапроса.Выгрузить();
	
	ТаблицаНоменклатура.Загрузить(ТаблицаРезультат);
	
КонецПроцедуры

Функция ПодготовитьМассивДанныхКВыгрузке()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ТаблицаНоменклатура.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Номенклатура
	|ИЗ
	|	ВТ_Номенклатура КАК ВТ_ТаблицаНоменклатура
	|ГДЕ
	|	ВТ_ТаблицаНоменклатура.Ссылка <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ИЗ
	|	Номенклатура КАК Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец В
	|			(ВЫБРАТЬ
	|				номенклатура.Ссылка
	|			ИЗ
	|				Номенклатура КАК номенклатура)
	|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|	И &ВыгружатьХарактеристики";
	
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", ТаблицаНоменклатура.Выгрузить());
	Запрос.УстановитьПараметр("ВыгружатьХарактеристики", ВыгружатьХарактеристики);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаРезультат = РезультатЗапроса.Выгрузить();
	
	МассивДанных = ТаблицаРезультат.ВыгрузитьКолонку("Ссылка");
	Если МассивДанных.Количество() = 0 Тогда
		Возврат Неопределено;
	иначе
		Возврат МассивДанных;
	КонецЕсли;
	
КонецФункции

#КонецОбласти