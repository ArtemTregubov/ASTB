
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Организация = Параметры.Организация;
	
	ЗапронитьТаблицуАлгоритмовНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗапронитьТаблицуАлгоритмовНаСервере()
	
	Объект.ТаблицаАлгоритмов.Очистить();
	
	//чтение схемы из макета
	ВременныйФайлСхемы = ПолучитьИмяВременногоФайла();
	
	МакетСхемы = Обработки.ВыборАлгоритмаФормированияПотребности.ПолучитьМакет("АлгоритмыФормированияПотребности_Схема_XML");
	МакетСхемы.Записать(ВременныйФайлСхемы);
	
	ЧтениеСхемы = Новый ЧтениеXML;
	ЧтениеСхемы.ОткрытьФайл(ВременныйФайлСхемы);

	Построитель_DOM = Новый ПостроительDOM;
	Документ_DOM 	= Построитель_DOM.Прочитать(ЧтениеСхемы);
	
	ПостроительСхем_XML = Новый ПостроительСхемXML;
	Схема_XML 			= ПостроительСхем_XML.СоздатьСхемуXML(Документ_DOM);
	
	НаборСхем = Новый НаборСхемXML;
	НаборСхем.Добавить(Схема_XML);
	
	НоваяФабрика = Новый ФабрикаXDTO(НаборСхем);
	
	//чтение данных из макета
	ВременныйФайлДанных 	= ПолучитьИмяВременногоФайла();
	МакетДанных 			= Обработки.ВыборАлгоритмаФормированияПотребности.ПолучитьМакет("АлгоритмыФормированияПотребности_Данные_XML");
	МакетДанных.Записать(ВременныйФайлДанных);
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ВременныйФайлДанных);
	
	Попытка
		Данные = НоваяФабрика.ПрочитатьXML(Чтение);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Элемент Из Данные.algorithm_list.algorithm_item Цикл
		
		НоваяСтрока = Объект.ТаблицаАлгоритмов.Добавить();
		НоваяСтрока.Код = Элемент.algorithm_code;
		НоваяСтрока.Наименование = Элемент.algorithm_name;
		НоваяСтрока.Аббревиатура = Элемент.algorithm_abbreviation;
		НоваяСтрока.ИспользоватьГруппыИЛИ = ?(Элемент.algorithm_options.group_or = "1", Истина, Ложь);
		НоваяСтрока.НеИзменятьСрокНоскиВыданныхСИЗ = ?(Элемент.algorithm_options.fixing_wearing_period = "1", Истина, Ложь);
		НоваяСтрока.СверткаПотребностиПоНоменклатуреНормы = ?(Элемент.algorithm_options.folding_requirement = "1", Истина, Ложь);
		НоваяСтрока.ЧастичнаяВыдача = Элемент.algorithm_options.partial_distribution;
		
		Для Каждого СтрокаОписанияАлгоритма Из Элемент.algorithm_description.algorithm_description_item Цикл
			Если СтрДлина(НоваяСтрока.Описание) = 0 Тогда
				НоваяСтрока.Описание = СтрокаОписанияАлгоритма.text;
			Иначе
				НоваяСтрока.Описание = НоваяСтрока.Описание + Символы.ПС + СтрокаОписанияАлгоритма.text;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаАлгоритмовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Структура = НОВЫЙ Структура("КодАлгоритма, НаименованиеАлгоритма, АббревиатураАлгоритма, ИспользоватьГруппыИЛИ, НеИзменятьСрокНоскиВыданныхСИЗ, СверткаПотребностиПоНоменклатуреНормы, ЧастичнаяВыдача, Описание",
								Элемент.ТекущиеДанные.Код,
								Элемент.ТекущиеДанные.Наименование,
								Элемент.ТекущиеДанные.Аббревиатура,
								Элемент.ТекущиеДанные.ИспользоватьГруппыИЛИ,
								Элемент.ТекущиеДанные.НеИзменятьСрокНоскиВыданныхСИЗ,
								Элемент.ТекущиеДанные.СверткаПотребностиПоНоменклатуреНормы,
								Элемент.ТекущиеДанные.ЧастичнаяВыдача,
								Элемент.ТекущиеДанные.Описание);
	
	Закрыть(КодВозвратаДиалога.ОК);
	
	ОповеститьОВыборе(Структура);
	
КонецПроцедуры