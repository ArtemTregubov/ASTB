&НаСервере
Процедура ЗаполнитьТаблицуНаСервере()
	
	МассивПоставщиков =	ПолучитьМассивПоставщиков();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПереходПраваСобственностиТовары.Ссылка.Дата КАК ДатаДокумента,
	|	ПереходПраваСобственностиТовары.Ссылка.Номер КАК НомерДокумента,
	|	ПереходПраваСобственностиТовары.ДокументВыдачи КАК ДокументВыдачи,
	|	ПереходПраваСобственностиТовары.Ссылка.Организация.Наименование КАК ОрганизацияНаименование,
	|	ПереходПраваСобственностиТовары.Ссылка.Организация.Код КАК ОрганизацияКод,
	|	ПереходПраваСобственностиТовары.Ссылка.Организация.ИНН КАК ОрганизацияИНН,
	|	ПереходПраваСобственностиТовары.Ссылка.Организация.КПП КАК ОрганизацияКПП,
	|	ПереходПраваСобственностиТовары.Ссылка КАК ДокументППС,
	|	ВЫБОР
	|		КОГДА ПереходПраваСобственностиТовары.ДокументВыдачи ССЫЛКА Документ.ВыдачаДежурныхСредствЗащиты
	|			ТОГДА ПереходПраваСобственностиТовары.ДокументВыдачи.Склад.КодЗаводаДляВыгрузкиВSAP
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПереходПраваСобственностиТовары.ДокументВыдачи.ВидВыдачиСИЗ = ЗНАЧЕНИЕ(Перечисление.ВидыВыдачиСИЗ.КоллективнаяВыдача)
	|					ТОГДА ПереходПраваСобственностиТовары.ДокументВыдачи.СкладОтправитель.КодЗаводаДляВыгрузкиВSAP
	|				ИНАЧЕ ПереходПраваСобственностиТовары.ДокументВыдачи.Склад.КодЗаводаДляВыгрузкиВSAP
	|			КОНЕЦ
	|	КОНЕЦ КАК КодЗавода,
	|	ВЫБОР
	|		КОГДА ПереходПраваСобственностиТовары.ДокументВыдачи ССЫЛКА Документ.ВыдачаДежурныхСредствЗащиты
	|			ТОГДА ПереходПраваСобственностиТовары.ДокументВыдачи.Склад.LGNUM_LGTYP
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПереходПраваСобственностиТовары.ДокументВыдачи.ВидВыдачиСИЗ = ЗНАЧЕНИЕ(Перечисление.ВидыВыдачиСИЗ.КоллективнаяВыдача)
	|					ТОГДА ПереходПраваСобственностиТовары.ДокументВыдачи.СкладОтправитель.LGNUM_LGTYP
	|				ИНАЧЕ ПереходПраваСобственностиТовары.ДокументВыдачи.Склад.LGNUM_LGTYP
	|			КОНЕЦ
	|	КОНЕЦ КАК LGNUM_LGTYP
	|ПОМЕСТИТЬ ВТ_ППС
	|ИЗ
	|	Документ.ПереходПраваСобственности.Товары КАК ПереходПраваСобственностиТовары
	|ГДЕ
	|	ПереходПраваСобственностиТовары.Ссылка.Проведен
	|	И ПереходПраваСобственностиТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПереходПраваСобственностиТовары.Ссылка.Организация = &Организация
	|	И ПереходПраваСобственностиТовары.Номенклатура.Поставщик В(&МассивПоставщиков)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ППС.ДатаДокумента КАК ДатаДокумента,
	|	ВТ_ППС.НомерДокумента КАК НомерДокумента,
	|	ВТ_ППС.ОрганизацияНаименование КАК ОрганизацияНаименование,
	|	ВТ_ППС.ОрганизацияКод КАК ОрганизацияКод,
	|	ВТ_ППС.ОрганизацияИНН КАК ОрганизацияИНН,
	|	ВТ_ППС.ОрганизацияКПП КАК ОрганизацияКПП,
	|	ВТ_ППС.ДокументППС КАК ДокументППС,
	|	ВТ_ППС.КодЗавода КАК КодЗавода,
	|	ВТ_ППС.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_ППС.LGNUM_LGTYP КАК LGNUM_LGTYP
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	ВТ_ППС КАК ВТ_ППС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыгруженныеДокументыППСвСАП КАК ВыгруженныеДокументыППСвСАП
	|		ПО ВТ_ППС.ДокументППС = ВыгруженныеДокументыППСвСАП.ДокументППС
	|			И ВТ_ППС.КодЗавода = ВыгруженныеДокументыППСвСАП.КодЗавода
	|ГДЕ
	|	ВыгруженныеДокументыППСвСАП.КодЗаказа ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Результат.ДокументВыдачи КАК ДокументВыдачи
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Результат.ДатаДокумента КАК ДатаДокумента,
	|	ВТ_Результат.НомерДокумента КАК НомерДокумента,
	|	ВТ_Результат.ОрганизацияНаименование КАК ОрганизацияНаименование,
	|	ВТ_Результат.ОрганизацияКод КАК ОрганизацияКод,
	|	ВТ_Результат.ОрганизацияИНН КАК ОрганизацияИНН,
	|	ВТ_Результат.ОрганизацияКПП КАК ОрганизацияКПП,
	|	ВТ_Результат.ДокументППС КАК ДокументППС,
	|	ВТ_Результат.КодЗавода КАК КодЗавода,
	|	ВТ_Результат.LGNUM_LGTYP КАК LGNUM_LGTYP
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат";
	
	Запрос.УстановитьПараметр("Организация",		Объект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода",		НачалоДня(Объект.НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",		КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("МассивПоставщиков",	МассивПоставщиков);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаДокументовВыдачи = Результат[2].Выгрузить();
	ТаблицаДокументовППС    = Результат[3].Выгрузить();
	ТаблицаДокументов.Загрузить(ТаблицаДокументовППС);
	//АсТБ_Alexey_86238_********************************************************************
	ТаблицаВыдачи.Очистить();
	//АсТБ_Alexey_86238_********************************************************************
	
	МассивДокументовВыдачи 	= ТаблицаДокументовВыдачи.ВыгрузитьКолонку("ДокументВыдачи");
	МассивДокументовППС		= ТаблицаДокументовППС.ВыгрузитьКолонку("ДокументППС");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КодыМаркировкиВыданныхСредствЗащиты.Регистратор.Дата КАК ДатаВыдачи,
	|	КодыМаркировкиВыданныхСредствЗащиты.Регистратор КАК Регистратор,
	|	КодыМаркировкиВыданныхСредствЗащиты.КодМаркировки КАК КодМаркировки,
	|	КодыМаркировкиВыданныхСредствЗащиты.Организация КАК Организация,
	|	КодыМаркировкиВыданныхСредствЗащиты.Номенклатура КАК Номенклатура,
	|	КодыМаркировкиВыданныхСредствЗащиты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПОДСТРОКА(КодыМаркировкиВыданныхСредствЗащиты.КодМаркировки, 4, 13) КАК GTIN
	|ПОМЕСТИТЬ ВТ_Выдача
	|ИЗ
	|	РегистрСведений.КодыМаркировкиВыданныхСредствЗащиты КАК КодыМаркировкиВыданныхСредствЗащиты
	|ГДЕ
	|	КодыМаркировкиВыданныхСредствЗащиты.Организация = &Организация
	|	И НЕ КодыМаркировкиВыданныхСредствЗащиты.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|	И КодыМаркировкиВыданныхСредствЗащиты.Номенклатура.Поставщик В(&МассивПоставщиков)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Выдача.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_Выдача.Регистратор КАК Регистратор,
	|	ВТ_Выдача.КодМаркировки КАК КодМаркировки,
	|	ВТ_Выдача.Организация КАК Организация,
	|	ВТ_Выдача.GTIN КАК GTIN,
	|	ЕСТЬNULL(GTINНоменклатуры.Номенклатура, ВТ_Выдача.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(GTINНоменклатуры.ХарактеристикаНоменклатуры, ВТ_Выдача.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_ВыдачаПоGTIN
	|ИЗ
	|	ВТ_Выдача КАК ВТ_Выдача
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.GTINНоменклатуры КАК GTINНоменклатуры
	|		ПО ВТ_Выдача.GTIN = GTINНоменклатуры.GTIN
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПереходПраваСобственностиТовары.ДокументВыдачи КАК ДокументВыдачи,
	|	ПереходПраваСобственностиТовары.Ссылка КАК Ссылка,
	|	ПереходПраваСобственностиТовары.Номенклатура КАК Номенклатура,
	|	ПереходПраваСобственностиТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПереходПраваСобственностиТовары.Количество КАК Количество,
	|	ПереходПраваСобственностиТовары.МВЗ КАК МВЗ
	|ПОМЕСТИТЬ ВТ_ВыдачаВППС
	|ИЗ
	|	Документ.ПереходПраваСобственности.Товары КАК ПереходПраваСобственностиТовары
	|ГДЕ
	|	ПереходПраваСобственностиТовары.Ссылка.Проведен
	|	И ПереходПраваСобственностиТовары.Ссылка.Организация = &Организация
	|	И ПереходПраваСобственностиТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПереходПраваСобственностиТовары.Ссылка В(&МассивДокументовППС)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗСотрудников.Сотрудник КАК Сотрудник,
	|	МВЗСотрудников.МВЗ КАК МВЗ
	|ПОМЕСТИТЬ ВТ_МВЗСотрудников
	|ИЗ
	|	РегистрСведений.МВЗСотрудников КАК МВЗСотрудников
	|ГДЕ
	|	МВЗСотрудников.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновноеМестоРаботыСотрудника.Период КАК Период,
	|	ОсновноеМестоРаботыСотрудника.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудника.Подразделение КАК Подразделение,
	|	ОсновноеМестоРаботыСотрудника.МоментВремени КАК МоментВремени,
	|	ОсновноеМестоРаботыСотрудника.ОсновноеМестоРаботы КАК ОсновноеМестоРаботы,
	|	ОсновноеМестоРаботыСотрудника.Должность КАК Должность
	|ПОМЕСТИТЬ ВТ_ОсновныеМестаРаботыСотрудников
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника КАК ОсновноеМестоРаботыСотрудника
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудника.Активность
	|	И ОсновноеМестоРаботыСотрудника.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Сотрудник КАК Сотрудник,
	|	ВложенныйЗапрос.Подразделение КАК Подразделение,
	|	ВложенныйЗапрос.Период КАК НачалоПериода,
	|	МИНИМУМ(ЕСТЬNULL(ВТ_ОсновныеМестаРаботыСотрудников.Период, &КонецПериода)) КАК КонецПериода,
	|	ЕСТЬNULL(ВТ_МВЗСотрудников.МВЗ, ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяСсылка)) КАК МВЗ,
	|	ВложенныйЗапрос.Должность КАК Должность
	|ПОМЕСТИТЬ ВТ_ПериодыРаботыСотрудников
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_ОсновныеМестаРаботыСотрудников.Период КАК Период,
	|		ВТ_ОсновныеМестаРаботыСотрудников.Сотрудник КАК Сотрудник,
	|		ВТ_ОсновныеМестаРаботыСотрудников.Подразделение КАК Подразделение,
	|		ВТ_ОсновныеМестаРаботыСотрудников.МоментВремени КАК МоментВремени,
	|		ВТ_ОсновныеМестаРаботыСотрудников.Должность КАК Должность
	|	ИЗ
	|		ВТ_ОсновныеМестаРаботыСотрудников КАК ВТ_ОсновныеМестаРаботыСотрудников
	|	ГДЕ
	|		ВТ_ОсновныеМестаРаботыСотрудников.ОсновноеМестоРаботы) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеМестаРаботыСотрудников КАК ВТ_ОсновныеМестаРаботыСотрудников
	|		ПО ВложенныйЗапрос.Сотрудник = ВТ_ОсновныеМестаРаботыСотрудников.Сотрудник
	|			И ВложенныйЗапрос.МоментВремени < ВТ_ОсновныеМестаРаботыСотрудников.МоментВремени
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗСотрудников КАК ВТ_МВЗСотрудников
	|		ПО ВложенныйЗапрос.Сотрудник = ВТ_МВЗСотрудников.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Сотрудник,
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.Период,
	|	ЕСТЬNULL(ВТ_МВЗСотрудников.МВЗ, ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяСсылка)),
	|	ВложенныйЗапрос.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗПодразделений.Период КАК Период,
	|	МВЗПодразделений.Подразделение КАК Подразделение,
	|	МВЗПодразделений.МВЗ КАК МВЗ,
	|	МВЗПодразделений.Использовать КАК Использовать,
	|	МВЗПодразделений.МоментВремени КАК МоментВремени
	|ПОМЕСТИТЬ ВТ_МВЗПодразделений
	|ИЗ
	|	РегистрСведений.МВЗПодразделений КАК МВЗПодразделений
	|ГДЕ
	|	МВЗПодразделений.Подразделение.Владелец = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Подразделение КАК Подразделение,
	|	ВложенныйЗапрос.МВЗ КАК МВЗ,
	|	ВложенныйЗапрос.Период КАК НачалоПериода,
	|	МИНИМУМ(ЕСТЬNULL(ВТ_МВЗПодразделений.Период, &КонецПериода)) КАК КонецПериода,
	|	ВложенныйЗапрос.МоментВремени КАК МоментВремени
	|ПОМЕСТИТЬ ВТ_ПериодыМВЗ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_МВЗПодразделений.Период КАК Период,
	|		ВТ_МВЗПодразделений.Подразделение КАК Подразделение,
	|		ВТ_МВЗПодразделений.МВЗ КАК МВЗ,
	|		ВТ_МВЗПодразделений.МоментВремени КАК МоментВремени
	|	ИЗ
	|		ВТ_МВЗПодразделений КАК ВТ_МВЗПодразделений
	|	ГДЕ
	|		ВТ_МВЗПодразделений.Использовать) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗПодразделений КАК ВТ_МВЗПодразделений
	|		ПО ВложенныйЗапрос.Подразделение = ВТ_МВЗПодразделений.Подразделение
	|			И ВложенныйЗапрос.МоментВремени < ВТ_МВЗПодразделений.МоментВремени
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.МВЗ,
	|	ВложенныйЗапрос.МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗДолжностей.Период КАК Период,
	|	МВЗДолжностей.Должность КАК Должность,
	|	МВЗДолжностей.МВЗ КАК МВЗ,
	|	МВЗДолжностей.Использовать КАК Использовать,
	|	МВЗДолжностей.МоментВремени КАК МоментВремени
	|ПОМЕСТИТЬ ВТ_МВЗДолжностей
	|ИЗ
	|	РегистрСведений.МВЗДолжностей КАК МВЗДолжностей
	|ГДЕ
	|	МВЗДолжностей.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Должность КАК Должность,
	|	ВложенныйЗапрос.МВЗ КАК МВЗ,
	|	ВложенныйЗапрос.Период КАК НачалоПериода,
	|	МИНИМУМ(ЕСТЬNULL(ВТ_МВЗДолжностей.Период, &КонецПериода)) КАК КонецПериода,
	|	ВложенныйЗапрос.МоментВремени КАК МоментВремени
	|ПОМЕСТИТЬ ВТ_ПериодыМВЗДолжностей
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_МВЗДолжностей.Период КАК Период,
	|		ВТ_МВЗДолжностей.Должность КАК Должность,
	|		ВТ_МВЗДолжностей.МВЗ КАК МВЗ,
	|		ВТ_МВЗДолжностей.МоментВремени КАК МоментВремени
	|	ИЗ
	|		ВТ_МВЗДолжностей КАК ВТ_МВЗДолжностей
	|	ГДЕ
	|		ВТ_МВЗДолжностей.Использовать) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗДолжностей КАК ВТ_МВЗДолжностей
	|		ПО ВложенныйЗапрос.Должность = ВТ_МВЗДолжностей.Должность
	|			И ВложенныйЗапрос.МоментВремени < ВТ_МВЗДолжностей.МоментВремени
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Должность,
	|	ВложенныйЗапрос.МВЗ,
	|	ВложенныйЗапрос.МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыдачаДежурныхСредствЗащитыТовары.Ссылка КАК ДокументВыдачи,
	|	ВыдачаДежурныхСредствЗащитыТовары.Номенклатура КАК Номенклатура,
	|	ВыдачаДежурныхСредствЗащитыТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВыдачаДежурныхСредствЗащитыТовары.Цена КАК Цена,
	|	ВыдачаДежурныхСредствЗащитыТовары.Ссылка.Дата КАК ДатаВыдачи,
	|	ВыдачаДежурныхСредствЗащитыТовары.Ссылка.Организация КАК Организация,
	|	ВыдачаДежурныхСредствЗащитыТовары.Количество КАК Количество,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Комплект,
	|	ВыдачаДежурныхСредствЗащитыТовары.Ссылка.Сотрудник КАК Сотрудник,
	|	ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяСсылка) КАК МВЗ
	|ПОМЕСТИТЬ ВТ_ДокументыВыдачи
	|ИЗ
	|	Документ.ВыдачаДежурныхСредствЗащиты.Товары КАК ВыдачаДежурныхСредствЗащитыТовары
	|ГДЕ
	|	ВыдачаДежурныхСредствЗащитыТовары.Ссылка В(&МассивДокументовВыдачи)
	|	И ВыдачаДежурныхСредствЗащитыТовары.Номенклатура.Поставщик В(&МассивПоставщиков)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыдачаСредствЗащитыСотрудникуТовары.Ссылка,
	|	ВыдачаСредствЗащитыСотрудникуТовары.Номенклатура,
	|	ВыдачаСредствЗащитыСотрудникуТовары.ХарактеристикаНоменклатуры,
	|	ВыдачаСредствЗащитыСотрудникуТовары.Цена,
	|	ВыдачаСредствЗащитыСотрудникуТовары.Ссылка.Дата,
	|	ВыдачаСредствЗащитыСотрудникуТовары.Ссылка.Организация,
	|	ВЫБОР
	|		КОГДА ВыдачаСредствЗащитыСотрудникуТовары.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ВыдачаСредствЗащитыСотрудникуТовары.Количество
	|		ИНАЧЕ ВыдачаСредствЗащитыСотрудникуТовары.Количество * ВыдачаСредствЗащитыСотрудникуТовары.КоличествоВКомплекте
	|	КОНЕЦ,
	|	ВыдачаСредствЗащитыСотрудникуТовары.Комплект,
	|	ВыдачаСредствЗащитыСотрудникуТовары.Сотрудник,
	|	ВыдачаСредствЗащитыСотрудникуТовары.Ссылка.МВЗ
	|ИЗ
	|	Документ.ВыдачаСредствЗащитыСотруднику.Товары КАК ВыдачаСредствЗащитыСотрудникуТовары
	|ГДЕ
	|	ВыдачаСредствЗащитыСотрудникуТовары.Ссылка В(&МассивДокументовВыдачи)
	|	И НЕ ВыдачаСредствЗащитыСотрудникуТовары.НеВыдано
	|	И ВыдачаСредствЗащитыСотрудникуТовары.Номенклатура.Поставщик В(&МассивПоставщиков)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДокументыВыдачи.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_ДокументыВыдачи.Номенклатура КАК Номенклатура,
	|	ВТ_ДокументыВыдачи.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ДокументыВыдачи.Цена КАК Цена,
	|	ВТ_ДокументыВыдачи.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ДокументыВыдачи.Организация КАК Организация,
	|	ВТ_ДокументыВыдачи.Количество КАК Количество,
	|	ВТ_ДокументыВыдачи.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА ВТ_ДокументыВыдачи.МВЗ = ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяСсылка)
	|			ТОГДА ВТ_ПериодыРаботыСотрудников.МВЗ
	|		ИНАЧЕ ВТ_ДокументыВыдачи.МВЗ
	|	КОНЕЦ КАК МВЗ,
	|	ВТ_ПериодыРаботыСотрудников.Подразделение КАК Подразделение,
	|	ВТ_ПериодыРаботыСотрудников.Должность КАК Должность,
	|	ВТ_ДокументыВыдачи.Комплект КАК Комплект
	|ПОМЕСТИТЬ ВТ_ВыдачаСПодразделениями
	|ИЗ
	|	ВТ_ДокументыВыдачи КАК ВТ_ДокументыВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыРаботыСотрудников КАК ВТ_ПериодыРаботыСотрудников
	|		ПО ВТ_ДокументыВыдачи.Сотрудник = ВТ_ПериодыРаботыСотрудников.Сотрудник
	|			И ВТ_ДокументыВыдачи.ДатаВыдачи <= ВТ_ПериодыРаботыСотрудников.КонецПериода
	|			И ВТ_ДокументыВыдачи.ДатаВыдачи > ВТ_ПериодыРаботыСотрудников.НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВыдачаСПодразделениями.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_ВыдачаСПодразделениями.Номенклатура КАК Номенклатура,
	|	ВТ_ВыдачаСПодразделениями.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ВыдачаСПодразделениями.Цена КАК Цена,
	|	ВТ_ВыдачаСПодразделениями.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ВыдачаСПодразделениями.Организация КАК Организация,
	|	ВТ_ВыдачаСПодразделениями.Количество КАК Количество,
	|	ВТ_ВыдачаСПодразделениями.Сотрудник КАК Сотрудник,
	|	ВЫБОР
	|		КОГДА ВТ_ВыдачаСПодразделениями.МВЗ = ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ПериодыМВЗ.МВЗ ЕСТЬ NULL
	|						ТОГДА ВЫБОР
	|								КОГДА ВТ_ПериодыМВЗДолжностей.МВЗ ЕСТЬ NULL
	|									ТОГДА ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяСсылка)
	|								ИНАЧЕ ВТ_ПериодыМВЗДолжностей.МВЗ
	|							КОНЕЦ
	|					ИНАЧЕ ВТ_ПериодыМВЗ.МВЗ
	|				КОНЕЦ
	|		ИНАЧЕ ВТ_ВыдачаСПодразделениями.МВЗ
	|	КОНЕЦ КАК МВЗ,
	|	ВТ_ВыдачаСПодразделениями.Подразделение КАК Подразделение,
	|	ВТ_ВыдачаСПодразделениями.Должность КАК Должность,
	|	ВТ_ВыдачаСПодразделениями.Комплект КАК Комплект
	|ПОМЕСТИТЬ ВТ_ВыдачаСМВЗ
	|ИЗ
	|	ВТ_ВыдачаСПодразделениями КАК ВТ_ВыдачаСПодразделениями
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыМВЗ КАК ВТ_ПериодыМВЗ
	|		ПО ВТ_ВыдачаСПодразделениями.Подразделение = ВТ_ПериодыМВЗ.Подразделение
	|			И ВТ_ВыдачаСПодразделениями.ДокументВыдачи.Дата <= ВТ_ПериодыМВЗ.КонецПериода
	|			И ВТ_ВыдачаСПодразделениями.ДокументВыдачи.Дата > ВТ_ПериодыМВЗ.НачалоПериода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыМВЗДолжностей КАК ВТ_ПериодыМВЗДолжностей
	|		ПО ВТ_ВыдачаСПодразделениями.Должность = ВТ_ПериодыМВЗДолжностей.Должность
	|			И ВТ_ВыдачаСПодразделениями.ДокументВыдачи.Дата <= ВТ_ПериодыМВЗДолжностей.КонецПериода
	|			И ВТ_ВыдачаСПодразделениями.ДокументВыдачи.Дата > ВТ_ПериодыМВЗДолжностей.НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ВыдачаСМВЗ.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ВыдачаВППС.ДокументВыдачи КАК ДокументВыдачи,
	|	ВТ_ВыдачаПоGTIN.КодМаркировки КАК КодМаркировки,
	|	ВТ_ВыдачаСМВЗ.Организация КАК Организация,
	|	ВТ_ВыдачаПоGTIN.GTIN КАК GTIN,
	|	ВТ_ВыдачаВППС.Номенклатура КАК Номенклатура,
	|	ВТ_ВыдачаВППС.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ВыдачаСМВЗ.Цена КАК Цена,
	|	ВТ_ВыдачаВППС.Ссылка.Дата КАК ДатаДокумента,
	|	ВТ_ВыдачаВППС.Ссылка.Номер КАК НомерДокумента,
	|	ВЫБОР
	|		КОГДА ВТ_ВыдачаВППС.ДокументВыдачи ССЫЛКА Документ.ВыдачаДежурныхСредствЗащиты
	|			ТОГДА ВТ_ВыдачаВППС.ДокументВыдачи.Склад.КодЗаводаДляВыгрузкиВSAP
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_ВыдачаВППС.ДокументВыдачи.ВидВыдачиСИЗ = ЗНАЧЕНИЕ(Перечисление.ВидыВыдачиСИЗ.КоллективнаяВыдача)
	|					ТОГДА ВТ_ВыдачаВППС.ДокументВыдачи.СкладОтправитель.КодЗаводаДляВыгрузкиВSAP
	|				ИНАЧЕ ВТ_ВыдачаВППС.ДокументВыдачи.Склад.КодЗаводаДляВыгрузкиВSAP
	|			КОНЕЦ
	|	КОНЕЦ КАК КодЗавода,
	|	ВЫБОР
	|		КОГДА ВТ_ВыдачаПоGTIN.КодМаркировки ЕСТЬ NULL
	|			ТОГДА ВТ_ВыдачаВППС.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество,
	|	ВТ_ВыдачаСМВЗ.Комплект КАК Комплект,
	|	ВЫБОР
	|		КОГДА ВТ_ВыдачаСМВЗ.ДокументВыдачи ССЫЛКА Документ.ВыдачаДежурныхСредствЗащиты
	|			ТОГДА ВТ_ВыдачаСМВЗ.ДокументВыдачи.Склад.LGNUM_LGTYP
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_ВыдачаСМВЗ.ДокументВыдачи.ВидВыдачиСИЗ = ЗНАЧЕНИЕ(Перечисление.ВидыВыдачиСИЗ.КоллективнаяВыдача)
	|					ТОГДА ВТ_ВыдачаСМВЗ.ДокументВыдачи.СкладОтправитель.LGNUM_LGTYP
	|				ИНАЧЕ ВТ_ВыдачаСМВЗ.ДокументВыдачи.Склад.LGNUM_LGTYP
	|			КОНЕЦ
	|	КОНЕЦ КАК LGNUM_LGTYP,
	|	ВТ_ВыдачаВППС.МВЗ КАК МВЗ
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	ВТ_ВыдачаВППС КАК ВТ_ВыдачаВППС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыдачаСМВЗ КАК ВТ_ВыдачаСМВЗ
	|		ПО (ВТ_ВыдачаСМВЗ.ДокументВыдачи = ВТ_ВыдачаВППС.ДокументВыдачи)
	|			И (ВТ_ВыдачаСМВЗ.Номенклатура = ВТ_ВыдачаВППС.Номенклатура)
	|			И (ВТ_ВыдачаСМВЗ.ХарактеристикаНоменклатуры = ВТ_ВыдачаВППС.ХарактеристикаНоменклатуры)
	|			И (ВТ_ВыдачаСМВЗ.МВЗ = ВТ_ВыдачаВППС.МВЗ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыдачаПоGTIN КАК ВТ_ВыдачаПоGTIN
	|		ПО ВТ_ВыдачаВППС.ДокументВыдачи = ВТ_ВыдачаПоGTIN.Регистратор
	|			И ВТ_ВыдачаВППС.Номенклатура = ВТ_ВыдачаПоGTIN.Номенклатура
	|			И ВТ_ВыдачаВППС.ХарактеристикаНоменклатуры = ВТ_ВыдачаПоGTIN.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Результат.КодМаркировки КАК КодМаркировки,
	|	ВТ_Результат.Номенклатура КАК Номенклатура,
	|	ВТ_Результат.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_Результат.Цена КАК Цена,
	|	ВТ_Результат.ДатаДокумента КАК ДатаДокумента,
	|	ВТ_Результат.НомерДокумента КАК НомерДокумента,
	|	ВТ_Результат.Номенклатура.Артикул КАК Артикул,
	|	ВТ_Результат.Номенклатура.КодСинхронизации КАК КодНоменклатуры,
	|	ВТ_Результат.ХарактеристикаНоменклатуры.КодSAP КАК НаименованиеХарактеристики,
	|	ВТ_Результат.КодЗавода КАК КодЗавода,
	|	ВТ_Результат.Количество КАК Количество,
	|	ВТ_Результат.Количество * ВТ_Результат.Цена КАК Сумма,
	|	ВТ_Результат.Комплект КАК Комплект,
	|	ВТ_Результат.LGNUM_LGTYP КАК LGNUM_LGTYP
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыгруженныеДокументыППСвСАП КАК ВыгруженныеДокументыППСвСАП
	|		ПО (ВТ_Результат.ДатаДокумента = НАЧАЛОПЕРИОДА(ВыгруженныеДокументыППСвСАП.ДокументППС.Дата, ДЕНЬ))
	|			И ВТ_Результат.НомерДокумента = ВыгруженныеДокументыППСвСАП.ДокументППС.Номер
	|			И ВТ_Результат.КодЗавода = ВыгруженныеДокументыППСвСАП.КодЗавода
	|ГДЕ
	|	ВыгруженныеДокументыППСвСАП.КодЗаказа ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("МассивДокументовВыдачи",	МассивДокументовВыдачи);
	Запрос.УстановитьПараметр("МассивДокументовППС",	МассивДокументовППС);
	Запрос.УстановитьПараметр("Организация",			Объект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода",			НачалоДня(Объект.НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",			КонецДня(Объект.КонецПериода));
	Запрос.УстановитьПараметр("МассивПоставщиков",		МассивПоставщиков);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	МассивКодовМаркировки = Новый Массив;
	
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицыЗапроса.КодМаркировки) Тогда //проверяем, был ли уже этот код маркировки
		
			Если МассивКодовМаркировки.Найти(СтрокаТаблицыЗапроса.КодМаркировки) = Неопределено Тогда
				МассивКодовМаркировки.Добавить(СтрокаТаблицыЗапроса.КодМаркировки);
			Иначе
				Продолжить;
			КонецЕсли;	
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ТаблицаВыдачи.Добавить(),СтрокаТаблицыЗапроса);
		
	КонецЦикла;
	
	//Танцюра А.Н. -- №141959 BUG: Снять запрет на выгрузку в САП при наличии "!" -- 03.11.2021 <<<
	//ПроверитьВыгрузкуКомплектов(); 
	//Танцюра А.Н. -- №141959 BUG: Снять запрет на выгрузку в САП при наличии "!" -- 03.11.2021 >>>
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьВыгрузкуКомплектов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаВыдачи.ДатаДокумента КАК ДатаДокумента,
	|	ТаблицаВыдачи.НомерДокумента КАК НомерДокумента,
	|	ТаблицаВыдачи.КодЗавода КАК КодЗавода,
	|	ТаблицаВыдачи.Номенклатура КАК Номенклатура,
	|	ТаблицаВыдачи.Комплект КАК Комплект
	|ПОМЕСТИТЬ ВТ_ТаблицаВыдачи
	|ИЗ
	|	&ТаблицаВыдачи КАК ТаблицаВыдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереходПраваСобственности.Ссылка КАК ДокументППС,
	|	ВТ_ТаблицаВыдачи.КодЗавода КАК КодЗавода,
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаВыдачи.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ВТ_ТаблицаВыдачи.Номенклатура
	|		ИНАЧЕ ВТ_ТаблицаВыдачи.Комплект
	|	КОНЕЦ КАК Комплект
	|ПОМЕСТИТЬ ВТ_ВыдачаКомплеты
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПереходПраваСобственности КАК ПереходПраваСобственности
	|		ПО (НАЧАЛОПЕРИОДА(ВТ_ТаблицаВыдачи.ДатаДокумента, ДЕНЬ) = НАЧАЛОПЕРИОДА(ПереходПраваСобственности.Дата, ДЕНЬ))
	|			И ВТ_ТаблицаВыдачи.НомерДокумента = ПереходПраваСобственности.Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ВыдачаКомплеты.ДокументППС КАК ДокументППС,
	|	ВТ_ВыдачаКомплеты.КодЗавода КАК КодЗавода,
	|	Номенклатура.Ссылка КАК Комплект
	|ПОМЕСТИТЬ ВТ_КомплектыДляПроверки
	|ИЗ
	|	ВТ_ВыдачаКомплеты КАК ВТ_ВыдачаКомплеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВТ_ВыдачаКомплеты.Комплект = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.Комплект
	|	И НЕ Номенклатура.ВидУчетаКомплектаДляППС = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаКомплектов.УчитыватьКакКомплектующие)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_КомплектыДляПроверки.ДокументППС КАК ДокументППС,
	|	ВТ_КомплектыДляПроверки.КодЗавода КАК КодЗавода,
	|	ЕСТЬNULL(ВыгруженныеКомплектыППСвСАП.message_type, ""300"") КАК Статус
	|ИЗ
	|	ВТ_КомплектыДляПроверки КАК ВТ_КомплектыДляПроверки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыгруженныеКомплектыППСвСАП КАК ВыгруженныеКомплектыППСвСАП
	|		ПО ВТ_КомплектыДляПроверки.ДокументППС = ВыгруженныеКомплектыППСвСАП.ДокументППС
	|			И ВТ_КомплектыДляПроверки.КодЗавода = ВыгруженныеКомплектыППСвСАП.КодЗавода
	|			И ВТ_КомплектыДляПроверки.Комплект = ВыгруженныеКомплектыППСвСАП.Комплект
	|ГДЕ
	|	ЕСТЬNULL(ВыгруженныеКомплектыППСвСАП.message_type, ""300"") = ""300""";
	
	Запрос.УстановитьПараметр("ТаблицаВыдачи",ТаблицаВыдачи.Выгрузить());
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;	
	
	ТаблицаЗапроса = Результат.Выгрузить();
	
	ТабДокументов = РеквизитФормыВЗначение("ТаблицаДокументов");
	
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		СтруктураПоиска = Новый Структура("ДокументППС, КодЗавода", СтрокаТаблицыЗапроса.ДокументППС, СтрокаТаблицыЗапроса.КодЗавода);
		НайденныеСтроки = ТабДокументов.НайтиСтроки(СтруктураПоиска);
		НайденныеСтроки[0].ОшибкаВыгрузкиКомплектов = Истина;
		
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ТабДокументов,"ТаблицаДокументов");
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьМассивПоставщиков()
	
	МассивПоставщиков = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ТаблицаПоставщиков Цикл
		
		Если СтрокаТаблицы.Использовать Тогда
			МассивПоставщиков.Добавить(СтрокаТаблицы.Поставщик);
		КонецЕсли;	
		
	КонецЦикла;	
	
	Возврат МассивПоставщиков;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТаблицу(Команда)
	
	ЗаполнитьТаблицуНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьИнформациюНаСервере(ДатаДокумента, НомерДокумента, ОрганизацияКод, ОрганизацияНаименование, ОрганизацияИНН, ОрганизацияКПП, КодЗавода)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаВыдачи.КодМаркировки КАК КодМаркировки,
	|	ТаблицаВыдачи.ДатаДокумента КАК ДатаДокумента,
	|	ТаблицаВыдачи.НомерДокумента КАК НомерДокумента,
	|	ТаблицаВыдачи.КодЗавода КАК КодЗавода,
	|	ТаблицаВыдачи.Номенклатура КАК Номенклатура,
	|	ТаблицаВыдачи.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаВыдачи.Артикул КАК Артикул,
	|	ТаблицаВыдачи.Цена КАК Цена,
	|	ТаблицаВыдачи.КодНоменклатуры КАК КодНоменклатуры,
	|	ТаблицаВыдачи.НаименованиеХарактеристики КАК НаименованиеХарактеристики,
	|	ТаблицаВыдачи.Количество КАК Количество,
	|	ТаблицаВыдачи.Сумма КАК Сумма,
	|	ТаблицаВыдачи.Комплект КАК Комплект
	|ПОМЕСТИТЬ ВТ_ТаблицаВыдачи
	|ИЗ
	|	&ТаблицаВыдачи КАК ТаблицаВыдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаВыдачи.ДатаДокумента КАК ДатаДокумента,
	|	ВТ_ТаблицаВыдачи.НомерДокумента КАК НомерДокумента,
	|	ВТ_ТаблицаВыдачи.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаВыдачи.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаВыдачи.Артикул КАК Артикул,
	|	ВТ_ТаблицаВыдачи.Цена КАК Цена,
	|	ВТ_ТаблицаВыдачи.КодНоменклатуры КАК КодНоменклатуры,
	|	ВТ_ТаблицаВыдачи.НаименованиеХарактеристики КАК НаименованиеХарактеристики,
	|	СУММА(ВТ_ТаблицаВыдачи.Количество) КАК Количество,
	|	СУММА(ВТ_ТаблицаВыдачи.Сумма) КАК Сумма,
	|	ВТ_ТаблицаВыдачи.Комплект КАК Комплект
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|ГДЕ
	|	ВТ_ТаблицаВыдачи.ДатаДокумента = &ДатаДокумента
	|	И ВТ_ТаблицаВыдачи.НомерДокумента = &НомерДокумента
	|	И ВТ_ТаблицаВыдачи.КодЗавода = &КодЗавода
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаВыдачи.ДатаДокумента,
	|	ВТ_ТаблицаВыдачи.НомерДокумента,
	|	ВТ_ТаблицаВыдачи.Номенклатура,
	|	ВТ_ТаблицаВыдачи.ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаВыдачи.Артикул,
	|	ВТ_ТаблицаВыдачи.Цена,
	|	ВТ_ТаблицаВыдачи.КодНоменклатуры,
	|	ВТ_ТаблицаВыдачи.НаименованиеХарактеристики,
	|	ВТ_ТаблицаВыдачи.Комплект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаВыдачи.ДатаДокумента КАК ДатаДокумента,
	|	ВТ_ТаблицаВыдачи.НомерДокумента КАК НомерДокумента,
	|	ВТ_ТаблицаВыдачи.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаВыдачи.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаВыдачи.КодМаркировки КАК КодМаркировки,
	|	ВТ_ТаблицаВыдачи.Цена КАК Цена,
	|	ВТ_ТаблицаВыдачи.Количество КАК Количество
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|ГДЕ
	|	ВТ_ТаблицаВыдачи.НомерДокумента = &НомерДокумента
	|	И ВТ_ТаблицаВыдачи.ДатаДокумента = &ДатаДокумента
	|	И ВТ_ТаблицаВыдачи.КодЗавода = &КодЗавода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ТаблицаВыдачи.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаВыдачи.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаВыдачи.Комплект КАК Комплект
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|ГДЕ
	|	НЕ ВТ_ТаблицаВыдачи.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ТаблицаВыдачи",	ТаблицаВыдачи.Выгрузить());
	Запрос.УстановитьПараметр("ДатаДокумента",	ДатаДокумента);
	Запрос.УстановитьПараметр("НомерДокумента",	НомерДокумента);
	Запрос.УстановитьПараметр("КодЗавода",		КодЗавода);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТабВыдачи 					= Результат[1].Выгрузить();
	ТабКодовМаркировки 			= Результат[2].Выгрузить();
	ТабРазобранныхКомплектов	= Результат[3].Выгрузить();
	
	ХМЛ = Новый ЗаписьXML;
	
	ХМЛ.УстановитьСтроку();
	
	ХМЛ.ЗаписатьОбъявлениеXML();
	
	ХМЛ.ЗаписатьНачалоЭлемента("Document");
	
	ХМЛ.ЗаписатьНачалоЭлемента("Order-Header");
	
	ХМЛ.ЗаписатьНачалоЭлемента("DocType");
	ХМЛ.ЗаписатьТекст("ORDERS");
	ХМЛ.ЗаписатьКонецЭлемента(); //DocType
	
	ХМЛ.ЗаписатьНачалоЭлемента("OrderNumber");
	ХМЛ.ЗаписатьТекст(НомерДокумента);
	ХМЛ.ЗаписатьКонецЭлемента(); //OrderNumber
	
	ХМЛ.ЗаписатьНачалоЭлемента("OrderDate");
	ХМЛ.ЗаписатьТекст(Формат(ДатаДокумента,"ДФ=yyyy-MM-dd"));
	ХМЛ.ЗаписатьКонецЭлемента(); //OrderDate
	
	ХМЛ.ЗаписатьНачалоЭлемента("ExpectedDeliveryDate");
	ХМЛ.ЗаписатьТекст(Формат(ДатаДокумента,"ДФ=yyyy-MM-dd"));
	ХМЛ.ЗаписатьКонецЭлемента(); //ExpectedDeliveryDate
	
	ХМЛ.ЗаписатьНачалоЭлемента("CustomerType");
	ХМЛ.ЗаписатьТекст("LEGAL");
	ХМЛ.ЗаписатьКонецЭлемента(); //CustomerType
	
	ХМЛ.ЗаписатьНачалоЭлемента("CardNumber");
	ХМЛ.ЗаписатьКонецЭлемента(); //CardNumber
	
	ХМЛ.ЗаписатьНачалоЭлемента("PaymentTerms");
	ХМЛ.ЗаписатьТекст("9002");
	ХМЛ.ЗаписатьКонецЭлемента(); //PaymentTerms
	
	ХМЛ.ЗаписатьНачалоЭлемента("ShippingCond");
	ХМЛ.ЗаписатьТекст("02");
	ХМЛ.ЗаписатьКонецЭлемента(); //ShippingCond
	
	ХМЛ.ЗаписатьНачалоЭлемента("SelfPickUpPoint");
	ХМЛ.ЗаписатьТекст(КодЗавода);
	ХМЛ.ЗаписатьКонецЭлемента(); //SelfPickUpPoint
	
	ХМЛ.ЗаписатьНачалоЭлемента("Vtweg");
	ХМЛ.ЗаписатьТекст(Прав(Объект.Организация.КаналСбытаSAP,2));
	ХМЛ.ЗаписатьКонецЭлемента(); //Vtweg
	
	ХМЛ.ЗаписатьНачалоЭлемента("OrderDiscount");
	ХМЛ.ЗаписатьКонецЭлемента(); //OrderDiscount
	
	ХМЛ.ЗаписатьНачалоЭлемента("Remarks");
	ХМЛ.ЗаписатьКонецЭлемента(); //Remarks
	
	ХМЛ.ЗаписатьНачалоЭлемента("Contract_num");
	Если ОбщегоНазначения.ЕстьРеквизитОбъекта("НомерДоговора", Объект.Организация.Метаданные()) Тогда
		ХМЛ.ЗаписатьТекст(Объект.Организация.НомерДоговора);
	КонецЕсли;	
	ХМЛ.ЗаписатьКонецЭлемента(); //Contract_num
	
	ХМЛ.ЗаписатьКонецЭлемента(); //Order-Header
	
	ХМЛ.ЗаписатьНачалоЭлемента("Order-Parties");
	
	ХМЛ.ЗаписатьНачалоЭлемента("Buyer");
	
	ХМЛ.ЗаписатьНачалоЭлемента("SoldToCode");
	ХМЛ.ЗаписатьТекст(ОрганизацияКод);
	ХМЛ.ЗаписатьКонецЭлемента(); //SoldToCode
	
	ХМЛ.ЗаписатьНачалоЭлемента("Name");
	ХМЛ.ЗаписатьТекст(ОрганизацияНаименование);
	ХМЛ.ЗаписатьКонецЭлемента(); //Name
	
	ХМЛ.ЗаписатьНачалоЭлемента("INN");
	ХМЛ.ЗаписатьТекст(ОрганизацияИНН);
	ХМЛ.ЗаписатьКонецЭлемента(); //INN
	
	ХМЛ.ЗаписатьНачалоЭлемента("KPP");
	ХМЛ.ЗаписатьТекст(ОрганизацияКПП);
	ХМЛ.ЗаписатьКонецЭлемента(); //KPP
	
	ХМЛ.ЗаписатьНачалоЭлемента("Address");
	
	ХМЛ.ЗаписатьНачалоЭлемента("PostCode");
	ХМЛ.ЗаписатьКонецЭлемента(); //PostCode
	
	ХМЛ.ЗаписатьНачалоЭлемента("City");
	ХМЛ.ЗаписатьКонецЭлемента(); //City
	
	ХМЛ.ЗаписатьНачалоЭлемента("Street");
	ХМЛ.ЗаписатьКонецЭлемента(); //Street
	
	ХМЛ.ЗаписатьНачалоЭлемента("HouseN");
	ХМЛ.ЗаписатьКонецЭлемента(); //HouseN
	
	ХМЛ.ЗаписатьНачалоЭлемента("CellPhone");
	ХМЛ.ЗаписатьКонецЭлемента(); //CellPhone
	
	ХМЛ.ЗаписатьНачалоЭлемента("Email");
	ХМЛ.ЗаписатьКонецЭлемента(); //Email
	
	ХМЛ.ЗаписатьКонецЭлемента(); //Address
	
	ХМЛ.ЗаписатьНачалоЭлемента("PurchasingGroup");
	ХМЛ.ЗаписатьТекст("000");
	ХМЛ.ЗаписатьКонецЭлемента(); //PurchasingGroup
	
	ХМЛ.ЗаписатьКонецЭлемента(); //Buyer
	
	ХМЛ.ЗаписатьКонецЭлемента(); //Order-Parties
	
	КоличествоНоменклатурыПоДокументу = ТабВыдачи.Количество();
	
	ВсегоПоДокументу = 0;
	
	Сч = 0;
	
	SupplierItemCode 	= "";
	ItemDescription		= "";
	Size 				= "";
	ТекущийКомплект 	= Справочники.Номенклатура.ПустаяСсылка();
	КоличествоВыдано	= 0;
	Is_set				= "False";
	
	Для Каждого СтрокаТабВыдачи Из ТабВыдачи Цикл
		
		Если ЗначениеЗаполнено(СтрокаТабВыдачи.Комплект) Тогда //комплект разобран
			
			Если СтрокаТабВыдачи.Комплект.ВидУчетаКомплектаДляППС = Перечисления.ВидыУчетаКомплектов.УчитыватьКакКомплект 
				ИЛИ СтрокаТабВыдачи.Комплект.ВидУчетаКомплектаДляППС = Перечисления.ВидыУчетаКомплектов.УчитыватьСогласноВыдаче Тогда
				
				SupplierItemCode 	= Формат(СтрокаТабВыдачи.Комплект.КодСинхронизации,"ЧГ=0");
				Size             	= ?(ЗначениеЗаполнено(СтрокаТабВыдачи.НаименованиеХарактеристики),СтрокаТабВыдачи.НаименованиеХарактеристики,"бр");
				ItemDescription		= СтрокаТабВыдачи.Комплект.Наименование;
				КоличествоВыдано 	= ПолучитьВыданноеКоличествоКомплектов(СтрокаТабВыдачи.Комплект,СтрокаТабВыдачи.Номенклатура,СтрокаТабВыдачи.Количество);
				Is_set				= "True";
				
				НайденныеСтроки = ТабРазобранныхКомплектов.НайтиСтроки(Новый Структура("Комплект",СтрокаТабВыдачи.Комплект));
				
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					
					SupplierItemCode = SupplierItemCode + "|" + Формат(НайденнаяСтрока.Номенклатура.КодСинхронизации,"ЧГ=0");
					
					Если ЗначениеЗаполнено(НайденнаяСтрока.ХарактеристикаНоменклатуры) Тогда
						Size = Size + "|" + НайденнаяСтрока.ХарактеристикаНоменклатуры.КодSAP;
					Иначе
						Size = Size + "|бр";
					КонецЕсли;
					
				КонецЦикла;
				
				Если ТекущийКомплект = СтрокаТабВыдачи.Комплект Тогда
					Продолжить;
				КонецЕсли;
				
				ТекущийКомплект = СтрокаТабВыдачи.Комплект;
				
			Иначе
				
				SupplierItemCode 	= Формат(СтрокаТабВыдачи.КодНоменклатуры,"ЧГ=0");
				ItemDescription		= СтрокаТабВыдачи.Номенклатура.Наименование;
				Size 				= ?(ЗначениеЗаполнено(СтрокаТабВыдачи.НаименованиеХарактеристики),СтрокаТабВыдачи.НаименованиеХарактеристики,"бр");
				ТекущийКомплект 	= Справочники.Номенклатура.ПустаяСсылка();
				КоличествоВыдано	= СтрокаТабВыдачи.Количество;
				Is_set				= "False";
				
			КонецЕсли;
			
		Иначе //комплект собран или простая выдача
			
			Если СтрокаТабВыдачи.Номенклатура.Комплект Тогда //бежим по комплектующим
				
				Если СтрокаТабВыдачи.Номенклатура.ВидУчетаКомплектаДляППС = Перечисления.ВидыУчетаКомплектов.УчитыватьКакКомплектующие Тогда // разбираем комплект и выгружаем, как обычную номенклатуру
					
					Для Каждого СтрокаКомплектующих Из СтрокаТабВыдачи.Номенклатура.Комплектующие Цикл
						
						РазмерКомплектующего = ПолучитьРазмерКомплектующего(СтрокаТабВыдачи.НаименованиеХарактеристики,СтрокаКомплектующих.Номенклатура);
						
						SupplierItemCode 	= Формат(СтрокаКомплектующих.Номенклатура.КодСинхронизации,"ЧГ=0");
						ItemDescription		= СтрокаКомплектующих.Номенклатура.Наименование;
						Size 				= ?(ЗначениеЗаполнено(РазмерКомплектующего),РазмерКомплектующего,"бр");
						ТекущийКомплект 	= СтрокаТабВыдачи.Комплект;
						КоличествоВыдано	= СтрокаТабВыдачи.Количество * СтрокаКомплектующих.Количество;
						Is_set				= "False";
						
						Сч = Сч + 1;
						
						ХМЛ.ЗаписатьНачалоЭлемента("Order-Lines");
						
						ХМЛ.ЗаписатьНачалоЭлемента("Line-Item");
						
						ХМЛ.ЗаписатьНачалоЭлемента("LineNumber");
						ХМЛ.ЗаписатьТекст(Формат(Сч,"ЧГ=0"));
						ХМЛ.ЗаписатьКонецЭлемента(); //LineNumber
						
						ХМЛ.ЗаписатьНачалоЭлемента("Is_set");
						ХМЛ.ЗаписатьТекст(Is_set);
						ХМЛ.ЗаписатьКонецЭлемента(); //Is_set
						
						ХМЛ.ЗаписатьНачалоЭлемента("BuyerItemCode");
						ХМЛ.ЗаписатьТекст(СтрокаТабВыдачи.Артикул);
						ХМЛ.ЗаписатьКонецЭлемента(); //BuyerItemCode
						
						ХМЛ.ЗаписатьНачалоЭлемента("SupplierItemCode");
						ХМЛ.ЗаписатьТекст(SupplierItemCode);
						ХМЛ.ЗаписатьКонецЭлемента(); //SupplierItemCode
						
						ХМЛ.ЗаписатьНачалоЭлемента("MatType");
						ХМЛ.ЗаписатьТекст("PRODUCT");
						ХМЛ.ЗаписатьКонецЭлемента(); //MatType
						
						ХМЛ.ЗаписатьНачалоЭлемента("ItemDescription");
						ХМЛ.ЗаписатьТекст(ItemDescription);
						ХМЛ.ЗаписатьКонецЭлемента(); //ItemDescription
						
						ХМЛ.ЗаписатьНачалоЭлемента("Size");
						ХМЛ.ЗаписатьТекст(Size);
						ХМЛ.ЗаписатьКонецЭлемента(); //Size
						
						ХМЛ.ЗаписатьНачалоЭлемента("OrderedQuantity");
						ХМЛ.ЗаписатьТекст(Формат(КоличествоВыдано,"ЧРД=.; ЧГ=0"));
						ХМЛ.ЗаписатьКонецЭлемента(); //OrderedQuantity
						
						ХМЛ.ЗаписатьНачалоЭлемента("PriceStandard");
						//ХМЛ.ЗаписатьТекст(Формат(СтрокаТабВыдачи.Цена,"ЧРД=.; ЧГ=0"));
						ХМЛ.ЗаписатьКонецЭлемента(); //PriceStandard
						
						ХМЛ.ЗаписатьНачалоЭлемента("PriceDiscount");
						//ХМЛ.ЗаписатьТекст(Формат(СтрокаТабВыдачи.Цена,"ЧРД=.; ЧГ=0"));
						ХМЛ.ЗаписатьКонецЭлемента(); //PriceDiscount
						
						ХМЛ.ЗаписатьНачалоЭлемента("TotalSum");
						//ХМЛ.ЗаписатьТекст(Формат(СтрокаТабВыдачи.Сумма,"ЧРД=.; ЧГ=0"));
						ХМЛ.ЗаписатьКонецЭлемента(); //TotalSum
						
						ХМЛ.ЗаписатьНачалоЭлемента("DiscountSum");
						ХМЛ.ЗаписатьТекст("0");
						ХМЛ.ЗаписатьКонецЭлемента(); //DiscountSum
						
						ХМЛ.ЗаписатьНачалоЭлемента("Sn-Lines");
						
						СтруктураПоискаСтрокМаркировки = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,Цена",СтрокаТабВыдачи.Номенклатура,СтрокаТабВыдачи.ХарактеристикаНоменклатуры,СтрокаТабВыдачи.Цена);
						
						НайденныеСтрокиТабМаркировки = ТабКодовМаркировки.НайтиСтроки(СтруктураПоискаСтрокМаркировки);
						
						Для Каждого НайденнаяСтрокаТабМаркировки Из НайденныеСтрокиТабМаркировки Цикл
							
							Если НЕ ЗначениеЗаполнено(НайденнаяСтрокаТабМаркировки.КодМаркировки) Тогда
								ВсегоПоДокументу = ВсегоПоДокументу + НайденнаяСтрокаТабМаркировки.Количество;
								Продолжить;
							КонецЕсли;	
							
							ВсегоПоДокументу = ВсегоПоДокументу + 1;
							
							ХМЛ.ЗаписатьНачалоЭлемента("sn");
							ХМЛ.ЗаписатьТекст(ПолучитьКодМаркировкиВbase64(НайденнаяСтрокаТабМаркировки.КодМаркировки));
							ХМЛ.ЗаписатьКонецЭлемента(); //sn
							
						КонецЦикла;
						
						ХМЛ.ЗаписатьКонецЭлемента(); //Sn-Lines
						
						ХМЛ.ЗаписатьКонецЭлемента(); //Line-Item
						
						ХМЛ.ЗаписатьКонецЭлемента(); //Order-Lines
						
					КонецЦикла;	
					
					Продолжить;
					
				Иначе
					
					SupplierItemCode 	= Формат(СтрокаТабВыдачи.КодНоменклатуры,"ЧГ=0");
					ItemDescription		= СтрокаТабВыдачи.Номенклатура.Наименование;
					Size 				= ?(ЗначениеЗаполнено(СтрокаТабВыдачи.НаименованиеХарактеристики),СтрокаТабВыдачи.НаименованиеХарактеристики,"бр");
					ТекущийКомплект 	= СтрокаТабВыдачи.Комплект;
					КоличествоВыдано	= СтрокаТабВыдачи.Количество;
					Is_set				= "True";
					
					Для Каждого СтрокаКомплектующих Из СтрокаТабВыдачи.Номенклатура.Комплектующие Цикл
						
						SupplierItemCode 	= SupplierItemCode + "|" + Формат(СтрокаКомплектующих.Номенклатура.КодСинхронизации,"ЧГ=0");
						Size				= Size + "|"  + ПолучитьРазмерКомплектующего(СтрокаТабВыдачи.НаименованиеХарактеристики,СтрокаКомплектующих.Номенклатура);
						
					КонецЦикла;	
					
				КонецЕсли;
			
			Иначе //простая выдача
				
				SupplierItemCode 	= Формат(СтрокаТабВыдачи.КодНоменклатуры,"ЧГ=0");
				ItemDescription		= СтрокаТабВыдачи.Номенклатура.Наименование;
				Size 				= ?(ЗначениеЗаполнено(СтрокаТабВыдачи.НаименованиеХарактеристики),СтрокаТабВыдачи.НаименованиеХарактеристики,"бр");
				ТекущийКомплект 	= СтрокаТабВыдачи.Комплект;
				КоличествоВыдано	= СтрокаТабВыдачи.Количество;
				Is_set				= "False";
				
			КонецЕсли;			
			
		КонецЕсли;
		
		Сч = Сч + 1;
		
		ХМЛ.ЗаписатьНачалоЭлемента("Order-Lines");
		
		ХМЛ.ЗаписатьНачалоЭлемента("Line-Item");
		
		ХМЛ.ЗаписатьНачалоЭлемента("LineNumber");
		ХМЛ.ЗаписатьТекст(Формат(Сч,"ЧГ=0"));
		ХМЛ.ЗаписатьКонецЭлемента(); //LineNumber
		
		ХМЛ.ЗаписатьНачалоЭлемента("Is_set");
		ХМЛ.ЗаписатьТекст(Is_set);
		ХМЛ.ЗаписатьКонецЭлемента(); //Is_set
		
		ХМЛ.ЗаписатьНачалоЭлемента("BuyerItemCode");
		ХМЛ.ЗаписатьТекст(СтрокаТабВыдачи.Артикул);
		ХМЛ.ЗаписатьКонецЭлемента(); //BuyerItemCode
		
		ХМЛ.ЗаписатьНачалоЭлемента("SupplierItemCode");
		ХМЛ.ЗаписатьТекст(SupplierItemCode);
		ХМЛ.ЗаписатьКонецЭлемента(); //SupplierItemCode
		
		ХМЛ.ЗаписатьНачалоЭлемента("MatType");
		ХМЛ.ЗаписатьТекст("PRODUCT");
		ХМЛ.ЗаписатьКонецЭлемента(); //MatType
		
		ХМЛ.ЗаписатьНачалоЭлемента("ItemDescription");
		ХМЛ.ЗаписатьТекст(ItemDescription);
		ХМЛ.ЗаписатьКонецЭлемента(); //ItemDescription
		
		ХМЛ.ЗаписатьНачалоЭлемента("Size");
		ХМЛ.ЗаписатьТекст(Size);
		ХМЛ.ЗаписатьКонецЭлемента(); //Size
		
		ХМЛ.ЗаписатьНачалоЭлемента("OrderedQuantity");
		ХМЛ.ЗаписатьТекст(Формат(КоличествоВыдано,"ЧРД=.; ЧГ=0"));
		ХМЛ.ЗаписатьКонецЭлемента(); //OrderedQuantity
		
		ХМЛ.ЗаписатьНачалоЭлемента("PriceStandard");
		//ХМЛ.ЗаписатьТекст(Формат(СтрокаТабВыдачи.Цена,"ЧРД=.; ЧГ=0"));
		ХМЛ.ЗаписатьКонецЭлемента(); //PriceStandard
		
		ХМЛ.ЗаписатьНачалоЭлемента("PriceDiscount");
		//ХМЛ.ЗаписатьТекст(Формат(СтрокаТабВыдачи.Цена,"ЧРД=.; ЧГ=0"));
		ХМЛ.ЗаписатьКонецЭлемента(); //PriceDiscount
		
		ХМЛ.ЗаписатьНачалоЭлемента("TotalSum");
		//ХМЛ.ЗаписатьТекст(Формат(СтрокаТабВыдачи.Сумма,"ЧРД=.; ЧГ=0"));
		ХМЛ.ЗаписатьКонецЭлемента(); //TotalSum
		
		ХМЛ.ЗаписатьНачалоЭлемента("DiscountSum");
		ХМЛ.ЗаписатьТекст("0");
		ХМЛ.ЗаписатьКонецЭлемента(); //DiscountSum
		
		ХМЛ.ЗаписатьНачалоЭлемента("Sn-Lines");
		
		СтруктураПоискаСтрокМаркировки = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры,Цена",СтрокаТабВыдачи.Номенклатура,СтрокаТабВыдачи.ХарактеристикаНоменклатуры,СтрокаТабВыдачи.Цена);
		
		НайденныеСтрокиТабМаркировки = ТабКодовМаркировки.НайтиСтроки(СтруктураПоискаСтрокМаркировки);
		
		Для Каждого НайденнаяСтрокаТабМаркировки Из НайденныеСтрокиТабМаркировки Цикл
			
			Если НЕ ЗначениеЗаполнено(НайденнаяСтрокаТабМаркировки.КодМаркировки) Тогда
				ВсегоПоДокументу = ВсегоПоДокументу + НайденнаяСтрокаТабМаркировки.Количество;
				Продолжить;
			КонецЕсли;	
			
			ВсегоПоДокументу = ВсегоПоДокументу + 1;
			
			ХМЛ.ЗаписатьНачалоЭлемента("sn");
			ХМЛ.ЗаписатьТекст(ПолучитьКодМаркировкиВbase64(НайденнаяСтрокаТабМаркировки.КодМаркировки));
			ХМЛ.ЗаписатьКонецЭлемента(); //sn
			
		КонецЦикла;
		
		ХМЛ.ЗаписатьКонецЭлемента(); //Sn-Lines
		
		ХМЛ.ЗаписатьКонецЭлемента(); //Line-Item
		
		ХМЛ.ЗаписатьКонецЭлемента(); //Order-Lines
		
	КонецЦикла;
	
	ХМЛ.ЗаписатьНачалоЭлемента("Order-Summary");
	
	ХМЛ.ЗаписатьНачалоЭлемента("TotalLines");
	ХМЛ.ЗаписатьТекст(Формат(ВсегоПоДокументу,"ЧГ=0"));
	ХМЛ.ЗаписатьКонецЭлемента(); //TotalLines
	
	ХМЛ.ЗаписатьНачалоЭлемента("TotalOrderedAmount");
	ХМЛ.ЗаписатьТекст(Формат(КоличествоНоменклатурыПоДокументу,"ЧГ=0"));
	ХМЛ.ЗаписатьКонецЭлемента(); //TotalOrderedAmount
	
	ХМЛ.ЗаписатьКонецЭлемента(); //Order-Summary
	
	ХМЛ.ЗаписатьКонецЭлемента(); //Document
	
	XML_Строка = ХМЛ.Закрыть();
	
	Возврат XML_Строка;
	
КонецФункции

&НаСервере
Функция ПолучитьКодМаркировкиВbase64(КодМаркировки)
	
	//позаимствовано с "Инфостарта" и модифицировано
	//https://infostart.ru/public/392252/
	
	КодировкаФайла = КодировкаТекста.UTF8;
		
	ВременныйФайл = ПолучитьИмяВременногоФайла();
	
	Запись = Новый ЗаписьТекста(ВременныйФайл, КодировкаФайла);
	Запись.Записать(КодМаркировки);
	Запись.Закрыть();
	
	ДвДанные = Новый ДвоичныеДанные(ВременныйФайл);
	Encoded = Base64Строка(ДвДанные);
	
	//платформа добавляет префикс
	Если СтрНайти(Encoded, "/") > 0 Тогда
		Encoded = Сред(Encoded, СтрНайти(Encoded, "/") + 1);
	КонецЕсли;
	
	УдалитьФайлы(ВременныйФайл);
	
	Возврат Encoded;
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьИнформацию(Команда)
	
	Текущая_XML_Строка = "";
	ТекущийТекстВыгрузки = "";
	СтрокаВыгрузки = "";
	
	Сч = 1;
	
	Для Каждого СтрокаТаблицыДокументов Из ТаблицаДокументов Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицыДокументов.КодЗавода) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не задан код завода";
			Сообщение.Сообщить();
			Продолжить;
		КонецЕсли;	
		
		Если СтрокаТаблицыДокументов.ОшибкаВыгрузкиКомплектов Тогда
			Продолжить;
		КонецЕсли;	
		
		XML_Строка = ВыгрузитьИнформациюНаСервере(СтрокаТаблицыДокументов.ДатаДокумента, СтрокаТаблицыДокументов.НомерДокумента, СтрокаТаблицыДокументов.ОрганизацияКод, СтрокаТаблицыДокументов.ОрганизацияНаименование, СтрокаТаблицыДокументов.ОрганизацияИНН, СтрокаТаблицыДокументов.ОрганизацияКПП, СтрокаТаблицыДокументов.КодЗавода);
		
		Если ВыгружатьДанныевSAP Тогда
			
			Результат = ВыгрузитьДанныеПоППСВSAP(XML_Строка);
			
			Если ТипЗнч(Результат) = Тип("Структура") Тогда
				
				КодОшибки = Результат.КодОшибки;
				КодЗаказа = Результат.КодЗаказа;
				
				Если КодОшибки = "311" Тогда //заказ сформирован, ошибок нет
					
					ЗаписатьИнформациюВРегистр(СтрокаТаблицыДокументов.ДокументППС, СтрокаТаблицыДокументов.КодЗавода, ТекущаяДата(), Результат.КодЗаказа);
					
					//Сообщение = Новый СообщениеПользователю;
					//Сообщение.Текст = "Выгрузка информации произведена успешно. Код заказа: "+Результат.КодЗаказа;
					//Сообщение.Сообщить();
					
					СтрокаВыгрузки = "Выгрузка информации произведена успешно. Код заказа: " + Результат.КодЗаказа;
					
				Иначе
					
					//Сообщение = Новый СообщениеПользователю;
					//Сообщение.Текст = Результат.КодЗаказа;
					//Сообщение.Сообщить();
					
					СтрокаВыгрузки = Результат.КодЗаказа;
					
				КонецЕсли;	
				
			Иначе //ошибка
				
				//Сообщение = Новый СообщениеПользователю;
				//Сообщение.Текст = "Ошибка при выгрузке информации!" + Символы.ПС + Результат;
				//Сообщение.Сообщить();
				
				СтрокаВыгрузки = "Ошибка при выгрузке информации!" + Символы.ПС + Результат;
				
			КонецЕсли;
			
			Если ТекущийТекстВыгрузки = "" Тогда
				ТекущийТекстВыгрузки = СтрокаВыгрузки;
			Иначе
				ТекущийТекстВыгрузки = ТекущийТекстВыгрузки + Символы.ПС + СтрокаВыгрузки;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Текущая_XML_Строка = "" ТОгда
			Если ТаблицаДокументов.Количество() > 1 Тогда
				Текущая_XML_Строка = "****************** Пакет №" + Сч + " ******************" + Символы.ПС + Символы.ПС + XML_Строка;
			Иначе
				Текущая_XML_Строка = XML_Строка;
			КонецЕсли;
		Иначе
			Текущая_XML_Строка = Текущая_XML_Строка + Символы.ПС + Символы.ПС + "****************** Пакет №" + Сч + " ******************" + Символы.ПС + Символы.ПС + XML_Строка;
		КонецЕсли;	
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
	ТекстXML.УстановитьТекст(Текущая_XML_Строка);
	
	ПротоколВыгрузки.УстановитьТекст(ТекущийТекстВыгрузки);
	
	Если НЕ ТекущийТекстВыгрузки = "" Тогда
		Элементы.ГруппаПротоколВыгрузки.Показать();
	Иначе
		Элементы.ГруппаПротоколВыгрузки.Скрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИнформациюВРегистр(ДокументППС, КодЗавода, ДатаВыгрузки, КодЗаказа) 
	
	НаборЗаписей = РегистрыСведений.ВыгруженныеДокументыППСвСАП.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ДокументППС.Установить(ДокументППС);
	НаборЗаписей.Отбор.КодЗавода.Установить(КодЗавода);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() = 0 Тогда
		
		НоваяЗапись 				= НаборЗаписей.Добавить();
		НоваяЗапись.ДокументППС 	= ДокументППС;
		НоваяЗапись.КодЗавода 		= КодЗавода;
		НоваяЗапись.КодЗаказа 		= КодЗаказа;
		НоваяЗапись.ДатаВыгрузки 	= ДатаВыгрузки;
		
	Иначе
		
		НаборЗаписей[0].КодЗаказа		= КодЗаказа;
		НаборЗаписей[0].ДатаВыгрузки 	= ДатаВыгрузки;
		
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодППСПриИзменении(Элемент)
	
	Объект.НачалоПериода 	= ПериодППС.ДатаНачала;
	Объект.КонецПериода		= ПериодППС.ДатаОкончания;
	
	ТаблицаВыдачи.Очистить();
	ТаблицаДокументов.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.НачалоПериода 	= НачалоМесяца(ТекущаяДата());
	Объект.КонецПериода		= КонецМесяца(ТекущаяДата());
	
	ПериодППС.ДатаНачала 	= Объект.НачалоПериода;
	ПериодППС.ДатаОкончания = Объект.КонецПериода;
	
	ВыгружатьДанныевSAP = Истина;
	
	ЗаполнитьТаблицуПоставщиков();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПоставщиков()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИСТИНА КАК Использовать,
	|	Номенклатура.Поставщик КАК Поставщик
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.Поставщик ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура.Поставщик.Наименование";
	
	ТаблицаПоставщиков.Загрузить(Запрос.Выполнить().Выгрузить());	
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ТаблицаВыдачи.Очистить();
	ТаблицаДокументов.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	ОписаниеОшибки = "";
	
	Сообщение = Новый СообщениеПользователю;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда	
		Сообщение.Текст = "Не выбрана организация!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ПодключениеУстановлено = ПолучитьПроксиДляВыгрузкиППС(ОписаниеОшибки);
	
	Если ПодключениеУстановлено Тогда
		Сообщение.Текст = "Подключение установлено.";
	Иначе
		Сообщение.Текст = ОписаниеОшибки;
	КонецЕсли;
	
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПроксиДляВыгрузкиППС(ОписаниеОшибки)
	
	Возврат РегистрыСведений.НастройкиПараметровОбменаСАП.ПолучитьПроксиДляВыгрузкиППС(Объект.Организация, ОписаниеОшибки, Истина);
	
КонецФункции

&НаСервере
Функция ВыгрузитьДанныеПоППСВSAP(XML_Строка)
	
	Результат = "";
	ОписаниеОшибки = "";
	
	Прокси = РегистрыСведений.НастройкиПараметровОбменаСАП.ПолучитьПроксиДляВыгрузкиППС(Объект.Организация,ОписаниеОшибки);
	
	Если ОписаниеОшибки = "" Тогда
		Попытка
		    Результат = Прокси.ZsdSoWebOrdersGet(XML_Строка);
		Исключение
			Результат = ОписаниеОшибки();
			Возврат Результат;
		КонецПопытки;	
	Иначе
		Возврат ОписаниеОшибки;
	КонецЕсли;	
	
	//Результат (возвращаемое значение):
	//<body><message_type>200</message_type><message_text>Ошибка при обмене!</message_text></body>
	//
	//если <message_type> - 311, то ошибки нет, и тогда в <message_text> возвращается номер заказа
	//в остальных случаях - ошибка
	КодОшибки = "";
	КодЗаказа = "";
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Результат);
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ТекущийТЭГ = ЧтениеXML.Имя;
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда
			Если ТекущийТЭГ = "message_type" Тогда
			    КодОшибки = ЧтениеXML.Значение;
			ИначеЕсли ТекущийТЭГ = "message_text" Тогда
				КодЗаказа = ЧтениеXML.Значение;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый Структура("КодОшибки, КодЗаказа", КодОшибки, КодЗаказа);
	
	Возврат Результат;
	
КонецФункции	

&НаКлиенте
Процедура ВыгружатьДанныевSAPПриИзменении(Элемент)
	
	Если НЕ ВыгружатьДанныевSAP Тогда
		Элементы.ГруппаПроверка.Показать();
	Иначе
		Элементы.ГруппаПроверка.Скрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРазмерКомплектующего(НаименованиеХарактеристики,Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.КодSAP КАК КодSAP,
	|	ХарактеристикиНоменклатуры.Владелец КАК Владелец
	|ПОМЕСТИТЬ ВТ_Размеры
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТ_Размеры.КодSAP КАК КодSAP,
	|	ВТ_Размеры.Владелец КАК Владелец
	|ИЗ
	|	ВТ_Размеры КАК ВТ_Размеры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Размеры.КодSAP КАК КодSAP
	|ИЗ
	|	ВТ_Размеры КАК ВТ_Размеры
	|ГДЕ
	|	ВТ_Размеры.КодSAP = &КодSAP";
	
	Запрос.УстановитьПараметр("Владелец",	Номенклатура);
	Запрос.УстановитьПараметр("КодSAP",		НаименованиеХарактеристики);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаСРазмером = Результат[2].Выгрузить();
	ТаблицаСЛюбымРазмером = Результат[1].Выгрузить();
	
	Если ЗначениеЗаполнено(НаименованиеХарактеристики) Тогда
		
		Если ТаблицаСРазмером.Количество() = 0 Тогда
			Если ТаблицаСЛюбымРазмером.Количество() = 0 Тогда
				Возврат "бр";
			Иначе
				Возврат ТаблицаСЛюбымРазмером[0].КодSAP;
			КонецЕсли;
		Иначе
			Возврат ТаблицаСРазмером[0].КодSAP;
		КонецЕсли;
		
	Иначе
		
		Если ТаблицаСЛюбымРазмером.Количество() = 0 Тогда
			Возврат "бр";
		Иначе
			Возврат ТаблицаСЛюбымРазмером[0].КодSAP;
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьВыданноеКоличествоКомплектов(Комплект,Номенклатура,ВыданоКомплектующего)
	
	НайденныеСтроки = Комплект.Комплектующие.НайтиСтроки(Новый Структура("Номенклатура",Номенклатура));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		
		Возврат 0;
		
	Иначе
		
		КоличествоКомплектующего = НайденныеСтроки[0].Количество;
		
		Если КоличествоКомплектующего = 0 Тогда
			Возврат 0;
		Иначе
			Возврат ВыданоКомплектующего/КоличествоКомплектующего;
		КонецЕсли;	
		
	КонецЕсли;
	
КонецФункции	

&НаСервере
Процедура ТаблицаДокументовПослеУдаленияНаСервере()

	ТабДокументов 			= РеквизитФормыВЗначение("ТаблицаДокументов");
	МассивДатДокументов 	= ТабДокументов.ВыгрузитьКолонку("ДатаДокумента");
	МассивНомеровДокументов = ТабДокументов.ВыгрузитьКолонку("НомерДокумента");
	МассивКодовЗаводов 		= ТабДокументов.ВыгрузитьКолонку("КодЗавода");
	МассивLGNUM_LGTYP 		= ТабДокументов.ВыгрузитьКолонку("LGNUM_LGTYP");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаВыдачи.КодМаркировки КАК КодМаркировки,
	|	ТаблицаВыдачи.ДатаДокумента КАК ДатаДокумента,
	|	ТаблицаВыдачи.НомерДокумента КАК НомерДокумента,
	|	ТаблицаВыдачи.КодЗавода КАК КодЗавода,
	|	ТаблицаВыдачи.LGNUM_LGTYP КАК LGNUM_LGTYP,
	|	ТаблицаВыдачи.Номенклатура КАК Номенклатура,
	|	ТаблицаВыдачи.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаВыдачи.Артикул КАК Артикул,
	|	ТаблицаВыдачи.Цена КАК Цена,
	|	ТаблицаВыдачи.КодНоменклатуры КАК КодНоменклатуры,
	|	ТаблицаВыдачи.НаименованиеХарактеристики КАК НаименованиеХарактеристики,
	|	ТаблицаВыдачи.Количество КАК Количество,
	|	ТаблицаВыдачи.Сумма КАК Сумма,
	|	ТаблицаВыдачи.Комплект КАК Комплект
	|ПОМЕСТИТЬ ВТ_ТаблицаВыдачи
	|ИЗ
	|	&ТаблицаВыдачи КАК ТаблицаВыдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаВыдачи.КодМаркировки КАК КодМаркировки,
	|	ВТ_ТаблицаВыдачи.ДатаДокумента КАК ДатаДокумента,
	|	ВТ_ТаблицаВыдачи.НомерДокумента КАК НомерДокумента,
	|	ВТ_ТаблицаВыдачи.КодЗавода КАК КодЗавода,
	|	ВТ_ТаблицаВыдачи.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаВыдачи.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаВыдачи.Артикул КАК Артикул,
	|	ВТ_ТаблицаВыдачи.Цена КАК Цена,
	|	ВТ_ТаблицаВыдачи.КодНоменклатуры КАК КодНоменклатуры,
	|	ВТ_ТаблицаВыдачи.НаименованиеХарактеристики КАК НаименованиеХарактеристики,
	|	ВТ_ТаблицаВыдачи.Количество КАК Количество,
	|	ВТ_ТаблицаВыдачи.Сумма КАК Сумма,
	|	ВТ_ТаблицаВыдачи.Комплект КАК Комплект,
	|	ВТ_ТаблицаВыдачи.LGNUM_LGTYP КАК LGNUM_LGTYP
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|ГДЕ
	|	ВТ_ТаблицаВыдачи.ДатаДокумента В(&ДатаДокумента)
	|	И ВТ_ТаблицаВыдачи.НомерДокумента В(&НомерДокумента)
	|	И ВТ_ТаблицаВыдачи.КодЗавода В(&КодЗавода)
	|	И ВТ_ТаблицаВыдачи.LGNUM_LGTYP В(&LGNUM_LGTYP)";
	
	Запрос.УстановитьПараметр("ТаблицаВыдачи",	ТаблицаВыдачи.Выгрузить());
	Запрос.УстановитьПараметр("ДатаДокумента",	МассивДатДокументов);
	Запрос.УстановитьПараметр("НомерДокумента",	МассивНомеровДокументов);
	Запрос.УстановитьПараметр("КодЗавода",		МассивКодовЗаводов);
	Запрос.УстановитьПараметр("LGNUM_LGTYP",	МассивLGNUM_LGTYP);
	
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(),"ТаблицаВыдачи");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовПослеУдаления(Элемент)
	
	ТаблицаДокументовПослеУдаленияНаСервере();
	
	ТекстXML.УстановитьТекст("");
	
	ПротоколВыгрузки.УстановитьТекст("");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПоставщиковПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	 Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПоставщиковПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаПоставщиков Цикл
		СтрокаТаблицы.Использовать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого СтрокаТаблицы Из ТаблицаПоставщиков Цикл
		СтрокаТаблицы.Использовать = Истина;
	КонецЦикла;
	
КонецПроцедуры
