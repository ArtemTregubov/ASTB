&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.НачалоПериодаВыдачи 							= НачалоМесяца(ТекущаяДата());
	Объект.ПериодАнализа 								= Перечисления.ДоступныеПериодыОтчета.Квартал;
	
	Объект.ДополнительнаяИнформацияПоНоменклатуреВыдачи = ПолучитьВидДопИнформации(Объект.Организация);
	
	//+++АСТБ_Горюшин_Алексей_42504
	ЗаполнитьТаблицуНомеровТаблицПоУмолчанию();
	//---АСТБ_Горюшин_Алексей_42504
	
	ПриИзмененииПериодаАнализа(Ложь);
	
	ЗаполнитьТаблицыОбъекта();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере                
Процедура ЗаполнитьТаблицыОбъекта()
	
	ЗаполнитьТаблицуВидовВыдачи();
	ЗаполнитьТаблицуСкладовДляОстатков();
	ЗаполнитьТаблицуПоставщиков();
	//+++АСТБ_Горюшин_Алексей_42504
	//было
	//ЗаполнитьТаблицуМВЗ();
	//ЗаполнитьТаблицуСотрудников();
	//ЗаполнитьТаблицуНоменклатурыНормы();
	//---АСТБ_Горюшин_Алексей_42504
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПоставщиков()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИСТИНА КАК Использовать,
	|	Номенклатура.Поставщик
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|	И НЕ Номенклатура.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура.Поставщик.Наименование";
	
	УстановитьПривилегированныйРежим(Истина);
	Объект.ТаблицаПоставщиков.Загрузить(Запрос.Выполнить().Выгрузить());
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСкладовДляОстатков()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИСТИНА КАК Использовать,
	|	Склады.Ссылка КАК Склад
	|ИЗ
	|	Справочник.Склады КАК Склады
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склады.Наименование";
	
	УстановитьПривилегированныйРежим(Истина);
	Объект.ТаблицаСкладовДляОстатков.Загрузить(Запрос.Выполнить().Выгрузить());
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСотрудников()
	
	//+++АСТБ_Горюшин_Алексей_42504
	Возврат;
	//---АСТБ_Горюшин_Алексей_42504
	
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	ТаблицаИспользуемыхВидовВыдачи 			= Объект.ТаблицаВидовВыдачи.Выгрузить(Новый Структура("Использовать",Истина));
	ТаблицаИспользуемыхМВЗ 					= Объект.ТаблицаМВЗ.Выгрузить(Новый Структура("Использовать",Истина));
	//+++АСТБ_Горюшин_Алексей_42504
	ТаблицаИспользуемыхПодразделений = Объект.ТаблицаПодразделений.Выгрузить(Новый Структура("Использовать",Истина));
	//---АСТБ_Горюшин_Алексей_42504
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИСТИНА КАК Использовать,
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_СотрудникиПоПотребности
	|ИЗ
	|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
	|			&ДатаАнализа,
	|			(Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|				И ДатаПотребности <= &ДатаАнализа
	|				И НормаВыдачи.ВидВыдачиСИЗ В (&МассивВидовВыдачи)) КАК ПотребностьВыдачиСИЗОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_ОсновноеМестоРаботы
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(
	|			&ДатаАнализа,
	|			Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	//+++АСТБ_Горюшин_Алексей_42504
	|	И ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение В (&МассивПодразделений)
	//---АСТБ_Горюшин_Алексей_42504
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗСотрудников.Сотрудник КАК Сотрудник,
	|	МВЗСотрудников.МВЗ КАК МВЗ
	|ПОМЕСТИТЬ ВТ_МВЗСотрудников
	|ИЗ
	|	РегистрСведений.МВЗСотрудников КАК МВЗСотрудников
	|ГДЕ
	|	(МВЗСотрудников.Организация = &Организация
	|			ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗПодразделенийСрезПоследних.МВЗ КАК МВЗ,
	|	МВЗПодразделенийСрезПоследних.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_МВЗ
	|ИЗ
	|	РегистрСведений.МВЗПодразделений.СрезПоследних(
	|			&ДатаАнализа,
	|			Подразделение.Владелец = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации) КАК МВЗПодразделенийСрезПоследних
	|ГДЕ
	|	МВЗПодразделенийСрезПоследних.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СотрудникиПоПотребности.Использовать КАК Использовать,
	|	ВТ_СотрудникиПоПотребности.Сотрудник КАК Сотрудник
	|ИЗ
	|	ВТ_СотрудникиПоПотребности КАК ВТ_СотрудникиПоПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновноеМестоРаботы КАК ВТ_ОсновноеМестоРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗ КАК ВТ_МВЗ
	|			ПО ВТ_ОсновноеМестоРаботы.Подразделение = ВТ_МВЗ.Подразделение
	|		ПО ВТ_СотрудникиПоПотребности.Сотрудник = ВТ_ОсновноеМестоРаботы.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗСотрудников КАК ВТ_МВЗСотрудников
	|		ПО ВТ_СотрудникиПоПотребности.Сотрудник = ВТ_МВЗСотрудников.Сотрудник
	|ГДЕ
	|	НЕ ВТ_ОсновноеМестоРаботы.Подразделение ЕСТЬ NULL
	|	И ВЫБОР
	|			КОГДА ВТ_МВЗСотрудников.МВЗ ЕСТЬ NULL
	|				ТОГДА ЕСТЬNULL(ВТ_МВЗ.МВЗ, ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяСсылка))
	|			ИНАЧЕ ВТ_МВЗСотрудников.МВЗ
	|		КОНЕЦ В (&МассивМВЗ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_СотрудникиПоПотребности.Сотрудник.Наименование";
	
	Запрос.УстановитьПараметр("Организация",					Объект.Организация);
	Запрос.УстановитьПараметр("ДатаАнализа",					Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("МассивВидовВыдачи",				ТаблицаИспользуемыхВидовВыдачи.ВыгрузитьКолонку("ВидВыдачи"));
	Запрос.УстановитьПараметр("МассивМВЗ",						ТаблицаИспользуемыхМВЗ.ВыгрузитьКолонку("МВЗ"));
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",НеУчитыватьОстаткиПоОрганизации);
	//+++АСТБ_Горюшин_Алексей_42504
	Запрос.УстановитьПараметр("МассивПодразделений", ТаблицаИспользуемыхПодразделений.ВыгрузитьКолонку("Подразделение"));
	//---АСТБ_Горюшин_Алексей_42504
	
	УстановитьПривилегированныйРежим(Истина);
	Объект.ТаблицаСотрудников.Загрузить(Запрос.Выполнить().Выгрузить());
	УстановитьПривилегированныйРежим(Ложь);
	
	ОчиститьРезультирующиеТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНоменклатурыНормы()
	
	//+++АСТБ_Горюшин_Алексей_42504
	Возврат;
	//---АСТБ_Горюшин_Алексей_42504
	
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	ТаблицаИспользуемыхСотрудников 	= Объект.ТаблицаСотрудников.Выгрузить(Новый Структура("Использовать",Истина));
	ТаблицаИспользуемыхВидовВыдачи 	= Объект.ТаблицаВидовВыдачи.Выгрузить(Новый Структура("Использовать",Истина));
	ТаблицаИспользуемыхМВЗ 			= Объект.ТаблицаМВЗ.Выгрузить(Новый Структура("Использовать",Истина));
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИСТИНА КАК Использовать,
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник КАК Сотрудник,
	|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы КАК НоменклатураНормы
	|ПОМЕСТИТЬ ВТ_СотрудникиПоПотребности
	|ИЗ
	|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
	|			&ДатаАнализа,
	|			(Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|				И ДатаПотребности <= &ДатаАнализа
	|				И Сотрудник В (&МассивСотрудников)
	|				И НормаВыдачи.ВидВыдачиСИЗ В (&МассивВидовВыдачи)) КАК ПотребностьВыдачиСИЗОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_ОсновноеМестоРаботы
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(
	|			&ДатаАнализа,
	|			(Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|				И Сотрудник В (&МассивСотрудников)) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	|;
	//+++АСТБ_Горюшин_Алексей_42504
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗСотрудников.Сотрудник КАК Сотрудник,
	|	МВЗСотрудников.МВЗ КАК МВЗ
	|ПОМЕСТИТЬ ВТ_МВЗСотрудников
	|ИЗ
	|	РегистрСведений.МВЗСотрудников КАК МВЗСотрудников
	|ГДЕ
	|	(МВЗСотрудников.Организация = &Организация
	|			ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|;
	//---АСТБ_Горюшин_Алексей_42504
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗПодразделенийСрезПоследних.МВЗ КАК МВЗ,
	|	МВЗПодразделенийСрезПоследних.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_МВЗ
	|ИЗ
	|	РегистрСведений.МВЗПодразделений.СрезПоследних(
	|			&ДатаАнализа,
	|			Подразделение.Владелец = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации) КАК МВЗПодразделенийСрезПоследних
	|ГДЕ
	|	МВЗПодразделенийСрезПоследних.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СотрудникиПоПотребности.Использовать КАК Использовать,
	|	ВТ_СотрудникиПоПотребности.НоменклатураНормы КАК НоменклатураНормы
	|ИЗ
	|	ВТ_СотрудникиПоПотребности КАК ВТ_СотрудникиПоПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновноеМестоРаботы КАК ВТ_ОсновноеМестоРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗ КАК ВТ_МВЗ
	|			ПО ВТ_ОсновноеМестоРаботы.Подразделение = ВТ_МВЗ.Подразделение
	|		ПО ВТ_СотрудникиПоПотребности.Сотрудник = ВТ_ОсновноеМестоРаботы.Сотрудник
	//+++АСТБ_Горюшин_Алексей_42504
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗСотрудников КАК ВТ_МВЗСотрудников
	|		ПО ВТ_СотрудникиПоПотребности.Сотрудник = ВТ_МВЗСотрудников.Сотрудник	
	//---АСТБ_Горюшин_Алексей_42504
	|ГДЕ
	|	НЕ ВТ_ОсновноеМестоРаботы.Подразделение ЕСТЬ NULL
	//+++АСТБ_Горюшин_Алексей_42504
	|	И ВЫБОР
	|			КОГДА ВТ_МВЗСотрудников.МВЗ ЕСТЬ NULL
	|				ТОГДА ЕСТЬNULL(ВТ_МВЗ.МВЗ, ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяСсылка))
	|			ИНАЧЕ ВТ_МВЗСотрудников.МВЗ
	|		КОНЕЦ В (&МассивМВЗ)
	//было
	//|	И ЕСТЬNULL(ВТ_МВЗ.МВЗ, ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяСсылка)) В (&МассивМВЗ)
	//---АСТБ_Горюшин_Алексей_42504
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_СотрудникиПоПотребности.НоменклатураНормы.Наименование";
	
	Запрос.УстановитьПараметр("Организация",					Объект.Организация);
	Запрос.УстановитьПараметр("ДатаАнализа",					Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("МассивСотрудников",				ТаблицаИспользуемыхСотрудников.ВыгрузитьКолонку("Сотрудник"));
	Запрос.УстановитьПараметр("МассивВидовВыдачи",				ТаблицаИспользуемыхВидовВыдачи.ВыгрузитьКолонку("ВидВыдачи"));
	Запрос.УстановитьПараметр("МассивМВЗ",						ТаблицаИспользуемыхМВЗ.ВыгрузитьКолонку("МВЗ"));
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",НеУчитыватьОстаткиПоОрганизации);
	
	УстановитьПривилегированныйРежим(Истина);
	Объект.ТаблицаНоменклатурыНормы.Загрузить(Запрос.Выполнить().Выгрузить());
	УстановитьПривилегированныйРежим(Ложь);
	
	ОчиститьРезультирующиеТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуМВЗ()
	
	//+++АСТБ_Горюшин_Алексей_42504
	Возврат;
	//---АСТБ_Горюшин_Алексей_42504
	
	//+++АСТБ_Горюшин_Алексей_42504
	ТаблицаИспользуемыхПодразделений = Объект.ТаблицаПодразделений.Выгрузить(Новый Структура("Использовать",Истина));
	//---АСТБ_Горюшин_Алексей_42504
	
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МВЗПодразделенийСрезПоследних.Подразделение.Владелец КАК Организация,
	|	ИСТИНА КАК Использовать,
	|	МВЗПодразделенийСрезПоследних.МВЗ КАК МВЗ,
	|	МВЗПодразделенийСрезПоследних.МВЗ.Наименование КАК МВЗНаименование
	|ИЗ
	|	РегистрСведений.МВЗПодразделений.СрезПоследних(&ДатаАнализа, ) КАК МВЗПодразделенийСрезПоследних
	|ГДЕ
	|	МВЗПодразделенийСрезПоследних.Использовать
	|	И ВЫБОР
	|			КОГДА МВЗПодразделенийСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ МВЗПодразделенийСрезПоследних.Подразделение.Владелец = &Организация
	|					ИЛИ &НеУчитыватьОстаткиПоОрганизации
	|		КОНЕЦ
	//+++АСТБ_Горюшин_Алексей_42504
	|	И МВЗПодразделенийСрезПоследних.Подразделение В (&МассивПодразделений)
	//---АСТБ_Горюшин_Алексей_42504
	|
	//+++АСТБ_Горюшин_Алексей_42504
	|ОБЪЕДИНИТЬ
	//было
	//|ОБЪЕДИНИТЬ ВСЕ
	//---АСТБ_Горюшин_Алексей_42504
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ИСТИНА,
	|	ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяССылка),
	|	NULL
	|
	//+++АСТБ_Горюшин_Алексей_42504
	|ОБЪЕДИНИТЬ
	//было
	//|ОБЪЕДИНИТЬ ВСЕ
	//---АСТБ_Горюшин_Алексей_42504
	|
	//+++АСТБ_Горюшин_Алексей_42504
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//было
	//|ВЫБРАТЬ
	//---АСТБ_Горюшин_Алексей_42504
	|	МВЗСотрудников.Организация,
	|	ИСТИНА,
	|	МВЗСотрудников.МВЗ,
	|	МВЗСотрудников.МВЗ.Наименование
	|ИЗ
	|	РегистрСведений.МВЗСотрудников КАК МВЗСотрудников
	|ГДЕ
	|	(МВЗСотрудников.Организация = &Организация
	|			ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	МВЗНаименование";
	
	Запрос.УстановитьПараметр("Организация",					Объект.Организация);
	Запрос.УстановитьПараметр("ДатаАнализа",					Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",НеУчитыватьОстаткиПоОрганизации);
	//+++АСТБ_Горюшин_Алексей_42504
	Запрос.УстановитьПараметр("МассивПодразделений", ТаблицаИспользуемыхПодразделений.ВыгрузитьКолонку("Подразделение"));
	//---АСТБ_Горюшин_Алексей_42504
	
	УстановитьПривилегированныйРежим(Истина);
	Объект.ТаблицаМВЗ.Загрузить(Запрос.Выполнить().Выгрузить());
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуВидовВыдачи()
	
	//+++АСТБ_Горюшин_Алексей_42504
	Возврат;
	//---АСТБ_Горюшин_Алексей_42504
	
	НоваяСтрока 				= Объект.ТаблицаВидовВыдачи.Добавить();
	НоваяСтрока.Использовать 	= Истина;
	НоваяСтрока.ВидВыдачи 		= Перечисления.ВидыВыдачиСИЗ.ПерсональнаяВыдача;
	
	НоваяСтрока 				= Объект.ТаблицаВидовВыдачи.Добавить();
	НоваяСтрока.Использовать 	= Истина;
	НоваяСтрока.ВидВыдачи 		= Перечисления.ВидыВыдачиСИЗ.КоллективнаяВыдача;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодАнализаПриИзменении(Элемент)
	
	ПриИзмененииПериодаАнализа();
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииПериодаАнализа(ОбновлятьТаблицы = Истина)
	
	//+++АСТБ_Горюшин_Алексей_42855
	Элементы.КонецПериодаВыдачи.ТолькоПросмотр = Истина;
	//---АСТБ_Горюшин_Алексей_42855
	
	Если Объект.ПериодАнализа = Перечисления.ДоступныеПериодыОтчета.Месяц Тогда
		Объект.КонецПериодаВыдачи = ДобавитьМесяц(Объект.НачалоПериодаВыдачи,1) - 1;
	ИначеЕсли Объект.ПериодАнализа = Перечисления.ДоступныеПериодыОтчета.Квартал Тогда
		Объект.КонецПериодаВыдачи = ДобавитьМесяц(Объект.НачалоПериодаВыдачи,3) - 1;
	ИначеЕсли Объект.ПериодАнализа = Перечисления.ДоступныеПериодыОтчета.Полугодие Тогда
		Объект.КонецПериодаВыдачи = ДобавитьМесяц(Объект.НачалоПериодаВыдачи,6) - 1;
	//+++АСТБ_Горюшин_Алексей_42855
	ИначеЕсли Объект.ПериодАнализа = Перечисления.ДоступныеПериодыОтчета.ПроизвольныйПериод Тогда
		Элементы.КонецПериодаВыдачи.ТолькоПросмотр = Ложь;
	//---АСТБ_Горюшин_Алексей_42855
	Иначе //год
		Объект.КонецПериодаВыдачи = ДобавитьМесяц(Объект.НачалоПериодаВыдачи,12) - 1;
	КонецЕсли;
	
	//+++АСТБ_Горюшин_Алексей_42504
	ЗаполнитьТаблицуИсходныхДанныхИ_Отборы();
	//было
	//Если ОбновлятьТаблицы Тогда
	//	ЗаполнитьТаблицуСотрудников();
	//	ЗаполнитьТаблицуНоменклатурыНормы();
	//КонецЕсли;	
	//---АСТБ_Горюшин_Алексей_42504
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВидДопИнформации(ТекущаяОрганизация)
	
	Если ЗначениеЗаполнено(ТекущаяОрганизация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм) Тогда
		Возврат ТекущаяОрганизация.ДополнительнаяИнформацияПоНоменклатуреДляПечатныхФорм;
	Иначе
		Возврат Перечисления.ВидДополнительнойИнформацииПоНоменклатуре.НеВыводить;
	КонецЕсли;	
	
КонецФункции	

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.ДополнительнаяИнформацияПоНоменклатуреВыдачи = ПолучитьВидДопИнформации(Объект.Организация);
	
	//+++АСТБ_Горюшин_Алексей_42504
	ЗаполнитьТаблицуИсходныхДанныхИ_Отборы();
	//было
	//ЗаполнитьТаблицуМВЗ();
	//ЗаполнитьТаблицуСотрудников();
	//ЗаполнитьТаблицуНоменклатурыНормы();
	//---АСТБ_Горюшин_Алексей_42504
	ОчиститьРезультирующиеТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПредварительныйАнализНаСервере()
	
	//+++АСТБ_Горюшин_Алексей_42504
	ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Истина;
	//---АСТБ_Горюшин_Алексей_42504
	
	ДеревоДляЗагрузкиВФорму = РеквизитФормыВЗначение("Дерево_ЗаказыПоставщику");
	ДеревоДляЗагрузкиВФорму.Строки.Очистить();
	ЗначениеВРеквизитФормы(ДеревоДляЗагрузкиВФорму,"Дерево_ЗаказыПоставщику");
	
	ЗаполнитьТаблицуОстатков();
	ЗаполнитьТаблицуПериодовВыдачи();
	ЗаполнитьТаблицуНоменклатурыНормСотрудников();
	ЗаполнитьТаблицуВыдачиСотрудников();
	ЗаполнитьРезультирующиеТаблицы();
	ЗаполнитьТаблицуНеЗаданныхМВЗ();
	
	СформироватьПечатныеФормы();
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПечатныеФормы()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	Запрос = Новый Запрос;
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	ТабПодобрано 			= РеквизитФормыВЗначение("ТаблицаПодобрано");
	ТабНеПодобрано  		= РеквизитФормыВЗначение("ТаблицаНеПодобрано");
	ТабНеМожетБытьПодобрано = РеквизитФормыВЗначение("ТаблицаНеМожетБытьПодобрано");
	ТабНеМожетБытьПодобрано.Свернуть("Сотрудник,НоменклатураНормы,Подразделение,Должность,ВидВыдачи","Количество");
	
	//+++АСТБ_Горюшин_Алексей_42504
	ЗначениеВРеквизитФормы(ТабПодобрано,	"ТаблицаПодобраноДляАнализа");
	ЗначениеВРеквизитФормы(ТабНеПодобрано,	"ТаблицаНеПодобраноДляАнализа");
	//---АСТБ_Горюшин_Алексей_42504
	
	Если НЕ ТаблицаПодобрано.Количество() = 0 Тогда
		
		НоменклатураПодобрана.Очистить();
		
		ВнешниеНаборыДанных = Новый Структура("ТаблицаПодобрано",ТабПодобрано);
		
		СхемаКомпоновкиДанных = ТекущийОбъект.ПолучитьМакет("СКД_Подобрано");
		
		Настройка = СхемаКомпоновкиДанных.ВариантыНастроек[0];
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Организация",								Объект.Организация);
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НеУчитыватьОстаткиПоОрганизации",			НеУчитыватьОстаткиПоОрганизации);
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаАнализа",								Объект.КонецПериодаВыдачи);  
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ВидДополнительнойИнформацииПоНоменклатуре",Объект.ДополнительнаяИнформацияПоНоменклатуреВыдачи);
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройка.Настройки,ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанных"));
		
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,ВнешниеНаборыДанных,ДанныеРасшифровки,Истина);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(ЭтаФорма.НоменклатураПодобрана);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
		Если ЗначениеЗаполнено(ЭтаФорма.АдресХранилищаДанныхРасшифровки) Тогда
		    СтруктураДанныхВременногоХранилища = ПолучитьИзВременногоХранилища(ЭтаФорма.АдресХранилищаДанныхРасшифровки);
		Иначе
			СтруктураДанныхВременногоХранилища = Новый Структура();
		КонецЕсли;
		
		СтруктураДанныхВременногоХранилища.Вставить("Подобрано",ДанныеРасшифровки);
		
		ЭтаФорма.АдресХранилищаДанныхРасшифровки = ПоместитьВоВременноеХранилище(СтруктураДанныхВременногоХранилища,УникальныйИдентификатор);
		
	КонецЕсли;
	
	Если НЕ ТаблицаНеПодобрано.Количество() = 0 Тогда
		
		НоменклатураНеПодобрана.Очистить();
		
		ВнешниеНаборыДанных = Новый Структура("ТаблицаНеПодобрано",ТабНеПодобрано);
		
		СхемаКомпоновкиДанных = ТекущийОбъект.ПолучитьМакет("СКД_НеПодобрано");
		
		Настройка = СхемаКомпоновкиДанных.ВариантыНастроек[0];
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Организация",								Объект.Организация);
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НеУчитыватьОстаткиПоОрганизации",			НеУчитыватьОстаткиПоОрганизации);
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ВидДополнительнойИнформацииПоНоменклатуре",Объект.ДополнительнаяИнформацияПоНоменклатуреВыдачи);
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройка.Настройки,ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанных"));
		
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,ВнешниеНаборыДанных,ДанныеРасшифровки,Истина);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(ЭтаФорма.НоменклатураНеПодобрана);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

		Если ЗначениеЗаполнено(ЭтаФорма.АдресХранилищаДанныхРасшифровки) Тогда
		    СтруктураДанныхВременногоХранилища = ПолучитьИзВременногоХранилища(ЭтаФорма.АдресХранилищаДанныхРасшифровки);
		Иначе
			СтруктураДанныхВременногоХранилища = Новый Структура();
		КонецЕсли;
		
		СтруктураДанныхВременногоХранилища.Вставить("НеПодобрано",ДанныеРасшифровки);
		
		ЭтаФорма.АдресХранилищаДанныхРасшифровки = ПоместитьВоВременноеХранилище(СтруктураДанныхВременногоХранилища,УникальныйИдентификатор);
		
	КонецЕсли;
	
	Если НЕ ТаблицаНеМожетБытьПодобрано.Количество() = 0 Тогда
		
		ТаблицаИспользуемыхСотрудников 	= Объект.ТаблицаСотрудников.Выгрузить(Новый Структура("Использовать",Истина));
		
		НоменклатураНеМожетБытьПодобрана.Очистить();
		
		ВнешниеНаборыДанных = Новый Структура("ТаблицаНеМожетБытьПодобрано",ТабНеМожетБытьПодобрано);
		
		СхемаКомпоновкиДанных = ТекущийОбъект.ПолучитьМакет("СКД_НеМожетБытьПодобрано");
		
		Настройка = СхемаКомпоновкиДанных.ВариантыНастроек[0];
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаАнализа",								Объект.КонецПериодаВыдачи);  
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("МассивСотрудников",						ТаблицаИспользуемыхСотрудников.ВыгрузитьКолонку("Сотрудник"));
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Организация",								Объект.Организация);
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НеУчитыватьОстаткиПоОрганизации",			НеУчитыватьОстаткиПоОрганизации);
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ВидДополнительнойИнформацииПоНоменклатуре",Объект.ДополнительнаяИнформацияПоНоменклатуреВыдачи);
		//+++АСТБ_Горюшин_Алексей_65169
		// Пока не нужно. Не работает на 8.3.16.1063.
		//Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ТаблицаПодобрано", 						ТабПодобрано);
		//Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ТаблицаНеПодобрано", 						ТабНеПодобрано);
		//---АСТБ_Горюшин_Алексей_65169
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройка.Настройки,ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанных"));
		
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,ВнешниеНаборыДанных,ДанныеРасшифровки,Истина);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(ЭтаФорма.НоменклатураНеМожетБытьПодобрана);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
		Если ЗначениеЗаполнено(ЭтаФорма.АдресХранилищаДанныхРасшифровки) Тогда
		    СтруктураДанныхВременногоХранилища = ПолучитьИзВременногоХранилища(ЭтаФорма.АдресХранилищаДанныхРасшифровки);
		Иначе
			СтруктураДанныхВременногоХранилища = Новый Структура();
		КонецЕсли;
		
		СтруктураДанныхВременногоХранилища.Вставить("НеМожетБытьПодобрано",ДанныеРасшифровки);
		
		ЭтаФорма.АдресХранилищаДанныхРасшифровки = ПоместитьВоВременноеХранилище(СтруктураДанныхВременногоХранилища,УникальныйИдентификатор);
		
	КонецЕсли;
	
	Если (НЕ ТабПодобрано.Количество() = 0) ИЛИ (НЕ ТабНеПодобрано.Количество() = 0) ИЛИ (НЕ ТабНеМожетБытьПодобрано.Количество() = 0) Тогда
		
		ДоступностьСИЗ.Очистить();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Организация КАК Организация,
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
		|ПОМЕСТИТЬ ВТ_ЦеныНоменклатуры
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаАнализа, ) КАК ЦеныНоменклатурыСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатурыСрезПоследних.Организация,
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации.Владелец КАК Организация,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации КАК НоменклатураНормы,
		|	МАКСИМУМ(ВТ_ЦеныНоменклатуры.Цена) КАК Цена
		|ПОМЕСТИТЬ ВТ_ЦеныНоменклатурыНорм
		|ИЗ
		|	РегистрСведений.СоответствияНоменклатурыВыдачи.СрезПоследних(&ДатаАнализа, ) КАК СоответствияНоменклатурыВыдачиСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
		|		ПО СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации.Владелец = ВТ_ЦеныНоменклатуры.Организация
		|			И СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации.Владелец,
		|	СоответствияНоменклатурыВыдачиСрезПоследних.НоменклатураНормыОрганизации
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	НоменклатураНормы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПодобрано.Организация КАК Организация,
		|	ТаблицаПодобрано.НоменклатураНормы КАК НоменклатураНормы,
		|	ТаблицаПодобрано.Номенклатура КАК Номенклатура,
		|	ТаблицаПодобрано.Количество КАК Доступно
		|ПОМЕСТИТЬ ВТ_Подобрано
		|ИЗ
		|	&ТаблицаПодобрано КАК ТаблицаПодобрано
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	НоменклатураНормы,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Подобрано.Организация КАК Организация,
		|	ВТ_Подобрано.НоменклатураНормы КАК НоменклатураНормы,
		|	СУММА(ВТ_Подобрано.Доступно) КАК Доступно,
		|	СУММА(ВТ_Подобрано.Доступно * ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0)) КАК ДоступноСтоимость
		|ПОМЕСТИТЬ ВТ_ПодобраноРезультат
		|ИЗ
		|	ВТ_Подобрано КАК ВТ_Подобрано
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
		|		ПО ВТ_Подобрано.Организация = ВТ_ЦеныНоменклатуры.Организация
		|			И ВТ_Подобрано.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Подобрано.Организация,
		|	ВТ_Подобрано.НоменклатураНормы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_Подобрано
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНеПодобрано.Организация КАК Организация,
		|	ТаблицаНеПодобрано.НоменклатураНормы КАК НоменклатураНормы,
		|	ТаблицаНеПодобрано.Номенклатура КАК Номенклатура,
		|	ТаблицаНеПодобрано.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_НеПодобрано
		|ИЗ
		|	&ТаблицаНеПодобрано КАК ТаблицаНеПодобрано
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	НоменклатураНормы,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НеПодобрано.Организация КАК Организация,
		|	ВТ_НеПодобрано.НоменклатураНормы КАК НоменклатураНормы,
		|	СУММА(ВТ_НеПодобрано.Количество) КАК НеПодобрано,
		|	СУММА(ВТ_НеПодобрано.Количество * ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0)) КАК НеПодобраноСтоимость
		|ПОМЕСТИТЬ ВТ_НеПодобраноРезультат
		|ИЗ
		|	ВТ_НеПодобрано КАК ВТ_НеПодобрано
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
		|		ПО ВТ_НеПодобрано.Организация = ВТ_ЦеныНоменклатуры.Организация
		|			И ВТ_НеПодобрано.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НеПодобрано.Организация,
		|	ВТ_НеПодобрано.НоменклатураНормы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_НеПодобрано
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНеМожетБытьПодобрано.НоменклатураНормы КАК НоменклатураНормы,
		|	ТаблицаНеМожетБытьПодобрано.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_ТаблицаНеМожетБытьПодобрано
		|ИЗ
		|	&ТаблицаНеМожетБытьПодобрано КАК ТаблицаНеМожетБытьПодобрано
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НоменклатураНормы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НоменклатураНормОрганизации.Владелец КАК Организация,
		|	НоменклатураНормОрганизации.Ссылка КАК НоменклатураНормы,
		|	ВТ_ТаблицаНеМожетБытьПодобрано.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_НеОпределено
		|ИЗ
		|	ВТ_ТаблицаНеМожетБытьПодобрано КАК ВТ_ТаблицаНеМожетБытьПодобрано
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураНормОрганизации КАК НоменклатураНормОрганизации
		|		ПО ВТ_ТаблицаНеМожетБытьПодобрано.НоменклатураНормы = НоменклатураНормОрганизации.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	НоменклатураНормы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ТаблицаНеМожетБытьПодобрано
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_НеОпределено.Организация КАК Организация,
		|	ВТ_НеОпределено.НоменклатураНормы КАК НоменклатураНормы,
		|	СУММА(ВТ_НеОпределено.Количество) КАК Не_Определено,
		|	СУММА(ВТ_НеОпределено.Количество * ЕСТЬNULL(ВТ_ЦеныНоменклатурыНорм.Цена, 0)) КАК НеОпределеноСтоимость
		|ПОМЕСТИТЬ ВТ_НеОпределеноРезультат
		|ИЗ
		|	ВТ_НеОпределено КАК ВТ_НеОпределено
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатурыНорм КАК ВТ_ЦеныНоменклатурыНорм
		|		ПО ВТ_НеОпределено.Организация = ВТ_ЦеныНоменклатурыНорм.Организация
		|			И ВТ_НеОпределено.НоменклатураНормы = ВТ_ЦеныНоменклатурыНорм.НоменклатураНормы
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_НеОпределено.Организация,
		|	ВТ_НеОпределено.НоменклатураНормы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Все организации"" КАК ВсеОрганизации,
		|	ВТ_ПодобраноРезультат.Организация КАК Организация,
		|	ВТ_ПодобраноРезультат.НоменклатураНормы КАК НоменклатураНормы,
		|	ВТ_ПодобраноРезультат.Доступно КАК Доступно,
		|	ВТ_ПодобраноРезультат.ДоступноСтоимость КАК ДоступноСтоимость,
		|	0 КАК НеПодобрано,
		|	0 КАК НеПодобраноСтоимость,
		|	0 КАК Не_Определено,
		|	0 КАК НеОпределеноСтоимость
		|ПОМЕСТИТЬ ВТ_Результат
		|ИЗ
		|	ВТ_ПодобраноРезультат КАК ВТ_ПодобраноРезультат
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""Все организации"",
		|	ВТ_НеПодобраноРезультат.Организация,
		|	ВТ_НеПодобраноРезультат.НоменклатураНормы,
		|	0,
		|	0,
		|	ВТ_НеПодобраноРезультат.НеПодобрано,
		|	ВТ_НеПодобраноРезультат.НеПодобраноСтоимость,
		|	0,
		|	0
		|ИЗ
		|	ВТ_НеПодобраноРезультат КАК ВТ_НеПодобраноРезультат
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""Все организации"",
		|	ВТ_НеОпределеноРезультат.Организация,
		|	ВТ_НеОпределеноРезультат.НоменклатураНормы,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ВТ_НеОпределеноРезультат.Не_Определено,
		|	ВТ_НеОпределеноРезультат.НеОпределеноСтоимость
		|ИЗ
		|	ВТ_НеОпределеноРезультат КАК ВТ_НеОпределеноРезультат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Результат.ВсеОрганизации КАК ВсеОрганизации,
		|	ВТ_Результат.Организация КАК Организация,
		|	ВТ_Результат.НоменклатураНормы КАК НоменклатураНормы,
		|	СУММА(ВТ_Результат.Доступно) КАК Доступно,
		|	СУММА(ВТ_Результат.ДоступноСтоимость) КАК ДоступноСтоимость,
		|	СУММА(ВТ_Результат.НеПодобрано) КАК НеДоступно,
		|	СУММА(ВТ_Результат.НеПодобраноСтоимость) КАК НеДоступноСтоимость,
		|	СУММА(ВТ_Результат.Не_Определено) КАК Не_Определено,
		|	СУММА(ВТ_Результат.НеОпределеноСтоимость) КАК НеОпределеноСтоимость
		|ИЗ
		|	ВТ_Результат КАК ВТ_Результат
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Результат.Организация,
		|	ВТ_Результат.НоменклатураНормы,
		|	ВТ_Результат.ВсеОрганизации";
		
		Запрос.УстановитьПараметр("ДатаАнализа",				Объект.КонецПериодаВыдачи);
		Запрос.УстановитьПараметр("ТаблицаПодобрано",			ТабПодобрано);
		Запрос.УстановитьПараметр("ТаблицаНеПодобрано",			ТабНеПодобрано);
		Запрос.УстановитьПараметр("ТаблицаНеМожетБытьПодобрано",ТабНеМожетБытьПодобрано);
		
		
		ВнешниеНаборыДанных = Новый Структура("ТаблицаДоступности",Запрос.Выполнить().Выгрузить());
		
		СхемаКомпоновкиДанных = ТекущийОбъект.ПолучитьМакет("СКД_Доступность");
		
		Настройка = СхемаКомпоновкиДанных.ВариантыНастроек[0];
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройка.Настройки,ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанных"));
		
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,ВнешниеНаборыДанных,ДанныеРасшифровки,Истина);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(ЭтаФорма.ДоступностьСИЗ);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
		Если ЗначениеЗаполнено(ЭтаФорма.АдресХранилищаДанныхРасшифровки) Тогда
		    СтруктураДанныхВременногоХранилища = ПолучитьИзВременногоХранилища(ЭтаФорма.АдресХранилищаДанныхРасшифровки);
		Иначе
			СтруктураДанныхВременногоХранилища = Новый Структура();
		КонецЕсли;
		
		СтруктураДанныхВременногоХранилища.Вставить("Доступность",ДанныеРасшифровки);
		
		ЭтаФорма.АдресХранилищаДанныхРасшифровки = ПоместитьВоВременноеХранилище(СтруктураДанныхВременногоХранилища,УникальныйИдентификатор);
		
	КонецЕсли;  	
	
	ТабПодобрано.Очистить();
	ТабНеПодобрано.Очистить();
	ТабНеМожетБытьПодобрано.Очистить();
	
	Если НЕ ТаблицаНеЗаданоМВЗ.Количество() = 0 Тогда
		
		НеЗаданоМВЗ.Очистить();
		
		ВнешниеНаборыДанных = Новый Структура("ТаблицаНеЗаданоМВЗ",РеквизитФормыВЗначение("ТаблицаНеЗаданоМВЗ"));
		
		СхемаКомпоновкиДанных = ТекущийОбъект.ПолучитьМакет("СКД_НеЗаданоМВЗ");
		
		Настройка = СхемаКомпоновкиДанных.ВариантыНастроек[0];
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройка.Настройки,ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанных"));
		
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,ВнешниеНаборыДанных,ДанныеРасшифровки,Истина);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(ЭтаФорма.НеЗаданоМВЗ);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
		Если ЗначениеЗаполнено(ЭтаФорма.АдресХранилищаДанныхРасшифровки) Тогда
		    СтруктураДанныхВременногоХранилища = ПолучитьИзВременногоХранилища(ЭтаФорма.АдресХранилищаДанныхРасшифровки);
		Иначе
			СтруктураДанныхВременногоХранилища = Новый Структура();
		КонецЕсли;
		
		СтруктураДанныхВременногоХранилища.Вставить("НеЗаданоМВЗ",ДанныеРасшифровки);
		
		ЭтаФорма.АдресХранилищаДанныхРасшифровки = ПоместитьВоВременноеХранилище(СтруктураДанныхВременногоХранилища,УникальныйИдентификатор);
 	    
	КонецЕсли;
	
	Если НЕ ТаблицаОстатков.Количество() = 0 Тогда
		
		ОстаткиПослеПодбора.Очистить();
		
		ВнешниеНаборыДанных = Новый Структура("ТаблицаОстатки",РеквизитФормыВЗначение("ТаблицаОстатков"));
		
		СхемаКомпоновкиДанных = ТекущийОбъект.ПолучитьМакет("СКД_Остатки");
		
		Настройка = СхемаКомпоновкиДанных.ВариантыНастроек[0];
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Организация",								Объект.Организация);
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НеУчитыватьОстаткиПоОрганизации",			НеУчитыватьОстаткиПоОрганизации);
		Настройка.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ВидДополнительнойИнформацииПоНоменклатуре",Объект.ДополнительнаяИнформацияПоНоменклатуреВыдачи);
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройка.Настройки,ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанных"));
		
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,ВнешниеНаборыДанных,ДанныеРасшифровки,Истина);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(ЭтаФорма.ОстаткиПослеПодбора);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
		Если ЗначениеЗаполнено(ЭтаФорма.АдресХранилищаДанныхРасшифровки) Тогда
		    СтруктураДанныхВременногоХранилища = ПолучитьИзВременногоХранилища(ЭтаФорма.АдресХранилищаДанныхРасшифровки);
		Иначе
			СтруктураДанныхВременногоХранилища = Новый Структура();
		КонецЕсли;
		
		СтруктураДанныхВременногоХранилища.Вставить("Остатки",ДанныеРасшифровки);
		
		ЭтаФорма.АдресХранилищаДанныхРасшифровки = ПоместитьВоВременноеХранилище(СтруктураДанныхВременногоХранилища,УникальныйИдентификатор);
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьРезультирующиеТаблицы()
	
	ТаблицаНеЗаданоМВЗ.Очистить();
	ТаблицаНеМожетБытьПодобрано.Очистить();
	ТаблицаНеПодобрано.Очистить();
	ТаблицаОстатков.Очистить();
	ТаблицаПодобрано.Очистить();
	
	УстановитьВидимость();
	
	ДеревоДляЗагрузкиВФорму = РеквизитФормыВЗначение("Дерево_ЗаказыПоставщику");
	ДеревоДляЗагрузкиВФорму.Строки.Очистить();
	ЗначениеВРеквизитФормы(ДеревоДляЗагрузкиВФорму,"Дерево_ЗаказыПоставщику");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	
	ЭтаФорма.Элементы.Организация.Видимость 		= НЕ ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	//+++АСТБ_Горюшин_Алексей_42504
	ЭтаФорма.Элементы.ТаблицаНоменклатурыНормыНоменклатураНормыВладелец.Видимость = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	//было
	//ЭтаФорма.Элементы.ТаблицаМВЗ.Видимость 			= НЕ ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	//ЭтаФорма.Элементы.ТаблицаСотрудников.Видимость 	= НЕ ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	//---АСТБ_Горюшин_Алексей_42504
	
	ЭтаФорма.Элементы.СтраницаНеЗаданоМВЗ.Видимость 						= НЕ ТаблицаНеЗаданоМВЗ.Количество() = 0;
	ЭтаФорма.Элементы.СтраницаНоменклатураНеМожетБытьПодобрана.Видимость 	= НЕ ТаблицаНеМожетБытьПодобрано.Количество() = 0;
	ЭтаФорма.Элементы.СтраницаНоменклатураНеПодобрана.Видимость 			= НЕ ТаблицаНеПодобрано.Количество() = 0;
	ЭтаФорма.Элементы.СтраницаОстаткиПослеПодбора.Видимость 				= НЕ ТаблицаОстатков.Количество() = 0;
	ЭтаФорма.Элементы.СтраницаНоменклатураПодобрана.Видимость 				= НЕ ТаблицаПодобрано.Количество() = 0;
	ЭтаФорма.Элементы.СтраницаДоступность.Видимость							= (НЕ ТаблицаПодобрано.Количество() = 0) ИЛИ (НЕ ТаблицаНеПодобрано.Количество() = 0) ИЛИ (НЕ ТаблицаНеМожетБытьПодобрано.Количество() = 0);
	
	//***Трегубов А.А.*** -- №132482 --  15.10.2021 <<<
	ЭтаФорма.Элементы.ОдинЗаказ.Видимость 									= Ложь;
	//***Трегубов А.А.*** -- №132482  --  15.10.2021 >>>
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНеЗаданныхМВЗ()
	
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	ТаблицаИспользуемыхВидовВыдачи = Объект.ТаблицаВидовВыдачи.Выгрузить(Новый Структура("Использовать",Истина));
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИСТИНА КАК Использовать,
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_СотрудникиПоПотребности
	|ИЗ
	|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
	|			&ДатаАнализа,
	|			(Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|				И ДатаПотребности <= &ДатаАнализа
	|				И НормаВыдачи.ВидВыдачиСИЗ В (&МассивВидовВыдачи)) КАК ПотребностьВыдачиСИЗОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗСотрудников.Сотрудник КАК Сотрудник,
	|	МВЗСотрудников.МВЗ КАК МВЗ
	|ПОМЕСТИТЬ ВТ_МВЗСотрудников
	|ИЗ
	|	РегистрСведений.МВЗСотрудников КАК МВЗСотрудников
	|ГДЕ
	|	(МВЗСотрудников.Организация = &Организация
	|			ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	//+++АСТБ_Горюшин_Алексей_73495
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Организация КАК Организация,
	//---АСТБ_Горюшин_Алексей_73495
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение КАК Подразделение,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Должность КАК Должность
	|ПОМЕСТИТЬ ВТ_ОсновноеМестоРаботы
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(
	|			&ДатаАнализа,
	|			Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗПодразделенийСрезПоследних.МВЗ КАК МВЗ,
	|	МВЗПодразделенийСрезПоследних.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_МВЗ
	|ИЗ
	|	РегистрСведений.МВЗПодразделений.СрезПоследних(
	|			&ДатаАнализа,
	|			Подразделение.Владелец = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации) КАК МВЗПодразделенийСрезПоследних
	|ГДЕ
	|	МВЗПодразделенийСрезПоследних.Использовать
	|;
	//+++АСТБ_Горюшин_Алексей_73495
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗДолжностейСрезПоследних.Организация КАК Организация,
	|	МВЗДолжностейСрезПоследних.Должность КАК Должность,
	|	МВЗДолжностейСрезПоследних.МВЗ КАК МВЗ
	|ПОМЕСТИТЬ ВТ_МВЗДолжностей
	|ИЗ
	|	РегистрСведений.МВЗДолжностей.СрезПоследних(&ДатаАнализа, Организация = &Организация ИЛИ &НеУчитыватьОстаткиПоОрганизации) КАК МВЗДолжностейСрезПоследних
	|ГДЕ
	|	МВЗДолжностейСрезПоследних.Использовать
	|;
	//---АСТБ_Горюшин_Алексей_73495
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СотрудникиПоПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_ОсновноеМестоРаботы.Подразделение КАК Подразделение,
	|	ВТ_ОсновноеМестоРаботы.Должность КАК Должность
	|ИЗ
	|	ВТ_СотрудникиПоПотребности КАК ВТ_СотрудникиПоПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновноеМестоРаботы КАК ВТ_ОсновноеМестоРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗ КАК ВТ_МВЗ
	|			ПО ВТ_ОсновноеМестоРаботы.Подразделение = ВТ_МВЗ.Подразделение
	//+++АСТБ_Горюшин_Алексей_73495
	|       	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗДолжностей КАК ВТ_МВЗДолжностей
	|			ПО ВТ_ОсновноеМестоРаботы.Должность = ВТ_МВЗДолжностей.Должность
	|				И ВТ_ОсновноеМестоРаботы.Организация = ВТ_МВЗДолжностей.Организация
	//---АСТБ_Горюшин_Алексей_73495
	|		ПО ВТ_СотрудникиПоПотребности.Сотрудник = ВТ_ОсновноеМестоРаботы.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗСотрудников КАК ВТ_МВЗСотрудников
	|		ПО ВТ_СотрудникиПоПотребности.Сотрудник = ВТ_МВЗСотрудников.Сотрудник
	|ГДЕ
	|	НЕ ВТ_ОсновноеМестоРаботы.Подразделение ЕСТЬ NULL
	|	И ВТ_МВЗ.МВЗ ЕСТЬ NULL
	|	И ВТ_МВЗСотрудников.МВЗ ЕСТЬ NULL
	//+++АСТБ_Горюшин_Алексей_73495
	|	И ВТ_МВЗДолжностей.МВЗ ЕСТЬ NULL
	//---АСТБ_Горюшин_Алексей_73495
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_СотрудникиПоПотребности.Сотрудник.Наименование";
	
	Запрос.УстановитьПараметр("Организация",					Объект.Организация);
	Запрос.УстановитьПараметр("ДатаАнализа",					Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("МассивВидовВыдачи",				ТаблицаИспользуемыхВидовВыдачи.ВыгрузитьКолонку("ВидВыдачи"));
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",НеУчитыватьОстаткиПоОрганизации);
	
	УстановитьПривилегированныйРежим(Истина);
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(),"ТаблицаНеЗаданоМВЗ");
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРезультирующиеТаблицы()
	
	//исходные таблицы
	ТабПериодовВыдачи 				= РеквизитФормыВЗначение("ТаблицаПериодовВыдачи");
	ТабНоменклатурыНормСотрудников 	= РеквизитФормыВЗначение("ТаблицаНоменклатурыНормыСотрудников");
	ТабВыдачиСотрудников 			= РеквизитФормыВЗначение("ТаблицаВыдачиСотрудников");
	
	//+++АСТБ_Горюшин_Алексей_65169
	ТабВыдачиСотрудников.Индексы.Добавить("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, ПриоритетСоответствия, Приоритет, Комплект, Номенклатура");
	ТабВыдачиСотрудников.Индексы.Добавить("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, Комплект");
	//---АСТБ_Горюшин_Алексей_65169
	
	//результирующие таблицы
	ТабПодобрано 			= РеквизитФормыВЗначение("ТаблицаПодобрано");
	ТабНеПодобрано 			= РеквизитФормыВЗначение("ТаблицаНеПодобрано");
	ТабНеМожетБытьПодобрано = РеквизитФормыВЗначение("ТаблицаНеМожетБытьПодобрано");
	
	ТабПодобрано.Очистить();
	ТабНеПодобрано.Очистить();
	ТабНеМожетБытьПодобрано.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабВыдачи.НачалоПериода КАК НачалоПериода,
	|	ТабВыдачи.КонецПериода КАК КонецПериода,
	|	ТабВыдачи.Сотрудник КАК Сотрудник,
	|	ТабВыдачи.НоменклатураНормы КАК НоменклатураНормы,
	|	ТабВыдачи.Номенклатура КАК Номенклатура,
	|	ТабВыдачи.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТабВыдачи.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ТабВыдачи.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ТабВыдачи.Приоритет КАК Приоритет,
	|	ТабВыдачи.ПриоритетРазмера КАК ПриоритетРазмера,
	|	ТабВыдачи.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	|	ТабВыдачи.Комплект КАК Комплект,
	|	ТабВыдачи.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_ТаблицаВыдачи
	|ИЗ
	|	&ТабВыдачи КАК ТабВыдачи
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы
	|;
	//+++АСТБ_Горюшин_Алексей_56295
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураКомплектующие.Ссылка КАК Комплект,
	|	НоменклатураКомплектующие.Номенклатура.ВидАнтропометрическогоСвойства КАК НоменклатураВидАнтропометрическогоСвойства
	|ПОМЕСТИТЬ ВТ_Комплекты_ДолжнаБытьАнтропометрия
	|ИЗ
	|	Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	|ГДЕ
	|	НоменклатураКомплектующие.Ссылка В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВТ_ТаблицаВыдачи.Комплект
	|			ИЗ
	|				ВТ_ТаблицаВыдачи
	|			ГДЕ
	|				НЕ ВТ_ТаблицаВыдачи.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|	И НЕ НоменклатураКомплектующие.Номенклатура.ВидАнтропометрическогоСвойства = ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗначенияАнтропометрическихСвойств.Сотрудник КАК Сотрудник,
	|	ЗначенияАнтропометрическихСвойств.ВидСвойства КАК ВидСвойстваСотрудника,
	|	ЗначенияАнтропометрическихСвойств.ЗначениеСвойства КАК ЗначениеСвойства
	|ПОМЕСТИТЬ ВТ_ЗначенияАнтропометрическихСвойств
	|ИЗ
	|	РегистрСведений.ЗначенияАнтропометрическихСвойств КАК ЗначенияАнтропометрическихСвойств
	|ГДЕ
	|	ЗначенияАнтропометрическихСвойств.Сотрудник В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ВТ_ТаблицаВыдачи.Сотрудник
	|			ИЗ
	|				ВТ_ТаблицаВыдачи)
	|;
	//+++АСТБ_Горюшин_Алексей_65169
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаВыдачи.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаВыдачи.Комплект КАК Комплект,
	|	ВТ_ТаблицаВыдачи.Номенклатура КАК Номенклатура,
	|	СПР_Номенклатура.ВидАнтропометрическогоСвойства КАК НоменклатураВидАнтропометрическогоСвойства
	|ПОМЕСТИТЬ ВТ_ИсходныеДанные_АнтропометрияНоменклатуры
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СПР_Номенклатура
	|		ПО ВТ_ТаблицаВыдачи.Номенклатура = СПР_Номенклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	НоменклатураКомплектующие.Ссылка КАК Комплект,
	|	НоменклатураКомплектующие.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_Комплектующие_ДолженБытьРазмер
	|ИЗ
	|	Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	|ГДЕ
	|	НЕ НоменклатураКомплектующие.Номенклатура.ВидАнтропометрическогоСвойства = ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Комплектующие_ДолженБытьРазмер.Комплект КАК Комплект,
	|	ЛОЖЬ КАК МожетБытьПодобрана
	|ПОМЕСТИТЬ ВТ_Комплекты_НельзяПодобрать
	|ИЗ
	|	ВТ_Комплектующие_ДолженБытьРазмер КАК ВТ_Комплектующие_ДолженБытьРазмер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ВТ_Комплектующие_ДолженБытьРазмер.Номенклатура = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаВыдачи.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаВыдачи.Комплект КАК Комплект,
	|	ВТ_ТаблицаВыдачи.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаВыдачи.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаВыдачи.ПриоритетРазмера КАК ПриоритетРазмера,
	|	ВТ_ТаблицаВыдачи.ЕстьРазмеры КАК ЕстьРазмеры,
	|	СПР_Номенклатура.ВидАнтропометрическогоСвойства КАК НоменклатураВидАнтропометрическогоСвойства
	|ПОМЕСТИТЬ ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СПР_Номенклатура
	|		ПО ВТ_ТаблицаВыдачи.Номенклатура = СПР_Номенклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Сотрудник КАК Сотрудник,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Комплект КАК Комплект,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Номенклатура КАК Номенклатура,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ПриоритетРазмера КАК ПриоритетРазмера,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.НоменклатураВидАнтропометрическогоСвойства КАК НоменклатураВидАнтропометрическогоСвойства
	|ПОМЕСТИТЬ ВТ_Кроме1000
	|ИЗ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика КАК ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика
	|ГДЕ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ПриоритетРазмера < 1000
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Сотрудник КАК Сотрудник,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Комплект КАК Комплект,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Номенклатура КАК Номенклатура,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ПриоритетРазмера КАК ПриоритетРазмера,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.НоменклатураВидАнтропометрическогоСвойства КАК НоменклатураВидАнтропометрическогоСвойства,
	|	ВТ_Кроме1000.Комплект КАК Комплект1
	|ПОМЕСТИТЬ ВТ_КомплектыСПриоритетомРазмераМеньше1000
	|ИЗ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика КАК ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Кроме1000 КАК ВТ_Кроме1000
	|       ПО ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Сотрудник = ВТ_Кроме1000.Сотрудник
	|       	И ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Комплект = ВТ_Кроме1000.Комплект
	|       	И ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ПриоритетРазмера = ВТ_Кроме1000.ПриоритетРазмера
	|ГДЕ
	|	НЕ ВТ_Кроме1000.Комплект ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Сотрудник КАК Сотрудник,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Комплект КАК Комплект,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Номенклатура КАК Номенклатура,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ПриоритетРазмера КАК ПриоритетРазмера,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.НоменклатураВидАнтропометрическогоСвойства КАК НоменклатураВидАнтропометрическогоСвойства,
	|	ВТ_КомплектыСПриоритетомРазмераМеньше1000.Комплект1 КАК Комплект1
	|ПОМЕСТИТЬ ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика_ТолькоВСЕ1000
	|ИЗ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика КАК ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КомплектыСПриоритетомРазмераМеньше1000 КАК ВТ_КомплектыСПриоритетомРазмераМеньше1000
	|		ПО (ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Комплект = ВТ_КомплектыСПриоритетомРазмераМеньше1000.Комплект1)
	|		И (ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Сотрудник = ВТ_КомплектыСПриоритетомРазмераМеньше1000.Сотрудник)
	|
	|ГДЕ
	|	ВТ_КомплектыСПриоритетомРазмераМеньше1000.Комплект1 ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика_ТолькоВСЕ1000.Сотрудник КАК Сотрудник,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика_ТолькоВСЕ1000.Комплект КАК Комплект,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика_ТолькоВСЕ1000.ПриоритетРазмера КАК ПриоритетРазмера,
	|	ЛОЖЬ КАК МожетБытьПодобрана
	|ПОМЕСТИТЬ ВТ_Комплекты_НельзяПодобрать_2
	|ИЗ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика_ТолькоВСЕ1000 КАК ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика_ТолькоВСЕ1000
	|ГДЕ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика_ТолькоВСЕ1000.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика_ТолькоВСЕ1000.ЕстьРазмеры = ИСТИНА
	|	И ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика_ТолькоВСЕ1000.ПриоритетРазмера = 1000
	|	И НЕ ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика_ТолькоВСЕ1000.НоменклатураВидАнтропометрическогоСвойства = ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Сотрудник КАК Сотрудник,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Комплект КАК Комплект,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.Номенклатура КАК Номенклатура,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ПриоритетРазмера КАК ПриоритетРазмера,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.НоменклатураВидАнтропометрическогоСвойства КАК НоменклатураВидАнтропометрическогоСвойства
	|ПОМЕСТИТЬ ВТ_Кроме1000_ЕстьРазмеры
	|ИЗ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика КАК ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика
	|ГДЕ
	|	ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ПриоритетРазмера < 1000
	|	ИЛИ (НЕ ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ЕстьРазмеры
	|	И ВТ_ИсходныеДанные_ДолжнаБытьХарактеристика.ПриоритетРазмера = 1000)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ТаблицаВыдачи.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаВыдачи.Комплект КАК Комплект,
	//|	ВТ_ТаблицаВыдачи.Приоритет КАК Приоритет,
	|	НоменклатураКомплектующие.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_Комплекты_B_Комплектующие
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	|		ПО ВТ_ТаблицаВыдачи.Комплект = НоменклатураКомплектующие.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Комплекты_B_Комплектующие.Сотрудник КАК Сотрудник,
	|	ВТ_Комплекты_B_Комплектующие.Комплект КАК Комплект,
	//|	ВТ_Комплекты_B_Комплектующие.Приоритет КАК Приоритет,
	|	ВТ_Комплекты_B_Комплектующие.Номенклатура КАК Номенклатура,
	|	ЛОЖЬ КАК МожетБытьПодобрана
	|ПОМЕСТИТЬ ВТ_Комплекты_НельзяПодобрать_3
	|ИЗ
	|	ВТ_Комплекты_B_Комплектующие КАК ВТ_Комплекты_B_Комплектующие
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Кроме1000_ЕстьРазмеры КАК ВТ_Кроме1000_ЕстьРазмеры
	|		ПО ВТ_Комплекты_B_Комплектующие.Сотрудник = ВТ_Кроме1000_ЕстьРазмеры.Сотрудник
	|			И ВТ_Комплекты_B_Комплектующие.Комплект = ВТ_Кроме1000_ЕстьРазмеры.Комплект
	|			И ВТ_Комплекты_B_Комплектующие.Номенклатура = ВТ_Кроме1000_ЕстьРазмеры.Номенклатура
	|ГДЕ
	|	ВТ_Кроме1000_ЕстьРазмеры.Комплект ЕСТЬ NULL
	|;
	//---АСТБ_Горюшин_Алексей_65169
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаВыдачи.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаВыдачи.Комплект КАК Комплект,
	|	ВТ_ТаблицаВыдачи.Номенклатура КАК Номенклатура,
	|	ВТ_Комплекты_ДолжнаБытьАнтропометрия.НоменклатураВидАнтропометрическогоСвойства КАК НоменклатураВидАнтропометрическогоСвойства
	|ПОМЕСТИТЬ ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Комплекты_ДолжнаБытьАнтропометрия КАК ВТ_Комплекты_ДолжнаБытьАнтропометрия
	|		ПО ВТ_ТаблицаВыдачи.Комплект = ВТ_Комплекты_ДолжнаБытьАнтропометрия.Комплект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта.Сотрудник КАК Сотрудник,
	|	ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта.Комплект КАК Комплект,
	|	ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта.НоменклатураВидАнтропометрическогоСвойства ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			КОГДА ВТ_ЗначенияАнтропометрическихСвойств.ВидСвойстваСотрудника ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК МожетБытьПодобрана
	|ПОМЕСТИТЬ ВТ_ПроверкаНаНачилиеАнтропометрии
	|ИЗ
	|	ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта КАК ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияАнтропометрическихСвойств КАК ВТ_ЗначенияАнтропометрическихСвойств
	|		ПО (ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта.Сотрудник = ВТ_ЗначенияАнтропометрическихСвойств.Сотрудник)
	|			И (ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта.НоменклатураВидАнтропометрическогоСвойства = ВТ_ЗначенияАнтропометрическихСвойств.ВидСвойстваСотрудника)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта.Сотрудник,
	|	ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта.Комплект,
	|	ВТ_ИсходныеДанные_СНужнойАнтропометриейИзКомплекта.Номенклатура
	|;
	//---АСТБ_Горюшин_Алексей_56295
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаВыдачи.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаВыдачи.НоменклатураНормы КАК НоменклатураНормы,
	|	МАКСИМУМ(ВТ_ТаблицаВыдачи.ТолькоДляСотрудника) КАК ТолькоДляСотрудника,
	|	ВТ_ТаблицаВыдачи.НачалоПериода КАК НачалоПериода,
	|	ВТ_ТаблицаВыдачи.КонецПериода КАК КонецПериода
	|ПОМЕСТИТЬ ВТ_ГруппировкаТолькоДляСотрудника
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаВыдачи.Сотрудник,
	|	ВТ_ТаблицаВыдачи.НоменклатураНормы,
	|	ВТ_ТаблицаВыдачи.НачалоПериода,
	|	ВТ_ТаблицаВыдачи.КонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ТаблицаВыдачи.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаВыдачи.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ТаблицаВыдачи.Комплект КАК Комплект,
	|	ВТ_ТаблицаВыдачи.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ТаблицаВыдачи.Приоритет КАК Приоритет,
	|	ВТ_ТаблицаВыдачи.НачалоПериода КАК НачалоПериода,
	|	ВТ_ТаблицаВыдачи.КонецПериода КАК КонецПериода
	|ПОМЕСТИТЬ ВТ_ПустаяНоменклатураПоВыдаче
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|ГДЕ
	|	ВТ_ТаблицаВыдачи.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаВыдачи.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаВыдачи.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ТаблицаВыдачи.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаВыдачи.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаВыдачи.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ВТ_ТаблицаВыдачи.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ТаблицаВыдачи.Приоритет КАК Приоритет,
	|	ВТ_ТаблицаВыдачи.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	|	ВТ_ТаблицаВыдачи.Комплект КАК Комплект,
	|	ВТ_ТаблицаВыдачи.Количество КАК Количество,
	|	ВЫБОР
	//+++АСТБ_Горюшин_Алексей_65169
	// На одну номенклатуру
	|		КОГДА НЕ ВТ_ТаблицаВыдачи.ЕстьРазмеры
	|			И ВТ_ТаблицаВыдачи.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			И ВТ_ТаблицаВыдачи.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) ТОГДА
	|				ВЫБОР КОГДА ВТ_ИсходныеДанные_АнтропометрияНоменклатуры.НоменклатураВидАнтропометрическогоСвойства = ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
	|					ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	// На комплект
	|		КОГДА НЕ ВТ_ТаблицаВыдачи.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			И НЕ ВТ_Комплекты_НельзяПодобрать.МожетБытьПодобрана ЕСТЬ NULL
	|				ТОГДА ВТ_Комплекты_НельзяПодобрать.МожетБытьПодобрана
	// Комплект, где у всех комплектующих ПриоритетРазмера = 1000
	|		КОГДА НЕ ВТ_ТаблицаВыдачи.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			И НЕ ВТ_Комплекты_НельзяПодобрать_2.МожетБытьПодобрана ЕСТЬ NULL
	|				ТОГДА ВТ_Комплекты_НельзяПодобрать_2.МожетБытьПодобрана
	// Комплект, где хотя бы одному комплектующему невозможно подобрать размер
	|		КОГДА НЕ ВТ_ТаблицаВыдачи.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			И НЕ ВТ_Комплекты_НельзяПодобрать_3.МожетБытьПодобрана ЕСТЬ NULL
	|				ТОГДА ВТ_Комплекты_НельзяПодобрать_3.МожетБытьПодобрана
	//---АСТБ_Горюшин_Алексей_65169
	//+++АСТБ_Горюшин_Алексей_56295
	|		КОГДА НЕ ВТ_ТаблицаВыдачи.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) И НЕ ВТ_ПроверкаНаНачилиеАнтропометрии.МожетБытьПодобрана ЕСТЬ NULL
	|			ТОГДА ВТ_ПроверкаНаНачилиеАнтропометрии.МожетБытьПодобрана
	//---АСТБ_Горюшин_Алексей_56295
	|		КОГДА ВТ_ТаблицаВыдачи.ЕстьРазмеры
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ТаблицаВыдачи.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК МожетБытьПодобрана,
	|	ВТ_ГруппировкаТолькоДляСотрудника.НачалоПериода КАК НачалоПериода,
	|	ВТ_ГруппировкаТолькоДляСотрудника.КонецПериода КАК КонецПериода
	|ПОМЕСТИТЬ ВТ_ОтборПоВыдаче
	|ИЗ
	|	ВТ_ГруппировкаТолькоДляСотрудника КАК ВТ_ГруппировкаТолькоДляСотрудника
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПустаяНоменклатураПоВыдаче КАК ВТ_ПустаяНоменклатураПоВыдаче
	|			ПО ВТ_ТаблицаВыдачи.Сотрудник = ВТ_ПустаяНоменклатураПоВыдаче.Сотрудник
	|				И ВТ_ТаблицаВыдачи.НоменклатураНормы = ВТ_ПустаяНоменклатураПоВыдаче.НоменклатураНормы
	|				И ВТ_ТаблицаВыдачи.ПриоритетСоответствия = ВТ_ПустаяНоменклатураПоВыдаче.ПриоритетСоответствия
	|				И ВТ_ТаблицаВыдачи.Приоритет = ВТ_ПустаяНоменклатураПоВыдаче.Приоритет
	|				И ВТ_ТаблицаВыдачи.Комплект = ВТ_ПустаяНоменклатураПоВыдаче.Комплект
	|				И ВТ_ТаблицаВыдачи.НачалоПериода = ВТ_ПустаяНоменклатураПоВыдаче.НачалоПериода
	|				И ВТ_ТаблицаВыдачи.КонецПериода = ВТ_ПустаяНоменклатураПоВыдаче.КонецПериода
	//+++АСТБ_Горюшин_Алексей_56295
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроверкаНаНачилиеАнтропометрии КАК ВТ_ПроверкаНаНачилиеАнтропометрии
	|			ПО ВТ_ТаблицаВыдачи.Сотрудник = ВТ_ПроверкаНаНачилиеАнтропометрии.Сотрудник
	|				И ВТ_ТаблицаВыдачи.Комплект = ВТ_ПроверкаНаНачилиеАнтропометрии.Комплект
	|				И ВТ_ТаблицаВыдачи.Номенклатура = ВТ_ПроверкаНаНачилиеАнтропометрии.Номенклатура
	//---АСТБ_Горюшин_Алексей_56295
	//+++АСТБ_Горюшин_Алексей_65169
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсходныеДанные_АнтропометрияНоменклатуры КАК ВТ_ИсходныеДанные_АнтропометрияНоменклатуры
	|			ПО ВТ_ТаблицаВыдачи.Сотрудник = ВТ_ИсходныеДанные_АнтропометрияНоменклатуры.Сотрудник
	|				И ВТ_ТаблицаВыдачи.Комплект = ВТ_ИсходныеДанные_АнтропометрияНоменклатуры.Комплект
	|				И ВТ_ТаблицаВыдачи.Номенклатура = ВТ_ИсходныеДанные_АнтропометрияНоменклатуры.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Комплекты_НельзяПодобрать КАК ВТ_Комплекты_НельзяПодобрать
	|			ПО ВТ_ТаблицаВыдачи.Комплект = ВТ_Комплекты_НельзяПодобрать.Комплект
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Комплекты_НельзяПодобрать_2 КАК ВТ_Комплекты_НельзяПодобрать_2
	|			ПО ВТ_ТаблицаВыдачи.Комплект = ВТ_Комплекты_НельзяПодобрать_2.Комплект
	|				И ВТ_ТаблицаВыдачи.Сотрудник = ВТ_Комплекты_НельзяПодобрать_2.Сотрудник
	|				И ВТ_ТаблицаВыдачи.ПриоритетРазмера = ВТ_Комплекты_НельзяПодобрать_2.ПриоритетРазмера
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Комплекты_НельзяПодобрать_3 КАК ВТ_Комплекты_НельзяПодобрать_3
	|			ПО ВТ_ТаблицаВыдачи.Комплект = ВТ_Комплекты_НельзяПодобрать_3.Комплект
	|				И ВТ_ТаблицаВыдачи.Сотрудник = ВТ_Комплекты_НельзяПодобрать_3.Сотрудник
	//|				И ВТ_ТаблицаВыдачи.Приоритет = ВТ_Комплекты_НельзяПодобрать_3.Приоритет
	//+++АСТБ_Горюшин_Алексей_65169
	|		ПО ВТ_ГруппировкаТолькоДляСотрудника.Сотрудник = ВТ_ТаблицаВыдачи.Сотрудник
	|			И ВТ_ГруппировкаТолькоДляСотрудника.НоменклатураНормы = ВТ_ТаблицаВыдачи.НоменклатураНормы
	|			И ВТ_ГруппировкаТолькоДляСотрудника.ТолькоДляСотрудника = ВТ_ТаблицаВыдачи.ТолькоДляСотрудника
	|			И ВТ_ГруппировкаТолькоДляСотрудника.НачалоПериода = ВТ_ТаблицаВыдачи.НачалоПериода
	|			И ВТ_ГруппировкаТолькоДляСотрудника.КонецПериода = ВТ_ТаблицаВыдачи.КонецПериода
	|ГДЕ
	|	ВТ_ПустаяНоменклатураПоВыдаче.Комплект ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОтборПоВыдаче.НачалоПериода КАК НачалоПериода,
	|	ВТ_ОтборПоВыдаче.Сотрудник КАК Сотрудник,
	|	ВТ_ОтборПоВыдаче.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ОтборПоВыдаче.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ОтборПоВыдаче.Приоритет КАК Приоритет,
	|	ВТ_ОтборПоВыдаче.Комплект КАК Комплект,
	|	МАКСИМУМ(ВТ_ОтборПоВыдаче.МожетБытьПодобрана) КАК МожетБытьПодобрана,
	|	МАКСИМУМ(ВТ_ОтборПоВыдаче.Количество) КАК Количество,
	|	ВТ_ОтборПоВыдаче.КонецПериода КАК КонецПериода,
	|	ВТ_ОтборПоВыдаче.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ВыдачаМожетБытьПодобрана
	|ИЗ
	|	ВТ_ОтборПоВыдаче КАК ВТ_ОтборПоВыдаче
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОтборПоВыдаче.Сотрудник,
	|	ВТ_ОтборПоВыдаче.НоменклатураНормы,
	|	ВТ_ОтборПоВыдаче.ПриоритетСоответствия,
	|	ВТ_ОтборПоВыдаче.Приоритет,
	|	ВТ_ОтборПоВыдаче.Комплект,
	|	ВТ_ОтборПоВыдаче.НачалоПериода,
	|	ВТ_ОтборПоВыдаче.КонецПериода,
	|	ВТ_ОтборПоВыдаче.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ВыдачаМожетБытьПодобрана.НачалоПериода КАК НачалоПериода,
	|	ВТ_ВыдачаМожетБытьПодобрана.КонецПериода КАК КонецПериода,
	|	ВТ_ВыдачаМожетБытьПодобрана.Сотрудник КАК Сотрудник,
	|	ВТ_ВыдачаМожетБытьПодобрана.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ВыдачаМожетБытьПодобрана.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ВыдачаМожетБытьПодобрана.Приоритет КАК Приоритет,
	|	ВТ_ВыдачаМожетБытьПодобрана.Комплект КАК Комплект,
	|	0 КАК Подобрано,
	|	ВТ_ВыдачаМожетБытьПодобрана.Количество КАК Количество,
	|	0 КАК ПроцентПодобранных,
	|	ВТ_ВыдачаМожетБытьПодобрана.Номенклатура КАК Номенклатура
	|ИЗ
	|	ВТ_ВыдачаМожетБытьПодобрана КАК ВТ_ВыдачаМожетБытьПодобрана
	|ГДЕ
	|	ВТ_ВыдачаМожетБытьПодобрана.МожетБытьПодобрана
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачалоПериода,
	|	Сотрудник,
	|	НоменклатураНормы,
	|	ПриоритетСоответствия,
	|	Приоритет,
	|	Комплект";
	
	Запрос.УстановитьПараметр("ТабВыдачи",	ТабВыдачиСотрудников);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	//+++АСТБ_Горюшин_Алексей_65169
	ТаблицаЗапроса.Индексы.Добавить("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы");
	//---АСТБ_Горюшин_Алексей_65169
	
	ТабОстатков = РеквизитФормыВЗначение("ТаблицаОстатков");
	
	//таблица для промежуточной сортировки по проценту выдачи
	ТаблицаДляСортировки 		= ТаблицаЗапроса.Скопировать();
	ТаблицаДляСортировки.Очистить();
	
	//таблица комплектов к выдаче согласно сортировке
	ТаблицаКомплектовКВыдаче	= ТаблицаЗапроса.Скопировать();
	ТаблицаКомплектовКВыдаче.Очистить();
	
	ЗапросПоТаблицеДляСортировки = Новый Запрос;
	ЗапросПоТаблицеДляСортировки.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДляСортировки.Количество КАК Количество,
	|	ТаблицаДляСортировки.Комплект КАК Комплект,
	|	ТаблицаДляСортировки.КонецПериода КАК КонецПериода,
	|	ТаблицаДляСортировки.НачалоПериода КАК НачалоПериода,
	|	ТаблицаДляСортировки.Номенклатура КАК Номенклатура,
	|	ТаблицаДляСортировки.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаДляСортировки.Подобрано КАК Подобрано,
	|	ТаблицаДляСортировки.Приоритет КАК Приоритет,
	|	ТаблицаДляСортировки.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ТаблицаДляСортировки.ПроцентПодобранных КАК ПроцентПодобранных,
	|	ТаблицаДляСортировки.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_ТаблицаДляСортировки
	|ИЗ
	|	&ТаблицаДляСортировки КАК ТаблицаДляСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДляСортировки.Комплект КАК Комплект,
	//+++АСТБ_Горюшин_Алексей_26451
	|	СУММА(ЕСТЬNULL(ВТ_ТаблицаДляСортировки.Подобрано, 0)) КАК КоличествоПодобранныхКомплектующих,
	//было
	//|	СУММА(1) КАК КоличествоПодобранныхКомплектующих,
	//---АСТБ_Горюшин_Алексей_26451
	|	МАКСИМУМ(НоменклатураКомплектующие.НомерСтроки) КАК КоличествоКомплектующихВКомплекте
	|ПОМЕСТИТЬ ВТ_ПроверкаКоличестваКомплектующих
	|ИЗ
	|	ВТ_ТаблицаДляСортировки КАК ВТ_ТаблицаДляСортировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	|		ПО ВТ_ТаблицаДляСортировки.Комплект = НоменклатураКомплектующие.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаДляСортировки.Комплект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДляСортировки.Приоритет КАК Приоритет,
	|	ВТ_ТаблицаДляСортировки.ПриоритетСоответствия КАК ПриоритетСоответствия,
	//+++АСТБ_Горюшин_Алексей_56295
	// Костыль, чтобы не было больше 100%
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА ВТ_ТаблицаДляСортировки.ПроцентПодобранных * ВТ_ПроверкаКоличестваКомплектующих.КоличествоПодобранныхКомплектующих / ВТ_ПроверкаКоличестваКомплектующих.КоличествоКомплектующихВКомплекте > 100
	|				ТОГДА 100
	|			ИНАЧЕ ВТ_ТаблицаДляСортировки.ПроцентПодобранных * ВТ_ПроверкаКоличестваКомплектующих.КоличествоПодобранныхКомплектующих / ВТ_ПроверкаКоличестваКомплектующих.КоличествоКомплектующихВКомплекте
	|		КОНЕЦ) КАК СреднийПроцентПодобранных
	//было
	//|	СРЕДНЕЕ(ВТ_ТаблицаДляСортировки.ПроцентПодобранных * ВТ_ПроверкаКоличестваКомплектующих.КоличествоПодобранныхКомплектующих / ВТ_ПроверкаКоличестваКомплектующих.КоличествоКомплектующихВКомплекте) КАК СреднийПроцентПодобранных
	//АСТБ_Горюшин_Алексей_56295
	|ПОМЕСТИТЬ ВТ_СреднийПроцентПодобранных
	|ИЗ
	|	ВТ_ТаблицаДляСортировки КАК ВТ_ТаблицаДляСортировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроверкаКоличестваКомплектующих КАК ВТ_ПроверкаКоличестваКомплектующих
	|		ПО ВТ_ТаблицаДляСортировки.Комплект = ВТ_ПроверкаКоличестваКомплектующих.Комплект
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаДляСортировки.Приоритет,
	|	ВТ_ТаблицаДляСортировки.ПриоритетСоответствия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДляСортировки.Количество КАК Количество,
	|	ВТ_ТаблицаДляСортировки.Комплект КАК Комплект,
	|	ВТ_ТаблицаДляСортировки.КонецПериода КАК КонецПериода,
	|	ВТ_ТаблицаДляСортировки.НачалоПериода КАК НачалоПериода,
	|	ВТ_ТаблицаДляСортировки.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаДляСортировки.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ТаблицаДляСортировки.Подобрано КАК Подобрано,
	|	ВТ_ТаблицаДляСортировки.Приоритет КАК Приоритет,
	|	ВТ_ТаблицаДляСортировки.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ТаблицаДляСортировки.ПроцентПодобранных КАК ПроцентПодобранных,
	|	ВТ_ТаблицаДляСортировки.Сотрудник КАК Сотрудник,
	//АсТБ_Alexey_79455_********************************************************************
	//было
	//+++АСТБ_Горюшин_Алексей_70234_2
	//|	ЕСТЬNULL(ВТ_СреднийПроцентПодобранных.СреднийПроцентПодобранных, 0) КАК СреднийПроцентПодобранных
	//было
	//|	ВТ_СреднийПроцентПодобранных.СреднийПроцентПодобранных КАК СреднийПроцентПодобранных
	//---АСТБ_Горюшин_Алексей_70234_2
	|	ВЫБОР
	|		КОГДА ВТ_ТаблицаДляСортировки.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ВТ_ТаблицаДляСортировки.ПроцентПодобранных
	|		ИНАЧЕ ЕСТЬNULL(ВТ_СреднийПроцентПодобранных.СреднийПроцентПодобранных, 0)
	|	КОНЕЦ КАК СреднийПроцентПодобранных
	//АсТБ_Alexey_79455_********************************************************************
	|ИЗ
	|	ВТ_ТаблицаДляСортировки КАК ВТ_ТаблицаДляСортировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СреднийПроцентПодобранных КАК ВТ_СреднийПроцентПодобранных
	|		ПО ВТ_ТаблицаДляСортировки.Приоритет = ВТ_СреднийПроцентПодобранных.Приоритет
	|			И ВТ_ТаблицаДляСортировки.ПриоритетСоответствия = ВТ_СреднийПроцентПодобранных.ПриоритетСоответствия
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачалоПериода,
	|	Сотрудник,
	|	НоменклатураНормы,
	|	СреднийПроцентПодобранных УБЫВ,
	|	ПроцентПодобранных УБЫВ,
	|	ПриоритетСоответствия,
	|	Приоритет,
	|	Комплект";
	
	//первый прогон - определяем данные к выдаче
	
	Сч = 0;
	
	Начало_ПервыйПрогон = Истина;
	
	Для Каждого СтрокаТаблицыПериодовВыдачи Из ТабПериодовВыдачи Цикл
		
		СтруктураПоискаПоПериоду = Новый Структура("НачалоПериода,КонецПериода",СтрокаТаблицыПериодовВыдачи.НачалоПериода,СтрокаТаблицыПериодовВыдачи.КонецПериода);
		
		НайденныеСтрокиНорм = ТабНоменклатурыНормСотрудников.НайтиСтроки(СтруктураПоискаПоПериоду);
		
		Для Каждого НайденнаяСтрокаНорм Из НайденныеСтрокиНорм Цикл
			
			НачалоЦикла = ТекущаяДата();
			
			ТаблицаДляСортировки.Очистить();
			
			СтруктураПоискаПоНорме = Новый Структура("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы",
														НайденнаяСтрокаНорм.НачалоПериода, 
														НайденнаяСтрокаНорм.КонецПериода,
														НайденнаяСтрокаНорм.Сотрудник, 
														НайденнаяСтрокаНорм.НоменклатураНормы);
			
			НайденныеСтрокиТаблицыЗапроса = ТаблицаЗапроса.НайтиСтроки(СтруктураПоискаПоНорме);
			
			Подобрано = 0;
			
			ОсталосьПодобрать = НайденнаяСтрокаНорм.Количество;
			
			Для Каждого НайденнаяСтрокаТаблицыЗапроса Из НайденныеСтрокиТаблицыЗапроса Цикл
				
				СтруктураПоискаПоКомплекту 	= Новый Структура("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, ПриоритетСоответствия, Приоритет, Комплект, Номенклатура",
															НайденнаяСтрокаТаблицыЗапроса.НачалоПериода,
															НайденнаяСтрокаТаблицыЗапроса.КонецПериода,
															НайденнаяСтрокаТаблицыЗапроса.Сотрудник,
															НайденнаяСтрокаТаблицыЗапроса.НоменклатураНормы,
															НайденнаяСтрокаТаблицыЗапроса.ПриоритетСоответствия,
															НайденнаяСтрокаТаблицыЗапроса.Приоритет,
															НайденнаяСтрокаТаблицыЗапроса.Комплект,
															НайденнаяСтрокаТаблицыЗапроса.Номенклатура);
															
				НайденныеСтрокиВыдачи = ТабВыдачиСотрудников.НайтиСтроки(СтруктураПоискаПоКомплекту);
				
				//АсТБ_Alexey_79455_********************************************************************
				//если уже подобрано не нужно больше подбирать
				//Если ЗначениеЗаполнено(НайденнаяСтрокаТаблицыЗапроса.Комплект) Тогда
				Если ЗначениеЗаполнено(НайденнаяСтрокаТаблицыЗапроса.Комплект) И НЕ ОсталосьПодобрать = 0 Тогда
				//АсТБ_Alexey_79455_********************************************************************	
					ОсталосьПодобрать = НайденнаяСтрокаТаблицыЗапроса.Количество;
				КонецЕсли;
					
				Для Каждого НайденнаяСтрокаВыдачи Из НайденныеСтрокиВыдачи Цикл
					
					СтруктураПоискаОстатков = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры",
																НайденнаяСтрокаВыдачи.Номенклатура,
																НайденнаяСтрокаВыдачи.ХарактеристикаНоменклатуры);
					НайденныеСтрокиОстатков = ТабОстатков.НайтиСтроки(СтруктураПоискаОстатков);
					
					Если НайденныеСтрокиОстатков.Количество() = 0 Тогда
						Подобрано = 0;
					Иначе
						Если НайденныеСтрокиОстатков[0].Количество >= ОсталосьПодобрать Тогда
							Подобрано 								= ОсталосьПодобрать;
							НайденныеСтрокиОстатков[0].Количество 	= НайденныеСтрокиОстатков[0].Количество - ОсталосьПодобрать;
						Иначе
							Подобрано 								= НайденныеСтрокиОстатков[0].Количество;
							НайденныеСтрокиОстатков[0].Количество 	= 0;
						КонецЕсли;
						НайденныеСтрокиОстатков[0].Подобрано = Подобрано;
					КонецЕсли;
					
					НайденнаяСтрокаТаблицыЗапроса.Подобрано = НайденнаяСтрокаТаблицыЗапроса.Подобрано + Подобрано;
					
					НайденнаяСтрокаВыдачи.Подобрано = Подобрано;
					
					ОсталосьПодобрать = ОсталосьПодобрать - Подобрано;
					
				КонецЦикла;
				
				Если НайденнаяСтрокаТаблицыЗапроса.Количество = 0 Тогда
					НайденнаяСтрокаТаблицыЗапроса.ПроцентПодобранных = 0;
				Иначе
					НайденнаяСтрокаТаблицыЗапроса.ПроцентПодобранных = НайденнаяСтрокаТаблицыЗапроса.Подобрано / НайденнаяСтрокаТаблицыЗапроса.Количество * 100;
				КонецЕсли;
				
			КонецЦикла;
			
			ТаблицаДляСортировки = ТаблицаЗапроса.Скопировать(СтруктураПоискаПоНорме);
			
			Если ТаблицаДляСортировки.Количество() = 0 Тогда
				
				Если Начало_ПервыйПрогон Тогда
					ЗаписатьТекстовыйФайл(1,"Первый прогон: " + Сч + " Начало: " + НачалоЦикла + " Окончание: " + ТекущаяДата() + " Строк во временной таблице: " + ТаблицаКомплектовКВыдаче.Количество(),"D:\Общая\first.txt",Истина);
					Начало_ПервыйПрогон = Ложь;
				Иначе
					Если Цел(Сч/1000) = Сч/1000 Тогда
						ЗаписатьТекстовыйФайл(Сч/1000,"Первый прогон: " + Сч + " Начало: " + НачалоЦикла + " Окончание: " + ТекущаяДата() + " Строк во временной таблице: " + ТаблицаКомплектовКВыдаче.Количество(),"D:\Общая\first.txt");
					КонецЕсли;
				КонецЕсли;
				
				Сч = Сч + 1;
				
				Продолжить;
				
			КонецЕсли;	
			
			//для комплектующих может быть различный процент подобранных, поэтому нужно найти средний
			ЗапросПоТаблицеДляСортировки.УстановитьПараметр("ТаблицаДляСортировки",ТаблицаДляСортировки);
			
			ТаблицаДляСортировки = ЗапросПоТаблицеДляСортировки.Выполнить().Выгрузить();
			
			//+++АСТБ_Горюшин_Алексей_56295
			// Правильная сортировка как в запросе
			//АсТБ_Alexey_79455_********************************************************************
			//средний процент подобранных может совпадать для комплектов и номенклатуры
			ТаблицаДляСортировки.Сортировать("СреднийПроцентПодобранных УБЫВ, Комплект, ПроцентПодобранных УБЫВ,Приоритет");
			//+++было
			//ТаблицаДляСортировки.Сортировать("СреднийПроцентПодобранных УБЫВ, ПроцентПодобранных УБЫВ,Приоритет");
			//---было
			//АсТБ_Alexey_79455_********************************************************************
			//было
			////+++АСТБ_Горюшин_Алексей_26451
			//ТаблицаДляСортировки.Сортировать("ПроцентПодобранных УБЫВ, Приоритет");
			////---АСТБ_Горюшин_Алексей_26451
			//---АСТБ_Горюшин_Алексей_56295
					
			//+++АСТБ_Горюшин_Алексей_16843
			ТаблицаКомплектовДляСортировки = ТаблицаДляСортировки.Скопировать(,"Комплект");
			ТаблицаКомплектовДляСортировки.Свернуть("Комплект");
			МассивКомплектов = ТаблицаКомплектовДляСортировки.ВыгрузитьКолонку("Комплект");
			
			Если МассивКомплектов.Количество() = 1 Тогда
			//рабочий код как было
			//---АСТБ_Горюшин_Алексей_16843
			
				ПерваяСтрока = Истина;
				
				ТекущийКомплект = ТаблицаДляСортировки[0].Комплект;
				//+++АСТБ_Горюшин_Алексей_30026
				ПроцентПодобранных_ТаблицаДляСортировки = ТаблицаДляСортировки.Итог("ПроцентПодобранных") + 0.000000001;
				//---АСТБ_Горюшин_Алексей_30026
				
				//+++АСТБ_Горюшин_Алексей_26451
				//проверка на антропометрию для норм, где антропометрия не предусмотрена (например, Щитки)
				ЕстьАнтропометрияПоНорме = Ложь;
				ЕстьПодобраноПоНорме = Ложь;
				
				СтруктураПоискаПоНоменклатуреНормы 	= Новый Структура("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, Комплект",
														ТаблицаДляСортировки[0].НачалоПериода,
														ТаблицаДляСортировки[0].КонецПериода,
														ТаблицаДляСортировки[0].Сотрудник,
														ТаблицаДляСортировки[0].НоменклатураНормы,
														ТаблицаДляСортировки[0].Комплект);
				
				НайденныеСтрокиВыдачи = ТабВыдачиСотрудников.НайтиСтроки(СтруктураПоискаПоНоменклатуреНормы);
				Для Каждого НайденнаяСтрокаВыдачи Из НайденныеСтрокиВыдачи Цикл
					Если НайденнаяСтрокаВыдачи.ПриоритетРазмера <> 1000
						И НайденнаяСтрокаВыдачи.ЕстьРазмеры = Истина
						Тогда
						ЕстьАнтропометрияПоНорме = Истина;
					КонецЕсли;	
					Если НайденнаяСтрокаВыдачи.Подобрано > 0 Тогда
						ЕстьПодобраноПоНорме = Истина;
					КонецЕсли;
				КонецЦикла;
				//---АСТБ_Горюшин_Алексей_26451
				
				Для Каждого СтрокаТаблицыДляСортировки Из ТаблицаДляСортировки Цикл
					
					Если ЗначениеЗаполнено(ТекущийКомплект) Тогда
						Если НЕ ТекущийКомплект = СтрокаТаблицыДляСортировки.Комплект Тогда
							ПерваяСтрока = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					//+++АСТБ_Горюшин_Алексей_26451
					// проверка на антропометрию
					ЕстьАнтропометрия = Ложь;
					СтруктураПоискаПоКомплекту 	= Новый Структура("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, ПриоритетСоответствия, Приоритет, Комплект, Номенклатура",
															СтрокаТаблицыДляСортировки.НачалоПериода,
															СтрокаТаблицыДляСортировки.КонецПериода,
															СтрокаТаблицыДляСортировки.Сотрудник,
															СтрокаТаблицыДляСортировки.НоменклатураНормы,
															СтрокаТаблицыДляСортировки.ПриоритетСоответствия,
															СтрокаТаблицыДляСортировки.Приоритет,
															СтрокаТаблицыДляСортировки.Комплект,
															СтрокаТаблицыДляСортировки.Номенклатура);
															
					НайденныеСтрокиВыдачи = ТабВыдачиСотрудников.НайтиСтроки(СтруктураПоискаПоКомплекту);
					Для Каждого НайденнаяСтрокаВыдачи Из НайденныеСтрокиВыдачи Цикл
						Если НайденнаяСтрокаВыдачи.ПриоритетРазмера <> 1000 Тогда
							ЕстьАнтропометрия = Истина;
						//+++АСТБ_Горюшин_Алексей_65169
						ИначеЕсли НайденнаяСтрокаВыдачи.Номенклатура.ВидАнтропометрическогоСвойства = Справочники.ВидыАнтропометрическихСвойств.НеОпределен Тогда
							ЕстьАнтропометрия = Истина;
						//---АСТБ_Горюшин_Алексей_65169
						КонецЕсли;	
					КонецЦикла;
					//---АСТБ_Горюшин_Алексей_26451
					
					//+++АСТБ_Горюшин_Алексей_26451
					//+++АСТБ_Горюшин_Алексей_70234_2
					// НЕ НУЖНО, но пока оставлю
					//Для комплектов, у которых подобраны не все комплектующие, возвращаем всё в остатки.
					//Если ЗначениеЗаполнено(СтрокаТаблицыДляСортировки.Комплект)
					//	И СтрокаТаблицыДляСортировки.СреднийПроцентПодобранных <> 100
					//	Тогда
					//	
					//	СтруктураПоискаПоКомплекту 	= Новый Структура("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, ПриоритетСоответствия, Приоритет, Комплект, Номенклатура",
					//											СтрокаТаблицыДляСортировки.НачалоПериода,
					//											СтрокаТаблицыДляСортировки.КонецПериода,
					//											СтрокаТаблицыДляСортировки.Сотрудник,
					//											СтрокаТаблицыДляСортировки.НоменклатураНормы,
					//											СтрокаТаблицыДляСортировки.ПриоритетСоответствия,
					//											СтрокаТаблицыДляСортировки.Приоритет,
					//											СтрокаТаблицыДляСортировки.Комплект,
					//											СтрокаТаблицыДляСортировки.Номенклатура);
					//											
					//	НайденныеСтрокиВыдачи = ТабВыдачиСотрудников.НайтиСтроки(СтруктураПоискаПоКомплекту);
					//	
					//	Для Каждого НайденнаяСтрокаВыдачи Из НайденныеСтрокиВыдачи Цикл
					//		
					//		СтруктураПоискаОстатков = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры",
					//												НайденнаяСтрокаВыдачи.Номенклатура,
					//												НайденнаяСтрокаВыдачи.ХарактеристикаНоменклатуры);
					//		НайденныеСтрокиОстатков = ТабОстатков.НайтиСтроки(СтруктураПоискаОстатков);
					//	
					//		Если НЕ НайденныеСтрокиОстатков.Количество() = 0 Тогда
					//			НайденныеСтрокиОстатков[0].Количество 	= НайденныеСтрокиОстатков[0].Количество + НайденнаяСтрокаВыдачи.Подобрано;
					//			НайденныеСтрокиОстатков[0].Подобрано 	= НайденныеСтрокиОстатков[0].Подобрано - НайденнаяСтрокаВыдачи.Подобрано;
					//			НайденнаяСтрокаВыдачи.Подобрано 		= 0;
					//		КонецЕсли;
					//	
					//	КонецЦикла;
					//	
					//	НоваяСтрока_ТаблицаКомплектовКВыдаче = ТаблицаКомплектовКВыдаче.Добавить();
					//	ЗаполнитьЗначенияСвойств(НоваяСтрока_ТаблицаКомплектовКВыдаче,СтрокаТаблицыДляСортировки);
					//	НоваяСтрока_ТаблицаКомплектовКВыдаче.Подобрано = 0;
					//	НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных = 0;
					//
					//ИначеЕсли ПерваяСтрока И ЕстьАнтропометрия Тогда
					//было
					Если ПерваяСтрока И ЕстьАнтропометрия Тогда
					//---АСТБ_Горюшин_Алексей_70234_2	
					//было	
					//Если ПерваяСтрока Тогда
					//---АСТБ_Горюшин_Алексей_26451
						
						//+++АСТБ_Горюшин_Алексей_30026
						НоваяСтрока_ТаблицаКомплектовКВыдаче = ТаблицаКомплектовКВыдаче.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока_ТаблицаКомплектовКВыдаче,СтрокаТаблицыДляСортировки);
						//было
						//ЗаполнитьЗначенияСвойств(ТаблицаКомплектовКВыдаче.Добавить(),СтрокаТаблицыДляСортировки);
						//---АСТБ_Горюшин_Алексей_30026
						Если НЕ ЗначениеЗаполнено(ТекущийКомплект) Тогда
							ПерваяСтрока = Ложь;
						КонецЕсли;
						
						//+++АСТБ_Горюшин_Алексей_30026
						Если НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных <> 100
							И ПроцентПодобранных_ТаблицаДляСортировки >= 100
							И НЕ ЗначениеЗаполнено(ТекущийКомплект)
							Тогда
							НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных = 100;
						КонецЕсли;	
						//---АСТБ_Горюшин_Алексей_30026
						
						//+++АСТБ_Горюшин_Алексей_26451
						ЕстьАнтропометрияПоНорме = Истина;
						ЕстьПодобраноПоНорме = Истина;
						//---АСТБ_Горюшин_Алексей_26451
																
					Иначе //нужно вернуть остатки в таблицу
						СтруктураПоискаПоКомплекту 	= Новый Структура("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, ПриоритетСоответствия, Приоритет, Комплект, Номенклатура",
																СтрокаТаблицыДляСортировки.НачалоПериода,
																СтрокаТаблицыДляСортировки.КонецПериода,
																СтрокаТаблицыДляСортировки.Сотрудник,
																СтрокаТаблицыДляСортировки.НоменклатураНормы,
																СтрокаТаблицыДляСортировки.ПриоритетСоответствия,
																СтрокаТаблицыДляСортировки.Приоритет,
																СтрокаТаблицыДляСортировки.Комплект,
																СтрокаТаблицыДляСортировки.Номенклатура);
																
						НайденныеСтрокиВыдачи = ТабВыдачиСотрудников.НайтиСтроки(СтруктураПоискаПоКомплекту);
						
						Для Каждого НайденнаяСтрокаВыдачи Из НайденныеСтрокиВыдачи Цикл
							
							СтруктураПоискаОстатков = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры",
																	НайденнаяСтрокаВыдачи.Номенклатура,
																	НайденнаяСтрокаВыдачи.ХарактеристикаНоменклатуры);
							НайденныеСтрокиОстатков = ТабОстатков.НайтиСтроки(СтруктураПоискаОстатков);
						
							Если НЕ НайденныеСтрокиОстатков.Количество() = 0 Тогда
								//+++АСТБ_Горюшин_Алексей_30026
								Если СтрокаТаблицыДляСортировки.Подобрано = 0 Тогда
								//---АСТБ_Горюшин_Алексей_30026	
								НайденныеСтрокиОстатков[0].Количество 	= НайденныеСтрокиОстатков[0].Количество + НайденнаяСтрокаВыдачи.Подобрано;
								НайденныеСтрокиОстатков[0].Подобрано 	= НайденныеСтрокиОстатков[0].Подобрано - НайденнаяСтрокаВыдачи.Подобрано;
								НайденнаяСтрокаВыдачи.Подобрано 		= 0;
								//+++АСТБ_Горюшин_Алексей_30026
								КонецЕсли;
								//---АСТБ_Горюшин_Алексей_30026
							КонецЕсли;
						
						КонецЦикла;
						
						//+++АСТБ_Горюшин_Алексей_30026
						Если СтрокаТаблицыДляСортировки.Подобрано > 0 Тогда
							НоваяСтрока_ТаблицаКомплектовКВыдаче = ТаблицаКомплектовКВыдаче.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока_ТаблицаКомплектовКВыдаче,СтрокаТаблицыДляСортировки);
							Если НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных <> 100
								И ПроцентПодобранных_ТаблицаДляСортировки >= 100
								И НЕ ЗначениеЗаполнено(ТекущийКомплект)
								Тогда
								НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных = 100;
							КонецЕсли;
							//+++АСТБ_Горюшин_Алексей_26451
							ЕстьАнтропометрияПоНорме = Истина;
							ЕстьПодобраноПоНорме = Истина;
							//---АСТБ_Горюшин_Алексей_26451
						КонецЕсли;
						//---АСТБ_Горюшин_Алексей_30026
											
					КонецЕсли;
					
				КонецЦикла;
				
				//+++АСТБ_Горюшин_Алексей_26451
				Если НЕ (ЕстьАнтропометрияПоНорме И ЕстьПодобраноПоНорме) Тогда
					НоваяСтрока_ТаблицаКомплектовКВыдаче = ТаблицаКомплектовКВыдаче.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока_ТаблицаКомплектовКВыдаче,ТаблицаДляСортировки[0]);
					ЕстьАнтропометрияПоНорме = Истина;
					ЕстьПодобраноПоНорме = Истина;
				КонецЕсли;
				//---АСТБ_Горюшин_Алексей_26451

			//+++АСТБ_Горюшин_Алексей_16843	
			Иначе
			//альтернативный вариант
			
				//+++АСТБ_Горюшин_Алексей_26451
				ЭтоПервыйКомплект = Истина;
				КомплектПодобран = Ложь;
				
				//проверка на антропометрию для норм, где антропометрия не предусмотрена (например, Щитки)
				ЕстьАнтропометрияПоНорме = Ложь;
				ЕстьПодобраноПоНорме = Ложь;
				ПерваяСтрока_ЭтоКомплект = МассивКомплектов[0] <> Справочники.Номенклатура.ПустаяСсылка();
				
				СтруктураПоискаПоНоменклатуреНормы 	= Новый Структура("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, Комплект",
														ТаблицаДляСортировки[0].НачалоПериода,
														ТаблицаДляСортировки[0].КонецПериода,
														ТаблицаДляСортировки[0].Сотрудник,
														ТаблицаДляСортировки[0].НоменклатураНормы,
														ТаблицаДляСортировки[0].Комплект);
				
				НайденныеСтрокиВыдачи = ТабВыдачиСотрудников.НайтиСтроки(СтруктураПоискаПоНоменклатуреНормы);
				Для Каждого НайденнаяСтрокаВыдачи Из НайденныеСтрокиВыдачи Цикл
					Если НайденнаяСтрокаВыдачи.ПриоритетРазмера <> 1000
						И НайденнаяСтрокаВыдачи.ЕстьРазмеры = Истина
						Тогда
						ЕстьАнтропометрияПоНорме = Истина;
					КонецЕсли;	
					Если НайденнаяСтрокаВыдачи.Подобрано > 0 Тогда
						ЕстьПодобраноПоНорме = Истина;
					КонецЕсли;
				КонецЦикла;
				//---АСТБ_Горюшин_Алексей_26451
					
				Для Каждого КомплектДляСортировки ИЗ МассивКомплектов Цикл
				
					ПерваяСтрока = Истина;
					
					ТекущийКомплект = КомплектДляСортировки;
					
					СтруктураПоискаПоКомплекту 	= Новый Структура("Комплект", ТекущийКомплект);
																	
					ТаблицаДляСортировкиСОтборомПоКомплекту = ТаблицаДляСортировки.НайтиСтроки(СтруктураПоискаПоКомплекту);
					
					//+++АСТБ_Горюшин_Алексей_30026
					ПроцентПодобранных_ТаблицаДляСортировки = ТаблицаДляСортировки.Итог("ПроцентПодобранных") + 0.000000001;
					//---АСТБ_Горюшин_Алексей_30026
					
					Для Каждого СтрокаТаблицыДляСортировки Из ТаблицаДляСортировкиСОтборомПоКомплекту Цикл
						
						//+++АСТБ_Горюшин_Алексей_26451
						//+++АСТБ_Горюшин_Алексей_65169
						Если ТекущийКомплект = Справочники.Номенклатура.ПустаяСсылка() Тогда
						//было
						//Если КомплектДляСортировки = Справочники.Номенклатура.ПустаяСсылка() Тогда
						//---АСТБ_Горюшин_Алексей_65169
							//это комплект - обрабатываем как одну строку
							ЭтоПервыйКомплект = Ложь;
						КонецЕсли;
						
						//+++АСТБ_Горюшин_Алексей_65169
						Если МассивКомплектов.Найти(ТекущийКомплект) = Неопределено 
							И ТекущийКомплект <> Справочники.Номенклатура.ПустаяСсылка()
						//было
						//Если ТекущийКомплект <> МассивКомплектов[0]
						//	И КомплектДляСортировки <> Справочники.Номенклатура.ПустаяСсылка()
						//---АСТБ_Горюшин_Алексей_65169	
							Тогда
							//на случай, когда после комплектов идёт обычная номенклатура
							ПерваяСтрока = Ложь;
						КонецЕсли;
						
						// проверка на антропометрию
						ЕстьАнтропометрия = Ложь;
						СтруктураПоискаПоКомплекту 	= Новый Структура("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, ПриоритетСоответствия, Приоритет, Комплект, Номенклатура",
																СтрокаТаблицыДляСортировки.НачалоПериода,
																СтрокаТаблицыДляСортировки.КонецПериода,
																СтрокаТаблицыДляСортировки.Сотрудник,
																СтрокаТаблицыДляСортировки.НоменклатураНормы,
																СтрокаТаблицыДляСортировки.ПриоритетСоответствия,
																СтрокаТаблицыДляСортировки.Приоритет,
																СтрокаТаблицыДляСортировки.Комплект,
																СтрокаТаблицыДляСортировки.Номенклатура);
																
						НайденныеСтрокиВыдачи = ТабВыдачиСотрудников.НайтиСтроки(СтруктураПоискаПоКомплекту);
						Для Каждого НайденнаяСтрокаВыдачи Из НайденныеСтрокиВыдачи Цикл
							Если НайденнаяСтрокаВыдачи.ПриоритетРазмера <> 1000 Тогда
								ЕстьАнтропометрия = Истина;
							//+++АСТБ_Горюшин_Алексей_65169
							ИначеЕсли НайденнаяСтрокаВыдачи.Номенклатура.ВидАнтропометрическогоСвойства = Справочники.ВидыАнтропометрическихСвойств.НеОпределен Тогда
								ЕстьАнтропометрия = Истина;
							//---АСТБ_Горюшин_Алексей_65169
							КонецЕсли;	
						КонецЦикла;
						//---АСТБ_Горюшин_Алексей_26451
						
						Если СтрокаТаблицыДляСортировки.Подобрано > 0 И НЕ ЗначениеЗаполнено(ТекущийКомплект) Тогда
							
							//+++АСТБ_Горюшин_Алексей_30026
							НоваяСтрока_ТаблицаКомплектовКВыдаче = ТаблицаКомплектовКВыдаче.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока_ТаблицаКомплектовКВыдаче,СтрокаТаблицыДляСортировки);
							//было
							//ЗаполнитьЗначенияСвойств(ТаблицаКомплектовКВыдаче.Добавить(),СтрокаТаблицыДляСортировки);
							//---АСТБ_Горюшин_Алексей_30026
							ПерваяСтрока = Ложь;
							
							//+++АСТБ_Горюшин_Алексей_30026
							Если НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных <> 100
								И ПроцентПодобранных_ТаблицаДляСортировки >= 100
								И НЕ ЗначениеЗаполнено(ТекущийКомплект)
								Тогда
								НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных = 100;
							КонецЕсли;	
							//---АСТБ_Горюшин_Алексей_30026
							
							//+++АСТБ_Горюшин_Алексей_26451
							КомплектПодобран = Истина;
							ЕстьАнтропометрияПоНорме = Истина;
							ЕстьПодобраноПоНорме = Истина;
							//---АСТБ_Горюшин_Алексей_26451
							
						//+++АСТБ_Горюшин_Алексей_26451
						ИначеЕсли ПерваяСтрока
							И НЕ ЗначениеЗаполнено(ТекущийКомплект)
							И ЕстьАнтропометрия
							//АсТБ_Alexey_79455_********************************************************************
							//когда не подобрались комплектующие, в неподобранные прилетала еще и номенклатура в большим приоритетом
							И НЕ ЕстьПодобраноПоНорме
							//АсТБ_Alexey_79455_********************************************************************
							Тогда
						//было	
						//ИначеЕсли ПерваяСтрока И НЕ ЗначениеЗаполнено(ТекущийКомплект) Тогда
						//---АСТБ_Горюшин_Алексей_26451
						
							//+++АСТБ_Горюшин_Алексей_30026
							НоваяСтрока_ТаблицаКомплектовКВыдаче = ТаблицаКомплектовКВыдаче.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока_ТаблицаКомплектовКВыдаче,СтрокаТаблицыДляСортировки);
							//было
							//ЗаполнитьЗначенияСвойств(ТаблицаКомплектовКВыдаче.Добавить(),СтрокаТаблицыДляСортировки);
							//---АСТБ_Горюшин_Алексей_30026
							ПерваяСтрока = Ложь;
							
							//+++АСТБ_Горюшин_Алексей_30026
							Если НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных <> 100
								И ПроцентПодобранных_ТаблицаДляСортировки >= 100
								И НЕ ЗначениеЗаполнено(ТекущийКомплект)
								Тогда
								НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных = 100;
							КонецЕсли;	
							//---АСТБ_Горюшин_Алексей_30026
							
							//+++АСТБ_Горюшин_Алексей_26451
							КомплектПодобран = Истина;
							ЕстьАнтропометрияПоНорме = Истина;
							ЕстьПодобраноПоНорме = Истина;
							//---АСТБ_Горюшин_Алексей_26451
							
						//+++АСТБ_Горюшин_Алексей_26451
						ИначеЕсли ЭтоПервыйКомплект И ЕстьАнтропометрия Тогда
							
							НоваяСтрока_ТаблицаКомплектовКВыдаче = ТаблицаКомплектовКВыдаче.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока_ТаблицаКомплектовКВыдаче,СтрокаТаблицыДляСортировки);
							
							ПерваяСтрока = Ложь;
							
							Если НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных <> 100
								И ПроцентПодобранных_ТаблицаДляСортировки >= 100
								И НЕ ЗначениеЗаполнено(ТекущийКомплект)
								Тогда
								НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных = 100;
							КонецЕсли;
							
							КомплектПодобран = Истина;
							ЕстьАнтропометрияПоНорме = Истина;
							ЕстьПодобраноПоНорме = Истина;
						//---АСТБ_Горюшин_Алексей_26451
						
						Иначе //нужно вернуть остатки в таблицу
							СтруктураПоискаПоКомплекту 	= Новый Структура("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, ПриоритетСоответствия, Приоритет, Комплект, Номенклатура",
																	СтрокаТаблицыДляСортировки.НачалоПериода,
																	СтрокаТаблицыДляСортировки.КонецПериода,
																	СтрокаТаблицыДляСортировки.Сотрудник,
																	СтрокаТаблицыДляСортировки.НоменклатураНормы,
																	СтрокаТаблицыДляСортировки.ПриоритетСоответствия,
																	СтрокаТаблицыДляСортировки.Приоритет,
																	СтрокаТаблицыДляСортировки.Комплект,
																	СтрокаТаблицыДляСортировки.Номенклатура);
																	
							НайденныеСтрокиВыдачи = ТабВыдачиСотрудников.НайтиСтроки(СтруктураПоискаПоКомплекту);
							
							Для Каждого НайденнаяСтрокаВыдачи Из НайденныеСтрокиВыдачи Цикл
								
								СтруктураПоискаОстатков = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры",
																		НайденнаяСтрокаВыдачи.Номенклатура,
																		НайденнаяСтрокаВыдачи.ХарактеристикаНоменклатуры);
								НайденныеСтрокиОстатков = ТабОстатков.НайтиСтроки(СтруктураПоискаОстатков);
							
								Если НЕ НайденныеСтрокиОстатков.Количество() = 0 Тогда
									//+++АСТБ_Горюшин_Алексей_30026
									Если СтрокаТаблицыДляСортировки.Подобрано = 0 Тогда
									//---АСТБ_Горюшин_Алексей_30026	
									НайденныеСтрокиОстатков[0].Количество 	= НайденныеСтрокиОстатков[0].Количество + НайденнаяСтрокаВыдачи.Подобрано;
									НайденныеСтрокиОстатков[0].Подобрано 	= НайденныеСтрокиОстатков[0].Подобрано - НайденнаяСтрокаВыдачи.Подобрано;
									НайденнаяСтрокаВыдачи.Подобрано 		= 0;
									//+++АСТБ_Горюшин_Алексей_30026
									//+++АСТБ_Горюшин_Алексей_26451
									//Нужно, когда подобрано из нескольких комплектов
									ИначеЕсли СтрокаТаблицыДляСортировки.Подобрано > 0
									    //АсТБ_Alexey_79455_********************************************************************
										//не сбрасывалось количество подобранных комплектующих
										//И НЕ ПерваяСтрока
										//АсТБ_Alexey_79455_********************************************************************
										И НЕ ЭтоПервыйКомплект
										Тогда
										НайденныеСтрокиОстатков[0].Количество 	= НайденныеСтрокиОстатков[0].Количество + НайденнаяСтрокаВыдачи.Подобрано;
										НайденныеСтрокиОстатков[0].Подобрано 	= НайденныеСтрокиОстатков[0].Подобрано - НайденнаяСтрокаВыдачи.Подобрано;
										НайденнаяСтрокаВыдачи.Подобрано 		= 0;
									//---АСТБ_Горюшин_Алексей_26451
									КонецЕсли;
									//---АСТБ_Горюшин_Алексей_30026
								КонецЕсли;
							
							КонецЦикла;
							
							//+++АСТБ_Горюшин_Алексей_30026
							Если СтрокаТаблицыДляСортировки.Подобрано > 0 Тогда
								НоваяСтрока_ТаблицаКомплектовКВыдаче = ТаблицаКомплектовКВыдаче.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока_ТаблицаКомплектовКВыдаче,СтрокаТаблицыДляСортировки);
								Если НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных <> 100
									И ПроцентПодобранных_ТаблицаДляСортировки >= 100
									И НЕ ЗначениеЗаполнено(ТекущийКомплект)
									Тогда
									НоваяСтрока_ТаблицаКомплектовКВыдаче.ПроцентПодобранных = 100;
								КонецЕсли;
								//+++АСТБ_Горюшин_Алексей_26451
								ЕстьАнтропометрияПоНорме = Истина;
								ЕстьПодобраноПоНорме = Истина;
								//---АСТБ_Горюшин_Алексей_26451
							КонецЕсли;
							//---АСТБ_Горюшин_Алексей_30026
						
						КонецЕсли;
						
					КонецЦикла;
					
					//+++АСТБ_Горюшин_Алексей_26451
					Если КомплектПодобран Тогда
						ЭтоПервыйКомплект = Ложь;
					КонецЕсли;
					//---АСТБ_Горюшин_Алексей_26451
					
				КонецЦикла;
				
				//+++АСТБ_Горюшин_Алексей_26451
				Если НЕ (ЕстьАнтропометрияПоНорме И ЕстьПодобраноПоНорме) Тогда
					Если ПерваяСтрока_ЭтоКомплект Тогда
						
						ТекущийКомплект = МассивКомплектов[0];
						
						Для Каждого СтрокаКомплектующий ИЗ ТекущийКомплект.Комплектующие Цикл
							
							СтруктураПоискаПоКомплекту 	= Новый Структура("Комплект, Номенклатура", ТекущийКомплект, СтрокаКомплектующий.Номенклатура);
							ТаблицаДляСортировкиСОтборомПоКомплекту = ТаблицаДляСортировки.НайтиСтроки(СтруктураПоискаПоКомплекту);
							Для Каждого СтрокаТаблицыДляСортировки Из ТаблицаДляСортировкиСОтборомПоКомплекту Цикл
								НоваяСтрока_ТаблицаКомплектовКВыдаче = ТаблицаКомплектовКВыдаче.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока_ТаблицаКомплектовКВыдаче,СтрокаТаблицыДляСортировки);
							КонецЦикла;
							
						КонецЦикла;
						
						ЕстьАнтропометрияПоНорме = Истина;
						ЕстьПодобраноПоНорме = Истина;
						
					Иначе
						НоваяСтрока_ТаблицаКомплектовКВыдаче = ТаблицаКомплектовКВыдаче.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока_ТаблицаКомплектовКВыдаче,ТаблицаДляСортировки[0]);
						ЕстьАнтропометрияПоНорме = Истина;
						ЕстьПодобраноПоНорме = Истина;
					КонецЕсли;
				КонецЕсли;
				//---АСТБ_Горюшин_Алексей_26451
				
			КонецЕсли;
			//---АСТБ_Горюшин_Алексей_16843
			
			Если Начало_ПервыйПрогон Тогда
				ЗаписатьТекстовыйФайл(1,"Первый прогон: " + Сч + " Начало: " + НачалоЦикла + " Окончание: " + ТекущаяДата() + " Строк во временной таблице: " + ТаблицаКомплектовКВыдаче.Количество(),"D:\Общая\first.txt",Истина);
				Начало_ПервыйПрогон = Ложь;
			Иначе
				Если Цел(Сч/1000) = Сч/1000 Тогда
					ЗаписатьТекстовыйФайл(Сч/1000,"Первый прогон: " + Сч + " Начало: " + НачалоЦикла + " Окончание: " + ТекущаяДата() + " Строк во временной таблице: " + ТаблицаКомплектовКВыдаче.Количество(),"D:\Общая\first.txt");
				КонецЕсли;
			КонецЕсли;
			
			Сч = Сч + 1;
			
		КонецЦикла;	
		
	КонецЦикла;
	
	ТаблицаДляСортировки.Очистить();
	//+++АСТБ_Горюшин_Алексей_26451
	ТаблицаКомплектовКВыдаче_БезСвертки = ТаблицаКомплектовКВыдаче.Скопировать();
	
	КЧ = Новый КвалификаторыЧисла(10,0);
	Массив = Новый Массив();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ТаблицаКомплектовКВыдаче.Колонки.Добавить("КоличествоОдинаковыхКомплектующих",ОписаниеТиповЧ);
	ТаблицаКомплектовКВыдаче.ЗаполнитьЗначения(1,"КоличествоОдинаковыхКомплектующих"); 
	ТаблицаКомплектовКВыдаче.Свернуть("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, ПроцентПодобранных, ПриоритетСоответствия, Приоритет, Комплект, Номенклатура", "КоличествоОдинаковыхКомплектующих");
	//было
	//ТаблицаКомплектовКВыдаче.Свернуть("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, ПроцентПодобранных, ПриоритетСоответствия, Приоритет, Комплект, Номенклатура");
	//---АСТБ_Горюшин_Алексей_26451
	
	//+++АСТБ_Горюшин_Алексей_65169
	ТаблицаКомплектовКВыдаче.Индексы.Добавить("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы");
	//---АСТБ_Горюшин_Алексей_65169
	
	//второй прогон - формируем результирующие таблицы
	Сч = 0;
	
	Начало_ВторойПрогон = Истина;
	
	ТабОстатков = РеквизитФормыВЗначение("ТаблицаОстатков");
	
	Для Каждого СтрокаТаблицыПериодовВыдачи Из ТабПериодовВыдачи Цикл
		
		СтруктураПоискаПоПериоду = Новый Структура("НачалоПериода,КонецПериода",СтрокаТаблицыПериодовВыдачи.НачалоПериода,СтрокаТаблицыПериодовВыдачи.КонецПериода);
		
		НайденныеСтрокиНорм = ТабНоменклатурыНормСотрудников.НайтиСтроки(СтруктураПоискаПоПериоду);
		
		Для Каждого НайденнаяСтрокаНорм Из НайденныеСтрокиНорм Цикл
			
			НачалоЦикла = ТекущаяДата();
			
			СтруктураПоискаПоНорме = Новый Структура("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы",
														НайденнаяСтрокаНорм.НачалоПериода, 
														НайденнаяСтрокаНорм.КонецПериода,
														НайденнаяСтрокаНорм.Сотрудник, 
														НайденнаяСтрокаНорм.НоменклатураНормы);
														
			НайденныеСтрокиТаблицыКомплектовКВыдаче = ТаблицаКомплектовКВыдаче.НайтиСтроки(СтруктураПоискаПоНорме);
			
			//+++АСТБ_Горюшин_Алексей_26451
			//КоррекцияТребуется = 1;
			Для Каждого СтрокаПроверки ИЗ НайденныеСтрокиТаблицыКомплектовКВыдаче Цикл
				Если СтрокаПроверки.КоличествоОдинаковыхКомплектующих > 1 
					И НЕ СтрокаПроверки.Номенклатура.НеИспользоватьПриФормированииЗаказовПоставщику Тогда
					НайденныеСтрокиТаблицыКомплектовКВыдаче = ТаблицаКомплектовКВыдаче_БезСвертки.НайтиСтроки(СтруктураПоискаПоНорме);
					//КоррекцияТребуется = СтрокаПроверки.КоличествоОдинаковыхКомплектующих;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			//---АСТБ_Горюшин_Алексей_26451
			
			Требуется = НайденнаяСтрокаНорм.Количество;
			
			//+++АСТБ_Горюшин_Алексей_26451
			//Если КоррекцияТребуется > 1 Тогда
			//	Требуется = Требуется * КоррекцияТребуется;
			//КонецЕсли;	
			//---АСТБ_Горюшин_Алексей_26451
			
			Если НайденныеСтрокиТаблицыКомплектовКВыдаче.Количество() = 0 Тогда
				
				ЗаполнитьЗначенияСвойств(ТабНеМожетБытьПодобрано.Добавить(),НайденнаяСтрокаНорм);
				
				Если Начало_ВторойПрогон Тогда
					ЗаписатьТекстовыйФайл(1,"Второй прогон: " + Сч + " Начало: " + НачалоЦикла + " Окончание: " + ТекущаяДата(),"D:\Общая\second.txt",Истина);
					Начало_ВторойПрогон = Ложь;
				Иначе
					Если Цел(Сч/1000) = Сч/1000 Тогда
						ЗаписатьТекстовыйФайл(Сч/1000,"Второй прогон: " + Сч + " Начало: " + НачалоЦикла + " Окончание: " + ТекущаяДата(),"D:\Общая\second.txt");
					КонецЕсли;
				КонецЕсли;
				
				Сч = Сч + 1;
				
				Продолжить;
				
			КонецЕсли;
			
			Для Каждого НайденнаяСтрокаТаблицыКомплектовКВыдаче Из НайденныеСтрокиТаблицыКомплектовКВыдаче Цикл
				
				СтруктураПоискаПоКомплекту 	= Новый Структура("НачалоПериода, КонецПериода, Сотрудник, НоменклатураНормы, ПриоритетСоответствия, Приоритет, Комплект, Номенклатура",
																НайденнаяСтрокаТаблицыКомплектовКВыдаче.НачалоПериода,
																НайденнаяСтрокаТаблицыКомплектовКВыдаче.КонецПериода,
																НайденнаяСтрокаТаблицыКомплектовКВыдаче.Сотрудник,
																НайденнаяСтрокаТаблицыКомплектовКВыдаче.НоменклатураНормы,
																НайденнаяСтрокаТаблицыКомплектовКВыдаче.ПриоритетСоответствия,
																НайденнаяСтрокаТаблицыКомплектовКВыдаче.Приоритет,
																НайденнаяСтрокаТаблицыКомплектовКВыдаче.Комплект,
																НайденнаяСтрокаТаблицыКомплектовКВыдаче.Номенклатура);
																
				НайденныеСтрокиВыдачи = ТабВыдачиСотрудников.НайтиСтроки(СтруктураПоискаПоКомплекту);
				
				Для Каждого НайденнаяСтрокаВыдачи Из НайденныеСтрокиВыдачи Цикл
					
					//Если ЗначениеЗаполнено(НайденнаяСтрокаТаблицыКомплектовКВыдаче.Комплект) Тогда
					//	Требуется = НайденнаяСтрокаВыдачи.Количество;
					//КонецЕсли;
					
					//+++АСТБ_Горюшин_Алексей_42504
					Если НайденнаяСтрокаВыдачи.Номенклатура.ВидАнтропометрическогоСвойства <> Справочники.ВидыАнтропометрическихСвойств.НеОпределен
						И НайденнаяСтрокаВыдачи.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка()
						Тогда
						//+++АСТБ_Горюшин_Алексей_65169
						Если НайденнаяСтрокаТаблицыКомплектовКВыдаче.ПроцентПодобранных < 100
							И НайденнаяСтрокаВыдачи.ПриоритетРазмера = 1000 Тогда
							//+++АСТБ_Горюшин_Алексей_70234_3
							ДобавитьВНеМожетБытьПодобрано = Истина;
							Для Каждого НайденнаяСтрокаВыдачи Из НайденныеСтрокиВыдачи Цикл
								Если НЕ НайденнаяСтрокаВыдачи.ХарактеристикаНоменклатуры = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка() Тогда
									ДобавитьВНеМожетБытьПодобрано = Ложь;
									Прервать;
								КонецЕсли;
							КонецЦикла;
							Если ДобавитьВНеМожетБытьПодобрано Тогда
							//---АСТБ_Горюшин_Алексей_70234_3
							ЗаполнитьЗначенияСвойств(ТабНеМожетБытьПодобрано.Добавить(),НайденнаяСтрокаНорм);
							//+++АСТБ_Горюшин_Алексей_70234_3
							КонецЕсли;
							//---АСТБ_Горюшин_Алексей_70234_3
						КонецЕсли;
						//---АСТБ_Горюшин_Алексей_65169
						Продолжить;
					КонецЕсли;
					//---АСТБ_Горюшин_Алексей_42504
					
					СтруктураПоискаОстатков = Новый Структура("Номенклатура,ХарактеристикаНоменклатуры",
					НайденнаяСтрокаВыдачи.Номенклатура,
					НайденнаяСтрокаВыдачи.ХарактеристикаНоменклатуры);
					НайденныеСтрокиОстатков = ТабОстатков.НайтиСтроки(СтруктураПоискаОстатков);
					
					Если НайденныеСтрокиОстатков.Количество() = 0 Тогда
						
						Если НайденнаяСтрокаТаблицыКомплектовКВыдаче.ПроцентПодобранных < 100 Тогда
							НоваяСтрока = ТабНеПодобрано.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрокаНорм);
							ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрокаВыдачи);
							НоваяСтрока.Организация = НоваяСтрока.Сотрудник.Владелец;
							НоваяСтрока.Количество = Требуется;
							НайденнаяСтрокаТаблицыКомплектовКВыдаче.ПроцентПодобранных = 100;
						КонецЕсли;
						
					Иначе
						
						Для Каждого НайденнаяСтрокаОстатков Из НайденныеСтрокиОстатков Цикл
							
							НайденнаяСтрокаОстатков.Количество 	= НайденнаяСтрокаОстатков.Количество - НайденнаяСтрокаВыдачи.Подобрано;
							НайденнаяСтрокаОстатков.Подобрано 	= НайденнаяСтрокаОстатков.Подобрано + НайденнаяСтрокаВыдачи.Подобрано;
							
							Если НЕ НайденнаяСтрокаВыдачи.Подобрано = Требуется Тогда
								
								Если НайденнаяСтрокаТаблицыКомплектовКВыдаче.ПроцентПодобранных < 100 Тогда
									
									ОсталосьПодобрать_Процент = 100 - НайденнаяСтрокаТаблицыКомплектовКВыдаче.ПроцентПодобранных;
									ОсталосьПодобрать = Окр(Требуется * ОсталосьПодобрать_Процент / 100,0,РежимОкругления.Окр15как20);
									
									НоваяСтрока = ТабНеПодобрано.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрокаНорм);
									ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрокаВыдачи);
									НоваяСтрока.Организация = НоваяСтрока.Сотрудник.Владелец;
									НоваяСтрока.Количество = ОсталосьПодобрать;
									НайденнаяСтрокаТаблицыКомплектовКВыдаче.ПроцентПодобранных = 100;
									
								КонецЕсли;
							
							КонецЕсли;
							
						КонецЦикла;
						
					КонецЕсли;
					
					Если НЕ НайденнаяСтрокаВыдачи.Подобрано = 0 Тогда
						НоваяСтрока 				= ТабПодобрано.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрокаВыдачи);
						НоваяСтрока.Количество 		= НайденнаяСтрокаВыдачи.Подобрано;
						НоваяСтрока.Подразделение 	= НайденнаяСтрокаНорм.Подразделение;
						НоваяСтрока.Организация 	= НоваяСтрока.Сотрудник.Владелец;
						НоваяСтрока.Должность 		= НайденнаяСтрокаНорм.Должность;
						НоваяСтрока.ВидВыдачи 		= НайденнаяСтрокаНорм.ВидВыдачи;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если Начало_ВторойПрогон Тогда
				ЗаписатьТекстовыйФайл(1,"Второй прогон: " + Сч + " Начало: " + НачалоЦикла + " Окончание: " + ТекущаяДата(),"D:\Общая\second.txt",Истина);
				Начало_ВторойПрогон = Ложь;
			Иначе
				Если Цел(Сч/1000) = Сч/1000 Тогда
					ЗаписатьТекстовыйФайл(Сч/1000,"Второй прогон: " + Сч + " Начало: " + НачалоЦикла + " Окончание: " + ТекущаяДата(),"D:\Общая\second.txt");
				КонецЕсли;
			КонецЕсли;
			
			Сч = Сч + 1;
		
		КонецЦикла;
		
	КонецЦикла;
	
	СкорректироватьТабНеПодобраноДляФормированияЗаказаПоставщику(ТабНеПодобрано,ТабВыдачиСотрудников,ТабНеМожетБытьПодобрано);
	
	ЗначениеВРеквизитФормы(ТабОстатков,				"ТаблицаОстатков");
	ЗначениеВРеквизитФормы(ТабНеМожетБытьПодобрано,	"ТаблицаНеМожетБытьПодобрано");
	ЗначениеВРеквизитФормы(ТабНеПодобрано,			"ТаблицаНеПодобрано");
	ЗначениеВРеквизитФормы(ТабПодобрано,			"ТаблицаПодобрано");
	
КонецПроцедуры

&НаСервере
Процедура СкорректироватьТабНеПодобраноДляФормированияЗаказаПоставщику(ТабНеПодобрано,ЗНАЧ ТабВыдачиСотрудников, ТабНеМожетБытьПодобрано)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО Номенклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабВыдачиСотрудников.Сотрудник КАК Сотрудник,
	|	ТабВыдачиСотрудников.НоменклатураНормы КАК НоменклатураНормы,
	|	ТабВыдачиСотрудников.Номенклатура КАК Номенклатура,
	|	ТабВыдачиСотрудников.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТабВыдачиСотрудников.НачалоПериода КАК НачалоПериода,
	|	ТабВыдачиСотрудников.КонецПериода КАК КонецПериода,
	//АсТБ_Alexey_100182_********************************************************************
	|	ТабВыдачиСотрудников.ЕстьРазмеры КАК ЕстьРазмеры
	//АсТБ_Alexey_100182_********************************************************************
	|ПОМЕСТИТЬ ВТ_ТабВыдачиСотрудников
	|ИЗ
	|	&ТабВыдачиСотрудников КАК ТабВыдачиСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//+++АСТБ_Горюшин_Алексей_42504
	|ВЫБРАТЬ 
	//было
	//|ВЫБРАТЬ
	//---АСТБ_Горюшин_Алексей_42504
	|	ВТ_ТабВыдачиСотрудников.Сотрудник КАК Сотрудник,
	|	ВТ_ТабВыдачиСотрудников.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	//АсТБ_Alexey_100182_********************************************************************
	|	ВТ_ТабВыдачиСотрудников.ЕстьРазмеры КАК ЕстьРазмеры,
	//|	ВТ_Номенклатура.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ВТ_ТабВыдачиСотрудников.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ВТ_Номенклатура.ХарактеристикаНоменклатуры
	|	КОНЕЦ) КАК ХарактеристикаНоменклатуры,
	//АсТБ_Alexey_100182_********************************************************************
	//+++АСТБ_Горюшин_Алексей_42504
	//+++АСТБ_Горюшин_Алексей_70234
	|	ЕСТЬNULL(НоменклатураКомплектующие.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Комплект,
	//было
	//|	НоменклатураКомплектующие.Ссылка КАК НоменклатураКомплект,
	//---АСТБ_Горюшин_Алексей_70234
	|	ЕСТЬNULL(НоменклатураКомплектующие.Ссылка.Комплект, ЛОЖЬ) КАК ЭтоКомплектующие,
	//---АСТБ_Горюшин_Алексей_42504
	|	ВТ_ТабВыдачиСотрудников.НачалоПериода КАК НачалоПериода,
	|	ВТ_ТабВыдачиСотрудников.КонецПериода КАК КонецПериода
	|ИЗ
	|	ВТ_ТабВыдачиСотрудников КАК ВТ_ТабВыдачиСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО ВТ_ТабВыдачиСотрудников.Номенклатура = ВТ_Номенклатура.Номенклатура
	//АсТБ_Alexey_100182_********************************************************************
	|			И (ВТ_ТабВыдачиСотрудников.ХарактеристикаНоменклатуры = ВТ_Номенклатура.ХарактеристикаНоменклатуры 
	|				ИЛИ ВТ_ТабВыдачиСотрудников.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	//АсТБ_Alexey_100182_********************************************************************
	//+++АСТБ_Горюшин_Алексей_42504
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	|		ПО ВТ_Номенклатура.Номенклатура = НоменклатураКомплектующие.Номенклатура
	//---АСТБ_Горюшин_Алексей_42504
	|ГДЕ
	|	НЕ ВТ_Номенклатура.Номенклатура.НеИспользоватьПриФормированииЗаказовПоставщику
	//АсТБ_Alexey_79455_********************************************************************
	|	И ВЫБОР
	|			КОГДА НоменклатураКомплектующие.Ссылка ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ НЕ НоменклатураКомплектующие.Ссылка.НеИспользоватьПриФормированииЗаказовПоставщику
	|		КОНЕЦ
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТабВыдачиСотрудников.Сотрудник,
	|	ВТ_ТабВыдачиСотрудников.НоменклатураНормы,
	|	ВТ_Номенклатура.Номенклатура,
	|	ВТ_ТабВыдачиСотрудников.ЕстьРазмеры,
	|	ЕСТЬNULL(НоменклатураКомплектующие.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)),
	|	ЕСТЬNULL(НоменклатураКомплектующие.Ссылка.Комплект, ЛОЖЬ),
	|	ВТ_ТабВыдачиСотрудников.НачалоПериода,
	|	ВТ_ТабВыдачиСотрудников.КонецПериода";
	//АсТБ_Alexey_79455_********************************************************************
	
	Запрос.УстановитьПараметр("ТабВыдачиСотрудников",	ТабВыдачиСотрудников);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	//+++АСТБ_Горюшин_Алексей_65169
	ТаблицаЗапроса.Индексы.Добавить("Сотрудник,НоменклатураНормы,НачалоПериода");
	//---АСТБ_Горюшин_Алексей_65169
	
	ТабНеПодобраноКопия = ТабНеПодобрано.Скопировать();
	
	ТабНеПодобрано.Очистить();
	
	Для Каждого СтрокаТабНеПодобраноКопия Из ТабНеПодобраноКопия Цикл
		
		Если СтрокаТабНеПодобраноКопия.Номенклатура.НеИспользоватьПриФормированииЗаказовПоставщику Тогда //ищем в таблице выдачи сотрудников
			
			СтруктураПоиска = Новый Структура("Сотрудник,НоменклатураНормы,НачалоПериода",СтрокаТабНеПодобраноКопия.Сотрудник,СтрокаТабНеПодобраноКопия.НоменклатураНормы,СтрокаТабНеПодобраноКопия.НачалоПериода);
			
			НайденныеСтроки = ТаблицаЗапроса.НайтиСтроки(СтруктураПоиска);
			
			//АсТБ_Alexey_100182_********************************************************************
			//проверка подобранных размеров
			РазмерНеПодобран = Ложь;
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				Если НайденнаяСтрока.ЕстьРазмеры И НЕ ЗначениеЗаполнено(НайденнаяСтрока.ХарактеристикаНоменклатуры) Тогда
					РазмерНеПодобран = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;	
			//АсТБ_Alexey_100182_********************************************************************
			
			//+++АСТБ_Горюшин_Алексей_70234
			НайденныеСтрокиВТабНеПодобрано = ТабНеПодобрано.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтрокиВТабНеПодобрано.Количество() <> 0 Тогда
				Продолжить;
			КонецЕсли;
			//---АСТБ_Горюшин_Алексей_70234
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				
				ЗаполнитьЗначенияСвойств(ТабНеМожетБытьПодобрано.Добавить(),СтрокаТабНеПодобраноКопия);
				
			Иначе
				
				ЕстьНоменклатураДляФормированияЗаказа = Ложь;
				
				//+++АСТБ_Горюшин_Алексей_42504
				//+++АСТБ_Горюшин_Алексей_70234
				КомплектДляПроверки = НайденныеСтроки[0].Комплект;
				//было
				//КомплектДляПроверки = НайденныеСтроки[0].НоменклатураКомплект;
				//---АСТБ_Горюшин_Алексей_70234
				//---АСТБ_Горюшин_Алексей_42504
				
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					
					//+++АСТБ_Горюшин_Алексей_42504
					//+++АСТБ_Горюшин_Алексей_70234
					Если НЕ КомплектДляПроверки = НайденнаяСтрока.Комплект Тогда
					//было
					//Если НЕ КомплектДляПроверки = НайденнаяСтрока.НоменклатураКомплект Тогда
					//---АСТБ_Горюшин_Алексей_70234
						Прервать;
					КонецЕсли;	
					//---АСТБ_Горюшин_Алексей_42504
						
					//+++АСТБ_Горюшин_Алексей_26451
					// Распростаняем НеИспользоватьПриФормированииЗаказовПоставщику на комплектующие
					Запрос = Новый Запрос;
					Запрос.Текст = 
						"ВЫБРАТЬ
						|	НоменклатураКомплектующие.Ссылка.НеИспользоватьПриФормированииЗаказовПоставщику КАК НеИспользоватьПриФормированииЗаказовПоставщику
						|ИЗ
						|	Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
						|ГДЕ
						|	НоменклатураКомплектующие.Номенклатура = &Номенклатура
						|	И НоменклатураКомплектующие.Ссылка.НеИспользоватьПриФормированииЗаказовПоставщику = ИСТИНА
						//АсТБ_Alexey_79455_********************************************************************
						|	И НоменклатураКомплектующие.Ссылка = &Комплект";
						//АсТБ_Alexey_79455_********************************************************************
					
					Запрос.УстановитьПараметр("Номенклатура", 	НайденнаяСтрока.Номенклатура);
					//АсТБ_Alexey_79455_********************************************************************
					Запрос.УстановитьПараметр("Комплект", 		КомплектДляПроверки);
					//АсТБ_Alexey_79455_********************************************************************
					
					РезультатЗапросаКомплект = Запрос.Выполнить().Выгрузить();
					
					Если РезультатЗапросаКомплект.Количество() > 0 Тогда
						Комплект_НеИспользоватьПриФормированииЗаказовПоставщику = Истина;
					Иначе
						Комплект_НеИспользоватьПриФормированииЗаказовПоставщику = Ложь;
					КонецЕсли;
					//---АСТБ_Горюшин_Алексей_26451
					
					Если НайденнаяСтрока.Номенклатура.НеИспользоватьПриФормированииЗаказовПоставщику Тогда
						Продолжить;
					//+++АСТБ_Горюшин_Алексей_26451
					ИначеЕсли Комплект_НеИспользоватьПриФормированииЗаказовПоставщику Тогда
						Продолжить;	
					//---АСТБ_Горюшин_Алексей_26451
					Иначе
						
						//АсТБ_Alexey_100182_********************************************************************
						Если РазмерНеПодобран Тогда //не может быть подобрано
							
							ЗаполнитьЗначенияСвойств(ТабНеМожетБытьПодобрано.Добавить(),СтрокаТабНеПодобраноКопия);
							Прервать;
							
						Иначе
							
							НоваяСтрока = ТабНеПодобрано.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабНеПодобраноКопия);
							ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
							ЕстьНоменклатураДляФормированияЗаказа = Истина;
							//+++АСТБ_Горюшин_Алексей_42504
							Если НайденнаяСтрока.ЭтоКомплектующие
								//+++АСТБ_Горюшин_Алексей_70234
								И КомплектДляПроверки = НайденнаяСтрока.Комплект
								//было
								//И КомплектДляПроверки = НайденнаяСтрока.НоменклатураКомплект
								//---АСТБ_Горюшин_Алексей_70234
								Тогда
								Продолжить;
							КонецЕсли;	
							//---АСТБ_Горюшин_Алексей_42504
							Прервать;
							
						КонецЕсли;
						//АсТБ_Alexey_100182_********************************************************************
					
					КонецЕсли;
					
				КонецЦикла;	
				
				Если НЕ ЕстьНоменклатураДляФормированияЗаказа Тогда
					ЗаполнитьЗначенияСвойств(ТабНеМожетБытьПодобрано.Добавить(),СтрокаТабНеПодобраноКопия);
				Конецесли;
					
			КонецЕсли;
			
		Иначе
			
			//+++АСТБ_Горюшин_Алексей_70234_1
			//СтруктураПоиска = Новый Структура("Сотрудник,НоменклатураНормы,НачалоПериода",СтрокаТабНеПодобраноКопия.Сотрудник,СтрокаТабНеПодобраноКопия.НоменклатураНормы,СтрокаТабНеПодобраноКопия.НачалоПериода);
			СтруктураПоиска = Новый Структура("Сотрудник,НоменклатураНормы,Номенклатура,НачалоПериода",
												СтрокаТабНеПодобраноКопия.Сотрудник,
												СтрокаТабНеПодобраноКопия.НоменклатураНормы,
												СтрокаТабНеПодобраноКопия.Номенклатура,
												СтрокаТабНеПодобраноКопия.НачалоПериода);
			
			НайденныеСтрокиВТабНеПодобрано = ТабНеПодобрано.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтрокиВТабНеПодобрано.Количество() <> 0 Тогда
				Продолжить;
			КонецЕсли;
			//---АСТБ_Горюшин_Алексей_70234_1
			
			ЗаполнитьЗначенияСвойств(ТабНеПодобрано.Добавить(),СтрокаТабНеПодобраноКопия);
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьТекстовыйФайл(НомерСтроки,СодержаниеСтроки,ИмяФайла,ОчиститьФайл = Ложь)
 
 //   ТекстовыйФайл = Новый ТекстовыйДокумент;
 //
 //   // Очищаем содержимое файла.
 //   Если ОчиститьФайл Тогда
 //   	ТекстовыйФайл.Очистить();
 //   Иначе
 //   	ТекстовыйФайл.Прочитать(
 //       ИмяФайла,
 //       // Если не указать кодировку напрямую, то она
 //       // по возможности определится автоматически.
 //       КодировкаТекста.UTF8, 
 //       // К этом значению будут приведены разделители
 //       // строк из файла. Если ничего не указывать -
 //       // останутся родные.
 //       Символы.ВК + Символы.ПС);	
 //   КонецЕсли;	
 //   
 //   ТекстовыйФайл.ДобавитьСтроку(СодержаниеСтроки);
 //
 //   // Записываем файл на диск.
 //   // Если такой файл уже существует - он будет перезаписан.
 //   ТекстовыйФайл.Записать(ИмяФайла,КодировкаТекста.UTF8,Символы.ВК + Символы.ПС);
 
 КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуВыдачиСотрудников()
	
	ТаблицаИспользуемыхСотрудников 	= Объект.ТаблицаСотрудников.Выгрузить(Новый Структура("Использовать",Истина));
	МассивСотрудников 				= ТаблицаИспользуемыхСотрудников.ВыгрузитьКолонку("Сотрудник");
	
	ТабПотребности = РеквизитФормыВЗначение("ТаблицаНоменклатурыНормыСотрудников");
	ТабПотребности.Свернуть("НачалоПериода,КонецПериода,Сотрудник,ПолСотрудника,НоменклатураНормы","Количество");
	//+++АСТБ_Горюшин_Алексей_42504
	ТаблицаРазмеров = ПроцедурыРаботыСНормамиСервер.ПодобратьРазмерыДляСотрудников(РеквизитФормыВЗначение("ТаблицаНоменклатурыНормыСотрудников"),Объект.КонецПериодаВыдачи,Объект.Организация,Истина);
	//было
	//ТаблицаРазмеров = ПроцедурыРаботыСНормамиСервер.ПодобратьРазмерыДляСотрудников(РеквизитФормыВЗначение("ТаблицаНоменклатурыНормыСотрудников"),Объект.КонецПериодаВыдачи,Объект.Организация);
	//---АСТБ_Горюшин_Алексей_42504
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	//+++АСТБ_Горюшин_Алексей_26451
	//"ВЫБРАТЬ
	//|	ТаблицаПотребности.НачалоПериода КАК НачалоПериода,
	//|	ТаблицаПотребности.КонецПериода КАК КонецПериода,
	//|	ТаблицаПотребности.Сотрудник КАК Сотрудник,
	//|	ТаблицаПотребности.ПолСотрудника КАК ПолСотрудника,
	//|	ТаблицаПотребности.НоменклатураНормы КАК НоменклатураНормы,
	//|	ТаблицаПотребности.Количество КАК Количество
	//|ПОМЕСТИТЬ ВТ_ТаблицаПотребности
	//|ИЗ
	//|	&ТаблицаПотребности КАК ТаблицаПотребности
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	Сотрудник,
	//|	НоменклатураНормы
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Номенклатура.Ссылка КАК Ссылка
	//|ПОМЕСТИТЬ ВТ_Номенклатура
	//|ИЗ
	//|	Справочник.Номенклатура КАК Номенклатура
	//|ГДЕ
	//|	НЕ Номенклатура.ЭтоГруппа
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ТаблицаРазмеров.Сотрудник КАК Сотрудник,
	//|	ТаблицаРазмеров.НоменклатураНормы КАК НоменклатураНормы,
	//|	ТаблицаРазмеров.Номенклатура КАК Номенклатура,
	//|	ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	ТаблицаРазмеров.ПолНоменклатуры КАК ПолНоменклатуры,
	//|	ТаблицаРазмеров.ЕстьРазмеры КАК ЕстьРазмеры,
	//|	ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	//|	ТаблицаРазмеров.Приоритет КАК Приоритет,
	//|	ТаблицаРазмеров.ПриоритетРазмера КАК ПриоритетРазмера,
	//|	ТаблицаРазмеров.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	//|	ТаблицаРазмеров.ВидАнтропометрии КАК ВидАнтропометрии,
	//|	ТаблицаРазмеров.ЗначениеАнтропометрии КАК ЗначениеАнтропометрии,
	//|	ТаблицаРазмеров.Рост КАК Рост,
	//|	ТаблицаРазмеров.ИспользоватьРост КАК ИспользоватьРост,
	//|	ТаблицаРазмеров.ВидСИЗ КАК ВидСИЗ,
	//|	ТаблицаРазмеров.Комплект КАК Комплект,
	//|	ТаблицаРазмеров.КоличествоВКомплекте КАК Количество
	//|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров
	//|ИЗ
	//|	&ТаблицаРазмеров КАК ТаблицаРазмеров
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	Сотрудник,
	//|	НоменклатураНормы
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ТаблицаРазмеров.Сотрудник КАК Сотрудник,
	//|	ВТ_ТаблицаРазмеров.НоменклатураНормы КАК НоменклатураНормы,
	//|	ВТ_ТаблицаРазмеров.Номенклатура КАК Номенклатура,
	//|	ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	ВТ_ТаблицаРазмеров.ПолНоменклатуры КАК ПолНоменклатуры,
	//|	ВТ_ТаблицаРазмеров.ЕстьРазмеры КАК ЕстьРазмеры,
	//|	ВТ_ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	//|	ВТ_ТаблицаРазмеров.Приоритет КАК Приоритет,
	//|	ВТ_ТаблицаРазмеров.ПриоритетРазмера КАК ПриоритетРазмера,
	//|	ВТ_ТаблицаРазмеров.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	//|	ВТ_ТаблицаРазмеров.ВидАнтропометрии КАК ВидАнтропометрии,
	//|	ВТ_ТаблицаРазмеров.ЗначениеАнтропометрии КАК ЗначениеАнтропометрии,
	//|	ВТ_ТаблицаРазмеров.Рост КАК Рост,
	//|	ВТ_ТаблицаРазмеров.ИспользоватьРост КАК ИспользоватьРост,
	//|	ВТ_ТаблицаРазмеров.ВидСИЗ КАК ВидСИЗ,
	//|	ВТ_ТаблицаРазмеров.Комплект КАК Комплект,
	//|	ВТ_ТаблицаРазмеров.Количество КАК Количество
	//|ПОМЕСТИТЬ ВТ_ФильтрПоТаблицеРазмеров
	//|ИЗ
	//|	ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	//|		ПО ВТ_ТаблицаРазмеров.Комплект = ВТ_Номенклатура.Ссылка
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура1
	//|		ПО ВТ_ТаблицаРазмеров.Номенклатура = ВТ_Номенклатура1.Ссылка
	//|ГДЕ
	//|	ВЫБОР
	//|			КОГДА ВТ_Номенклатура.Ссылка ЕСТЬ NULL
	//|				ТОГДА ИСТИНА
	//|			ИНАЧЕ НЕ ВТ_Номенклатура.Ссылка.УчитыватьКакКомплектВЗаказеПоставщикуИОтчетеДляСАП
	//|		КОНЕЦ
	//|	И ВЫБОР
	//|			КОГДА ВТ_Номенклатура1.Ссылка.Комплект
	//|				ТОГДА ВТ_Номенклатура1.Ссылка.УчитыватьКакКомплектВЗаказеПоставщикуИОтчетеДляСАП
	//|			ИНАЧЕ ИСТИНА
	//|		КОНЕЦ
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	Сотрудник,
	//|	НоменклатураНормы
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ТаблицаПотребности.НачалоПериода КАК НачалоПериода,
	//|	ВТ_ТаблицаПотребности.КонецПериода КАК КонецПериода,
	//|	ВТ_ТаблицаПотребности.Сотрудник КАК Сотрудник,
	//|	ВТ_ТаблицаПотребности.НоменклатураНормы КАК НоменклатураНормы,
	//|	ВТ_ФильтрПоТаблицеРазмеров.Номенклатура КАК Номенклатура,
	//|	ЕСТЬNULL(ВТ_ФильтрПоТаблицеРазмеров.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
	//|	ВТ_ТаблицаПотребности.Количество КАК Количество,
	//|	ВТ_ФильтрПоТаблицеРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	//|	ВТ_ФильтрПоТаблицеРазмеров.Приоритет КАК Приоритет,
	//|	ВТ_ФильтрПоТаблицеРазмеров.ЕстьРазмеры КАК ЕстьРазмеры,
	//|	ВТ_ФильтрПоТаблицеРазмеров.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	//|	ВТ_ФильтрПоТаблицеРазмеров.Комплект КАК Комплект,
	//|	СУММА(0) КАК Подобрано,
	//|	ВТ_ФильтрПоТаблицеРазмеров.ПриоритетРазмера КАК ПриоритетРазмера
	//|ПОМЕСТИТЬ ВТ_ДляКоррекцииКоличества
	//|ИЗ
	//|	ВТ_ТаблицаПотребности КАК ВТ_ТаблицаПотребности
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФильтрПоТаблицеРазмеров КАК ВТ_ФильтрПоТаблицеРазмеров
	//|		ПО ВТ_ТаблицаПотребности.Сотрудник = ВТ_ФильтрПоТаблицеРазмеров.Сотрудник
	//|			И ВТ_ТаблицаПотребности.НоменклатураНормы = ВТ_ФильтрПоТаблицеРазмеров.НоменклатураНормы
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВТ_ТаблицаПотребности.НачалоПериода,
	//|	ВТ_ТаблицаПотребности.КонецПериода,
	//|	ВТ_ТаблицаПотребности.Сотрудник,
	//|	ВТ_ТаблицаПотребности.НоменклатураНормы,
	//|	ВТ_ФильтрПоТаблицеРазмеров.Номенклатура,
	//|	ВТ_ТаблицаПотребности.Количество,
	//|	ВТ_ФильтрПоТаблицеРазмеров.ПриоритетСоответствия,
	//|	ВТ_ФильтрПоТаблицеРазмеров.Приоритет,
	//|	ВТ_ФильтрПоТаблицеРазмеров.ЕстьРазмеры,
	//|	ВТ_ФильтрПоТаблицеРазмеров.ТолькоДляСотрудника,
	//|	ВТ_ФильтрПоТаблицеРазмеров.Комплект,
	//|	ВТ_ФильтрПоТаблицеРазмеров.ПриоритетРазмера,
	//|	ЕСТЬNULL(ВТ_ФильтрПоТаблицеРазмеров.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	НоменклатураКомплектующие.Ссылка КАК Комплект,
	//|	НоменклатураКомплектующие.Номенклатура КАК Номенклатура,
	//|	НоменклатураКомплектующие.Количество КАК Количество
	//|ПОМЕСТИТЬ ВТ_Комплектующие
	//|ИЗ
	//|	Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ДляКоррекцииКоличества.НачалоПериода КАК НачалоПериода,
	//|	ВТ_ДляКоррекцииКоличества.КонецПериода КАК КонецПериода,
	//|	ВТ_ДляКоррекцииКоличества.Сотрудник КАК Сотрудник,
	//|	ВТ_ДляКоррекцииКоличества.НоменклатураНормы КАК НоменклатураНормы,
	//|	ВТ_ДляКоррекцииКоличества.Номенклатура КАК Номенклатура,
	//|	ВТ_ДляКоррекцииКоличества.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	ВТ_ДляКоррекцииКоличества.Количество КАК Количество,
	//|	ВТ_ДляКоррекцииКоличества.ПриоритетСоответствия КАК ПриоритетСоответствия,
	//|	ВТ_ДляКоррекцииКоличества.Приоритет КАК Приоритет,
	//|	ВТ_ДляКоррекцииКоличества.ЕстьРазмеры КАК ЕстьРазмеры,
	//|	ВТ_ДляКоррекцииКоличества.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	//|	ВТ_ДляКоррекцииКоличества.Комплект КАК Комплект,
	//|	ВТ_ДляКоррекцииКоличества.Подобрано КАК Подобрано,
	//|	ВТ_ДляКоррекцииКоличества.ПриоритетРазмера КАК ПриоритетРазмера,
	//|	ВТ_Комплектующие.Номенклатура КАК НоменклатураКомплектующие
	//|ПОМЕСТИТЬ ВТ_КомплектующиеАналитика
	//|ИЗ
	//|	ВТ_ДляКоррекцииКоличества КАК ВТ_ДляКоррекцииКоличества
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Комплектующие КАК ВТ_Комплектующие
	//|		ПО ВТ_ДляКоррекцииКоличества.Комплект = ВТ_Комплектующие.Комплект
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_КомплектующиеАналитика.НачалоПериода КАК НачалоПериода,
	//|	ВТ_КомплектующиеАналитика.КонецПериода КАК КонецПериода,
	//|	ВТ_КомплектующиеАналитика.Сотрудник КАК Сотрудник,
	//|	ВТ_КомплектующиеАналитика.НоменклатураНормы КАК НоменклатураНормы,
	//|	ВТ_КомплектующиеАналитика.Номенклатура КАК Номенклатура,
	//|	ВТ_КомплектующиеАналитика.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	ВТ_КомплектующиеАналитика.Количество КАК Количество,
	//|	ВТ_КомплектующиеАналитика.ПриоритетСоответствия КАК ПриоритетСоответствия,
	//|	ВТ_КомплектующиеАналитика.Приоритет КАК Приоритет,
	//|	ВТ_КомплектующиеАналитика.ЕстьРазмеры КАК ЕстьРазмеры,
	//|	ВТ_КомплектующиеАналитика.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	//|	ВТ_КомплектующиеАналитика.Комплект КАК Комплект,
	//|	ВТ_КомплектующиеАналитика.Подобрано КАК Подобрано,
	//|	ВТ_КомплектующиеАналитика.ПриоритетРазмера КАК ПриоритетРазмера,
	//|	ВТ_КомплектующиеАналитика.НоменклатураКомплектующие КАК НоменклатураКомплектующие,
	//|	СУММА(1) КАК КоличествоПовторов
	//|ПОМЕСТИТЬ ВТ_ОдинаковыеКомплектующие
	//|ИЗ
	//|	ВТ_КомплектующиеАналитика КАК ВТ_КомплектующиеАналитика
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВТ_КомплектующиеАналитика.НачалоПериода,
	//|	ВТ_КомплектующиеАналитика.КонецПериода,
	//|	ВТ_КомплектующиеАналитика.Сотрудник,
	//|	ВТ_КомплектующиеАналитика.НоменклатураНормы,
	//|	ВТ_КомплектующиеАналитика.Номенклатура,
	//|	ВТ_КомплектующиеАналитика.ХарактеристикаНоменклатуры,
	//|	ВТ_КомплектующиеАналитика.Количество,
	//|	ВТ_КомплектующиеАналитика.ПриоритетСоответствия,
	//|	ВТ_КомплектующиеАналитика.Приоритет,
	//|	ВТ_КомплектующиеАналитика.ЕстьРазмеры,
	//|	ВТ_КомплектующиеАналитика.ТолькоДляСотрудника,
	//|	ВТ_КомплектующиеАналитика.Комплект,
	//|	ВТ_КомплектующиеАналитика.Подобрано,
	//|	ВТ_КомплектующиеАналитика.ПриоритетРазмера,
	//|	ВТ_КомплектующиеАналитика.НоменклатураКомплектующие
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ДляКоррекцииКоличества.НачалоПериода КАК НачалоПериода,
	//|	ВТ_ДляКоррекцииКоличества.КонецПериода КАК КонецПериода,
	//|	ВТ_ДляКоррекцииКоличества.Сотрудник КАК Сотрудник,
	//|	ВТ_ДляКоррекцииКоличества.НоменклатураНормы КАК НоменклатураНормы,
	//|	ВТ_ДляКоррекцииКоличества.Номенклатура КАК Номенклатура,
	//|	ВТ_ДляКоррекцииКоличества.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	ВТ_ДляКоррекцииКоличества.Количество * ЕСТЬNULL(ВТ_ОдинаковыеКомплектующие.КоличествоПовторов, 1) КАК Количество,
	//|	ВТ_ДляКоррекцииКоличества.ПриоритетСоответствия КАК ПриоритетСоответствия,
	//|	ВТ_ДляКоррекцииКоличества.Приоритет КАК Приоритет,
	//|	ВТ_ДляКоррекцииКоличества.ЕстьРазмеры КАК ЕстьРазмеры,
	//|	ВТ_ДляКоррекцииКоличества.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	//|	ВТ_ДляКоррекцииКоличества.Комплект КАК Комплект,
	//|	ВТ_ДляКоррекцииКоличества.Подобрано КАК Подобрано,
	//|	ВТ_ДляКоррекцииКоличества.ПриоритетРазмера КАК ПриоритетРазмера
	//|ИЗ
	//|	ВТ_ДляКоррекцииКоличества КАК ВТ_ДляКоррекцииКоличества
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОдинаковыеКомплектующие КАК ВТ_ОдинаковыеКомплектующие
	//|		ПО ВТ_ДляКоррекцииКоличества.НачалоПериода = ВТ_ОдинаковыеКомплектующие.НачалоПериода
	//|			И ВТ_ДляКоррекцииКоличества.КонецПериода = ВТ_ОдинаковыеКомплектующие.КонецПериода
	//|			И ВТ_ДляКоррекцииКоличества.Сотрудник = ВТ_ОдинаковыеКомплектующие.Сотрудник
	//|			И ВТ_ДляКоррекцииКоличества.НоменклатураНормы = ВТ_ОдинаковыеКомплектующие.НоменклатураНормы
	//|			И ВТ_ДляКоррекцииКоличества.Номенклатура = ВТ_ОдинаковыеКомплектующие.Номенклатура
	//|			И ВТ_ДляКоррекцииКоличества.ХарактеристикаНоменклатуры = ВТ_ОдинаковыеКомплектующие.ХарактеристикаНоменклатуры
	//|			И ВТ_ДляКоррекцииКоличества.ПриоритетСоответствия = ВТ_ОдинаковыеКомплектующие.ПриоритетСоответствия
	//|			И ВТ_ДляКоррекцииКоличества.Приоритет = ВТ_ОдинаковыеКомплектующие.Приоритет
	//|			И ВТ_ДляКоррекцииКоличества.ЕстьРазмеры = ВТ_ОдинаковыеКомплектующие.ЕстьРазмеры
	//|			И ВТ_ДляКоррекцииКоличества.ТолькоДляСотрудника = ВТ_ОдинаковыеКомплектующие.ТолькоДляСотрудника
	//|			И ВТ_ДляКоррекцииКоличества.Комплект = ВТ_ОдинаковыеКомплектующие.Комплект
	//|			И ВТ_ДляКоррекцииКоличества.Подобрано = ВТ_ОдинаковыеКомплектующие.Подобрано
	//|			И ВТ_ДляКоррекцииКоличества.ПриоритетРазмера = ВТ_ОдинаковыеКомплектующие.ПриоритетРазмера
	//|			И (ВТ_ОдинаковыеКомплектующие.КоличествоПовторов > 1)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Сотрудник,
	//|	НоменклатураНормы,
	//|	ПриоритетСоответствия,
	//|	Приоритет,
	//|	ПриоритетРазмера,
	//|	НачалоПериода,
	//|	ХарактеристикаНоменклатуры УБЫВ";
	//было
	"ВЫБРАТЬ
	|	ТаблицаПотребности.НачалоПериода КАК НачалоПериода,
	|	ТаблицаПотребности.КонецПериода КАК КонецПериода,
	|	ТаблицаПотребности.Сотрудник КАК Сотрудник,
	|	ТаблицаПотребности.ПолСотрудника КАК ПолСотрудника,
	|	ТаблицаПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаПотребности.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_ТаблицаПотребности
	|ИЗ
	|	&ТаблицаПотребности КАК ТаблицаПотребности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРазмеров.Сотрудник КАК Сотрудник,
	|	ТаблицаРазмеров.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаРазмеров.Номенклатура КАК Номенклатура,
	|	ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаРазмеров.ПолНоменклатуры КАК ПолНоменклатуры,
	|	ТаблицаРазмеров.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ТаблицаРазмеров.Приоритет КАК Приоритет,
	|	ТаблицаРазмеров.ПриоритетРазмера КАК ПриоритетРазмера,
	|	ТаблицаРазмеров.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	|	ТаблицаРазмеров.ВидАнтропометрии КАК ВидАнтропометрии,
	|	ТаблицаРазмеров.ЗначениеАнтропометрии КАК ЗначениеАнтропометрии,
	|	ТаблицаРазмеров.Рост КАК Рост,
	|	ТаблицаРазмеров.ИспользоватьРост КАК ИспользоватьРост,
	|	ТаблицаРазмеров.ВидСИЗ КАК ВидСИЗ,
	|	ТаблицаРазмеров.Комплект КАК Комплект,
	|	ТаблицаРазмеров.КоличествоВКомплекте КАК Количество
	//+++АСТБ_Горюшин_Алексей_42504
	|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров_Предварительная
	//было
	//|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров
	//---АСТБ_Горюшин_Алексей_42504
	|ИЗ
	|	&ТаблицаРазмеров КАК ТаблицаРазмеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы
	|;
	//+++АСТБ_Горюшин_Алексей_42504
	|
	|////////////////////////////////////////////////////////////////////////////////
	//+++АСТБ_Горюшин_Алексей_65169
	|ВЫБРАТЬ
	//было
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//---АСТБ_Горюшин_Алексей_65169
	|	ВТ_ТаблицаРазмеров_Предварительная.Комплект КАК Комплект,
	|	ВТ_ТаблицаРазмеров_Предварительная.Сотрудник КАК Сотрудник,
	//+++АСТБ_Горюшин_Алексей_42504_2020.12.10
	|	ВТ_ТаблицаРазмеров_Предварительная.ПолНоменклатуры КАК ПолНоменклатуры,
	|	ВТ_ТаблицаРазмеров_Предварительная.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//---АСТБ_Горюшин_Алексей_42504_2020.12.10
	|	ВТ_ТаблицаРазмеров_Предварительная.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ТаблицаРазмеров_Предварительная.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров_Предварительная.Приоритет КАК Приоритет,
	|	ВТ_ТаблицаРазмеров_Предварительная.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ВТ_ТаблицаРазмеров_Предварительная.ТолькоДляСотрудника КАК ТолькоДляСотрудника
	|ПОМЕСТИТЬ ВТ_КомплектыБезХарактеристики
	|ИЗ
	|	ВТ_ТаблицаРазмеров_Предварительная КАК ВТ_ТаблицаРазмеров_Предварительная
	|ГДЕ
	|	ВТ_ТаблицаРазмеров_Предварительная.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	//+++АСТБ_Горюшин_Алексей_65169
	// Исправление ошибки, иначе только первый комплект проверяется
	//было
	//|	И ВТ_ТаблицаРазмеров_Предварительная.ПриоритетРазмера = 0
	//---АСТБ_Горюшин_Алексей_65169
	|	И ВТ_ТаблицаРазмеров_Предварительная.ЕстьРазмеры = ИСТИНА
	|	И НЕ ВТ_ТаблицаРазмеров_Предварительная.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	//+++АСТБ_Горюшин_Алексей_65169
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров_Предварительная.Комплект,
	|	ВТ_ТаблицаРазмеров_Предварительная.Сотрудник,
	|	ВТ_ТаблицаРазмеров_Предварительная.ПолНоменклатуры,
	|	ВТ_ТаблицаРазмеров_Предварительная.ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаРазмеров_Предварительная.НоменклатураНормы,
	|	ВТ_ТаблицаРазмеров_Предварительная.ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров_Предварительная.Приоритет,
	|	ВТ_ТаблицаРазмеров_Предварительная.ЕстьРазмеры,
	|	ВТ_ТаблицаРазмеров_Предварительная.ТолькоДляСотрудника
	|ИЗ
	|	ВТ_ТаблицаРазмеров_Предварительная КАК ВТ_ТаблицаРазмеров_Предварительная
	|ГДЕ
	|	ВТ_ТаблицаРазмеров_Предварительная.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|	И ВТ_ТаблицаРазмеров_Предварительная.ЕстьРазмеры = ЛОЖЬ
	|	И НЕ ВТ_ТаблицаРазмеров_Предварительная.Комплект = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И НЕ ВТ_ТаблицаРазмеров_Предварительная.ВидАнтропометрии = ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
	//---АСТБ_Горюшин_Алексей_65169
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРазмеров.Сотрудник КАК Сотрудник,
	|	ТаблицаРазмеров.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаРазмеров.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТ_КомплектыБезХарактеристики.Комплект ЕСТЬ NULL
	|			ТОГДА ТаблицаРазмеров.ХарактеристикаНоменклатуры
	//+++АСТБ_Горюшин_Алексей_65169
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	//было
	//|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	//---АСТБ_Горюшин_Алексей_65169
	|	КОНЕЦ КАК ХарактеристикаНоменклатуры,
	|	ТаблицаРазмеров.ПолНоменклатуры КАК ПолНоменклатуры,
	|	ТаблицаРазмеров.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ТаблицаРазмеров.Приоритет КАК Приоритет,
	|	ВЫБОР
	|		КОГДА ВТ_КомплектыБезХарактеристики.Комплект ЕСТЬ NULL
	|			ТОГДА ТаблицаРазмеров.ПриоритетРазмера
	|		ИНАЧЕ 1000
	|	КОНЕЦ КАК ПриоритетРазмера,
	|	ТаблицаРазмеров.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	|	ТаблицаРазмеров.ВидАнтропометрии КАК ВидАнтропометрии,
	|	ТаблицаРазмеров.ЗначениеАнтропометрии КАК ЗначениеАнтропометрии,
	|	ТаблицаРазмеров.Рост КАК Рост,
	|	ТаблицаРазмеров.ИспользоватьРост КАК ИспользоватьРост,
	|	ТаблицаРазмеров.ВидСИЗ КАК ВидСИЗ,
	|	ТаблицаРазмеров.Комплект КАК Комплект,
	|	ТаблицаРазмеров.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров
	|ИЗ
	|	ВТ_ТаблицаРазмеров_Предварительная КАК ТаблицаРазмеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КомплектыБезХарактеристики КАК ВТ_КомплектыБезХарактеристики
	|		ПО ТаблицаРазмеров.Комплект = ВТ_КомплектыБезХарактеристики.Комплект
	|		И ТаблицаРазмеров.Сотрудник = ВТ_КомплектыБезХарактеристики.Сотрудник
	|		И ТаблицаРазмеров.НоменклатураНормы = ВТ_КомплектыБезХарактеристики.НоменклатураНормы
	|		И ТаблицаРазмеров.ПриоритетСоответствия = ВТ_КомплектыБезХарактеристики.ПриоритетСоответствия
	|		И ТаблицаРазмеров.Приоритет = ВТ_КомплектыБезХарактеристики.Приоритет
	|		И ТаблицаРазмеров.ЕстьРазмеры = ВТ_КомплектыБезХарактеристики.ЕстьРазмеры
	|		И ТаблицаРазмеров.ТолькоДляСотрудника = ВТ_КомплектыБезХарактеристики.ТолькоДляСотрудника
	//+++АСТБ_Горюшин_Алексей_42504_2020.12.10
	|		И ТаблицаРазмеров.ПолНоменклатуры = ВТ_КомплектыБезХарактеристики.ПолНоменклатуры
	|		И ТаблицаРазмеров.ХарактеристикаНоменклатуры = ВТ_КомплектыБезХарактеристики.ХарактеристикаНоменклатуры
	//---АСТБ_Горюшин_Алексей_42504_2020.12.10
	|;
	//---АСТБ_Горюшин_Алексей_42504
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаРазмеров.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ТаблицаРазмеров.Номенклатура КАК Номенклатура,
	//+++АСТБ_Горюшин_Алексей_65169
	|   ВЫБОР
	|           КОГДА (НЕ ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|           	И ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры.ПометкаУдаления
	|               ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ИНАЧЕ ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры
	|       КОНЕЦ КАК ХарактеристикаНоменклатуры,
	//было
	//|	ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//---АСТБ_Горюшин_Алексей_65169
	|	ВТ_ТаблицаРазмеров.ПолНоменклатуры КАК ПолНоменклатуры,
	|	ВТ_ТаблицаРазмеров.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ВТ_ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров.Приоритет КАК Приоритет,
	//+++АСТБ_Горюшин_Алексей_65169
	|   ВЫБОР
	|           КОГДА (НЕ ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|           	И ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры.ПометкаУдаления
	|               ТОГДА 1000
	|           КОГДА НЕ ВТ_ТаблицаРазмеров.ЕстьРазмеры
	|               И НЕ ВТ_ТаблицаРазмеров.ВидАнтропометрии = ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
	|               И ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|               ТОГДА 1000
	|			ИНАЧЕ ВТ_ТаблицаРазмеров.ПриоритетРазмера
	|       КОНЕЦ КАК ПриоритетРазмера,
	//было
	//|	ВТ_ТаблицаРазмеров.ПриоритетРазмера КАК ПриоритетРазмера,
	//---АСТБ_Горюшин_Алексей_65169
	|	ВТ_ТаблицаРазмеров.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	|	ВТ_ТаблицаРазмеров.ВидАнтропометрии КАК ВидАнтропометрии,
	|	ВТ_ТаблицаРазмеров.ЗначениеАнтропометрии КАК ЗначениеАнтропометрии,
	|	ВТ_ТаблицаРазмеров.Рост КАК Рост,
	|	ВТ_ТаблицаРазмеров.ИспользоватьРост КАК ИспользоватьРост,
	|	ВТ_ТаблицаРазмеров.ВидСИЗ КАК ВидСИЗ,
	|	ВТ_ТаблицаРазмеров.Комплект КАК Комплект,
	|	ВТ_ТаблицаРазмеров.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_ФильтрПоТаблицеРазмеров
	|ИЗ
	|	ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО ВТ_ТаблицаРазмеров.Комплект = ВТ_Номенклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура1
	|		ПО ВТ_ТаблицаРазмеров.Номенклатура = ВТ_Номенклатура1.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ВТ_Номенклатура.Ссылка ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ НЕ ВТ_Номенклатура.Ссылка.УчитыватьКакКомплектВЗаказеПоставщикуИОтчетеДляСАП
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА ВТ_Номенклатура1.Ссылка.Комплект
	|				ТОГДА ВТ_Номенклатура1.Ссылка.УчитыватьКакКомплектВЗаказеПоставщикуИОтчетеДляСАП
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПотребности.НачалоПериода КАК НачалоПериода,
	|	ВТ_ТаблицаПотребности.КонецПериода КАК КонецПериода,
	|	ВТ_ТаблицаПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ФильтрПоТаблицеРазмеров.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_ФильтрПоТаблицеРазмеров.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаПотребности.Количество КАК Количество,
	|	ВТ_ФильтрПоТаблицеРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ФильтрПоТаблицеРазмеров.Приоритет КАК Приоритет,
	|	ВТ_ФильтрПоТаблицеРазмеров.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ВТ_ФильтрПоТаблицеРазмеров.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	|	ВТ_ФильтрПоТаблицеРазмеров.Комплект КАК Комплект,
	|	СУММА(0) КАК Подобрано,
	|	ВТ_ФильтрПоТаблицеРазмеров.ПриоритетРазмера КАК ПриоритетРазмера
	|ИЗ
	|	ВТ_ТаблицаПотребности КАК ВТ_ТаблицаПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФильтрПоТаблицеРазмеров КАК ВТ_ФильтрПоТаблицеРазмеров
	|		ПО ВТ_ТаблицаПотребности.Сотрудник = ВТ_ФильтрПоТаблицеРазмеров.Сотрудник
	|			И ВТ_ТаблицаПотребности.НоменклатураНормы = ВТ_ФильтрПоТаблицеРазмеров.НоменклатураНормы
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаПотребности.НачалоПериода,
	|	ВТ_ТаблицаПотребности.КонецПериода,
	|	ВТ_ТаблицаПотребности.Сотрудник,
	|	ВТ_ТаблицаПотребности.НоменклатураНормы,
	|	ВТ_ФильтрПоТаблицеРазмеров.Номенклатура,
	|	ВТ_ТаблицаПотребности.Количество,
	|	ВТ_ФильтрПоТаблицеРазмеров.ПриоритетСоответствия,
	|	ВТ_ФильтрПоТаблицеРазмеров.Приоритет,
	|	ВТ_ФильтрПоТаблицеРазмеров.ЕстьРазмеры,
	|	ВТ_ФильтрПоТаблицеРазмеров.ТолькоДляСотрудника,
	|	ВТ_ФильтрПоТаблицеРазмеров.Комплект,
	|	ВТ_ФильтрПоТаблицеРазмеров.ПриоритетРазмера,
	|	ЕСТЬNULL(ВТ_ФильтрПоТаблицеРазмеров.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы,
	|	ПриоритетСоответствия,
	|	Приоритет,
	|	ПриоритетРазмера,
	|	НачалоПериода,
	|	ХарактеристикаНоменклатуры УБЫВ";
	//---АСТБ_Горюшин_Алексей_26451

	Запрос.УстановитьПараметр("ТаблицаПотребности", 	ТабПотребности);
	Запрос.УстановитьПараметр("ТаблицаРазмеров", 		ТаблицаРазмеров);

	УстановитьПривилегированныйРежим(Истина);
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(),"ТаблицаВыдачиСотрудников");
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНоменклатурыНормСотрудников()
	
	ТаблицаИспользуемыхСотрудников 	= Объект.ТаблицаСотрудников.Выгрузить(Новый Структура("Использовать",Истина));
	МассивСотрудников = ТаблицаИспользуемыхСотрудников.ВыгрузитьКолонку("Сотрудник");
	
	ТаблицаИспользуемойНоменклатурыНормы = Объект.ТаблицаНоменклатурыНормы.Выгрузить(Новый Структура("Использовать",Истина));
	МассивНоменклатурыНормы = ТаблицаИспользуемойНоменклатурыНормы.ВыгрузитьКолонку("НоменклатураНормы");
	
	//+++АСТБ_Горюшин_Алексей_42504
	ТаблицаИспользуемыхВидовВыдачи = Объект.ТаблицаВидовВыдачи.Выгрузить(Новый Структура("Использовать",Истина));
	МассивВидовВыдачи = ТаблицаИспользуемыхВидовВыдачи.ВыгрузитьКолонку("ВидВыдачи");
	//---АСТБ_Горюшин_Алексей_42504
	
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПотребностьВыдачиСИЗОстатки.ДатаПотребности, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ПотребностьВыдачиСИЗОстатки.ДатаПотребности, МЕСЯЦ)
	|	КОНЕЦ КАК НачалоПериода,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПотребностьВыдачиСИЗОстатки.ДатаПотребности, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|			ТОГДА КОНЕЦПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ПотребностьВыдачиСИЗОстатки.ДатаПотребности, МЕСЯЦ)
	|	КОНЕЦ КАК КонецПериода,
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник КАК Сотрудник,
	|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы КАК НоменклатураНормы,
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник.ФизическоеЛицо.Пол КАК ПолСотрудника,
	|	СУММА(ПотребностьВыдачиСИЗОстатки.КоличествоОстаток) КАК КоличествоСумма,
	|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи.ВидВыдачиСИЗ КАК ВидВыдачи,
	|	МАКСИМУМ(ПотребностьВыдачиСИЗОстатки.КоличествоОстаток) КАК КоличествоМаксимум,
	|	ПотребностьВыдачиСИЗОстатки.Организация КАК Организация,
	|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи КАК НормаВыдачи,
	|	НАЧАЛОПЕРИОДА(ПотребностьВыдачиСИЗОстатки.ДатаПотребности, МЕСЯЦ) КАК МесяцПотребности,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи.ТипПериода КАК ПериодичностьВыдачиТипПериода,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи.КоличествоПериодов КАК ПериодичностьВыдачиКоличествоПериодов
	|ПОМЕСТИТЬ ВТ_Потребность
	|ИЗ
	|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
	|			&ДатаАнализа,
	|			(Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|				И Сотрудник В (&МассивСотрудников)
	|				И НоменклатураНормы В (&МассивНоменклатурыНормы)
	//+++АСТБ_Горюшин_Алексей_42504
	|				И НормаВыдачи.ВидВыдачиСИЗ В (&МассивВидовВыдачи)
	//---АСТБ_Горюшин_Алексей_42504
	|				И ДатаПотребности <= &ДатаАнализа) КАК ПотребностьВыдачиСИЗОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|		ПО ПотребностьВыдачиСИЗОстатки.НормаВыдачи = НормыВыдачиСИЗСоставНормы.Ссылка
	|			И ПотребностьВыдачиСИЗОстатки.НоменклатураНормы = НормыВыдачиСИЗСоставНормы.НоменклатураНормы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
	|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПотребностьВыдачиСИЗОстатки.ДатаПотребности, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|			ТОГДА КОНЕЦПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ПотребностьВыдачиСИЗОстатки.ДатаПотребности, МЕСЯЦ)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПотребностьВыдачиСИЗОстатки.ДатаПотребности, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ПотребностьВыдачиСИЗОстатки.ДатаПотребности, МЕСЯЦ)
	|	КОНЕЦ,
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник.ФизическоеЛицо.Пол,
	|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи.ВидВыдачиСИЗ,
	|	ПотребностьВыдачиСИЗОстатки.Организация,
	|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи,
	|	НАЧАЛОПЕРИОДА(ПотребностьВыдачиСИЗОстатки.ДатаПотребности, МЕСЯЦ),
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи.ТипПериода,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи.КоличествоПериодов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ВыданныеСредстваЗащитыОстатки.ДатаВыдачи, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ВыданныеСредстваЗащитыОстатки.ДатаВыдачи, МЕСЯЦ)
	|	КОНЕЦ КАК НачалоПериода,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ВыданныеСредстваЗащитыОстатки.ДатаВыдачи, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|			ТОГДА КОНЕЦПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ВыданныеСредстваЗащитыОстатки.ДатаВыдачи, МЕСЯЦ)
	|	КОНЕЦ КАК КонецПериода,
	|	ВыданныеСредстваЗащитыОстатки.Сотрудник КАК Сотрудник,
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы КАК НоменклатураНормы,
	|	СУММА(ВыданныеСредстваЗащитыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ,
	|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи КАК НормаВыдачи,
	|	НАЧАЛОПЕРИОДА(ВыданныеСредстваЗащитыОстатки.ДатаВыдачи, МЕСЯЦ) КАК МесяцВыдачи,
	|	ВыданныеСредстваЗащитыОстатки.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_ВыданныеСИЗ
	|ИЗ
	|	РегистрНакопления.ВыданныеСредстваЗащиты.Остатки(
	|			&ДатаАнализа,
	|			(Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|				И Сотрудник В (&МассивСотрудников)
	|				И НоменклатураНормы В (&МассивНоменклатурыНормы)
	//+++АСТБ_Горюшин_Алексей_42504
	|				И НормаВыдачи.ВидВыдачиСИЗ В (&МассивВидовВыдачи)
	//---АСТБ_Горюшин_Алексей_42504
	|				И ДатаВыдачи <= &ДатаАнализа) КАК ВыданныеСредстваЗащитыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ВыданныеСредстваЗащитыОстатки.ДатаВыдачи, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ВыданныеСредстваЗащитыОстатки.ДатаВыдачи, МЕСЯЦ)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ВыданныеСредстваЗащитыОстатки.ДатаВыдачи, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|			ТОГДА КОНЕЦПЕРИОДА(&ДатаНачалаАнализа, МЕСЯЦ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ВыданныеСредстваЗащитыОстатки.ДатаВыдачи, МЕСЯЦ)
	|	КОНЕЦ,
	|	ВыданныеСредстваЗащитыОстатки.Сотрудник,
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи.ВидВыдачиСИЗ,
	|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи,
	|	НАЧАЛОПЕРИОДА(ВыданныеСредстваЗащитыОстатки.ДатаВыдачи, МЕСЯЦ),
	|	ВыданныеСредстваЗащитыОстатки.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение КАК Подразделение,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Должность КАК Должность,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_ОсновноеМестоРаботы
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(
	|			&ДатаАнализа,
	|			(Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|				И Сотрудник В (&МассивСотрудников)) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Должность,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Потребность.НачалоПериода КАК НачалоПериода,
	|	ВТ_Потребность.КонецПериода КАК КонецПериода,
	|	ВТ_Потребность.Сотрудник КАК Сотрудник,
	|	ВТ_Потребность.ПолСотрудника КАК ПолСотрудника,
	|	ВТ_Потребность.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ОсновноеМестоРаботы.Подразделение КАК Подразделение,
	|	ВТ_ОсновноеМестоРаботы.Должность КАК Должность,
	|	ВТ_Потребность.ВидВыдачи КАК ВидВыдачи,
	|	СУММА(ВТ_Потребность.КоличествоСумма) КАК КоличествоСумма,
	|	МАКСИМУМ(ВТ_Потребность.КоличествоСумма) КАК КоличествоМаксимум,
	|	ВТ_Потребность.Организация КАК Организация,
	|	СУММА(ВТ_ВыданныеСИЗ.КоличествоОстаток) КАК КоличествоОстаток,
	|	ВТ_Потребность.МесяцПотребности КАК МесяцПотребности,
	|	ВТ_Потребность.ПериодичностьВыдачиТипПериода КАК ПериодичностьВыдачиТипПериода,
	|	ВТ_Потребность.ПериодичностьВыдачиКоличествоПериодов КАК ПериодичностьВыдачиКоличествоПериодов
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	ВТ_Потребность КАК ВТ_Потребность
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновноеМестоРаботы КАК ВТ_ОсновноеМестоРаботы
	|		ПО ВТ_Потребность.Сотрудник = ВТ_ОсновноеМестоРаботы.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыданныеСИЗ КАК ВТ_ВыданныеСИЗ
	|		ПО ВТ_Потребность.МесяцПотребности = ВТ_ВыданныеСИЗ.МесяцВыдачи
	|			И ВТ_Потребность.Сотрудник = ВТ_ВыданныеСИЗ.Сотрудник
	|			И ВТ_Потребность.НоменклатураНормы = ВТ_ВыданныеСИЗ.НоменклатураНормы
	|			И ВТ_Потребность.ВидВыдачи = ВТ_ВыданныеСИЗ.ВидВыдачиСИЗ
	|			И (ВЫБОР
	|				КОГДА ВТ_Потребность.Организация.СверткаПотребностиПоНоменклатуреНормы
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВТ_Потребность.НормаВыдачи = ВТ_ВыданныеСИЗ.НормаВыдачи
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Потребность.НачалоПериода,
	|	ВТ_Потребность.КонецПериода,
	|	ВТ_Потребность.Организация,
	|	ВТ_Потребность.Сотрудник,
	|	ВТ_Потребность.ПолСотрудника,
	|	ВТ_Потребность.НоменклатураНормы,
	|	ВТ_ОсновноеМестоРаботы.Подразделение,
	|	ВТ_ОсновноеМестоРаботы.Должность,
	|	ВТ_Потребность.ВидВыдачи,
	|	ВТ_Потребность.МесяцПотребности,
	|	ВТ_Потребность.ПериодичностьВыдачиТипПериода,
	|	ВТ_Потребность.ПериодичностьВыдачиКоличествоПериодов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Результат.НачалоПериода КАК НачалоПериода,
	|	ВТ_Результат.КонецПериода КАК КонецПериода,
	|	ВТ_Результат.Сотрудник КАК Сотрудник,
	|	ВТ_Результат.ПолСотрудника КАК ПолСотрудника,
	|	ВТ_Результат.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_Результат.Подразделение КАК Подразделение,
	|	ВТ_Результат.Должность КАК Должность,
	|	ВТ_Результат.ВидВыдачи КАК ВидВыдачи,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_Результат.Организация.ЧастичнаяВыдача = 3
	|				ТОГДА ВЫБОР
	|						КОГДА ВТ_Результат.Организация.СверткаПотребностиПоНоменклатуреНормы
	|							ТОГДА ВТ_Результат.КоличествоМаксимум
	|						ИНАЧЕ ВТ_Результат.КоличествоСумма
	|					КОНЕЦ
	|			КОГДА ВТ_Результат.Организация.ЧастичнаяВыдача = 2
	|				ТОГДА ВЫБОР
	|						КОГДА ВТ_Результат.Организация.СверткаПотребностиПоНоменклатуреНормы
	|							ТОГДА ВТ_Результат.КоличествоМаксимум
	|						ИНАЧЕ ВТ_Результат.КоличествоСумма
	|					КОНЕЦ - ЕСТЬNULL(ВТ_Результат.КоличествоОстаток, 0)
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ВТ_Результат.Организация.СверткаПотребностиПоНоменклатуреНормы
	|						ТОГДА ВТ_Результат.КоличествоМаксимум
	|					ИНАЧЕ ВТ_Результат.КоличествоСумма
	|				КОНЕЦ
	|		КОНЕЦ) КАК Количество,
	|	ВТ_Результат.МесяцПотребности КАК МесяцПотребности,
	|	ВТ_Результат.ПериодичностьВыдачиТипПериода КАК ПериодичностьВыдачиТипПериода,
	|	ВТ_Результат.ПериодичностьВыдачиКоличествоПериодов КАК ПериодичностьВыдачиКоличествоПериодов
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|ГДЕ
	|	НЕ ВТ_Результат.ПериодичностьВыдачиТипПериода ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Результат.НачалоПериода,
	|	ВТ_Результат.КонецПериода,
	|	ВТ_Результат.Сотрудник,
	|	ВТ_Результат.ПолСотрудника,
	|	ВТ_Результат.НоменклатураНормы,
	|	ВТ_Результат.Подразделение,
	|	ВТ_Результат.Должность,
	|	ВТ_Результат.ВидВыдачи,
	|	ВТ_Результат.МесяцПотребности,
	|	ВТ_Результат.ПериодичностьВыдачиТипПериода,
	|	ВТ_Результат.ПериодичностьВыдачиКоличествоПериодов";
	
	Запрос.УстановитьПараметр("ДатаАнализа",					Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("ДатаНачалаАнализа",				Объект.НачалоПериодаВыдачи);
	Запрос.УстановитьПараметр("Организация",					Объект.Организация);
	Запрос.УстановитьПараметр("МассивСотрудников",				МассивСотрудников);
	Запрос.УстановитьПараметр("МассивНоменклатурыНормы",		МассивНоменклатурыНормы);
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",НеУчитыватьОстаткиПоОрганизации);
	//+++АСТБ_Горюшин_Алексей_42504
	Запрос.УстановитьПараметр("МассивВидовВыдачи",				МассивВидовВыдачи);
	//---АСТБ_Горюшин_Алексей_42504
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	//результат для передачи в СКД
	ТаблицаДляВывода = ТаблицаЗапроса.Скопировать();
	ТаблицаДляВывода.Очистить();
	
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		ТипПериода = СтрокаТаблицыЗапроса.ПериодичностьВыдачиТипПериода;
		
		Если ТипПериода = Перечисления.ДоступныеПериодыОтчета.Год Тогда
			Множитель = 12 * СтрокаТаблицыЗапроса.ПериодичностьВыдачиКоличествоПериодов;
		Иначе
			Множитель = СтрокаТаблицыЗапроса.ПериодичностьВыдачиКоличествоПериодов;
		КонецЕсли;
		
		Если СтрокаТаблицыЗапроса.МесяцПотребности < Объект.НачалоПериодаВыдачи Тогда
			
			НоваяСтрока 				= ТаблицаДляВывода.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыЗапроса);
			НоваяСтрока.НачалоПериода 	= НачалоМесяца(Объект.НачалоПериодаВыдачи);
			НоваяСтрока.КонецПериода 	= КонецМесяца(Объект.НачалоПериодаВыдачи);
			СледующаяДатаПотребности 	= ДобавитьМесяц(Объект.НачалоПериодаВыдачи,Множитель);
			
			//бежим дальше
			Пока СледующаяДатаПотребности < КонецДня(Объект.КонецПериодаВыдачи) Цикл
				
				НоваяСтрока 				= ТаблицаДляВывода.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыЗапроса);
				НоваяСтрока.НачалоПериода 	= НачалоМесяца(СледующаяДатаПотребности);
				НоваяСтрока.КонецПериода 	= КонецМесяца(СледующаяДатаПотребности);
				СледующаяДатаПотребности 	= ДобавитьМесяц(СледующаяДатаПотребности,Множитель);
				
			КонецЦикла;
			
		Иначе
			
			Если СтрокаТаблицыЗапроса.МесяцПотребности >= НачалоДня(Объект.НачалоПериодаВыдачи) И СтрокаТаблицыЗапроса.МесяцПотребности <= КонецДня(Объект.КонецПериодаВыдачи) Тогда
				
				НоваяСтрока 				= ТаблицаДляВывода.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыЗапроса);
				НоваяСтрока.НачалоПериода 	= НачалоМесяца(СтрокаТаблицыЗапроса.МесяцПотребности);
				НоваяСтрока.КонецПериода 	= КонецМесяца(СтрокаТаблицыЗапроса.МесяцПотребности);
				
			КонецЕсли;
			
			СледующаяДатаПотребности = ДобавитьМесяц(СтрокаТаблицыЗапроса.МесяцПотребности,Множитель);
			
			//бежим дальше
			Пока СледующаяДатаПотребности < КонецДня(Объект.КонецПериодаВыдачи) Цикл
				
				НоваяСтрока 				= ТаблицаДляВывода.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыЗапроса);
				НоваяСтрока.НачалоПериода 	= НачалоМесяца(СледующаяДатаПотребности);
				НоваяСтрока.КонецПериода 	= КонецМесяца(СледующаяДатаПотребности);
				СледующаяДатаПотребности 	= ДобавитьМесяц(СледующаяДатаПотребности,Множитель);
				
			КонецЦикла;			
			
		КонецЕсли;	
		
	КонецЦикла;
	
	ТаблицаДляВывода.Свернуть("НачалоПериода,КонецПериода,Сотрудник,ПолСотрудника,НоменклатураНормы,Подразделение,Должность,ВидВыдачи","Количество");
	
	ЗначениеВРеквизитФормы(ТаблицаДляВывода,"ТаблицаНоменклатурыНормыСотрудников");
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуОстатков()
	
	ТаблицаИспользуемыхСкладов 	= Объект.ТаблицаСкладовДляОстатков.Выгрузить(Новый Структура("Использовать",Истина));
	МассивСкладов 				= ТаблицаИспользуемыхСкладов.ВыгрузитьКолонку("Склад");
	
	ТаблицаИспользуемойНоменклатурыНормы 	= Объект.ТаблицаНоменклатурыНормы.Выгрузить(Новый Структура("Использовать",Истина));
	МассивНоменклатурыНормы 				= ТаблицаИспользуемойНоменклатурыНормы.ВыгрузитьКолонку("НоменклатураНормы");
	
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&ДатаАнализа,
	|			Склад В (&МассивСкладов)
	|				И (Организация = &Организация
	|					ИЛИ &НеУчитыватьОстаткиПоОрганизации)) КАК ОстаткиНоменклатурыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураКомплектующие.Ссылка КАК Комплект,
	|	НоменклатураКомплектующие.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_Комплектующие
	|ИЗ
	|	Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	|ГДЕ
	|	НоменклатураКомплектующие.Ссылка.Комплект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_НоменклатураПоМаппингу
	|ИЗ
	|	РегистрСведений.СоответствияНоменклатурыВыдачи.СрезПоследних(&ДатаАнализа, НоменклатураНормыОрганизации В (&МассивНоменклатурыНормы)) КАК СоответствияНоменклатурыВыдачиСрезПоследних
	|ГДЕ
	|	СоответствияНоменклатурыВыдачиСрезПоследних.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_НоменклатураПоМаппингу.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТ_ВсяНоменклатураДляОстатков
	|ИЗ
	|	ВТ_НоменклатураПоМаппингу КАК ВТ_НоменклатураПоМаппингу
	|
	//+++АСТБ_Горюшин_Алексей_44184
	|ОБЪЕДИНИТЬ
	//было
	//|ОБЪЕДИНИТЬ ВСЕ
	//---АСТБ_Горюшин_Алексей_44184
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Комплектующие.Номенклатура
	|ИЗ
	|	ВТ_НоменклатураПоМаппингу КАК ВТ_НоменклатураПоМаппингу
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Комплектующие КАК ВТ_Комплектующие
	|		ПО ВТ_НоменклатураПоМаппингу.Номенклатура = ВТ_Комплектующие.Комплект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсяНоменклатураДляОстатков.Номенклатура КАК Номенклатура,
	|	ВТ_Остатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ВТ_Остатки.КоличествоОстаток) КАК Количество,
	|	СУММА(0) КАК Подобрано
	|ИЗ
	|	ВТ_ВсяНоменклатураДляОстатков КАК ВТ_ВсяНоменклатураДляОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
	|		ПО ВТ_ВсяНоменклатураДляОстатков.Номенклатура = ВТ_Остатки.Номенклатура
	|ГДЕ
	|	НЕ ВТ_Остатки.Номенклатура ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВсяНоменклатураДляОстатков.Номенклатура,
	|	ВТ_Остатки.ХарактеристикаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ВсяНоменклатураДляОстатков.Номенклатура.Наименование,
	|	ВТ_Остатки.ХарактеристикаНоменклатуры.КодSAP";
	
	Запрос.УстановитьПараметр("ДатаАнализа",					Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("МассивСкладов",					МассивСкладов);
	Запрос.УстановитьПараметр("Организация",					Объект.Организация);
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",НеУчитыватьОстаткиПоОрганизации);
	Запрос.УстановитьПараметр("МассивНоменклатурыНормы",		МассивНоменклатурыНормы);
	
	УстановитьПривилегированныйРежим(Истина);
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(),"ТаблицаОстатков");
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПериодовВыдачи()
	
	ТабПериодовВыдачи = РеквизитФормыВЗначение("ТаблицаПериодовВыдачи");
	ТабПериодовВыдачи.Очистить();
	
	ТекущееНачалоПериода	= Объект.НачалоПериодаВыдачи;
	ТекущийКонецПериода 	= Объект.КонецПериодаВыдачи;
	
	Пока ТекущийКонецПериода <= КонецМесяца(Объект.КонецПериодаВыдачи) Цикл
		
		НоваяСтрока 				= ТабПериодовВыдачи.Добавить();
		НоваяСтрока.НачалоПериода 	= НачалоМесяца(ТекущееНачалоПериода);
		НоваяСтрока.КонецПериода	= КонецМесяца(ТекущееНачалоПериода);
		
		ТекущееНачалоПериода 	= НоваяСтрока.КонецПериода + 1;
		ТекущийКонецПериода 	= КонецМесяца(ТекущееНачалоПериода);
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТабПериодовВыдачи,"ТаблицаПериодовВыдачи");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПредварительныйАнализ(Команда)
	
	Начато = ТекущаяДата();
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = "Начало: " + Начато;
	СообщениеПользователю.Сообщить();
	
	ВыполнитьПредварительныйАнализНаСервере();
	
	Закончено = ТекущаяДата();
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = "Окончание: " + Закончено;
	СообщениеПользователю.Сообщить();
	
	ВремяВыполнения = Закончено - Начато;
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = "Время выполнения " + ВремяВыполнения + " сек." ;
	СообщениеПользователю.Сообщить();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьАнализДляФормированияЗаказовПоставщикуНаСервере()

	УстановитьПривилегированныйРежим(Истина);
	
	ТабНеПодобрано	 		= РеквизитФормыВЗначение("ТаблицаНеПодобрано");
	ТабВыдачиСотрудников	= РеквизитФормыВЗначение("ТаблицаВыдачиСотрудников");
	
	ТаблицаИспользуемыхПоставщиков = Объект.ТаблицаПоставщиков.Выгрузить(Новый Структура("Использовать",Истина));
	МассивПоставщиков = ТаблицаИспользуемыхПоставщиков.ВыгрузитьКолонку("Поставщик");
	
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	ТаблицаДляЗаказов = Новый ТаблицаЗначений;
	ТаблицаДляЗаказов.Колонки.Добавить("Организация", 					Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДляЗаказов.Колонки.Добавить("Номенклатура", 					Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДляЗаказов.Колонки.Добавить("ХарактеристикаНоменклатуры",	Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаДляЗаказов.Колонки.Добавить("НачалоПериода", 				Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ТаблицаДляЗаказов.Колонки.Добавить("Требуется", 					Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	//+++АСТБ_Горюшин_Алексей_49316
	ТаблицаДляЗаказов.Колонки.Добавить("Комплект",	 					Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДляЗаказов.Колонки.Добавить("ХарактеристикаКомплекта",		Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаДляЗаказов.Колонки.Добавить("КоличествоВКомплекте",			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	//---АСТБ_Горюшин_Алексей_49316
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	//+++АСТБ_Горюшин_Алексей_26451
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО Номенклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|	И Номенклатура.Поставщик В(&МассивПоставщиков)
	|;
	//+++АСТБ_Горюшин_Алексей_49316
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураКомплектующие.Ссылка КАК Комплект,
	|	НоменклатураКомплектующие.Номенклатура КАК Номенклатура,
	|	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаНоменклатуры,
	|	НоменклатураКомплектующие.Ссылка.ВидАнтропометрическогоСвойства КАК ВидАнтропометрическогоСвойстваКомплекта,
	|	НоменклатураКомплектующие.Номенклатура.ВидАнтропометрическогоСвойства КАК НоменклатураВидАнтропометрическогоСвойстваНоменклатуры,
	|	ХарактеристикиНоменклатуры.Метрика КАК МетрикаНоменклатуры,
	|	ХарактеристикиНоменклатуры1.Ссылка КАК ХарактеристикаКомплекта,
	|	ХарактеристикиНоменклатуры1.Метрика КАК МетрикаКомплекта
	|ПОМЕСТИТЬ ВТ_СоответствиеХарактеристикКомплектаИКомплектующего	
	|ИЗ
	|	Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО (НоменклатураКомплектующие.Номенклатура = ХарактеристикиНоменклатуры.Владелец)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры1
	|		ПО (НоменклатураКомплектующие.Ссылка = ХарактеристикиНоменклатуры1.Владелец)
	|ГДЕ
	|	НоменклатураКомплектующие.Ссылка.ВидАнтропометрическогоСвойства = НоменклатураКомплектующие.Номенклатура.ВидАнтропометрическогоСвойства
	|	И НЕ НоменклатураКомплектующие.Номенклатура.ВидАнтропометрическогоСвойства = ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
	|	И НЕ НоменклатураКомплектующие.Ссылка.ВидАнтропометрическогоСвойства = ЗНАЧЕНИЕ(Справочник.ВидыАнтропометрическихСвойств.НеОпределен)
	|	И ХарактеристикиНоменклатуры.Метрика = ХарактеристикиНоменклатуры1.Метрика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураКомплектующие.Ссылка КАК Комплект,
	|	НоменклатураКомплектующие.Номенклатура КАК Номенклатура,
	|	НоменклатураКомплектующие.Количество КАК КоличествоВКомплекте
	|ПОМЕСТИТЬ ВТ_КоличествоВКомплекте
	|ИЗ
	|	Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	|;
	//---АСТБ_Горюшин_Алексей_49316
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабВыдачиСотрудников.Сотрудник КАК Сотрудник,
	|	ТабВыдачиСотрудников.НоменклатураНормы КАК НоменклатураНормы,
	|	ТабВыдачиСотрудников.Номенклатура КАК Номенклатура,
	|	ТабВыдачиСотрудников.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ТабВыдачиСотрудников.Комплект КАК Комплект,
	//---АСТБ_Горюшин_Алексей_49316
	|	ТабВыдачиСотрудников.НачалоПериода КАК НачалоПериода,
	|	ТабВыдачиСотрудников.КонецПериода КАК КонецПериода
	|ПОМЕСТИТЬ ВТ_ТабВыдачиСотрудников
	|ИЗ
	|	&ТабВыдачиСотрудников КАК ТабВыдачиСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабНеПодобрано.Организация КАК Организация,
	|	ТабНеПодобрано.Сотрудник КАК Сотрудник,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ТабНеПодобрано.Комплект КАК Комплект,
	//---АСТБ_Горюшин_Алексей_49316
	|	ТабНеПодобрано.НоменклатураНормы КАК НоменклатураНормы,
	|	ТабНеПодобрано.НачалоПериода КАК НачалоПериода,
	|	ТабНеПодобрано.КонецПериода КАК КонецПериода,
	|	ТабНеПодобрано.Количество КАК Количество,
	|	ТабНеПодобрано.Номенклатура КАК Номенклатура,
	|	ТабНеПодобрано.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_НеПодобрано
	|ИЗ
	|	&ТабНеПодобрано КАК ТабНеПодобрано
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабНеПодобрано.Организация КАК Организация,
	|	ТабНеПодобрано.Сотрудник КАК Сотрудник,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ТабНеПодобрано.Комплект КАК Комплект,
	//---АСТБ_Горюшин_Алексей_49316
	|	ТабНеПодобрано.НоменклатураНормы КАК НоменклатураНормы,
	|	ТабНеПодобрано.НачалоПериода КАК НачалоПериода,
	|	ТабНеПодобрано.КонецПериода КАК КонецПериода,
	|	ТабНеПодобрано.Количество КАК Количество,
	|	ТабНеПодобрано.Номенклатура КАК Номенклатура,
	|	ТабНеПодобрано.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_НеПодобраноСПовторами
	|ИЗ
	|	&ТабНеПодобрано КАК ТабНеПодобрано
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НеПодобраноСПовторами.Организация КАК Организация,
	|	ВТ_НеПодобраноСПовторами.Сотрудник КАК Сотрудник,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ВТ_НеПодобраноСПовторами.Комплект КАК Комплект,
	//---АСТБ_Горюшин_Алексей_49316
	|	ВТ_НеПодобраноСПовторами.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_НеПодобраноСПовторами.НачалоПериода КАК НачалоПериода,
	|	ВТ_НеПодобраноСПовторами.КонецПериода КАК КонецПериода,
	|	СУММА(ВТ_НеПодобраноСПовторами.Количество) КАК Количество,
	|	ВТ_НеПодобраноСПовторами.Номенклатура КАК Номенклатура,
	|	ВТ_НеПодобраноСПовторами.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(1) КАК КоличествоПовторов
	|ПОМЕСТИТЬ ВТ_НеПодобраноСПовторами_СуммаКоличества
	|ИЗ
	|	ВТ_НеПодобраноСПовторами КАК ВТ_НеПодобраноСПовторами
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НеПодобраноСПовторами.Организация,
	|	ВТ_НеПодобраноСПовторами.Сотрудник,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ВТ_НеПодобраноСПовторами.Комплект,
	//---АСТБ_Горюшин_Алексей_49316
	|	ВТ_НеПодобраноСПовторами.НоменклатураНормы,
	|	ВТ_НеПодобраноСПовторами.НачалоПериода,
	|	ВТ_НеПодобраноСПовторами.КонецПериода,
	|	ВТ_НеПодобраноСПовторами.Номенклатура,
	|	ВТ_НеПодобраноСПовторами.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТабВыдачиСотрудников.Сотрудник КАК Сотрудник,
	|	ВТ_ТабВыдачиСотрудников.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_Номенклатура.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ВТ_ТабВыдачиСотрудников.Комплект КАК Комплект,
	//---АСТБ_Горюшин_Алексей_49316
	|	ВТ_ТабВыдачиСотрудников.НачалоПериода КАК НачалоПериода,
	|	ВТ_ТабВыдачиСотрудников.КонецПериода КАК КонецПериода
	//+++АСТБ_Горюшин_Алексей_49316
	|ПОМЕСТИТЬ ВТ_ТабВыдачиСотрудников_ДляДополнения
	//---АСТБ_Горюшин_Алексей_49316
	|ИЗ
	|	ВТ_ТабВыдачиСотрудников КАК ВТ_ТабВыдачиСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО ВТ_ТабВыдачиСотрудников.Номенклатура = ВТ_Номенклатура.Номенклатура
	|			И ВТ_ТабВыдачиСотрудников.ХарактеристикаНоменклатуры = ВТ_Номенклатура.ХарактеристикаНоменклатуры
	|ГДЕ
	|	НЕ ВТ_Номенклатура.Номенклатура.НеИспользоватьПриФормированииЗаказовПоставщику
	|;
	//+++АСТБ_Горюшин_Алексей_49316
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТабВыдачиСотрудников_ДляДополнения.Сотрудник КАК Сотрудник,
	|	ВТ_ТабВыдачиСотрудников_ДляДополнения.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ТабВыдачиСотрудников_ДляДополнения.Номенклатура КАК Номенклатура,
	|	ВТ_ТабВыдачиСотрудников_ДляДополнения.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТабВыдачиСотрудников_ДляДополнения.Комплект КАК Комплект,
	|	ЕСТЬNULL(ВТ_СоответствиеХарактеристикКомплектаИКомплектующего.ХарактеристикаКомплекта, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаКомплекта,
	|	ВТ_КоличествоВКомплекте.КоличествоВКомплекте КАК КоличествоВКомплекте,
	|	ВТ_ТабВыдачиСотрудников_ДляДополнения.НачалоПериода КАК НачалоПериода,
	|	ВТ_ТабВыдачиСотрудников_ДляДополнения.КонецПериода КАК КонецПериода
	|ИЗ
	|	ВТ_ТабВыдачиСотрудников_ДляДополнения КАК ВТ_ТабВыдачиСотрудников_ДляДополнения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоответствиеХарактеристикКомплектаИКомплектующего КАК ВТ_СоответствиеХарактеристикКомплектаИКомплектующего
	|		ПО ВТ_ТабВыдачиСотрудников_ДляДополнения.Номенклатура = ВТ_СоответствиеХарактеристикКомплектаИКомплектующего.Номенклатура
	|			И ВТ_ТабВыдачиСотрудников_ДляДополнения.ХарактеристикаНоменклатуры = ВТ_СоответствиеХарактеристикКомплектаИКомплектующего.ХарактеристикаНоменклатуры
	|			И ВТ_ТабВыдачиСотрудников_ДляДополнения.Комплект = ВТ_СоответствиеХарактеристикКомплектаИКомплектующего.Комплект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоВКомплекте КАК ВТ_КоличествоВКомплекте
	|		ПО ВТ_ТабВыдачиСотрудников_ДляДополнения.Номенклатура = ВТ_КоличествоВКомплекте.Номенклатура
	|			И ВТ_ТабВыдачиСотрудников_ДляДополнения.Комплект = ВТ_КоличествоВКомплекте.Комплект
	|;
	//---АСТБ_Горюшин_Алексей_49316
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НеПодобрано.Организация КАК Организация,
	|	ВТ_НеПодобрано.Сотрудник КАК Сотрудник,
	|	ВТ_НеПодобрано.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_НеПодобрано.НачалоПериода КАК НачалоПериода,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ВТ_НеПодобрано.Комплект КАК Комплект,
	//---АСТБ_Горюшин_Алексей_49316
	|	ЕСТЬNULL(ВТ_Номенклатура.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_Номенклатура.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ВТ_НеПодобраноСПовторами_СуммаКоличества.Количество, ВТ_НеПодобрано.Количество) КАК Требуется
	|ИЗ
	|	ВТ_НеПодобрано КАК ВТ_НеПодобрано
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО ВТ_НеПодобрано.Номенклатура = ВТ_Номенклатура.Номенклатура
	|			И ВТ_НеПодобрано.ХарактеристикаНоменклатуры = ВТ_Номенклатура.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НеПодобраноСПовторами_СуммаКоличества КАК ВТ_НеПодобраноСПовторами_СуммаКоличества
	|		ПО ВТ_НеПодобрано.Номенклатура = ВТ_НеПодобраноСПовторами_СуммаКоличества.Номенклатура
	|			И ВТ_НеПодобрано.ХарактеристикаНоменклатуры = ВТ_НеПодобраноСПовторами_СуммаКоличества.ХарактеристикаНоменклатуры
	|			И ВТ_НеПодобрано.НоменклатураНормы = ВТ_НеПодобраноСПовторами_СуммаКоличества.НоменклатураНормы
	|			И ВТ_НеПодобрано.Организация = ВТ_НеПодобраноСПовторами_СуммаКоличества.Организация
	|			И ВТ_НеПодобрано.Сотрудник = ВТ_НеПодобраноСПовторами_СуммаКоличества.Сотрудник
	//+++АСТБ_Горюшин_Алексей_49316
	|			И ВТ_НеПодобрано.Комплект = ВТ_НеПодобраноСПовторами_СуммаКоличества.Комплект
	//---АСТБ_Горюшин_Алексей_49316
	|			И ВТ_НеПодобрано.НачалоПериода = ВТ_НеПодобраноСПовторами_СуммаКоличества.НачалоПериода
	|			И ВТ_НеПодобрано.КонецПериода = ВТ_НеПодобраноСПовторами_СуммаКоличества.КонецПериода
	|			И ВТ_НеПодобраноСПовторами_СуммаКоличества.КоличествоПовторов > 1";
	//было
	//"ВЫБРАТЬ
	//|	Номенклатура.Ссылка КАК Номенклатура,
	//|	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры
	//|ПОМЕСТИТЬ ВТ_Номенклатура
	//|ИЗ
	//|	Справочник.Номенклатура КАК Номенклатура
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	//|		ПО Номенклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	//|ГДЕ
	//|	НЕ Номенклатура.ЭтоГруппа
	//|	И Номенклатура.Поставщик В(&МассивПоставщиков)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ТабВыдачиСотрудников.Сотрудник КАК Сотрудник,
	//|	ТабВыдачиСотрудников.НоменклатураНормы КАК НоменклатураНормы,
	//|	ТабВыдачиСотрудников.Номенклатура КАК Номенклатура,
	//|	ТабВыдачиСотрудников.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	ТабВыдачиСотрудников.НачалоПериода КАК НачалоПериода,
	//|	ТабВыдачиСотрудников.КонецПериода КАК КонецПериода
	//|ПОМЕСТИТЬ ВТ_ТабВыдачиСотрудников
	//|ИЗ
	//|	&ТабВыдачиСотрудников КАК ТабВыдачиСотрудников
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ТабНеПодобрано.Организация КАК Организация,
	//|	ТабНеПодобрано.Сотрудник КАК Сотрудник,
	//|	ТабНеПодобрано.НоменклатураНормы КАК НоменклатураНормы,
	//|	ТабНеПодобрано.НачалоПериода КАК НачалоПериода,
	//|	ТабНеПодобрано.КонецПериода КАК КонецПериода,
	//|	ТабНеПодобрано.Количество КАК Количество,
	//|	ТабНеПодобрано.Номенклатура КАК Номенклатура,
	//|	ТабНеПодобрано.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	//|ПОМЕСТИТЬ ВТ_НеПодобрано
	//|ИЗ
	//|	&ТабНеПодобрано КАК ТабНеПодобрано
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ТабВыдачиСотрудников.Сотрудник КАК Сотрудник,
	//|	ВТ_ТабВыдачиСотрудников.НоменклатураНормы КАК НоменклатураНормы,
	//|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	//|	ВТ_Номенклатура.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//|	ВТ_ТабВыдачиСотрудников.НачалоПериода КАК НачалоПериода,
	//|	ВТ_ТабВыдачиСотрудников.КонецПериода КАК КонецПериода
	//|ИЗ
	//|	ВТ_ТабВыдачиСотрудников КАК ВТ_ТабВыдачиСотрудников
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	//|		ПО ВТ_ТабВыдачиСотрудников.Номенклатура = ВТ_Номенклатура.Номенклатура
	//|			И ВТ_ТабВыдачиСотрудников.ХарактеристикаНоменклатуры = ВТ_Номенклатура.ХарактеристикаНоменклатуры
	//|ГДЕ
	//|	НЕ ВТ_Номенклатура.Номенклатура.НеИспользоватьПриФормированииЗаказовПоставщику
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_НеПодобрано.Организация КАК Организация,
	//|	ВТ_НеПодобрано.Сотрудник КАК Сотрудник,
	//|	ВТ_НеПодобрано.НоменклатураНормы КАК НоменклатураНормы,
	//|	ВТ_НеПодобрано.НачалоПериода КАК НачалоПериода,
	//|	ЕСТЬNULL(ВТ_Номенклатура.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	//|	ЕСТЬNULL(ВТ_Номенклатура.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
	//|	ВТ_НеПодобрано.Количество КАК Требуется
	//|ИЗ
	//|	ВТ_НеПодобрано КАК ВТ_НеПодобрано
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	//|		ПО ВТ_НеПодобрано.Номенклатура = ВТ_Номенклатура.Номенклатура
	//|			И ВТ_НеПодобрано.ХарактеристикаНоменклатуры = ВТ_Номенклатура.ХарактеристикаНоменклатуры";
	//---АСТБ_Горюшин_Алексей_26451
	
	Запрос.УстановитьПараметр("ТабВыдачиСотрудников",	ТабВыдачиСотрудников);
	Запрос.УстановитьПараметр("ТабНеПодобрано",			ТабНеПодобрано);
	Запрос.УстановитьПараметр("МассивПоставщиков",		МассивПоставщиков);
	
	Результат = Запрос.ВыполнитьПакет();
	
	//+++АСТБ_Горюшин_Алексей_26451
	//---АСТБ_Горюшин_Алексей_49316
	ТабВыдачиСотрудников    = Результат[8].Выгрузить();
	ТабНеПодобрано 			= Результат[9].Выгрузить();
	//было
	//ТабВыдачиСотрудников    = Результат[5].Выгрузить();
	//ТабНеПодобрано 			= Результат[6].Выгрузить();
	//---АСТБ_Горюшин_Алексей_49316
	//было
	//ТабВыдачиСотрудников    = Результат[3].Выгрузить();
	//ТабНеПодобрано 			= Результат[4].Выгрузить();
	//---АСТБ_Горюшин_Алексей_26451
	
	Для Каждого СтрокаТабНеПодобрано Из ТабНеПодобрано Цикл
		
		//+++АСТБ_Горюшин_Алексей_16843
		//+++АСТБ_Горюшин_Алексей_49316
		СтруктураПоиска = Новый Структура("Сотрудник,НоменклатураНормы,НачалоПериода,Номенклатура,Комплект",
										  СтрокаТабНеПодобрано.Сотрудник,
										  СтрокаТабНеПодобрано.НоменклатураНормы,
										  СтрокаТабНеПодобрано.НачалоПериода,
										  СтрокаТабНеПодобрано.Номенклатура,
										  СтрокаТабНеПодобрано.Комплект);
		//было								  
		//СтруктураПоиска = Новый Структура("Сотрудник,НоменклатураНормы,НачалоПериода,Номенклатура",
		//								  СтрокаТабНеПодобрано.Сотрудник,
		//								  СтрокаТабНеПодобрано.НоменклатураНормы,
		//								  СтрокаТабНеПодобрано.НачалоПериода,
		//								  СтрокаТабНеПодобрано.Номенклатура);
		//---АСТБ_Горюшин_Алексей_49316								  
		//было
		//СтруктураПоиска = Новый Структура("Сотрудник,НоменклатураНормы,НачалоПериода",СтрокаТабНеПодобрано.Сотрудник,СтрокаТабНеПодобрано.НоменклатураНормы,СтрокаТабНеПодобрано.НачалоПериода);
		//---АСТБ_Горюшин_Алексей_16843
		
		НайденныеСтроки = ТабВыдачиСотрудников.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока 			= ТаблицаДляЗаказов.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденныеСтроки[0]);
		НоваяСтрока.Организация = СтрокаТабНеПодобрано.Сотрудник.Владелец;
		НоваяСтрока.Требуется 	= СтрокаТабНеПодобрано.Требуется;
		
	КонецЦикла;
	
	//+++АСТБ_Горюшин_Алексей_49316
	ТаблицаДляЗаказов.Свернуть("Организация,Номенклатура,ХарактеристикаНоменклатуры,НачалоПериода,Комплект,ХарактеристикаКомплекта,КоличествоВКомплекте","Требуется");
	//было
	//ТаблицаДляЗаказов.Свернуть("Организация,Номенклатура,ХарактеристикаНоменклатуры,НачалоПериода","Требуется");
	//---АСТБ_Горюшин_Алексей_49316
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДляЗаказов.Организация КАК Организация,
	|	ТаблицаДляЗаказов.Номенклатура КАК Номенклатура,
	|	ТаблицаДляЗаказов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ТаблицаДляЗаказов.Комплект КАК Комплект,
	|	ТаблицаДляЗаказов.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
	|	ТаблицаДляЗаказов.КоличествоВКомплекте КАК КоличествоВКомплекте,
	//---АСТБ_Горюшин_Алексей_49316
	|	НАЧАЛОПЕРИОДА(ТаблицаДляЗаказов.НачалоПериода, МЕСЯЦ) КАК НачалоПериода,
	|	ТаблицаДляЗаказов.Требуется КАК Требуется
	|ПОМЕСТИТЬ ВТ_ТаблицаДляЗаказов
	|ИЗ
	|	&ТаблицаДляЗаказов КАК ТаблицаДляЗаказов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыПоставщикуОстатки.Организация КАК Организация,
	|	ЗаказыПоставщикуОстатки.Номенклатура КАК Номенклатура,
	|	ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	НАЧАЛОПЕРИОДА(ЗаказыПоставщикуОстатки.ЗаказПоставщику.НачалоПериодаВыдачи, МЕСЯЦ) КАК НачалоПериода,
	|	СУММА(ЗаказыПоставщикуОстатки.КоличествоОстаток) КАК Заказано
	|ПОМЕСТИТЬ ВТ_Заказы
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщику.Остатки(
	|			&ДатаАнализа,
	|			Склад = &Склад
	|				И (Организация = &Организация
	|					ИЛИ &НеУчитыватьОстаткиПоОрганизации)) КАК ЗаказыПоставщикуОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыПоставщикуОстатки.Организация,
	|	ЗаказыПоставщикуОстатки.Номенклатура,
	|	ЗаказыПоставщикуОстатки.ХарактеристикаНоменклатуры,
	|	НАЧАЛОПЕРИОДА(ЗаказыПоставщикуОстатки.ЗаказПоставщику.НачалоПериодаВыдачи, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КраснаяЛиния.Организация КАК Организация,
	|	КраснаяЛиния.Номенклатура КАК Номенклатура,
	|	КраснаяЛиния.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(КраснаяЛиния.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_КраснаяЛиния
	|ИЗ
	|	РегистрСведений.КраснаяЛиния КАК КраснаяЛиния
	|ГДЕ
	|	(КраснаяЛиния.Организация = &Организация
	|			ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|
	|СГРУППИРОВАТЬ ПО
	|	КраснаяЛиния.Организация,
	|	КраснаяЛиния.Номенклатура,
	|	КраснаяЛиния.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаДляЗаказов.Организация КАК Организация,
	|	ВТ_ТаблицаДляЗаказов.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаДляЗаказов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаДляЗаказов.НачалоПериода КАК НачалоПериода,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ВТ_ТаблицаДляЗаказов.Комплект КАК Комплект,
	|	ВТ_ТаблицаДляЗаказов.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
	|	ВТ_ТаблицаДляЗаказов.КоличествоВКомплекте КАК КоличествоВКомплекте,
	//---АСТБ_Горюшин_Алексей_49316
	|	СУММА(ВТ_ТаблицаДляЗаказов.Требуется) КАК Требуется,
	|	СУММА(ЕСТЬNULL(ВТ_Заказы.Заказано, 0)) КАК Заказано,
	|	СУММА(ЕСТЬNULL(ВТ_КраснаяЛиния.Количество, 0)) КАК КраснаяЛиния
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	ВТ_ТаблицаДляЗаказов КАК ВТ_ТаблицаДляЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
	|		ПО ВТ_ТаблицаДляЗаказов.Номенклатура = ВТ_Заказы.Номенклатура
	|			И ВТ_ТаблицаДляЗаказов.ХарактеристикаНоменклатуры = ВТ_Заказы.ХарактеристикаНоменклатуры
	|			И ВТ_ТаблицаДляЗаказов.НачалоПериода = ВТ_Заказы.НачалоПериода
	|			И ВТ_ТаблицаДляЗаказов.Организация = ВТ_Заказы.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КраснаяЛиния КАК ВТ_КраснаяЛиния
	|		ПО ВТ_ТаблицаДляЗаказов.Номенклатура = ВТ_КраснаяЛиния.Номенклатура
	|			И ВТ_ТаблицаДляЗаказов.ХарактеристикаНоменклатуры = ВТ_КраснаяЛиния.ХарактеристикаНоменклатуры
	|			И ВТ_ТаблицаДляЗаказов.Организация = ВТ_КраснаяЛиния.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаДляЗаказов.Номенклатура,
	|	ВТ_ТаблицаДляЗаказов.ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаДляЗаказов.НачалоПериода,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ВТ_ТаблицаДляЗаказов.Комплект,
	|	ВТ_ТаблицаДляЗаказов.ХарактеристикаКомплекта,
	|	ВТ_ТаблицаДляЗаказов.КоличествоВКомплекте,
	//---АСТБ_Горюшин_Алексей_49316
	|	ВТ_ТаблицаДляЗаказов.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Результат.Организация КАК Организация,
	|	ВТ_Результат.Номенклатура КАК Номенклатура,
	|	ВТ_Результат.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ВТ_Результат.Комплект КАК Комплект,
	|	ВТ_Результат.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
	|	ВТ_Результат.КоличествоВКомплекте КАК КоличествоВКомплекте,
	//---АСТБ_Горюшин_Алексей_49316
	|	ВТ_Результат.НачалоПериода КАК НачалоПериода,
	|	ВТ_Результат.Требуется КАК Требуется,
	|	ВТ_Результат.Заказано КАК Заказано,
	|	ВТ_Результат.КраснаяЛиния КАК КраснаяЛиния
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО ВТ_Результат.Номенклатура = ВТ_Номенклатура.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Номенклатура.Ссылка.Наименование,
	|	ХарактеристикаНоменклатуры,
	|	НачалоПериода
	|ИТОГИ
	|	СУММА(Требуется),
	|	СУММА(Заказано),
	//+++АСТБ_Горюшин_Алексей_49316
	|	МАКСИМУМ(Комплект),
	|	МАКСИМУМ(ХарактеристикаКомплекта),
	|	МАКСИМУМ(КоличествоВКомплекте),
	//---АСТБ_Горюшин_Алексей_49316
	|	МАКСИМУМ(КраснаяЛиния)
	|ПО
	|	Организация,
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры,
	|	НачалоПериода";
	
	Запрос.УстановитьПараметр("ТаблицаДляЗаказов",				ТаблицаДляЗаказов);
	Запрос.УстановитьПараметр("Организация",					Объект.Организация);
	Запрос.УстановитьПараметр("Склад",							Объект.СкладПоступления);
	Запрос.УстановитьПараметр("ДатаАнализа",					Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",НеУчитыватьОстаткиПоОрганизации);
	
	ДеревоДляЗагрузкиВФорму = РеквизитФормыВЗначение("Дерево_ЗаказыПоставщику");
	ДеревоДляЗагрузкиВФорму.Строки.Очистить();
	
	ВыборкаПоОрганизации = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоОрганизации.Следующий() Цикл
		
		СтрокаДереваФормыОрганизация = ДеревоДляЗагрузкиВФорму.Строки.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаДереваФормыОрганизация,ВыборкаПоОрганизации);
		
		СтрокаДереваФормыОрганизация.Представление = СокрЛП(ВыборкаПоОрганизации.Организация.Наименование);
		
		//+++АСТБ_Горюшин_Алексей_49316
		СтрокаДереваФормыОрганизация.Комплект = Справочники.Номенклатура.ПустаяСсылка();
		СтрокаДереваФормыОрганизация.ХарактеристикаКомплекта = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		СтрокаДереваФормыОрганизация.КоличествоВКомплекте = 0;
		//---АСТБ_Горюшин_Алексей_49316
		
		ВыборкаПоНоменклатуре = ВыборкаПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоНоменклатуре.Следующий() Цикл
			
			СтрокаДереваФормыНоменклатура = СтрокаДереваФормыОрганизация.Строки.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаДереваФормыНоменклатура,ВыборкаПоНоменклатуре);
			
			СтрокаДереваФормыНоменклатура.Представление = СокрЛП(ВыборкаПоНоменклатуре.Номенклатура.Наименование);
			//+++АСТБ_Горюшин_Алексей_42504
			//было
			//СтрокаДереваФормыНоменклатура.Заказать = ВыборкаПоНоменклатуре.КраснаяЛиния + ВыборкаПоНоменклатуре.Требуется - ВыборкаПоНоменклатуре.Заказано;
			//---АСТБ_Горюшин_Алексей_42504
			
			//+++АСТБ_Горюшин_Алексей_49316
			СтрокаДереваФормыНоменклатура.Комплект = Справочники.Номенклатура.ПустаяСсылка();
			СтрокаДереваФормыНоменклатура.ХарактеристикаКомплекта = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
			СтрокаДереваФормыНоменклатура.КоличествоВКомплекте = 0;
			//---АСТБ_Горюшин_Алексей_49316
		
			ВыборкаПоХарактеристике = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоХарактеристике.Следующий() Цикл
				
				СтрокаДереваФормыХарактеристика = СтрокаДереваФормыНоменклатура.Строки.Добавить();
				
				ЗаполнитьЗначенияСвойств(СтрокаДереваФормыХарактеристика,ВыборкаПоХарактеристике);
				
				СтрокаДереваФормыХарактеристика.Представление = ?(ЗначениеЗаполнено(ВыборкаПоХарактеристике.ХарактеристикаНоменклатуры),"Размер: " + СокрЛП(ВыборкаПоХарактеристике.ХарактеристикаНоменклатуры.Наименование),"Без размера");
				//+++АСТБ_Горюшин_Алексей_42504
				//было
				//СтрокаДереваФормыХарактеристика.Заказать = ВыборкаПоХарактеристике.КраснаяЛиния + ВыборкаПоХарактеристике.Требуется - ВыборкаПоХарактеристике.Заказано;
				//---АСТБ_Горюшин_Алексей_42504
				КраснаяЛинияУчтена = Ложь;
				
				ВыборкаПоПериоду = ВыборкаПоХарактеристике.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоПериоду.Следующий() Цикл
					
					СтрокаДереваФормыПериод = СтрокаДереваФормыХарактеристика.Строки.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДереваФормыПериод,ВыборкаПоПериоду);
					СтрокаДереваФормыПериод.Представление = ПредставлениеПериода(ВыборкаПоПериоду.НачалоПериода,КонецМесяца(ВыборкаПоПериоду.НачалоПериода));
					
					Если НЕ КраснаяЛинияУчтена Тогда
						
						СтрокаДереваФормыПериод.Заказать = ВыборкаПоПериоду.КраснаяЛиния + ВыборкаПоПериоду.Требуется - ВыборкаПоПериоду.Заказано;
						
						КраснаяЛинияУчтена = Истина;
						
					Иначе
						
						СтрокаДереваФормыПериод.Заказать 		= ВыборкаПоПериоду.Требуется - ВыборкаПоПериоду.Заказано;
						СтрокаДереваФормыПериод.КраснаяЛиния 	= 0;
						
					КонецЕсли;
					
					//+++АСТБ_Горюшин_Алексей_42504
					СтрокаДереваФормыОрганизация.Заказать	= СтрокаДереваФормыОрганизация.Заказать + СтрокаДереваФормыПериод.Заказать;
					СтрокаДереваФормыНоменклатура.Заказать  = СтрокаДереваФормыНоменклатура.Заказать + СтрокаДереваФормыПериод.Заказать;
					СтрокаДереваФормыХарактеристика.Заказать= СтрокаДереваФормыХарактеристика.Заказать + СтрокаДереваФормыПериод.Заказать;
					//---АСТБ_Горюшин_Алексей_42504
					
					//+++АСТБ_Горюшин_Алексей_49316
					СтрокаДереваФормыПериод.Комплект = Справочники.Номенклатура.ПустаяСсылка();
					СтрокаДереваФормыПериод.ХарактеристикаКомплекта = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
					СтрокаДереваФормыПериод.КоличествоВКомплекте = 0;
					//---АСТБ_Горюшин_Алексей_49316
			
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

	ЗначениеВРеквизитФормы(ДеревоДляЗагрузкиВФорму,"Дерево_ЗаказыПоставщику");
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьАнализДляФормированияЗаказовПоставщику(Команда)
	
	ВыполнитьАнализДляФормированияЗаказовПоставщикуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаказыПоставщикуНаСервере()

	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	ДеревоДляЗаказов = РеквизитФормыВЗначение("Дерево_ЗаказыПоставщику");
	
	ТаблицаДляФормированияДокументов = Новый ТаблицаЗначений;
	ТаблицаДляФормированияДокументов.Колонки.Добавить("Организация",				Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("Склад",						Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("НачалоПериодаВыдачи",		Новый ОписаниеТипов("Дата"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("КонецПериодаВыдачи",			Новый ОписаниеТипов("Дата"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("Поставщик",					Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("Номенклатура",				Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("ХарактеристикаНоменклатуры",	Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("Количество",					Новый ОписаниеТипов("Число"));
	//+++АСТБ_Горюшин_Алексей_49316
	ТаблицаДляФормированияДокументов.Колонки.Добавить("Комплект",					Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("ХарактеристикаКомплекта",	Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("КоличествоВКомплекте",		Новый ОписаниеТипов("Число"));
	//---АСТБ_Горюшин_Алексей_49316
	
	Для Каждого СтрокаОрганизации Из ДеревоДляЗаказов.Строки Цикл
		
		Для Каждого СтрокаНоменклатуры Из СтрокаОрганизации.Строки Цикл
			
			Для Каждого СтрокаХарактеристики Из СтрокаНоменклатуры.Строки Цикл
				
				Для Каждого СтрокаМесяца Из СтрокаХарактеристики.Строки Цикл
					
					Если НЕ СтрокаМесяца.Заказать = 0 Тогда
						
						НоваяСтрока 							= ТаблицаДляФормированияДокументов.Добавить();
						НоваяСтрока.Организация 				= СтрокаОрганизации.Организация;
						НоваяСтрока.Склад 						= Объект.СкладПоступления;
						НоваяСтрока.НачалоПериодаВыдачи 		= СтрокаМесяца.НачалоПериода;
						НоваяСтрока.КонецПериодаВыдачи 			= КонецМесяца(СтрокаМесяца.НачалоПериода);
						НоваяСтрока.Поставщик 					= СтрокаНоменклатуры.Номенклатура.Поставщик;
						НоваяСтрока.Номенклатура 				= СтрокаНоменклатуры.Номенклатура;
						НоваяСтрока.ХарактеристикаНоменклатуры 	= СтрокаХарактеристики.ХарактеристикаНоменклатуры;
						НоваяСтрока.Количество 					= СтрокаМесяца.Заказать;
						//+++АСТБ_Горюшин_Алексей_49316
						//пока не нужно, может потом пригодится
						//НоваяСтрока.Комплект 					= СтрокаХарактеристики.Комплект;
						//НоваяСтрока.ХарактеристикаКомплекта 	= СтрокаХарактеристики.ХарактеристикаКомплекта;
						//НоваяСтрока.КоличествоВКомплекте 		= СтрокаХарактеристики.КоличествоВКомплекте;
						//---АСТБ_Горюшин_Алексей_49316
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

	Если ТаблицаДляФормированияДокументов.Количество() = 0 Тогда
		Сообщить("Формирование заказов поставщику не требуется.");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаДляФормированияДокументов.Организация КАК Организация,
	|	ТаблицаДляФормированияДокументов.Склад КАК Склад,
	|	ТаблицаДляФормированияДокументов.НачалоПериодаВыдачи КАК НачалоПериодаВыдачи,
	|	ТаблицаДляФормированияДокументов.КонецПериодаВыдачи КАК КонецПериодаВыдачи,
	|	ТаблицаДляФормированияДокументов.Номенклатура КАК Номенклатура,
	|	ТаблицаДляФормированияДокументов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ТаблицаДляФормированияДокументов.Комплект КАК Комплект,
	|	ТаблицаДляФормированияДокументов.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
	|	ТаблицаДляФормированияДокументов.КоличествоВКомплекте КАК КоличествоВКомплекте,
	//---АСТБ_Горюшин_Алексей_49316
	|	ТаблицаДляФормированияДокументов.Количество КАК Количество,
	|	ТаблицаДляФормированияДокументов.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ ТаблицаДляФормированияДокументов
	|ИЗ
	|	&ТаблицаДляФормированияДокументов КАК ТаблицаДляФормированияДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаДляФормированияДокументов.Организация КАК Организация,
	|	ТаблицаДляФормированияДокументов.Склад КАК Склад,
	|	ТаблицаДляФормированияДокументов.НачалоПериодаВыдачи КАК НачалоПериодаВыдачи,
	|	ТаблицаДляФормированияДокументов.КонецПериодаВыдачи КАК КонецПериодаВыдачи,
	|	ТаблицаДляФормированияДокументов.Номенклатура КАК Номенклатура,
	|	ТаблицаДляФормированияДокументов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	//+++АСТБ_Горюшин_Алексей_49316
	|	ТаблицаДляФормированияДокументов.Комплект КАК Комплект,
	|	ТаблицаДляФормированияДокументов.ХарактеристикаКомплекта КАК ХарактеристикаКомплекта,
	|	ТаблицаДляФормированияДокументов.КоличествоВКомплекте КАК КоличествоВКомплекте,
	//---АСТБ_Горюшин_Алексей_49316
	|	ТаблицаДляФормированияДокументов.Количество КАК Количество,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * ТаблицаДляФормированияДокументов.Количество КАК Сумма,
	//+++АСТБ_Горюшин_Алексей_42504
	|	1 КАК КоличествоПовторовСтрок,
	//---АСТБ_Горюшин_Алексей_42504
	|	ТаблицаДляФормированияДокументов.Поставщик КАК Поставщик
	|ИЗ
	|	ТаблицаДляФормированияДокументов КАК ТаблицаДляФормированияДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|			МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|			ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик,
	|			ЦеныНоменклатурыСрезПоследних.Организация КАК Организация
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&Период,
	|					Организация = &Организация
	|						ИЛИ &НеУчитыватьОстаткиПоОрганизации) КАК ЦеныНоменклатурыСрезПоследних
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|			ЦеныНоменклатурыСрезПоследних.Поставщик,
	|			ЦеныНоменклатурыСрезПоследних.Организация) КАК ЦеныНоменклатуры
	|		ПО ТаблицаДляФормированияДокументов.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ТаблицаДляФормированияДокументов.Поставщик = ЦеныНоменклатуры.Поставщик
	|			И ТаблицаДляФормированияДокументов.Организация = ЦеныНоменклатуры.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Склад,
	|	НачалоПериодаВыдачи";
	
	Запрос.УстановитьПараметр("ТаблицаДляФормированияДокументов",	ТаблицаДляФормированияДокументов);
	Запрос.УстановитьПараметр("Период",								Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("Организация",						Объект.Организация);
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",	НеУчитыватьОстаткиПоОрганизации);
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаДляФормированияДокументов = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	СвернутаяТаблица = ТаблицаДляФормированияДокументов.Скопировать();
	//+++АСТБ_Горюшин_Алексей_43178
	Если Объект.ОдинЗаказ Тогда
		СвернутаяТаблица.Свернуть("Организация,Поставщик");
		//+++АСТБ_Горюшин_Алексей_42504
		ТаблицаДляЗаполненияТЧ = ТаблицаДляФормированияДокументов.Скопировать();
		//+++АСТБ_Горюшин_Алексей_49316
		ТаблицаДляЗаполненияТЧ.Свернуть("Организация,Поставщик,Номенклатура,ХарактеристикаНоменклатуры,Комплект,ХарактеристикаКомплекта,КоличествоВКомплекте","Количество,Цена,Сумма,КоличествоПовторовСтрок");
		//было
		//ТаблицаДляЗаполненияТЧ.Свернуть("Организация,Поставщик,Номенклатура,ХарактеристикаНоменклатуры","Количество,Цена,Сумма,КоличествоПовторовСтрок");
		//---АСТБ_Горюшин_Алексей_49316
		ТаблицаДляЗаполненияТЧ.Сортировать("Номенклатура,ХарактеристикаНоменклатуры");
		//---АСТБ_Горюшин_Алексей_42504
	Иначе	
	//---АСТБ_Горюшин_Алексей_43178
	СвернутаяТаблица.Свернуть("Организация,Склад,Поставщик,НачалоПериодаВыдачи");
	//+++АСТБ_Горюшин_Алексей_43178
	КонецЕсли;
	//---АСТБ_Горюшин_Алексей_43178
	
	Для Каждого СтрокаСвернутойТаблицы Из СвернутаяТаблица Цикл
		
		//+++АСТБ_Горюшин_Алексей_43178
		Если Объект.ОдинЗаказ Тогда
			
			СтруктураПоискаДляПериода = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаСвернутойТаблицы);
			НайденныеСтрокиПериодов = ТаблицаДляФормированияДокументов.НайтиСтроки(СтруктураПоискаДляПериода);
			ТаблицаМаксМинПериодовВыдачи = ТаблицаДляФормированияДокументов.Скопировать(НайденныеСтрокиПериодов);
			ТаблицаМаксМинПериодовВыдачи.Свернуть("НачалоПериодаВыдачи");
			ТаблицаМаксМинПериодовВыдачи.Сортировать("НачалоПериодаВыдачи");
			МинПериод = ТаблицаМаксМинПериодовВыдачи[0].НачалоПериодаВыдачи;
			ТаблицаМаксМинПериодовВыдачи.Сортировать("НачалоПериодаВыдачи УБЫВ");
			МаксПериод = ТаблицаМаксМинПериодовВыдачи[0].НачалоПериодаВыдачи;
			
			НовыйДокумент 						= Документы.ЗаказПоставщику.СоздатьДокумент();
			НовыйДокумент.Дата 					= ТекущаяДата();
			НовыйДокумент.Организация 			= СтрокаСвернутойТаблицы.Организация;
			НовыйДокумент.Склад 				= Объект.СкладПоступления;
			НовыйДокумент.НачалоПериодаВыдачи 	= МинПериод;
			НовыйДокумент.КонецПериодаВыдачи 	= КонецМесяца(МаксПериод);
			НовыйДокумент.Поставщик 			= СтрокаСвернутойТаблицы.Поставщик;
			НовыйДокумент.Ответственный			= ПараметрыСеанса.ТекущийПользователь;
			НовыйДокумент.СоздательДокумента	= ПараметрыСеанса.ТекущийПользователь;
			
			//АсТБ_Alexey_56927_********************************************************************
			НовыйДокумент.СпособСоздания 		= Перечисления.СпособыСозданияЗаказовПоставщику.СформированФормированиемЗаказовПоставщику;
			//АсТБ_Alexey_56927*********************************************************************
			
		Иначе	
		//---АСТБ_Горюшин_Алексей_43178	
		
		НовыйДокумент 						= Документы.ЗаказПоставщику.СоздатьДокумент();
		НовыйДокумент.Дата 					= ТекущаяДата();
		НовыйДокумент.Организация 			= СтрокаСвернутойТаблицы.Организация;
		НовыйДокумент.Склад 				= СтрокаСвернутойТаблицы.Склад;
		НовыйДокумент.НачалоПериодаВыдачи 	= СтрокаСвернутойТаблицы.НачалоПериодаВыдачи;
		НовыйДокумент.КонецПериодаВыдачи 	= КонецМесяца(СтрокаСвернутойТаблицы.НачалоПериодаВыдачи);
		НовыйДокумент.Поставщик 			= СтрокаСвернутойТаблицы.Поставщик;
		НовыйДокумент.Ответственный			= ПараметрыСеанса.ТекущийПользователь;
		НовыйДокумент.СоздательДокумента	= ПараметрыСеанса.ТекущийПользователь;
		
		//АсТБ_Alexey_56927_********************************************************************
		НовыйДокумент.СпособСоздания 		= Перечисления.СпособыСозданияЗаказовПоставщику.СформированФормированиемЗаказовПоставщику;
		//АсТБ_Alexey_56927*********************************************************************
		
		//+++АСТБ_Горюшин_Алексей_43178
		КонецЕсли;
		//---АСТБ_Горюшин_Алексей_43178
		
		СтруктураПоиска = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаСвернутойТаблицы);
		
		//+++АСТБ_Горюшин_Алексей_42504
		Если Объект.ОдинЗаказ Тогда
			НайденныеСтроки = ТаблицаДляЗаполненияТЧ.НайтиСтроки(СтруктураПоиска);
		Иначе
		//---АСТБ_Горюшин_Алексей_42504
		НайденныеСтроки = ТаблицаДляФормированияДокументов.НайтиСтроки(СтруктураПоиска);
		//+++АСТБ_Горюшин_Алексей_42504
		КонецЕсли;
		//---АСТБ_Горюшин_Алексей_42504
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			НоваяСтрока = НовыйДокумент.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
			//+++АСТБ_Горюшин_Алексей_42504
			Если Объект.ОдинЗаказ Тогда
				НоваяСтрока.Цена = НоваяСтрока.Цена / НайденнаяСтрока.КоличествоПовторовСтрок;
				НоваяСтрока.Сумма = НоваяСтрока.Цена * НоваяСтрока.Количество;
			КонецЕсли;
			//---АСТБ_Горюшин_Алексей_43178
			
		КонецЦикла;
		
		НовыйДокумент.СуммаДокумента = НовыйДокумент.Товары.Итог("Сумма");
		НовыйДокумент.УстановитьНовыйНомер();
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.КлючДанных = НовыйДокумент.Ссылка;
		Сообщение.Текст = "Сформирован документ: " + НовыйДокумент.Ссылка;
		Сообщение.Сообщить();
		
	КонецЦикла;
	
	ДеревоДляЗагрузкиВФорму = РеквизитФормыВЗначение("Дерево_ЗаказыПоставщику");
	ДеревоДляЗагрузкиВФорму.Строки.Очистить();
	ЗначениеВРеквизитФормы(ДеревоДляЗагрузкиВФорму,"Дерево_ЗаказыПоставщику");
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗаказыПоставщику(Команда)
	
	СформироватьЗаказыПоставщикуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьФлажкиНаСервере(ЗначениеФлажка,ИмяТаблицыОбъекта)
	
	ТаблицаОбъекта = Объект[ИмяТаблицыОбъекта].Выгрузить();
	ТаблицаОбъекта.ЗаполнитьЗначения(ЗначениеФлажка,"Использовать");
	Объект[ИмяТаблицыОбъекта].Загрузить(ТаблицаОбъекта);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеМВЗ(Команда)
	
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаМВЗ");
	//+++АСТБ_Горюшин_Алексей_42504
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаМВЗ" Тогда
		ОбновитьОтборы("ТаблицаМВЗ");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//было
	//ЗаполнитьТаблицуСотрудников();
	//ЗаполнитьТаблицуНоменклатурыНормы();
	//---АСТБ_Горюшин_Алексей_42504
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеМВЗ(Команда)
	
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаМВЗ");
	//+++АСТБ_Горюшин_Алексей_42504
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаМВЗ" Тогда
		ОбновитьОтборы("ТаблицаМВЗ");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//было
	//ЗаполнитьТаблицуСотрудников();
	//ЗаполнитьТаблицуНоменклатурыНормы();
	//---АСТБ_Горюшин_Алексей_42504
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеСотрудников(Команда)
	
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаСотрудников");
	//+++АСТБ_Горюшин_Алексей_42504
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаСотрудников" Тогда
		ОбновитьОтборы("ТаблицаСотрудников");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//было
	//ЗаполнитьТаблицуНоменклатурыНормы();
	//---АСТБ_Горюшин_Алексей_42504
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеСотрудников(Команда)
	
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаСотрудников");
	//+++АСТБ_Горюшин_Алексей_42504
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаСотрудников" Тогда
		ОбновитьОтборы("ТаблицаСотрудников");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//было
	//ЗаполнитьТаблицуНоменклатурыНормы();
	//---АСТБ_Горюшин_Алексей_42504
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеНоменклатурыНормы(Команда)
	
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаНоменклатурыНормы");
	//+++АСТБ_Горюшин_Алексей_42504
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаНоменклатурыНормы" Тогда
		ОбновитьОтборы("ТаблицаНоменклатурыНормы");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//---АСТБ_Горюшин_Алексей_42504
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеНоменклатурыНормы(Команда)
	
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаНоменклатурыНормы");
	//+++АСТБ_Горюшин_Алексей_42504
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаНоменклатурыНормы" Тогда
		ОбновитьОтборы("ТаблицаНоменклатурыНормы");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//---АСТБ_Горюшин_Алексей_42504
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеВидовВыдачи(Команда)
	
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаВидовВыдачи");
	//+++АСТБ_Горюшин_Алексей_42504
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаВидовВыдачи" Тогда
		ОбновитьОтборы("ТаблицаВидовВыдачи");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//было
	//ЗаполнитьТаблицуСотрудников();
	//ЗаполнитьТаблицуНоменклатурыНормы();
	//---АСТБ_Горюшин_Алексей_42504
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеВидовВыдачи(Команда)
	
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаВидовВыдачи");
	//+++АСТБ_Горюшин_Алексей_42504
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаВидовВыдачи" Тогда
		ОбновитьОтборы("ТаблицаВидовВыдачи");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//было
	//ЗаполнитьТаблицуСотрудников();
	//ЗаполнитьТаблицуНоменклатурыНормы();
	//---АСТБ_Горюшин_Алексей_42504
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКорректировкуСоответствияНоменклатурыВыдачиНаСервере(НовыйДокумент)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабНеМожетБытьПодобрано.НоменклатураНормы,
	|	ТабНеМожетБытьПодобрано.Сотрудник
	|ПОМЕСТИТЬ ВТ_НеМожетБытьПодобрано
	|ИЗ
	|	&ТабНеМожетБытьПодобрано КАК ТабНеМожетБытьПодобрано
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабВыдачиСотрудников.Сотрудник,
	|	ТабВыдачиСотрудников.НоменклатураНормы,
	|	ТабВыдачиСотрудников.Номенклатура
	|ПОМЕСТИТЬ ВТ_ТабВыдачиСотрудников
	|ИЗ
	|	&ТабВыдачиСотрудников КАК ТабВыдачиСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_НеМожетБытьПодобрано.НоменклатураНормы
	|ИЗ
	|	ВТ_НеМожетБытьПодобрано КАК ВТ_НеМожетБытьПодобрано
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабВыдачиСотрудников КАК ВТ_ТабВыдачиСотрудников
	|		ПО ВТ_НеМожетБытьПодобрано.НоменклатураНормы = ВТ_ТабВыдачиСотрудников.НоменклатураНормы
	|			И ВТ_НеМожетБытьПодобрано.Сотрудник = ВТ_ТабВыдачиСотрудников.Сотрудник
	|ГДЕ
	|	ВТ_ТабВыдачиСотрудников.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ТабНеМожетБытьПодобрано",РеквизитФормыВЗначение("ТаблицаНеМожетБытьПодобрано"));
	Запрос.УстановитьПараметр("ТабВыдачиСотрудников",	РеквизитФормыВЗначение("ТаблицаВыдачиСотрудников"));
	
	НовыйДокумент.Организация 			= Объект.Организация;
	НовыйДокумент.Ответственный 		= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.СоздательДокумента 	= ПараметрыСеанса.ТекущийПользователь;
	
	УстановитьПривилегированныйРежим(Истина);
	НовыйДокумент.Соответствия.Загрузить(Запрос.Выполнить().Выгрузить());
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКорректировкуСоответствияНоменклатурыВыдачи(Команда)
	
	Форма = ПолучитьФорму("Документ.УстановкаСоответствийНоменклатурыВыдачи.ФормаОбъекта");
	ДанныеФормы = Форма.Объект;
	ВыполнитьКорректировкуСоответствияНоменклатурыВыдачиНаСервере(ДанныеФормы);
	КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
	Форма.Открыть();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМВЗНаСервере(НовыйДокумент)

	НовыйДокумент.Организация 			= Объект.Организация;
	НовыйДокумент.Ответственный 		= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.СоздательДокумента 	= ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.МВЗПодразделений.Загрузить(РеквизитФормыВЗначение("ТаблицаНеЗаданоМВЗ"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМВЗ(Команда)
	
	Форма = ПолучитьФорму("Документ.УстановкаМВЗПодразделений.ФормаОбъекта");
	ДанныеФормы = Форма.Объект;
	УстановитьМВЗНаСервере(ДанныеФормы);
	КопироватьДанныеФормы(ДанныеФормы, Форма.Объект);
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВидовВыдачиПриИзменении(Элемент)
	
	//+++АСТБ_Горюшин_Алексей_42504
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//было
	//ЗаполнитьТаблицуСотрудников();
	//ЗаполнитьТаблицуНоменклатурыНормы();
	//---АСТБ_Горюшин_Алексей_42504
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМВЗПриИзменении(Элемент)
	
	//+++АСТБ_Горюшин_Алексей_42504
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//было
	//ЗаполнитьТаблицуСотрудников();
	//ЗаполнитьТаблицуНоменклатурыНормы();
	//---АСТБ_Горюшин_Алексей_42504
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСотрудниковПриИзменении(Элемент)
	
	//+++АСТБ_Горюшин_Алексей_42504
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//было
	//ЗаполнитьТаблицуНоменклатурыНормы();
	//---АСТБ_Горюшин_Алексей_42504
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРасшифровкуНаСервере(Расшифровка,КлючСтруктуры)
	
	СтруктураДанныхВременногоХранилища 	= ПолучитьИзВременногоХранилища(ЭтаФорма.АдресХранилищаДанныхРасшифровки);
	ДанныеВременногоХранилища 			= СтруктураДанныхВременногоХранилища[КлючСтруктуры];
	ЭлементыВременногоХранилища 		= ДанныеВременногоХранилища.Элементы.Получить(Расшифровка);
	
	Поля = ЭлементыВременногоХранилища.ПолучитьПоля();
	
	Если Поля.Количество() > 0 Тогда           
		ВыбранноеЗначение = Поля[0].Значение;     
	Иначе           
		ВыбранноеЗначение = Неопределено;     
	КонецЕсли;
	
	Возврат ВыбранноеЗначение;
	
КонецФункции

&НаКлиенте
Процедура НеЗаданоМВЗОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РезультатРасшифровки = ПолучитьРасшифровкуНаСервере(Расшифровка,"НеЗаданоМВЗ");
	
	Если НЕ РезультатРасшифровки = Неопределено Тогда
		ПоказатьЗначение(,РезультатРасшифровки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПодобранаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РезультатРасшифровки = ПолучитьРасшифровкуНаСервере(Расшифровка,"Подобрано");
	
	Если НЕ РезультатРасшифровки = Неопределено Тогда
		ПоказатьЗначение(,РезультатРасшифровки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНеПодобранаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РезультатРасшифровки = ПолучитьРасшифровкуНаСервере(Расшифровка,"НеПодобрано");
	
	Если НЕ РезультатРасшифровки = Неопределено Тогда
		ПоказатьЗначение(,РезультатРасшифровки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНеМожетБытьПодобранаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РезультатРасшифровки = ПолучитьРасшифровкуНаСервере(Расшифровка,"НеМожетБытьПодобрано");
	
	Если НЕ РезультатРасшифровки = Неопределено Тогда
		ПоказатьЗначение(,РезультатРасшифровки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиПослеПодбораОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РезультатРасшифровки = ПолучитьРасшифровкуНаСервере(Расшифровка,"Остатки");
	
	Если НЕ РезультатРасшифровки = Неопределено Тогда
		ПоказатьЗначение(,РезультатРасшифровки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Дерево_ЗаказыПоставщикуЗаказатьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Дерево_ЗаказыПоставщику.ТекущиеДанные;
	
	ПересчитатьВеткуДереваЗаказов(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьВеткуДереваЗаказов(ТекущиеДанные)
	
	ВеткаНоменклатура = ТекущиеДанные.ПолучитьРодителя().ПолучитьРодителя();
	
	ВеткиХарактеристики = ВеткаНоменклатура.ПолучитьЭлементы();
	
	ЗаказатьНоменклатура = 0;
	
	Для Каждого ВеткаХарактеристики Из ВеткиХарактеристики Цикл
		
		ВеткиМесяца = ВеткаХарактеристики.ПолучитьЭлементы();
		
		ЗаказатьХарактеристики = 0;
		
		Для Каждого ВеткаМесяца Из ВеткиМесяца Цикл
			
			ЗаказатьХарактеристики = ЗаказатьХарактеристики + ВеткаМесяца.Заказать;
			
		КонецЦикла;	
		
		ВеткаХарактеристики.Заказать = ЗаказатьХарактеристики;
		
		ЗаказатьНоменклатура = ЗаказатьНоменклатура + ЗаказатьХарактеристики;
		
	КонецЦикла;

	ВеткаНоменклатура.Заказать = ЗаказатьНоменклатура;
	
	//+++АСТБ_Горюшин_Алексей_42504
	ВеткаОрганизации = ТекущиеДанные.ПолучитьРодителя().ПолучитьРодителя().ПолучитьРодителя();
	ВеткиНоменклатуры = ВеткаОрганизации.ПолучитьЭлементы();
	ЗаказатьОрганизация = 0;
	Для Каждого ВеткаНоменклатура Из ВеткиНоменклатуры Цикл
		ЗаказатьОрганизация = ЗаказатьОрганизация + ВеткаНоменклатура.Заказать;
	КонецЦикла;
	ВеткаОрганизации.Заказать = ЗаказатьОрганизация;
	//---АСТБ_Горюшин_Алексей_42504
	
КонецПроцедуры

&НаКлиенте
Процедура Дерево_ЗаказыПоставщикуПриАктивизацииЯчейки(Элемент)
	
	ТекущиеДанные = Элементы.Дерево_ЗаказыПоставщику.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Если Элемент.ТекущийЭлемент.Имя = "Дерево_ЗаказыПоставщикуЗаказать" Тогда //проверяем возможность изменения
		
		Если НЕ ТекущиеДанные.ПолучитьЭлементы().Количество() = 0 Тогда //блокируем ячейку
			Элемент.ТекущийЭлемент.ТолькоПросмотр = Истина;
		Иначе
			Элемент.ТекущийЭлемент.ТолькоПросмотр = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНоменклатурыНормыПриИзменении(Элемент)
	
	//+++АСТБ_Горюшин_Алексей_42504
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	//было
	//ТаблицаНоменклатурыНормыПриИзмененииНаСервере();
	//---АСТБ_Горюшин_Алексей_42504
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаНоменклатурыНормыПриИзмененииНаСервере()
	
	//+++АСТБ_Горюшин_Алексей_42504
	// В ОчиститьРезультирующиеТаблицы() тот же код
	//было
	//ДеревоДляЗагрузкиВФорму = РеквизитФормыВЗначение("Дерево_ЗаказыПоставщику");
	//ДеревоДляЗагрузкиВФорму.Строки.Очистить();
	//ЗначениеВРеквизитФормы(ДеревоДляЗагрузкиВФорму,"Дерево_ЗаказыПоставщику");
	//---АСТБ_Горюшин_Алексей_42504
	ОчиститьРезультирующиеТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Объект.ДополнительнаяИнформацияПоНоменклатуреВыдачи = ПолучитьВидДопИнформации(Объект.Организация);
	//
	//ЗаполнитьТаблицыОбъекта();
	
	//+++АСТБ_Горюшин_Алексей_42504
	РазместитьОтборыНаФорме();
	//---АСТБ_Горюшин_Алексей_42504
		
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиВТаблицеСкладов(Команда)
	
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаСкладовДляОстатков");
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиВТаблицеСкладов(Команда)
	
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаСкладовДляОстатков");
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаВыдачиПриИзменении(Элемент)
	
	ПриИзмененииПериодаАнализа();
	
КонецПроцедуры

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура СнятьФлажкиВТаблицеПодразделений(Команда)
	
	ИзменитьФлажкиНаСервере(Ложь,"ТаблицаПодразделений");
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаПодразделений" Тогда
		ОбновитьОтборы("ТаблицаПодразделений");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура УстановитьФлажкиВТаблицеПодразделений(Команда)
	
	ИзменитьФлажкиНаСервере(Истина,"ТаблицаПодразделений");
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаПодразделений" Тогда
		ОбновитьОтборы("ТаблицаПодразделений");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Процедура ЗаполнитьТаблицуПодразделений()
	
	//+++АСТБ_Горюшин_Алексей_42504
	Возврат;
	//---АСТБ_Горюшин_Алексей_42504
	
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИСТИНА КАК Использовать,
	|	Подразделения.Ссылка КАК Подразделение,
	|	Подразделения.Родитель КАК ПодразделениеРодитель,
	|	ВЫБОР
	|		КОГДА Подразделения.Родитель = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|			ТОГДА Подразделения.Наименование
	|		ИНАЧЕ ВЫРАЗИТЬ(Подразделения.Родитель.Наименование + "" \ "" + Подразделения.Наименование КАК СТРОКА)
	|	КОНЕЦ КАК ПодразделениеНаименование
	|ИЗ
	|	Справочник.Подразделения КАК Подразделения
	|ГДЕ
	|	(Подразделения.Ссылка.Владелец = &Организация
	|			ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодразделениеРодитель,
	|	Подразделение
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	//"ВЫБРАТЬ
	//|	ИСТИНА КАК Использовать,
	//|	Подразделения.Ссылка КАК Подразделение
	//|ИЗ
	//|	Справочник.Подразделения КАК Подразделения
	//|ГДЕ
	//|	(Подразделения.Ссылка.Владелец = &Организация
	//|			ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	////|
	////|ОБЪЕДИНИТЬ
	////|
	////|ВЫБРАТЬ
	////|	ИСТИНА,
	////|	ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	////|
	//|УПОРЯДОЧИТЬ ПО
	//|	Подразделение
	//|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Организация",					Объект.Организация);
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",НеУчитыватьОстаткиПоОрганизации);
	
	УстановитьПривилегированныйРежим(Истина);
	Объект.ТаблицаПодразделений.Загрузить(Запрос.Выполнить().Выгрузить());
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура ТаблицаПодразделенийПриИзменении(Элемент)
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Процедура ЗаполнитьТаблицуИсходныхДанных()
	
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	МассивВидовВыдач = Новый Массив();
	МассивВидовВыдач.Добавить(Перечисления.ВидыВыдачиСИЗ.ПерсональнаяВыдача);
	МассивВидовВыдач.Добавить(Перечисления.ВидыВыдачиСИЗ.КоллективнаяВыдача);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник КАК Сотрудник,
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник.Наименование КАК СотрудникНаименование,
	|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы КАК НоменклатураНормы,
	|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы.Наименование КАК НоменклатураНормыНаименование,
	|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи.ВидВыдачиСИЗ КАК ВидВыдачи
	|ПОМЕСТИТЬ ВТ_СотрудникиПоПотребности
	|ИЗ
	|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
	|			&ДатаАнализа,
	|			(Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|				И ДатаПотребности <= &ДатаАнализа
	|				И НормаВыдачи.ВидВыдачиСИЗ В (&МассивВидовВыдачи)) КАК ПотребностьВыдачиСИЗОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	//+++АСТБ_Горюшин_Алексей_73495
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Организация КАК Организация,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Должность КАК Должность,
	//---АСТБ_Горюшин_Алексей_73495
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение КАК Подразделение,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение.Наименование КАК ПодразделениеНаименование,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение.Родитель КАК ПодразделениеРодитель,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение.Родитель.Наименование КАК ПодразделениеРодительНаименование
	|ПОМЕСТИТЬ ВТ_ОсновноеМестоРаботы
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(
	|			&ДатаАнализа,
	|			Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗСотрудников.Сотрудник КАК Сотрудник,
	|	МВЗСотрудников.МВЗ КАК МВЗ,
	|	МВЗСотрудников.МВЗ.Наименование КАК МВЗНаименование
	|ПОМЕСТИТЬ ВТ_МВЗСотрудников
	|ИЗ
	|	РегистрСведений.МВЗСотрудников КАК МВЗСотрудников
	|ГДЕ
	|	(МВЗСотрудников.Организация = &Организация
	|			ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗПодразделенийСрезПоследних.МВЗ КАК МВЗ,
	|	МВЗПодразделенийСрезПоследних.МВЗ.Наименование КАК МВЗНаименование,
	|	МВЗПодразделенийСрезПоследних.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ ВТ_МВЗ
	|ИЗ
	|	РегистрСведений.МВЗПодразделений.СрезПоследних(
	|			&ДатаАнализа,
	|			Подразделение.Владелец = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации) КАК МВЗПодразделенийСрезПоследних
	|ГДЕ
	|	МВЗПодразделенийСрезПоследних.Использовать
	|;
	//+++АСТБ_Горюшин_Алексей_73495
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МВЗДолжностейСрезПоследних.Организация КАК Организация,
	|	МВЗДолжностейСрезПоследних.Должность КАК Должность,
	|	МВЗДолжностейСрезПоследних.МВЗ КАК МВЗ,
	|	МВЗДолжностейСрезПоследних.МВЗ.Наименование КАК МВЗНаименование
	|ПОМЕСТИТЬ ВТ_МВЗДолжностей
	|ИЗ
	|	РегистрСведений.МВЗДолжностей.СрезПоследних(&ДатаАнализа, Организация = &Организация ИЛИ &НеУчитыватьОстаткиПоОрганизации) КАК МВЗДолжностейСрезПоследних
	|ГДЕ
	|	МВЗДолжностейСрезПоследних.Использовать
	|;
	//---АСТБ_Горюшин_Алексей_73495
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СотрудникиПоПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_СотрудникиПоПотребности.СотрудникНаименование КАК СотрудникНаименование,
	|	ВТ_СотрудникиПоПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_СотрудникиПоПотребности.НоменклатураНормыНаименование КАК НоменклатураНормыНаименование,
	|	ВТ_СотрудникиПоПотребности.ВидВыдачи КАК ВидВыдачи,
	|	ВТ_ОсновноеМестоРаботы.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ВТ_ОсновноеМестоРаботы.ПодразделениеРодитель = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|			ТОГДА ВТ_ОсновноеМестоРаботы.ПодразделениеНаименование
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ОсновноеМестоРаботы.ПодразделениеРодительНаименование + "" \ "" + ВТ_ОсновноеМестоРаботы.ПодразделениеНаименование КАК СТРОКА)
	|	КОНЕЦ КАК ПодразделениеНаименование,
	|	ВЫБОР
	|		КОГДА ВТ_МВЗСотрудников.МВЗ ЕСТЬ NULL
	//+++АСТБ_Горюшин_Алексей_73495
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_МВЗ.МВЗ ЕСТЬ NULL
	|						ТОГДА ЕСТЬNULL(ВТ_МВЗДолжностей.МВЗ, ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяСсылка))
	|                   ИНАЧЕ ВТ_МВЗ.МВЗ
	|				КОНЕЦ
	//было
	//|			ТОГДА ЕСТЬNULL(ВТ_МВЗ.МВЗ, ЗНАЧЕНИЕ(Справочник.МВЗ.ПустаяСсылка))
	//---АСТБ_Горюшин_Алексей_73495
	|		ИНАЧЕ ВТ_МВЗСотрудников.МВЗ
	|	КОНЕЦ КАК МВЗ,
	|	ВЫБОР
	|		КОГДА ВТ_МВЗСотрудников.МВЗ ЕСТЬ NULL
	//+++АСТБ_Горюшин_Алексей_73495
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_МВЗ.МВЗ ЕСТЬ NULL
	|						ТОГДА ЕСТЬNULL(ВТ_МВЗДолжностей.МВЗНаименование, """")
	|                   ИНАЧЕ ВТ_МВЗ.МВЗНаименование
	|				КОНЕЦ
	//было
	//|			ТОГДА ЕСТЬNULL(ВТ_МВЗ.МВЗНаименование, """")
	//---АСТБ_Горюшин_Алексей_73495
	|		ИНАЧЕ ВТ_МВЗСотрудников.МВЗНаименование
	|	КОНЕЦ КАК МВЗНаименование
	|ИЗ
	|	ВТ_СотрудникиПоПотребности КАК ВТ_СотрудникиПоПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновноеМестоРаботы КАК ВТ_ОсновноеМестоРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗ КАК ВТ_МВЗ
	|			ПО ВТ_ОсновноеМестоРаботы.Подразделение = ВТ_МВЗ.Подразделение
	//+++АСТБ_Горюшин_Алексей_73495
	|       	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗДолжностей КАК ВТ_МВЗДолжностей
	|			ПО ВТ_ОсновноеМестоРаботы.Должность = ВТ_МВЗДолжностей.Должность
	|				И ВТ_ОсновноеМестоРаботы.Организация = ВТ_МВЗДолжностей.Организация
	//---АСТБ_Горюшин_Алексей_73495
	|		ПО ВТ_СотрудникиПоПотребности.Сотрудник = ВТ_ОсновноеМестоРаботы.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МВЗСотрудников КАК ВТ_МВЗСотрудников
	|		ПО ВТ_СотрудникиПоПотребности.Сотрудник = ВТ_МВЗСотрудников.Сотрудник
	|ГДЕ
	|	НЕ ВТ_ОсновноеМестоРаботы.Подразделение ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Организация",					Объект.Организация);
	Запрос.УстановитьПараметр("ДатаАнализа",					Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("МассивВидовВыдачи",				МассивВидовВыдач);
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",НеУчитыватьОстаткиПоОрганизации);
	
	УстановитьПривилегированныйРежим(Истина);
	Объект.ТаблицаИсходныеДанные.Загрузить(Запрос.Выполнить().Выгрузить());
	УстановитьПривилегированныйРежим(Ложь);
	
	ОчиститьРезультирующиеТаблицы();
		
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Процедура ЗаполнитьТаблицуИсходныхДанныхИ_Отборы()
	
	ВсегоОтборов = СтрДлина(Объект.ПоследовательностьТЧ);
	ИмяПоследнегоОтбора = ПолучитьИмяТаблицы(Прав(Объект.ПоследовательностьТЧ,1));
	
	ЗаполнитьТаблицуИсходныхДанных();
	ЗаполнитьОтборы();
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504	

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Процедура ЗаполнитьОтборы()
	
	ВсегоОтборов = СтрДлина(Объект.ПоследовательностьТЧ);
	Сч = 1;
	
	Пока Сч <= ВсегоОтборов Цикл
		
		ТекущийОтбор = Сред(Объект.ПоследовательностьТЧ,Сч,1);
		
		Если ТекущийОтбор = "1" Тогда
			//ТаблицаВидовВыдачи	
			ТЗ_ТаблицаВидовВыдачи = Объект.ТаблицаИсходныеДанные.Выгрузить(,"ВидВыдачи");
			ТЗ_ТаблицаВидовВыдачи.Свернуть("ВидВыдачи");
			ТЗ_ТаблицаВидовВыдачи.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаВидовВыдачи.ЗаполнитьЗначения(Истина, "Использовать");
			ТЗ_ТаблицаВидовВыдачи.Сортировать("ВидВыдачи");
			Объект.ТаблицаВидовВыдачи.Загрузить(ТЗ_ТаблицаВидовВыдачи);
			
		ИначеЕсли ТекущийОтбор = "2" Тогда	
			//ТаблицаПодразделений
			ТЗ_ТаблицаПодразделений = Объект.ТаблицаИсходныеДанные.Выгрузить(,"Подразделение,ПодразделениеНаименование");
			ТЗ_ТаблицаПодразделений.Свернуть("Подразделение,ПодразделениеНаименование");
			ТЗ_ТаблицаПодразделений.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаПодразделений.ЗаполнитьЗначения(Истина, "Использовать");
			ТЗ_ТаблицаПодразделений.Сортировать("ПодразделениеНаименование");
			Объект.ТаблицаПодразделений.Загрузить(ТЗ_ТаблицаПодразделений);
			
		ИначеЕсли ТекущийОтбор = "3" Тогда
			//ТаблицаМВЗ
			ТЗ_МВЗ = Объект.ТаблицаИсходныеДанные.Выгрузить(,"МВЗ,МВЗНаименование");
			ТЗ_МВЗ.Свернуть("МВЗ,МВЗНаименование");
			ТЗ_МВЗ.Колонки.Добавить("Использовать");
			ТЗ_МВЗ.ЗаполнитьЗначения(Истина, "Использовать");
			ТЗ_МВЗ.Сортировать("МВЗНаименование");
			Объект.ТаблицаМВЗ.Загрузить(ТЗ_МВЗ);
			
		ИначеЕсли ТекущийОтбор = "4" Тогда
			//ТаблицаСотрудников
			ТЗ_ТаблицаСотрудников = Объект.ТаблицаИсходныеДанные.Выгрузить(,"Сотрудник,СотрудникНаименование");
			ТЗ_ТаблицаСотрудников.Свернуть("Сотрудник,СотрудникНаименование");
			ТЗ_ТаблицаСотрудников.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаСотрудников.ЗаполнитьЗначения(Истина, "Использовать");
			ТЗ_ТаблицаСотрудников.Сортировать("СотрудникНаименование");
			Объект.ТаблицаСотрудников.Загрузить(ТЗ_ТаблицаСотрудников);
			
		ИначеЕсли ТекущийОтбор = "5" Тогда
			//ТаблицаНоменклатурыНормы
			ТЗ_ТаблицаНоменклатурыНормы = Объект.ТаблицаИсходныеДанные.Выгрузить(,"НоменклатураНормы,НоменклатураНормыНаименование");
			ТЗ_ТаблицаНоменклатурыНормы.Свернуть("НоменклатураНормы,НоменклатураНормыНаименование");
			ТЗ_ТаблицаНоменклатурыНормы.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаНоменклатурыНормы.ЗаполнитьЗначения(Истина, "Использовать");
			ТЗ_ТаблицаНоменклатурыНормы.Сортировать("НоменклатураНормыНаименование");
			Объект.ТаблицаНоменклатурыНормы.Загрузить(ТЗ_ТаблицаНоменклатурыНормы);
			
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не предусмотрен отбор с кодом """ + ТекущийОтбор + """");
		КонецЕсли;	
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Процедура ЗаполнитьТаблицуНомеровТаблицПоУмолчанию()
	
	НоваяСтрока = Объект.ТаблицаНомеровТаблиц.Добавить();
	НоваяСтрока.НазваниеТаблицы = "ТаблицаВидовВыдачи";
	НоваяСтрока.НомерТаблицы = "1";
	НоваяСтрока = Объект.ТаблицаНомеровТаблиц.Добавить();
	НоваяСтрока.НазваниеТаблицы = "ТаблицаПодразделений";
	НоваяСтрока.НомерТаблицы = "2";
	НоваяСтрока = Объект.ТаблицаНомеровТаблиц.Добавить();
	НоваяСтрока.НазваниеТаблицы = "ТаблицаМВЗ";
	НоваяСтрока.НомерТаблицы = "3";
	НоваяСтрока = Объект.ТаблицаНомеровТаблиц.Добавить();
	НоваяСтрока.НазваниеТаблицы = "ТаблицаСотрудников";
	НоваяСтрока.НомерТаблицы = "4";
	НоваяСтрока = Объект.ТаблицаНомеровТаблиц.Добавить();
	НоваяСтрока.НазваниеТаблицы = "ТаблицаНоменклатурыНормы";
	НоваяСтрока.НомерТаблицы = "5";
	
	//+++АСТБ_Горюшин_Алексей_64400
	Если НЕ ЗначениеЗаполнено(Объект.ПоследовательностьТЧ) Тогда
		Объект.ПоследовательностьТЧ = "12345";
	КонецЕсли;
	Если НЕ СтрДлина(Объект.ПоследовательностьТЧ) = 5 Тогда
		Объект.ПоследовательностьТЧ = "12345";
	КонецЕсли;
	//было
	//Если НЕ (ЗначениеЗаполнено(Объект.ПоследовательностьТЧ)
	//	ИЛИ СтрДлина(Объект.ПоследовательностьТЧ) = 5) Тогда
	//	Объект.ПоследовательностьТЧ = "12345";
	//КонецЕсли;
	//---АСТБ_Горюшин_Алексей_64400
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Процедура РазместитьОтборыНаФорме()
	
	ВсегоПозиций = СтрДлина(Объект.ПоследовательностьТЧ);
	Сч = 1;
	
	Пока Сч <= ВсегоПозиций Цикл
		
		ТекущийНомер = Сред(Объект.ПоследовательностьТЧ, Сч, 1);
		
		ИмяТаблицыПоНомеру = ПолучитьИмяТаблицы(ТекущийНомер);
		
		Элементы.Переместить(Элементы[ИмяТаблицыПоНомеру],Элементы.ГруппаФильтры);
		
		Сч = Сч + 1;	
		
	КонецЦикла;	
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Функция ПолучитьИмяТаблицы(НомерТаблицы)
	
	Строки = Объект.ТаблицаНомеровТаблиц.НайтиСтроки(Новый Структура("НомерТаблицы", НомерТаблицы));
	Возврат Строки[0].НазваниеТаблицы;
	
КонецФункции //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Функция ПолучитьНомерТаблицы(ИмяТаблицы)
	
	Строки = Объект.ТаблицаНомеровТаблиц.НайтиСтроки(Новый Структура("НазваниеТаблицы", ИмяТаблицы));
	Возврат Строки[0].НомерСтроки;
	
КонецФункции //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура СдвинутьВлевоТаблицаВидовВыдачи(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаВидовВыдачи", "Влево");
	ОбновитьОтборы();
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура СдвинутьВлевоТаблицаМВЗ(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаМВЗ", "Влево");
	ОбновитьОтборы();
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура СдвинутьВлевоТаблицаНоменклатурыНормы(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаНоменклатурыНормы", "Влево");
	ОбновитьОтборы();
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура СдвинутьВлевоТаблицаПодразделений(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаПодразделений", "Влево");
	ОбновитьОтборы();
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура СдвинутьВлевоТаблицаСотрудников(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаСотрудников", "Влево");
	ОбновитьОтборы();
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура СдвинутьВправоТаблицаВидовВыдачи(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаВидовВыдачи", "Вправо");
	ОбновитьОтборы();
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура СдвинутьВправоТаблицаМВЗ(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаМВЗ", "Вправо");
	ОбновитьОтборы();
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура СдвинутьВправоТаблицаНоменклатурыНормы(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаНоменклатурыНормы", "Вправо");
	ОбновитьОтборы();
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура СдвинутьВправоТаблицаПодразделений(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаПодразделений", "Вправо");
	ОбновитьОтборы();
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура СдвинутьВправоТаблицаСотрудников(Команда)
	УстановитьПорядокТаблицОтбора("ТаблицаСотрудников", "Вправо");
	ОбновитьОтборы();
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Процедура УстановитьПорядокТаблицОтбора(ИмяТаблицы, Направление);

	НомерТаблицы = ПолучитьНомерТаблицы(ИмяТаблицы);
	ВсегоПозиций = СтрДлина(Объект.ПоследовательностьТЧ);
	НомерПозиции = СтрНайти(Объект.ПоследовательностьТЧ, НомерТаблицы);
	
	Если Направление = "Влево" Тогда
		НовыйНомерПозиции = НомерПозиции - 1;
	Иначе
		НовыйНомерПозиции = НомерПозиции + 1;	
	КонецЕсли;
	
	Если НовыйНомерПозиции <= 0 ИЛИ НовыйНомерПозиции > ВсегоПозиций Тогда
		//ПоказатьСообщение("Невозможно переместить таблицу."); // отладка
		Возврат;
	КонецЕсли;
	
	НомерЗамещаемойТаблицы = Сред(Объект.ПоследовательностьТЧ,НовыйНомерПозиции,1);
	НомерЗамещающейТаблицы = Сред(Объект.ПоследовательностьТЧ,НомерПозиции,1);
	
	Если Направление = "Влево" Тогда
		СтараяПоследовательность = "" + НомерЗамещаемойТаблицы + НомерЗамещающейТаблицы;
		НоваяПоследовательность	 = "" + НомерЗамещающейТаблицы + НомерЗамещаемойТаблицы;
	Иначе 
		СтараяПоследовательность = "" + НомерЗамещающейТаблицы + НомерЗамещаемойТаблицы;	
		НоваяПоследовательность  = "" + НомерЗамещаемойТаблицы + НомерЗамещающейТаблицы;
	КонецЕсли;

	Объект.ПоследовательностьТЧ = СтрЗаменить(Объект.ПоследовательностьТЧ, СтараяПоследовательность, НоваяПоследовательность); 
	//ПоказатьСообщение("Новая последовательность: " + Объект.ПоследовательностьТЧ); // отладка
	
	РазместитьОтборыНаФорме();
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Процедура ОбновитьОтборы(ИмяТаблицы = "")
	
	ВсегоОтборов = СтрДлина(Объект.ПоследовательностьТЧ);
	ИзмСч = 1;
	Если ЗначениеЗаполнено(ИмяТаблицы) Тогда
		НомерТаблицы = ПолучитьНомерТаблицы(ИмяТаблицы);
		ИзмСч = СтрНайти(Объект.ПоследовательностьТЧ, НомерТаблицы);
	КонецЕсли;
	
	ИмяПоследнегоОтбора = ПолучитьИмяТаблицы(Прав(Объект.ПоследовательностьТЧ,1));
	
	// При изменении последнего отбора пересчёт не нужен
	Если ИзмСч = ВсегоОтборов И ЗначениеЗаполнено(ИмяТаблицы) Тогда
		Возврат;
	КонецЕсли;
	
	ТЗ_ТаблицаОтборов = Объект.ТаблицаИсходныеДанные.Выгрузить();
	
	// собираем отборы до текущего
	МассивОтборов_ТаблицаВидовВыдачи 		= Новый Массив;
	МассивОтборов_ТаблицаПодразделений 		= Новый Массив;
	МассивОтборов_ТаблицаМВЗ 				= Новый Массив;
	МассивОтборов_ТаблицаСотрудников 		= Новый Массив;
	МассивОтборов_ТаблицаНоменклатурыНормы	= Новый Массив;
	ЕстьОтбор_ВидыВыдачи					= Ложь;
	ЕстьОтбор_Подразделения                 = Ложь;
	ЕстьОтбор_МВЗ                           = Ложь;
	ЕстьОтбор_Сотрудники                    = Ложь;
	ЕстьОтбор_НоменклатурыНормы             = Ложь;
	Сч = 1;
	
	Пока Сч <= ИзмСч Цикл
		
		ТекущийОтбор = Сред(Объект.ПоследовательностьТЧ,Сч,1);
		
		Если ТекущийОтбор = "1" Тогда
			//ТаблицаВидовВыдачи
		    МассивОтборов_ТаблицаВидовВыдачи = Объект.ТаблицаВидовВыдачи.Выгрузить(Новый Структура("Использовать",Истина));
			МассивОтборов_ТаблицаВидовВыдачи = МассивОтборов_ТаблицаВидовВыдачи.ВыгрузитьКолонку("ВидВыдачи");
			ЕстьОтбор_ВидыВыдачи = Истина;
		ИначеЕсли ТекущийОтбор = "2" Тогда	
			//ТаблицаПодразделений
			МассивОтборов_ТаблицаПодразделений = Объект.ТаблицаПодразделений.Выгрузить(Новый Структура("Использовать",Истина));
			МассивОтборов_ТаблицаПодразделений = МассивОтборов_ТаблицаПодразделений.ВыгрузитьКолонку("Подразделение");
			ЕстьОтбор_Подразделения = Истина;
		ИначеЕсли ТекущийОтбор = "3" Тогда
			//ТаблицаМВЗ
			МассивОтборов_ТаблицаМВЗ = Объект.ТаблицаМВЗ.Выгрузить(Новый Структура("Использовать",Истина));
			МассивОтборов_ТаблицаМВЗ = МассивОтборов_ТаблицаМВЗ.ВыгрузитьКолонку("МВЗ");
			ЕстьОтбор_МВЗ = Истина;
		ИначеЕсли ТекущийОтбор = "4" Тогда
			//ТаблицаСотрудников
			МассивОтборов_ТаблицаСотрудников = Объект.ТаблицаСотрудников.Выгрузить(Новый Структура("Использовать",Истина));
			МассивОтборов_ТаблицаСотрудников = МассивОтборов_ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
			ЕстьОтбор_Сотрудники = Истина;
		ИначеЕсли ТекущийОтбор = "5" Тогда
			//ТаблицаНоменклатурыНормы
			МассивОтборов_ТаблицаНоменклатурыНормы = Объект.ТаблицаНоменклатурыНормы.Выгрузить(Новый Структура("Использовать",Истина));
			МассивОтборов_ТаблицаНоменклатурыНормы = МассивОтборов_ТаблицаНоменклатурыНормы.ВыгрузитьКолонку("НоменклатураНормы");
			ЕстьОтбор_НоменклатурыНормы = Истина;
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не предусмотрен отбор с кодом """ + ТекущийОтбор + """");
		КонецЕсли;
		
		Сч = Сч + 1;
		
	КонецЦикла;	
	
	// накладываем отборы
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаЗначений.ВидВыдачи КАК ВидВыдачи,
	|	ТаблицаЗначений.Подразделение КАК Подразделение,
	|	ТаблицаЗначений.ПодразделениеНаименование КАК ПодразделениеНаименование,
	|	ТаблицаЗначений.МВЗ КАК МВЗ,
	|	ТаблицаЗначений.МВЗНаименование КАК МВЗНаименование,
	|	ТаблицаЗначений.Сотрудник КАК Сотрудник,
	|	ТаблицаЗначений.СотрудникНаименование КАК СотрудникНаименование,
	|	ТаблицаЗначений.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаЗначений.НоменклатураНормыНаименование КАК НоменклатураНормыНаименование
	|ПОМЕСТИТЬ ТаблицаЗначений
	|ИЗ
	|	&ТЗ_ТаблицаОтборов КАК ТаблицаЗначений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗначений.ВидВыдачи КАК ВидВыдачи,
	|	ТаблицаЗначений.Подразделение КАК Подразделение,
	|	ТаблицаЗначений.ПодразделениеНаименование КАК ПодразделениеНаименование,
	|	ТаблицаЗначений.МВЗ КАК МВЗ,
	|	ТаблицаЗначений.МВЗНаименование КАК МВЗНаименование,
	|	ТаблицаЗначений.Сотрудник КАК Сотрудник,
	|	ТаблицаЗначений.СотрудникНаименование КАК СотрудникНаименование,
	|	ТаблицаЗначений.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаЗначений.НоменклатураНормыНаименование КАК НоменклатураНормыНаименование
	|ИЗ
	|	ТаблицаЗначений КАК ТаблицаЗначений
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ЕстьОтбор_ВидыВыдачи
	|				ТОГДА ТаблицаЗначений.ВидВыдачи В (&ВидыВыдачи)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ЕстьОтбор_Подразделения
	|				ТОГДА ТаблицаЗначений.Подразделение В (&Подразделения)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ЕстьОтбор_МВЗ
	|				ТОГДА ТаблицаЗначений.МВЗ В (&МВЗ)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ЕстьОтбор_Сотрудники
	|				ТОГДА ТаблицаЗначений.Сотрудник В (&Сотрудники)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ЕстьОтбор_НоменклатурыНормы
	|				ТОГДА ТаблицаЗначений.НоменклатураНормы В (&НоменклатурыНормы)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("ТЗ_ТаблицаОтборов", 				ТЗ_ТаблицаОтборов);
	Запрос.УстановитьПараметр("ВидыВыдачи", 					МассивОтборов_ТаблицаВидовВыдачи);
	Запрос.УстановитьПараметр("ЕстьОтбор_ВидыВыдачи", 			ЕстьОтбор_ВидыВыдачи);
	Запрос.УстановитьПараметр("Подразделения", 					МассивОтборов_ТаблицаПодразделений);
	Запрос.УстановитьПараметр("ЕстьОтбор_Подразделения", 		ЕстьОтбор_Подразделения);
	Запрос.УстановитьПараметр("МВЗ", 							МассивОтборов_ТаблицаМВЗ);
	Запрос.УстановитьПараметр("ЕстьОтбор_МВЗ", 					ЕстьОтбор_МВЗ);
	Запрос.УстановитьПараметр("Сотрудники", 					МассивОтборов_ТаблицаСотрудников);
	Запрос.УстановитьПараметр("ЕстьОтбор_Сотрудники", 			ЕстьОтбор_Сотрудники);
	Запрос.УстановитьПараметр("НоменклатурыНормы", 				МассивОтборов_ТаблицаНоменклатурыНормы);
	Запрос.УстановитьПараметр("ЕстьОтбор_НоменклатурыНормы",	ЕстьОтбор_НоменклатурыНормы);
	
	ТЗ_ТаблицаОтборов = Запрос.Выполнить().Выгрузить();
	
	// получаем новые отборы
	Сч = ИзмСч+1;
	
	Пока Сч <= ВсегоОтборов Цикл
		
		ТекущийОтбор = Сред(Объект.ПоследовательностьТЧ,Сч,1);
		
		Если ТекущийОтбор = "1" Тогда
			//ТаблицаВидовВыдачи	
			ТЗ_ТаблицаВидовВыдачи = ТЗ_ТаблицаОтборов.Скопировать(,"ВидВыдачи");
			ТЗ_ТаблицаВидовВыдачи.Свернуть("ВидВыдачи");
			ТЗ_ТаблицаВидовВыдачи.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаВидовВыдачи.ЗаполнитьЗначения(Истина,"Использовать");
			ТЗ_ТаблицаВидовВыдачи.Сортировать("ВидВыдачи");
			Объект.ТаблицаВидовВыдачи.Загрузить(ТЗ_ТаблицаВидовВыдачи);
			
		ИначеЕсли ТекущийОтбор = "2" Тогда	
			//ТаблицаПодразделений
			ТЗ_ТаблицаПодразделений = ТЗ_ТаблицаОтборов.Скопировать(,"Подразделение,ПодразделениеНаименование");
			ТЗ_ТаблицаПодразделений.Свернуть("Подразделение,ПодразделениеНаименование");
			ТЗ_ТаблицаПодразделений.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаПодразделений.ЗаполнитьЗначения(Истина,"Использовать");
			ТЗ_ТаблицаПодразделений.Сортировать("ПодразделениеНаименование");
			Объект.ТаблицаПодразделений.Загрузить(ТЗ_ТаблицаПодразделений);
			
		ИначеЕсли ТекущийОтбор = "3" Тогда
			//ТаблицаМВЗ
			ТЗ_ТаблицаМВЗ = ТЗ_ТаблицаОтборов.Скопировать(,"МВЗ,МВЗНаименование");
			ТЗ_ТаблицаМВЗ.Свернуть("МВЗ,МВЗНаименование");
			ТЗ_ТаблицаМВЗ.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаМВЗ.ЗаполнитьЗначения(Истина,"Использовать");
			ТЗ_ТаблицаМВЗ.Сортировать("МВЗНаименование");
			Объект.ТаблицаМВЗ.Загрузить(ТЗ_ТаблицаМВЗ);
			
		ИначеЕсли ТекущийОтбор = "4" Тогда
			//ТаблицаСотрудников
			ТЗ_ТаблицаСотрудников = ТЗ_ТаблицаОтборов.Скопировать(,"Сотрудник,СотрудникНаименование");
			ТЗ_ТаблицаСотрудников.Свернуть("Сотрудник,СотрудникНаименование");
			ТЗ_ТаблицаСотрудников.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаСотрудников.ЗаполнитьЗначения(Истина,"Использовать");
			ТЗ_ТаблицаСотрудников.Сортировать("СотрудникНаименование");
			Объект.ТаблицаСотрудников.Загрузить(ТЗ_ТаблицаСотрудников);
			
		ИначеЕсли ТекущийОтбор = "5" Тогда
			//ТаблицаНоменклатурыНормы
			ТЗ_ТаблицаНоменклатурыНормы = ТЗ_ТаблицаОтборов.Скопировать(,"НоменклатураНормы,НоменклатураНормыНаименование");
			ТЗ_ТаблицаНоменклатурыНормы.Свернуть("НоменклатураНормы,НоменклатураНормыНаименование");
			ТЗ_ТаблицаНоменклатурыНормы.Колонки.Добавить("Использовать");
			ТЗ_ТаблицаНоменклатурыНормы.ЗаполнитьЗначения(Истина,"Использовать");
			ТЗ_ТаблицаНоменклатурыНормы.Сортировать("НоменклатураНормыНаименование");
			Объект.ТаблицаНоменклатурыНормы.Загрузить(ТЗ_ТаблицаНоменклатурыНормы);
			
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не предусмотрен отбор с кодом """ + ТекущийОтбор + """");
		КонецЕсли;
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
	//+++АСТБ_Горюшин_Алексей_64400
	Если Объект.ТаблицаВидовВыдачи.Количество() = 0
		И Объект.ТаблицаПодразделений.Количество() = 0
		И Объект.ТаблицаМВЗ.Количество() = 0
		И Объект.ТаблицаСотрудников.Количество() = 0
		И Объект.ТаблицаНоменклатурыНормы.Количество() = 0
		Тогда
		ЗаполнитьОтборы();
	КонецЕсли;
	//---АСТБ_Горюшин_Алексей_64400
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура ТаблицаВидовВыдачиИспользоватьПриИзменении(Элемент)
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаВидовВыдачи" Тогда
		ОбновитьОтборы("ТаблицаВидовВыдачи");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура ТаблицаПодразделенийИспользоватьПриИзменении(Элемент)
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаПодразделений" Тогда
		ОбновитьОтборы("ТаблицаПодразделений");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура ТаблицаМВЗИспользоватьПриИзменении(Элемент)
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаМВЗ" Тогда
		ОбновитьОтборы("ТаблицаМВЗ");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура ТаблицаСотрудниковИспользоватьПриИзменении(Элемент)
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаСотрудников" Тогда
		ОбновитьОтборы("ТаблицаСотрудников");
	КонецЕсли;
	Если ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура ТаблицаНоменклатурыНормыИспользоватьПриИзменении(Элемент)
	Если НЕ ИмяПоследнегоОтбора = "ТаблицаНоменклатурыНормы" Тогда
		ОбновитьОтборы("ТаблицаНоменклатурыНормы");
	КонецЕсли;
	Если ЭтаФорма.ЭтаФорма.ОчищатьРезультатПредварительногоАнализа Тогда
		ОчиститьРезультирующиеТаблицы();
		ЭтаФорма.ЭтаФорма.ОчищатьРезультатПредварительногоАнализа = Ложь;
	КонецЕсли;
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42855
&НаКлиенте
Процедура КонецПериодаВыдачиПриИзменении(Элемент)
	
	Если Объект.КонецПериодаВыдачи < Объект.НачалоПериодаВыдачи Тогда
		Сообщить("Дата конца периода выдачи не может быть меньше даты начала периода выдачи!");
		Объект.КонецПериодаВыдачи = КонецМесяца(Объект.НачалоПериодаВыдачи);
	Иначе
		Объект.КонецПериодаВыдачи = КонецДня(Объект.КонецПериодаВыдачи);
	КонецЕсли;
	
	ЗаполнитьТаблицуИсходныхДанныхИ_Отборы();
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42855

//+++АСТБ_Горюшин_Алексей_42506
&НаКлиенте
Процедура ПечатьЗаказов(Команда)
	
	Структура_ТД = ПечатьЗаказовНаСервере();
	
	Для Каждого ТД_Заказ из Структура_ТД Цикл 
		
		КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ЗаказыПоставщику");    
		КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТД_Заказ.Значение; 
		КоллекцияПечатныхФорм[0].Экземпляров=1;
		КоллекцияПечатныхФорм[0].СинонимМакета = "Заказ поставщику " + СтрЗаменить(ТД_Заказ.Ключ, "ТД_", "");  // используется для формирования имени файла при сохранении из общей формы печати документов
		УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Неопределено,ЭтаФорма);
	
	КонецЦикла;
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42506

//+++АСТБ_Горюшин_Алексей_42506
&НаСервере
Функция ПечатьЗаказовНаСервере()
	
	СтруктураТабличныеДокументы = Новый Структура;
	
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
	
	ДеревоДляЗаказов = РеквизитФормыВЗначение("Дерево_ЗаказыПоставщику");
	
	ТаблицаДляФормированияДокументов = Новый ТаблицаЗначений;
	ТаблицаДляФормированияДокументов.Колонки.Добавить("Организация",				Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("Склад",						Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("НачалоПериодаВыдачи",		Новый ОписаниеТипов("Дата"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("КонецПериодаВыдачи",			Новый ОписаниеТипов("Дата"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("Поставщик",					Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("Номенклатура",				Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("ХарактеристикаНоменклатуры",	Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаДляФормированияДокументов.Колонки.Добавить("Количество",					Новый ОписаниеТипов("Число"));
	
	Для Каждого СтрокаОрганизации Из ДеревоДляЗаказов.Строки Цикл
		
		Для Каждого СтрокаНоменклатуры Из СтрокаОрганизации.Строки Цикл
			
			Для Каждого СтрокаХарактеристики Из СтрокаНоменклатуры.Строки Цикл
				
				Для Каждого СтрокаМесяца Из СтрокаХарактеристики.Строки Цикл
					
					Если НЕ СтрокаМесяца.Заказать = 0 Тогда
						
						НоваяСтрока 							= ТаблицаДляФормированияДокументов.Добавить();
						НоваяСтрока.Организация 				= СтрокаОрганизации.Организация;
						НоваяСтрока.Склад 						= Объект.СкладПоступления;
						НоваяСтрока.НачалоПериодаВыдачи 		= СтрокаМесяца.НачалоПериода;
						НоваяСтрока.КонецПериодаВыдачи 			= КонецМесяца(СтрокаМесяца.НачалоПериода);
						НоваяСтрока.Поставщик 					= СтрокаНоменклатуры.Номенклатура.Поставщик;
						НоваяСтрока.Номенклатура 				= СтрокаНоменклатуры.Номенклатура;
						НоваяСтрока.ХарактеристикаНоменклатуры 	= СтрокаХарактеристики.ХарактеристикаНоменклатуры;
						НоваяСтрока.Количество 					= СтрокаМесяца.Заказать;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

	Если ТаблицаДляФормированияДокументов.Количество() = 0 Тогда
		Сообщить("Формирование заказов поставщику не требуется.");
		Возврат СтруктураТабличныеДокументы;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаДляФормированияДокументов.Организация КАК Организация,
	|	ТаблицаДляФормированияДокументов.Склад КАК Склад,
	|	ТаблицаДляФормированияДокументов.НачалоПериодаВыдачи КАК НачалоПериодаВыдачи,
	|	ТаблицаДляФормированияДокументов.КонецПериодаВыдачи КАК КонецПериодаВыдачи,
	|	ТаблицаДляФормированияДокументов.Номенклатура КАК Номенклатура,
	|	ТаблицаДляФормированияДокументов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаДляФормированияДокументов.Количество КАК Количество,
	|	ТаблицаДляФормированияДокументов.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ ТаблицаДляФормированияДокументов
	|ИЗ
	|	&ТаблицаДляФормированияДокументов КАК ТаблицаДляФормированияДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	0 КАК НомерСтроки,
	|	ТаблицаДляФормированияДокументов.Организация КАК Организация,
	|	ТаблицаДляФормированияДокументов.Склад КАК Склад,
	|	ТаблицаДляФормированияДокументов.НачалоПериодаВыдачи КАК НачалоПериодаВыдачи,
	|	ТаблицаДляФормированияДокументов.КонецПериодаВыдачи КАК КонецПериодаВыдачи,
	|	ТаблицаДляФормированияДокументов.Номенклатура КАК Номенклатура,
	|	ТаблицаДляФормированияДокументов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаДляФормированияДокументов.Количество КАК Количество,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * ТаблицаДляФормированияДокументов.Количество КАК Сумма,
	|	ТаблицаДляФормированияДокументов.Поставщик КАК Поставщик
	|ИЗ
	|	ТаблицаДляФормированияДокументов КАК ТаблицаДляФормированияДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|			МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|			ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик,
	|			ЦеныНоменклатурыСрезПоследних.Организация КАК Организация
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&Период,
	|					Организация = &Организация
	|						ИЛИ &НеУчитыватьОстаткиПоОрганизации) КАК ЦеныНоменклатурыСрезПоследних
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|			ЦеныНоменклатурыСрезПоследних.Поставщик,
	|			ЦеныНоменклатурыСрезПоследних.Организация) КАК ЦеныНоменклатуры
	|		ПО ТаблицаДляФормированияДокументов.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ТаблицаДляФормированияДокументов.Поставщик = ЦеныНоменклатуры.Поставщик
	|			И ТаблицаДляФормированияДокументов.Организация = ЦеныНоменклатуры.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Склад,
	|	НачалоПериодаВыдачи";
	
	Запрос.УстановитьПараметр("ТаблицаДляФормированияДокументов",	ТаблицаДляФормированияДокументов);
	Запрос.УстановитьПараметр("Период",								Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("Организация",						Объект.Организация);
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",	НеУчитыватьОстаткиПоОрганизации);
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаДляФормированияДокументов = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	СвернутаяТаблица = ТаблицаДляФормированияДокументов.Скопировать();
	
	ТаблицаДляПечати = ТаблицаДляФормированияДокументов.СкопироватьКолонки("НомерСтроки,Номенклатура,ХарактеристикаНоменклатуры,Количество,Цена,Сумма");
	ТаблицаДляПечати.Очистить();
	
	ТаблицаДляПечати.Колонки.НомерСтроки.Заголовок = "N";
	ТаблицаДляПечати.Колонки.ХарактеристикаНоменклатуры.Заголовок = "Характеристика номенклатуры";
	
	Если Объект.ОдинЗаказ Тогда
		СвернутаяТаблица.Свернуть("Организация,Поставщик");
	Иначе	
		СвернутаяТаблица.Свернуть("Организация,Склад,Поставщик,НачалоПериодаВыдачи");
	КонецЕсли;
	
	Номер_ТД = 1;
	
	Для Каждого СтрокаСвернутойТаблицы Из СвернутаяТаблица Цикл
		
		СтруктураПоиска = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтрокаСвернутойТаблицы);
		
		НайденныеСтроки = ТаблицаДляФормированияДокументов.НайтиСтроки(СтруктураПоиска);
		
		НомерСтроки = 1;
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			НоваяСтрока = ТаблицаДляПечати.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,НайденнаяСтрока);
			НоваяСтрока.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
		//ТабДокумент = Новый ТабличныйДокумент;
		//Построитель = Новый ПостроительОтчета;
		//Построитель.ИсточникДанных=Новый ОписаниеИсточникаДанных(ТаблицаДляПечати);       
		//Построитель.Вывести(ТабДокумент);
		
		ТабДокумент = ПолучитьТабличныйДокумент(ТаблицаДляПечати);
		
		СтруктураТабличныеДокументы.Вставить("ТД_" + Строка(Номер_ТД), ТабДокумент);
		Номер_ТД = Номер_ТД + 1;
		
		ТаблицаДляПечати.Очистить();
		
	КонецЦикла;
	
	Возврат СтруктураТабличныеДокументы;
	
КонецФункции //---АСТБ_Горюшин_Алексей_42506

//+++АСТБ_Горюшин_Алексей_42506
// Получить табличный документ на основании таблицы значений
//
// Параметры:
//  Таблица     - ТаблицаЗначений 
// 
// Возвращаемое значение:
//  ТабличныйДокумент 
//
Функция ПолучитьТабличныйДокумент(Таблица) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
    
    // Выводим заголовок таблицы
    КолонкаИндекс = 0;
    Пока КолонкаИндекс < Таблица.Колонки.Количество() Цикл
        Колонка = Таблица.Колонки[КолонкаИндекс];
        ТабДокумент.Область(1, КолонкаИндекс + 1, 1, КолонкаИндекс + 1).Текст = Колонка.Заголовок;  
        КолонкаИндекс = КолонкаИндекс + 1;
    КонецЦикла;
    
    // Выводим строки таблицы
    СтрокаИндекс = 0;
    Пока СтрокаИндекс < Таблица.Количество() Цикл
        Таблица_Строка = Таблица[СтрокаИндекс];
        КолонкаИндекс = 0;
        Пока КолонкаИндекс < Таблица.Колонки.Количество() Цикл
            Колонка = Таблица.Колонки[КолонкаИндекс];
            ТабДокумент.Область(СтрокаИндекс + 2, КолонкаИндекс + 1, СтрокаИндекс + 2, КолонкаИндекс + 1).Текст = Формат(Таблица_Строка[Колонка.Имя], "ЧГ=0");
            КолонкаИндекс = КолонкаИндекс + 1;
        КонецЦикла;        
        СтрокаИндекс = СтрокаИндекс + 1;
    КонецЦикла;
    
    Возврат ТабДокумент;
	
КонецФункции //---АСТБ_Горюшин_Алексей_42506

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура ПодобраноСохранитьДляАнализа(Команда)
	
	ТабДок = ПечатьПодобраноНаСервере();
	
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ТаблицаПодобрано");    
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок; 
	КоллекцияПечатныхФорм[0].Экземпляров=1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "Таблица Подобрано для анализа";  // используется для формирования имени файла при сохранении из общей формы печати документов
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Неопределено,ЭтаФорма);
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Функция ПечатьПодобраноНаСервере()
	
	ТабДляОбработки = РеквизитФормыВЗначение("ТаблицаПодобраноДляАнализа");
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабДляОбработки.Организация КАК Организация,
	|	ТабДляОбработки.Сотрудник КАК Сотрудник,
	|	ТабДляОбработки.Подразделение КАК Подразделение,
	|	ТабДляОбработки.Должность КАК Должность,
	|	ТабДляОбработки.НоменклатураНормы КАК НоменклатураНормы,
	|	ТабДляОбработки.ВидВыдачи КАК ВидВыдачи,
	|	ТабДляОбработки.Номенклатура КАК Номенклатура,
	|	ТабДляОбработки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТабДляОбработки.Количество КАК Количество
	|ПОМЕСТИТЬ ТабДляОбработки
	|ИЗ
	|	&ТабДляОбработки КАК ТабДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.Код КАК Код,
	|	Номенклатура.Артикул КАК Артикул,
	|	Номенклатура.КодСинхронизации КАК КодСинхронизации
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|	И Номенклатура.Ссылка В
	|			(ВЫБРАТЬ
	|				ТабДляОбработки.Номенклатура
	|			ИЗ
	|				ТабДляОбработки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Ссылка,
	|	Сотрудники.ТабельныйНомер КАК ТабельныйНомер,
	|	Сотрудники.Владелец КАК Организация
	|ПОМЕСТИТЬ ВТ_Сотрудники
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Владелец = &Организация
	|	И Сотрудники.Ссылка В
	|			(ВЫБРАТЬ
	|				ТабДляОбработки.Сотрудник
	|			ИЗ
	|				ТабДляОбработки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦеныНоменклатурыСрезПоследних.Организация КАК Организация,
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
	|ПОМЕСТИТЬ ВТ_Цены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&ДатаАнализа,
	|			Организация = &Организация
	|				ИЛИ &НеУчитыватьОстаткиПоОрганизации
	|					И Номенклатура.ссылка В
	|						(ВЫБРАТЬ
	|							ТабДляОбработки.Номенклатура
	|						ИЗ
	|							ТабДляОбработки)) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатурныеНомераОрганизаций.Номенклатура КАК Номенклатура,
	|	НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	НоменклатурныеНомераОрганизаций.НоменклатурныйНомер КАК НоменклатурныйНомер,
	|	НоменклатурныеНомераОрганизаций.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_НоменклатурныеНомера
	|ИЗ
	|	РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|ГДЕ
	|	(НоменклатурныеНомераОрганизаций.Организация = &Организация
	|			ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|	И НоменклатурныеНомераОрганизаций.Номенклатура.Ссылка В
	|			(ВЫБРАТЬ
	|				ТабДляОбработки.Номенклатура
	|			ИЗ
	|				ТабДляОбработки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДляОбработки.Организация КАК Организация,
	|	ВТ_Сотрудники.ТабельныйНомер КАК ТабельныйНомер,
	|	ТабДляОбработки.Сотрудник КАК Сотрудник,
	|	ТабДляОбработки.Подразделение КАК Подразделение,
	|	ТабДляОбработки.Должность КАК Должность,
	|	ТабДляОбработки.НоменклатураНормы КАК НоменклатураНормы,
	|	ТабДляОбработки.ВидВыдачи КАК ВидВыдачи,
	|	ВЫБОР
	|		КОГДА &ВидДополнительнойИнформацииПоНоменклатуре = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА ВТ_Номенклатура.Артикул
	|		КОГДА &ВидДополнительнойИнформацииПоНоменклатуре = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|			ТОГДА ВТ_Номенклатура.Код
	|		КОГДА &ВидДополнительнойИнформацииПоНоменклатуре = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|			ТОГДА ВТ_Номенклатура.КодСинхронизации
	|		КОГДА &ВидДополнительнойИнформацииПоНоменклатуре = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|			ТОГДА ЕСТЬNULL(ВТ_НоменклатурныеНомера.НоменклатурныйНомер, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДопИнформация,
	|	ТабДляОбработки.Номенклатура КАК Номенклатура,
	|	ТабДляОбработки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТабДляОбработки.Количество КАК Количество,
	|	ЕСТЬNULL(ВТ_Цены.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(ВТ_Цены.Цена, 0) * ТабДляОбработки.Количество КАК Сумма
	|ИЗ
	|	ТабДляОбработки КАК ТабДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НоменклатурныеНомера КАК ВТ_НоменклатурныеНомера
	|		ПО ТабДляОбработки.Номенклатура = ВТ_НоменклатурныеНомера.Номенклатура
	|			И ТабДляОбработки.ХарактеристикаНоменклатуры = ВТ_НоменклатурныеНомера.ХарактеристикаНоменклатуры
	|			И ТабДляОбработки.Организация = ВТ_НоменклатурныеНомера.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цены КАК ВТ_Цены
	|		ПО ТабДляОбработки.Номенклатура = ВТ_Цены.Номенклатура
	|			И ТабДляОбработки.Организация = ВТ_Цены.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сотрудники КАК ВТ_Сотрудники
	|		ПО ТабДляОбработки.Сотрудник = ВТ_Сотрудники.Ссылка
	|			И ТабДляОбработки.Организация = ВТ_Сотрудники.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО ТабДляОбработки.Номенклатура = ВТ_Номенклатура.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ТабельныйНомер,
	|	Подразделение,
	|	Должность,
	|	НоменклатураНормы,
	|	ВидВыдачи,
	|	ДопИнформация,
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры,
	|	Цена
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ТабДляОбработки",							ТабДляОбработки);
	Запрос.УстановитьПараметр("ДатаАнализа",								Объект.КонецПериодаВыдачи);
	Запрос.УстановитьПараметр("Организация",								Объект.Организация);
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",			НеУчитыватьОстаткиПоОрганизации);
	Запрос.УстановитьПараметр("ВидДополнительнойИнформацииПоНоменклатуре",	Объект.ДополнительнаяИнформацияПоНоменклатуреВыдачи);
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаДляПечати = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТаблицаДляПечати.Колонки.ТабельныйНомер.Заголовок = "Табельный номер";
	ТаблицаДляПечати.Колонки.ХарактеристикаНоменклатуры.Заголовок = "Характеристика номенклатуры";
	ТаблицаДляПечати.Колонки.НоменклатураНормы.Заголовок = "Номенклатура нормы";
	ТаблицаДляПечати.Колонки.ДопИнформация.Заголовок = "Доп информация";
	ТаблицаДляПечати.Колонки.ВидВыдачи.Заголовок = "Вид выдачи";
	
	ТабДокумент = ПолучитьТабличныйДокумент(ТаблицаДляПечати);
	
	Возврат ТабДокумент;
	
КонецФункции //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаКлиенте
Процедура НеПодобраноСохранитьДляАнализа(Команда)
	
	ТабДок = ПечатьНеПодобраноНаСервере();
	
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ТаблицаНеПодобрано");    
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабДок; 
	КоллекцияПечатныхФорм[0].Экземпляров=1;
	КоллекцияПечатныхФорм[0].СинонимМакета = "Таблица Не подобрано для анализа";  // используется для формирования имени файла при сохранении из общей формы печати документов
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Неопределено,ЭтаФорма);
	
КонецПроцедуры //---АСТБ_Горюшин_Алексей_42504

//+++АСТБ_Горюшин_Алексей_42504
&НаСервере
Функция ПечатьНеПодобраноНаСервере()
	
	ТабДляОбработки = РеквизитФормыВЗначение("ТаблицаНеПодобраноДляАнализа");
	НеУчитыватьОстаткиПоОрганизации = ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации");
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабДляОбработки.Организация КАК Организация,
	|	ТабДляОбработки.Сотрудник КАК Сотрудник,
	|	ТабДляОбработки.Подразделение КАК Подразделение,
	|	ТабДляОбработки.Должность КАК Должность,
	|	ТабДляОбработки.НоменклатураНормы КАК НоменклатураНормы,
	|	ТабДляОбработки.ВидВыдачи КАК ВидВыдачи,
	|	ТабДляОбработки.Номенклатура КАК Номенклатура,
	|	ТабДляОбработки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТабДляОбработки.НачалоПериода КАК НачалоПериода,
	|	ТабДляОбработки.КонецПериода КАК КонецПериода,
	|	ТабДляОбработки.Количество КАК Количество
	|ПОМЕСТИТЬ ТабДляОбработки
	|ИЗ
	|	&ТабДляОбработки КАК ТабДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.Код КАК Код,
	|	Номенклатура.Артикул КАК Артикул,
	|	Номенклатура.КодСинхронизации КАК КодСинхронизации
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|	И Номенклатура.Ссылка В
	|			(ВЫБРАТЬ
	|				ТабДляОбработки.Номенклатура
	|			ИЗ
	|				ТабДляОбработки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Ссылка,
	|	Сотрудники.ТабельныйНомер КАК ТабельныйНомер,
	|	Сотрудники.Владелец КАК Организация
	|ПОМЕСТИТЬ ВТ_Сотрудники
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Владелец = &Организация
	|	И Сотрудники.Ссылка В
	|			(ВЫБРАТЬ
	|				ТабДляОбработки.Сотрудник
	|			ИЗ
	|				ТабДляОбработки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатурныеНомераОрганизаций.Номенклатура КАК Номенклатура,
	|	НоменклатурныеНомераОрганизаций.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	НоменклатурныеНомераОрганизаций.НоменклатурныйНомер КАК НоменклатурныйНомер,
	|	НоменклатурныеНомераОрганизаций.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_НоменклатурныеНомера
	|ИЗ
	|	РегистрСведений.НоменклатурныеНомераОрганизаций КАК НоменклатурныеНомераОрганизаций
	|ГДЕ
	|	(НоменклатурныеНомераОрганизаций.Организация = &Организация
	|			ИЛИ &НеУчитыватьОстаткиПоОрганизации)
	|	И НоменклатурныеНомераОрганизаций.Номенклатура.Ссылка В
	|			(ВЫБРАТЬ
	|				ТабДляОбработки.Номенклатура
	|			ИЗ
	|				ТабДляОбработки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДляОбработки.Организация КАК Организация,
	|	ВТ_Сотрудники.ТабельныйНомер КАК ТабельныйНомер,
	|	ТабДляОбработки.Сотрудник КАК Сотрудник,
	|	ТабДляОбработки.Подразделение КАК Подразделение,
	|	ТабДляОбработки.Должность КАК Должность,
	|	ТабДляОбработки.НоменклатураНормы КАК НоменклатураНормы,
	|	ТабДляОбработки.ВидВыдачи КАК ВидВыдачи,
	|	ВЫБОР
	|		КОГДА &ВидДополнительнойИнформацииПоНоменклатуре = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Артикул)
	|			ТОГДА ВТ_Номенклатура.Артикул
	|		КОГДА &ВидДополнительнойИнформацииПоНоменклатуре = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.Код)
	|			ТОГДА ВТ_Номенклатура.Код
	|		КОГДА &ВидДополнительнойИнформацииПоНоменклатуре = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.КодСинхронизации)
	|			ТОГДА ВТ_Номенклатура.КодСинхронизации
	|		КОГДА &ВидДополнительнойИнформацииПоНоменклатуре = ЗНАЧЕНИЕ(Перечисление.ВидДополнительнойИнформацииПоНоменклатуре.НоменклатурныйНомерОрганизации)
	|			ТОГДА ЕСТЬNULL(ВТ_НоменклатурныеНомера.НоменклатурныйНомер, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДопИнформация,
	|	ТабДляОбработки.Номенклатура КАК Номенклатура,
	|	ТабДляОбработки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТабДляОбработки.НачалоПериода КАК НачалоПериода,
	|	ТабДляОбработки.Количество КАК Количество
	|ИЗ
	|	ТабДляОбработки КАК ТабДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НоменклатурныеНомера КАК ВТ_НоменклатурныеНомера
	|		ПО ТабДляОбработки.Номенклатура = ВТ_НоменклатурныеНомера.Номенклатура
	|			И ТабДляОбработки.ХарактеристикаНоменклатуры = ВТ_НоменклатурныеНомера.ХарактеристикаНоменклатуры
	|			И ТабДляОбработки.Организация = ВТ_НоменклатурныеНомера.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сотрудники КАК ВТ_Сотрудники
	|		ПО ТабДляОбработки.Сотрудник = ВТ_Сотрудники.Ссылка
	|			И ТабДляОбработки.Организация = ВТ_Сотрудники.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО ТабДляОбработки.Номенклатура = ВТ_Номенклатура.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ТабельныйНомер,
	|	Подразделение,
	|	Должность,
	|	НоменклатураНормы,
	|	ВидВыдачи,
	|	ДопИнформация,
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры,
	|	НачалоПериода
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ТабДляОбработки",							ТабДляОбработки);
	Запрос.УстановитьПараметр("Организация",								Объект.Организация);
	Запрос.УстановитьПараметр("НеУчитыватьОстаткиПоОрганизации",			НеУчитыватьОстаткиПоОрганизации);
	Запрос.УстановитьПараметр("ВидДополнительнойИнформацииПоНоменклатуре",	Объект.ДополнительнаяИнформацияПоНоменклатуреВыдачи);
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаДляПечати = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТаблицаДляПечати.Колонки.ТабельныйНомер.Заголовок = "Табельный номер";
	ТаблицаДляПечати.Колонки.ХарактеристикаНоменклатуры.Заголовок = "Характеристика номенклатуры";
	ТаблицаДляПечати.Колонки.НоменклатураНормы.Заголовок = "Номенклатура нормы";
	ТаблицаДляПечати.Колонки.ДопИнформация.Заголовок = "Доп информация";
	ТаблицаДляПечати.Колонки.ВидВыдачи.Заголовок = "Вид выдачи";
	ТаблицаДляПечати.Колонки.НачалоПериода.Заголовок = "Начало периода";
	
	ТабДокумент = ПолучитьТабличныйДокумент(ТаблицаДляПечати);
	
	Возврат ТабДокумент;
	
КонецФункции //---АСТБ_Горюшин_Алексей_42504
