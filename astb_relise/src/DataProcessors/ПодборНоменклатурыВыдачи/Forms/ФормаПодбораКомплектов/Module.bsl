&НаКлиенте
Перем ПереноситьВДокумент;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Документ = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Предусмотрено открытие обработки только из документов.'");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Организация) Тогда
		Сообщить(НСтр("ru='В документе не заполнена организация.'"));
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Склад) Тогда
		Сообщить(НСтр("ru='В документе не заполнен склад.'"));
		Отказ = Истина;
	КонецЕсли;
		
	Элементы.ТолькоВНаличии.Заголовок = "Только в наличии на складе: " + СокрЛП(Параметры.Склад.Наименование);
	
	ТаблицаДокумента = ПолучитьИзВременногоХранилища(Параметры.АдресВременногоХранилищаТаблицы);
	
	Объект.ПодобраннаяНоменклатура.Загрузить(ТаблицаДокумента);
	
	УстановитьПараметрыОтбораНаСервере();
	
	ВосстановитьНастройкиФормы();
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиФормы()
	//не имеет смысла для этой формы
	//Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Обработка_ПодборНоменклатураВыдачи_ФормаПодбораКомплектов");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыОтбораНаСервере()
	
	Если ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокНоменклатуры,		"ОрганизацияДляОстатков",	Справочники.Организации.ПустаяСсылка(),	Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокХарактеристик,	"ОрганизацияДляОстатков",	Справочники.Организации.ПустаяСсылка(),	Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокНоменклатуры,		"ОрганизацияДляОстатков",	Параметры.Организация,	Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокХарактеристик,	"ОрганизацияДляОстатков",	Параметры.Организация,	Истина);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокНоменклатуры,		"Период",		ТекущаяДата(),			Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокНоменклатуры,		"Склад",		Параметры.Склад,		Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокНоменклатуры,		"Организация",	Параметры.Организация,	Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокХарактеристик,	"Организация",	Параметры.Организация,	Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокХарактеристик,	"Период",		ТекущаяДата(),			Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокХарактеристик,	"Склад",		Параметры.Склад,		Истина);
	
	Если ЗначениеЗаполнено(Параметры.Поставщик) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокНоменклатуры,"Поставщик",	Параметры.Поставщик,		Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокНоменклатуры,"Поставщик",	ПолучитьСписокПоставщиков(),Истина);
	КонецЕсли;
	
	//--АСТБ-_Овсянников_---------------------------------------------------------------------------------
	Если ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокКомплектующих,	"ОрганизацияДляОстатков",	Справочники.Организации.ПустаяСсылка(),	Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокХарактеристикКомплектующих,	"ОрганизацияДляОстатков",	Справочники.Организации.ПустаяСсылка(),	Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокКомплектующих,    "ОрганизацияДляОстатков",	Параметры.Организация,	Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокХарактеристикКомплектующих,	"ОрганизацияДляОстатков",	Параметры.Организация,	Истина);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокКомплектующих,		"Период",		ТекущаяДата(),			Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокКомплектующих,		"Склад",		Параметры.Склад,		Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокКомплектующих,		"Организация",	Параметры.Организация,	Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокХарактеристикКомплектующих,		"Период",		ТекущаяДата(),			Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокХарактеристикКомплектующих,		"Склад",		Параметры.Склад,		Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокХарактеристикКомплектующих,		"Организация",	Параметры.Организация,	Истина);
		
	Если Параметры.ОперацияКомплектации = Перечисления.ВидыОперацийКомплектации.Комплектация Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокНоменклатуры,"Комплект",	Истина,		Истина);
	Иначе	
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ЭтаФорма.СписокНоменклатуры,"Комплект",	Ложь,		Истина);
	КонецЕсли
	//--АСТБ-_Овсянников_---------------------------------------------------------------------------------
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокПоставщиков()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Поставщики.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Поставщики
	|ГДЕ
	|	Поставщики.ЭтоГруппа = ЛОЖЬ";
	
	Возврат запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");	
	
КонецФункции

&НаКлиенте
Процедура СписокНоменклатурыПриАктивизацииСтроки(Элемент)
	
	Если ЭтаФорма.Элементы.СписокНоменклатуры.ТекущаяСтрока = Неопределено Тогда
		ТекущаяНоменклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокХарактеристик.Отбор, "Владелец", ТекущаяНоменклатура,ВидСравненияКомпоновкиДанных.Равно, "Владелец", Истина);
	Иначе
		Если ЗначениеЗаполнено(ЭтаФорма.Элементы.СписокНоменклатуры.ТекущаяСтрока) Тогда
			ТекущаяНоменклатура = ЭтаФорма.Элементы.СписокНоменклатуры.ТекущаяСтрока;
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокХарактеристик.Отбор, "Владелец", ТекущаяНоменклатура,ВидСравненияКомпоновкиДанных.Равно, "Владелец", Истина);
		Иначе
			ТекущаяНоменклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокХарактеристик.Отбор, "Владелец", ТекущаяНоменклатура,ВидСравненияКомпоновкиДанных.Равно, "Владелец", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	ЭтаФорма.ТекущаяНоменклатура = ТекущаяНоменклатура;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПереноситьВДокумент = Истина;	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СохранитьНастройкиФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиФормыНаСервере()
	
	//ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Обработка_ПодборНоменклатураВыдачи_ФормаПодбораКомплектов", , Новый Структура("ТекКомплектующее,ТекКомплект,ТекущаяНоменклатура",ЭтаФорма.ТекКомплектующее, ЭтаФорма.ТекКомплект, ЭтаФорма.ТекущаяНоменклатура));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПереноситьВДокумент = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ПереноситьВДокумент Тогда
		
		АдресРезультатаПодбораВХранилище = ПоместитьРезультатыПодбораВХранилище(Не Элементы.СписокНоменклатуры.ТекущиеДанные.Свойство("Цена"));
		
		Структура = Новый Структура("АдресРезультатаПодбораВХранилище", АдресРезультатаПодбораВХранилище);
		ОповеститьОВыборе(Структура);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьРезультатыПодбораВХранилище(РассчитыватьЦены)
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Если РассчитыватьЦены ТОгда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДляВыгрузки.НоменклатураНормы КАК НоменклатураНормы,
		|	ТаблицаДляВыгрузки.Номенклатура КАК Номенклатура,
		|	ТаблицаДляВыгрузки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ТаблицаДляВыгрузки.Количество КАК Количество
		|ПОМЕСТИТЬ ВТ_ТаблицаДляВыгрузки
		|ИЗ
		|	&ТаблицаДляВыгрузки КАК ТаблицаДляВыгрузки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
		|ПОМЕСТИТЬ ВТ_ЦеныНоменклатуры
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ПериодАнализа, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТаблицаДляВыгрузки.НоменклатураНормы КАК НоменклатураНормы,
		|	ВТ_ТаблицаДляВыгрузки.Номенклатура КАК Номенклатура,
		|	ВТ_ТаблицаДляВыгрузки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ВТ_ТаблицаДляВыгрузки.Количество КАК Количество,
		|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) КАК Цена,
		|	ВТ_ТаблицаДляВыгрузки.Количество * ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) КАК Сумма
		|ИЗ
		|	ВТ_ТаблицаДляВыгрузки КАК ВТ_ТаблицаДляВыгрузки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
		|		ПО ВТ_ТаблицаДляВыгрузки.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура";
		
		Запрос.УстановитьПараметр("ТаблицаДляВыгрузки",	ТекущийОбъект.ПодобраннаяНоменклатура.Выгрузить());
		Запрос.УстановитьПараметр("ПериодАнализа",		ТекущаяДата());
		Запрос.УстановитьПараметр("Организация",		ЭтаФорма.Параметры.Документ.Организация);
		
		ТаблицаДляВыгрузки = Запрос.Выполнить().Выгрузить();
	Иначе
		ТаблицаДляВыгрузки = ТекущийОбъект.ПодобраннаяНоменклатура.Выгрузить();
	КонецЕсли;
	
	АдресРезультатаПодбораВХранилище = ПоместитьВоВременноеХранилище(ТаблицаДляВыгрузки, УникальныйИдентификатор);
	
	Возврат АдресРезультатаПодбораВХранилище;
	
КонецФункции

&НаКлиенте
Процедура ПодобраннаяНоменклатураПриИзменении(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущийЭлемент.Имя = "ПодобраннаяНоменклатураКоличество" ИЛИ Элемент.ТекущийЭлемент.Имя = "ПодобраннаяНоменклатураЦена" Тогда
		Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	МассивНовыхСтрок = Новый Массив;
	
	МассивПереносимойНоменклатуры = ПараметрыПеретаскивания.Значение;
	
	Для Каждого ЭлементМассива Из МассивПереносимойНоменклатуры Цикл
		
		Элементы.СписокНоменклатуры.ТекущаяСтрока = ЭлементМассива;
		
		ТекущиеДанные = Элементы.СписокНоменклатуры.ТекущиеДанные;
		
		МассивХарактеристик = ПолучитьМассивХарактеристикНоменклатуры(ТекущиеДанные.Ссылка);
		
		Если Элементы.СписокНоменклатуры.ТекущиеДанные.Свойство("Цена") Тогда
			Если МассивХарактеристик.Количество() = 0 Тогда
				МассивНовыхСтрок.Добавить(Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Количество, Цена, Сумма",ТекущиеДанные.Ссылка,ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"),1,ТекущиеДанные.Цена,ТекущиеДанные.Цена));
			Иначе
				Для Каждого ЭлементМассиваХарактеристик Из МассивХарактеристик Цикл
					МассивНовыхСтрок.Добавить(Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Количество, Цена, Сумма",ТекущиеДанные.Ссылка,ЭлементМассиваХарактеристик,1,ТекущиеДанные.Цена,ТекущиеДанные.Цена));
				КонецЦикла;
			КонецЕсли;
		Иначе
			Если МассивХарактеристик.Количество() = 0 Тогда
				МассивНовыхСтрок.Добавить(Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Количество",ТекущиеДанные.Ссылка,ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"),1));
			Иначе
				Для Каждого ЭлементМассиваХарактеристик Из МассивХарактеристик Цикл
					МассивНовыхСтрок.Добавить(Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Количество",ТекущиеДанные.Ссылка,ЭлементМассиваХарактеристик,1));
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ЭлементМассиваНовыхСтрок Из МассивНовыхСтрок Цикл
		
		НайденныеСтроки = Объект.ПодобраннаяНоменклатура.НайтиСтроки(НОВЫЙ Структура("Номенклатура, ХарактеристикаНоменклатуры",ЭлементМассиваНовыхСтрок.Номенклатура,ЭлементМассиваНовыхСтрок.ХарактеристикаНоменклатуры));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			ТекущаяСтрока = Объект.ПодобраннаяНоменклатура.Добавить();
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока,ЭлементМассиваНовыхСтрок);
		Иначе
			ТекущаяСтрока 				= НайденныеСтроки[0]; 
			ТекущаяСтрока.Количество 	= ТекущаяСтрока.Количество + 1;
			ТекущаяСтрока.Сумма 		= ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ МассивНовыхСтрок.Количество() = 0 Тогда
		
		Элементы.ПодобраннаяНоменклатура.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивХарактеристикНоменклатуры(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец",Номенклатура);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаКлиенте
Процедура СписокХарактеристикОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	МассивНовыхСтрок = Новый Массив;
	
	МассивПереносимойНоменклатуры = ПараметрыПеретаскивания.Значение;
	
	Для Каждого ЭлементМассива Из МассивПереносимойНоменклатуры Цикл
		
		Элементы.СписокХарактеристик.ТекущаяСтрока = ЭлементМассива;
		ТекущиеДанные = Элементы.СписокХарактеристик.ТекущиеДанные;
		
		Элементы.СписокНоменклатуры.ТекущаяСтрока = ТекущиеДанные.Владелец;
		ТекущиеДанныеНоменклатура = Элементы.СписокНоменклатуры.ТекущиеДанные;
		
		Если Элементы.СписокНоменклатуры.ТекущиеДанные.Свойство("Цена") Тогда
			МассивНовыхСтрок.Добавить(Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Количество, Цена, Сумма",ТекущиеДанные.Владелец,ЭлементМассива,1,ТекущиеДанныеНоменклатура.Цена,ТекущиеДанныеНоменклатура.Цена));
		Иначе
			МассивНовыхСтрок.Добавить(Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Количество",ТекущиеДанные.Владелец,ЭлементМассива,1));
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ЭлементМассиваНовыхСтрок Из МассивНовыхСтрок Цикл
		
		НайденныеСтроки = Объект.ПодобраннаяНоменклатура.НайтиСтроки(НОВЫЙ Структура("Номенклатура, ХарактеристикаНоменклатуры",ЭлементМассиваНовыхСтрок.Номенклатура,ЭлементМассиваНовыхСтрок.ХарактеристикаНоменклатуры));
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			ТекущаяСтрока = Объект.ПодобраннаяНоменклатура.Добавить();
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока,ЭлементМассиваНовыхСтрок);
		Иначе
			ТекущаяСтрока 				= НайденныеСтроки[0]; 
			ТекущаяСтрока.Количество 	= ТекущаяСтрока.Количество + 1;
			ТекущаяСтрока.Сумма 		= ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ МассивНовыхСтрок.Количество() = 0 Тогда
		
		Элементы.ПодобраннаяНоменклатура.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборТолькоВНаличии() Экспорт
	
	// Для списка номенклатуры.
	ГруппаОтбораТолькоВНаличииНоменклатура = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		ЭтаФорма.СписокНоменклатуры.Отбор.Элементы,
		"ГруппаТолькоВНаличии",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ГруппаОтбораТолькоВНаличииНоменклатура,
		"Остаток",
		0,
		ВидСравненияКомпоновкиДанных.Больше,
		,
		ЭтаФорма.ТолькоВНаличии);
	
	// Для списка характеристик.
	ГруппаОтбораТолькоВНаличииХарактеристики = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
		ЭтаФорма.СписокХарактеристик.Отбор.Элементы,
		"ГруппаТолькоВНаличии",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		ГруппаОтбораТолькоВНаличииХарактеристики,
		"Остаток",
		0,
		ВидСравненияКомпоновкиДанных.Больше,
		,
		ЭтаФорма.ТолькоВНаличии);
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоВНаличииПриИзменении(Элемент)
	
	УстановитьОтборТолькоВНаличии();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокКомплектующихПриАктивизацииСтроки(Элемент)
	
	Если ЭтаФорма.Элементы.СписокКомплектующих.ТекущаяСтрока = Неопределено Тогда
		ТекКомплектующее = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		//ТекКомплект = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"); 
		//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокХарактеристик.Отбор, "Владелец", ТекущаяНоменклатура,ВидСравненияКомпоновкиДанных.Равно, "Владелец", Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокХарактеристикКомплектующих.Отбор, "Владелец", ТекКомплектующее, ВидСравненияКомпоновкиДанных.Равно, "Владелец", Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокНоменклатуры.Отбор, "Комплектующее", ТекКомплектующее, ВидСравненияКомпоновкиДанных.Равно, "Комплектующее", Ложь);
	Иначе
		Если ЗначениеЗаполнено(ЭтаФорма.Элементы.СписокКомплектующих.ТекущиеДанные.Номенклатура) Тогда
			ТекКомплектующее = ЭтаФорма.Элементы.СписокКомплектующих.ТекущиеДанные.Номенклатура;
			//ТекКомплект = ЭтаФорма.Элементы.СписокКомплектующих.ТекущиеДанные.Ссылка;
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокХарактеристикКомплектующих.Отбор, "Владелец", ТекКомплектующее, ВидСравненияКомпоновкиДанных.Равно, "Владелец", Истина);
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокНоменклатуры.Отбор, "Комплектующее", ТекКомплектующее, ВидСравненияКомпоновкиДанных.Равно, "Комплектующее", Истина);
			СписокНоменклатурыПриАктивизацииСтроки(Элемент);
		Иначе
			ТекКомплектующее = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокХарактеристикКомплектующих.Отбор, "Владелец", ТекКомплектующее, ВидСравненияКомпоновкиДанных.Равно, "Владелец", Ложь);
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ЭтаФорма.СписокНоменклатуры.Отбор, "Комплектующее", ТекКомплектующее, ВидСравненияКомпоновкиДанных.Равно, "Комплектующее", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	ЭтаФорма.ТекКомплектующее = ТекКомплектующее;
	ЭтаФорма.ТекКомплект = ТекКомплект;
	
КонецПроцедуры
