
&НаКлиенте
Процедура ДеревоНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле.Имя = "ДеревоНоменклатурыКоличество" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда//открываем карточку номенклатуры
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Номенклатура);
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", ПараметрыФормы);
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.ХарактеристикаНоменклатуры) Тогда//открываем карточку характеристики номенклатуры
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.ХарактеристикаНоменклатуры);
		ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.Форма.ФормаЭлемента", ПараметрыФормы);	
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.НоменклатураНормы) Тогда//открываем карточку номенклатуры нормы
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.НоменклатураНормы);
		ОткрытьФорму("Справочник.НоменклатураНормОрганизации.Форма.ФормаЭлемента", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНоменклатурыПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.ХарактеристикаНоменклатуры) ИЛИ (ТекущиеДанные.Представление = "Без размера.") Тогда
			Отказ = Ложь;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНоменклатурыИспользоватьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ХарактеристикаНоменклатуры) ИЛИ (ТекущиеДанные.Представление = "Без размера.") Тогда
		
		Если ТекущиеДанные.Использовать = 0 Тогда
			ТекущиеДанные.Сумма 	 = 0;
			ТекущиеДанные.Количество = 0;
		КонецЕсли;
		
		ПроцедурыРаботыСНормамиКлиент.ОбходДереваВверх(ТекущиеДанные);
		ПроцедурыРаботыСНормамиКлиент.ОбходДереваВниз(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ДанныеДляПереносаВДокумент = ПолучитьДанныеДляПереносаВДокумент(); 
	
	Если ДанныеДляПереносаВДокумент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Структура = Новый Структура("АдресРезультатаПодбораВХранилище", ДанныеДляПереносаВДокумент);
	
	Закрыть(КодВозвратаДиалога.ОК);
	
	ОповеститьОВыборе(Структура);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДляПереносаВДокумент()
	
	ДеревоДанных = РеквизитФормыВЗначение("ДеревоНоменклатуры");
	
	ТаблицаДанныхДляПереносаВДокумент = Новый ТаблицаЗначений;
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("ИдентификаторСтрокиДокумента");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("НормаВыдачи");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("НоменклатураНормы");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("Номенклатура");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("ХарактеристикаНоменклатуры");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("Количество");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("Цена");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("Сумма");
	
	Для Каждого КорневаяВетка Из ДеревоДанных.Строки Цикл
		
		Для Каждого ВеткаИдентификатораСтрокиДокумента Из КорневаяВетка.Строки Цикл
			
			Если ВеткаИдентификатораСтрокиДокумента.Использовать = 0 Тогда
				
				НоваяСтрока = ТаблицаДанныхДляПереносаВДокумент.Добавить();
				НоваяСтрока.ИдентификаторСтрокиДокумента 	= ВеткаИдентификатораСтрокиДокумента.ИдентификаторСтрокиДокумента;
				НоваяСтрока.НормаВыдачи 					= ВеткаИдентификатораСтрокиДокумента.НормаВыдачи;
				НоваяСтрока.НоменклатураНормы 				= ВеткаИдентификатораСтрокиДокумента.НоменклатураНормы;
				НоваяСтрока.Номенклатура 					= Справочники.Номенклатура.ПустаяСсылка();
				НоваяСтрока.ХарактеристикаНоменклатуры 		= Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
				НоваяСтрока.Количество 						= 0;
				НоваяСтрока.Цена 							= 0;
				НоваяСтрока.Сумма 							= 0;
				
				Продолжить;
				
			КонецЕсли;
			
			Для Каждого ВеткаНоменклатуры Из ВеткаИдентификатораСтрокиДокумента.Строки Цикл
				
				Если ВеткаНоменклатуры.Использовать = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Для Каждого ВеткаРазмера Из ВеткаНоменклатуры.Строки Цикл
					
					Если ВеткаРазмера.Использовать = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					НоваяСтрока = ТаблицаДанныхДляПереносаВДокумент.Добавить();
					НоваяСтрока.ИдентификаторСтрокиДокумента 	= ВеткаИдентификатораСтрокиДокумента.ИдентификаторСтрокиДокумента;
					НоваяСтрока.НормаВыдачи 					= ВеткаИдентификатораСтрокиДокумента.НормаВыдачи;
					НоваяСтрока.НоменклатураНормы 				= ВеткаИдентификатораСтрокиДокумента.НоменклатураНормы;
					НоваяСтрока.Номенклатура 					= ВеткаНоменклатуры.Номенклатура;
					НоваяСтрока.ХарактеристикаНоменклатуры 		= ВеткаРазмера.ХарактеристикаНоменклатуры;
					НоваяСтрока.Количество 						= ВеткаРазмера.Количество;
					НоваяСтрока.Цена 							= ВеткаРазмера.Цена;
					НоваяСтрока.Сумма 							= ВеткаРазмера.Сумма;
					
					СтрокаДобавлена = Истина;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
			
	КонецЦикла;	
	
	АдресРезультатаПодбораВХранилище = ПоместитьВоВременноеХранилище(ТаблицаДанныхДляПереносаВДокумент, УникальныйИдентификатор);
	Возврат АдресРезультатаПодбораВХранилище;
				
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Организация 	= Параметры.Организация;
	Объект.Склад 		= Параметры.Склад;
	ЭтаФорма.Сотрудник 	= Параметры.Сотрудник;
	
	ЗаполнитьДеревоНоменклатуры();
	
КонецПроцедуры

Процедура ЗаполнитьДеревоНоменклатуры()
	
	ТаблицаДокумента = ПолучитьИзВременногоХранилища(Параметры.АдресВременногоХранилищаТаблицы);
	
	ДеревоДанных = РеквизитФормыВЗначение("ДеревоНоменклатуры");
	ДеревоДанных.Строки.Очистить();
	
	ТаблицаНоменклатурыНормСотрудников = ТаблицаДокумента.Скопировать(,"НоменклатураНормы");
	ТаблицаНоменклатурыНормСотрудников.Колонки.Добавить("Сотрудник",Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаНоменклатурыНормСотрудников.ЗаполнитьЗначения(Параметры.Сотрудник,"Сотрудник");
	
	ТаблицаРазмеров = ПроцедурыРаботыСНормамиСервер.ПодобратьРазмерыДляСотрудников(ТаблицаНоменклатурыНормСотрудников,Параметры.Дата,Параметры.Организация);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаИзДокумента.НормаВыдачи,
	|	ТаблицаИзДокумента.НоменклатураНормы,
	|	ТаблицаИзДокумента.Номенклатура,
	|	ТаблицаИзДокумента.ИдентификаторСтрокиДокумента,
	|	ТаблицаИзДокумента.ХарактеристикаНоменклатуры,
	|	ТаблицаИзДокумента.Количество,
	|	ТаблицаИзДокумента.Цена,
	|	ТаблицаИзДокумента.Сумма
	|ПОМЕСТИТЬ ВТ_ТаблицаИзДокумента
	|ИЗ
	|	&ТаблицаИзДокумента КАК ТаблицаИзДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРазмеров.Сотрудник,
	|	ТаблицаРазмеров.НоменклатураНормы КАК НоменклатураНормыОрганизации,
	|	ТаблицаРазмеров.Номенклатура,
	|	ТаблицаРазмеров.ХарактеристикаНоменклатуры,
	|	ТаблицаРазмеров.ПолНоменклатуры,
	|	ТаблицаРазмеров.ЕстьРазмеры КАК ЕстьХарактеристики,
	|	ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетУсловия,
	|	ТаблицаРазмеров.Приоритет КАК ПриоритетСоответствия,
	|	ТаблицаРазмеров.ПриоритетРазмера,
	|	ТаблицаРазмеров.ТолькоДляСотрудника,
	|	ТаблицаРазмеров.ВидАнтропометрии,
	|	ТаблицаРазмеров.ЗначениеАнтропометрии,
	|	ТаблицаРазмеров.Рост,
	|	ТаблицаРазмеров.ИспользоватьРост,
	|	ТаблицаРазмеров.ВидСИЗ,
	|	ТаблицаРазмеров.Комплект,
	|	ТаблицаРазмеров.КоличествоВКомплекте КАК Количество
	|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров
	|ИЗ
	|	&ТаблицаРазмеров КАК ТаблицаРазмеров
	|ГДЕ
	|	ТаблицаРазмеров.КоличествоВКомплекте = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры,
	|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ОстаткиНаСкладе
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&ПериодРасчета,
	|			Организация = &ОрганизацияДляОстатков
	|				И Склад = &Склад) КАК ОстаткиНоменклатурыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура,
	|	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаНоменклатуры,
	|	ХарактеристикиНоменклатуры.Метрика
	|ПОМЕСТИТЬ ВТ_ХарактеристикиНоменклатуры
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров.НоменклатураНормыОрганизации,
	|	ВТ_ТаблицаРазмеров.Номенклатура,
	|	ЕСТЬNULL(ВТ_ХарактеристикиНоменклатуры.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаРазмеров.ЕстьХарактеристики,
	|	ВТ_ТаблицаРазмеров.ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров.ПриоритетУсловия,
	|	ЕСТЬNULL(ВТ_ХарактеристикиНоменклатуры.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) = ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК РазмерПодходит
	|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров_ВсеРазмеры
	|ИЗ
	|	ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ХарактеристикиНоменклатуры КАК ВТ_ХарактеристикиНоменклатуры
	|		ПО ВТ_ТаблицаРазмеров.Номенклатура = ВТ_ХарактеристикиНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
	|ПОМЕСТИТЬ ВТ_ЦеныНоменкдатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ПериодРасчета, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.НоменклатураНормыОрганизации,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ЕстьХарактеристики,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ПриоритетУсловия КАК ПриоритетУсловия,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.РазмерПодходит,
	|	ЕСТЬNULL(ВТ_ОстаткиНаСкладе.КоличествоОстаток, 0) КАК Остаток,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ОстаткиНаСкладе.КоличествоОстаток, 0) = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьНаСкладе,
	|	ЕСТЬNULL(ВТ_ЦеныНоменкдатуры.Цена, 0) КАК Цена
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры КАК ВТ_ТаблицаРазмеров_ВсеРазмеры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиНаСкладе КАК ВТ_ОстаткиНаСкладе
	|		ПО ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура = ВТ_ОстаткиНаСкладе.Номенклатура
	|			И ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры = ВТ_ОстаткиНаСкладе.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменкдатуры КАК ВТ_ЦеныНоменкдатуры
	|		ПО ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура = ВТ_ЦеныНоменкдатуры.Номенклатура
	|ГДЕ
	|	НЕ ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ТаблицаИзДокумента.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ТаблицаИзДокумента.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ТаблицаИзДокумента.ИдентификаторСтрокиДокумента КАК ИдентификаторСтрокиДокумента,
	|	ВТ_ТаблицаИзДокумента.Количество,
	|	ВТ_Результат.Номенклатура КАК Номенклатура,
	|	ВТ_Результат.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ВТ_Результат.ЕстьХарактеристики, ЛОЖЬ) КАК ЕстьХарактеристики,
	|	ВТ_Результат.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_Результат.ПриоритетУсловия КАК ПриоритетУсловия,
	|	ВТ_Результат.РазмерПодходит,
	|	ВТ_Результат.Остаток,
	|	ВТ_Результат.ЕстьНаСкладе,
	|	ВТ_Результат.Цена,
	|	ВТ_Результат.Цена * ВТ_ТаблицаИзДокумента.Количество КАК Сумма
	|ИЗ
	|	ВТ_ТаблицаИзДокумента КАК ВТ_ТаблицаИзДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Результат КАК ВТ_Результат
	|		ПО ВТ_ТаблицаИзДокумента.НоменклатураНормы = ВТ_Результат.НоменклатураНормыОрганизации
	|ГДЕ
	|	НЕ ВТ_Результат.Номенклатура ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИдентификаторСтрокиДокумента,
	|	ПриоритетУсловия,
	|	ПриоритетСоответствия,
	|	ВТ_Результат.ХарактеристикаНоменклатуры.КодSAP
	|ИТОГИ ПО
	|	ИдентификаторСтрокиДокумента,
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры";
	
	Запрос.УстановитьПараметр("ПериодРасчета",				Параметры.Дата);
	Запрос.УстановитьПараметр("Организация",				Параметры.Организация);
	Запрос.УстановитьПараметр("Склад",						Параметры.Склад);
	Запрос.УстановитьПараметр("ТаблицаИзДокумента", 		ТаблицаДокумента);
	Запрос.УстановитьПараметр("ТаблицаРазмеров", 			ТаблицаРазмеров);
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",		?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"),Справочники.Организации.ПустаяСсылка(),Параметры.Организация));
	
	КорневаяВетка = ДеревоДанных.Строки.Добавить();
	КорневаяВетка.Представление = "Данные для подбора в документ выдачи";
	
	Результат = Запрос.Выполнить();
	
	ВыборкаПоИдентификаторуСтроки = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоИдентификаторуСтроки.Следующий() Цикл
		
		НайденныеСтрокиТаблицыДокумента = ТаблицаДокумента.НайтиСтроки(Новый Структура("ИдентификаторСтрокиДокумента",ВыборкаПоИдентификаторуСтроки.ИдентификаторСтрокиДокумента));
		
		ВеткаСтрокиДокумента 								= КорневаяВетка.Строки.Добавить();
		ВеткаСтрокиДокумента.ИдентификаторСтрокиДокумента 	= ВыборкаПоИдентификаторуСтроки.ИдентификаторСтрокиДокумента;
		ВеткаСтрокиДокумента.НормаВыдачи 					= НайденныеСтрокиТаблицыДокумента[0].НормаВыдачи;
		ВеткаСтрокиДокумента.НоменклатураНормы 				= НайденныеСтрокиТаблицыДокумента[0].НоменклатураНормы;
		ВеткаСтрокиДокумента.Представление 					= НайденныеСтрокиТаблицыДокумента[0].НормаВыдачи.Наименование + " --> " + НайденныеСтрокиТаблицыДокумента[0].НоменклатураНормы.Наименование;
		
		ВыборкаПоНоменклатуре = ВыборкаПоИдентификаторуСтроки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоНоменклатуре.Следующий() Цикл
			
			ВеткаНоменклатуры = ВеткаСтрокиДокумента.Строки.Добавить();
			ВеткаНоменклатуры.Номенклатура 	= ВыборкаПоНоменклатуре.Номенклатура;
			
			ВеткаНоменклатурыЗаполнена = Ложь;
			
			ВыборкаПоХарактеристикам = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоХарактеристикам.Следующий() Цикл
				
				ВеткаРазмера = ВеткаНоменклатуры.Строки.Добавить();
				ВеткаРазмера.ХарактеристикаНоменклатуры = ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры;
				
				ВеткаРазмераЗаполнена = Ложь;
				
				ВыборкаПоОстаткам = ВыборкаПоХарактеристикам.Выбрать();
				Пока ВыборкаПоОстаткам.Следующий() Цикл
					
					Если НЕ ВеткаНоменклатурыЗаполнена И ЗначениеЗаполнено(ВыборкаПоНоменклатуре.Номенклатура) Тогда
						ВеткаНоменклатуры.Представление = СокрЛП(ВыборкаПоНоменклатуре.Номенклатура.Наименование);
						ВеткаНоменклатуры.Цена 			= ВыборкаПоОстаткам.Цена;
						ВеткаНоменклатурыЗаполнена = Истина;
					КонецЕсли;
					
					Если НЕ ВеткаРазмераЗаполнена Тогда
						Если ВыборкаПоОстаткам.ЕстьХарактеристики Тогда
							Если ВыборкаПоОстаткам.РазмерПодходит Тогда
								ВеткаРазмера.Представление 	= СокрЛП(ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры.Наименование) + " (подходит по антропометрии)"; 
								ВеткаРазмера.РазмерПодходит = Истина;
							Иначе
								ВеткаРазмера.Представление = СокрЛП(ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры.Наименование);
							КонецЕсли;
						Иначе
							ВеткаРазмера.Представление = "Без размера.";
							ВеткаРазмера.РазмерПодходит = Истина;
						КонецЕсли;
						ВеткаРазмераЗаполнена 		= Истина;
						ВеткаРазмера.Остаток 		= ВыборкаПоОстаткам.Остаток;
						ВеткаРазмера.ЕстьНаСкладе 	= ВыборкаПоОстаткам.ЕстьНаСкладе;
						ВеткаРазмера.Цена 			= ВыборкаПоОстаткам.Цена;
					КонецЕсли;
					
				КонецЦикла;
				
				//подтянем количество из документа
				СтруктураПоиска = Новый Структура("НормаВыдачи,НоменклатураНормы,Номенклатура,ХарактеристикаНоменклатуры",
													НайденныеСтрокиТаблицыДокумента[0].НормаВыдачи,НайденныеСтрокиТаблицыДокумента[0].НоменклатураНормы,
													ВыборкаПоХарактеристикам.Номенклатура,ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры);
													
				НайденныеСтроки = ТаблицаДокумента.НайтиСтроки(СтруктураПоиска);
				
				Если НЕ НайденныеСтроки.Количество() = 0 Тогда
					
					ВеткаРазмера.Количество 	= НайденныеСтроки[0].Количество;
					ВеткаРазмера.Сумма 			= ВеткаРазмера.Количество * ВеткаРазмера.Цена;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;	
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоДанных,"ДеревоНоменклатуры");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьДеревоДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоДанных()
	
	ЭлементыДерева = ЭтаФорма.ДеревоНоменклатуры.ПолучитьЭлементы();
	
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		
		ЭтаФорма.Элементы.ДеревоНоменклатуры.Развернуть(ЭлементДерева.ПолучитьИдентификатор(),Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНоменклатурыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ХарактеристикаНоменклатуры) ИЛИ (ТекущиеДанные.Представление = "Без размера.") Тогда
		
		ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена;
		Если ТекущиеДанные.Количество = 0 Тогда
			ТекущиеДанные.Использовать = 0;
		Иначе
			ТекущиеДанные.Использовать = 1;
		КонецЕсли;
		
		ПроцедурыРаботыСНормамиКлиент.ОбходДереваВверх(ТекущиеДанные);
		ПроцедурыРаботыСНормамиКлиент.ОбходДереваВниз(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры
