
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Организация 			= Параметры.Организация;
	Объект.Склад 				= Параметры.Склад;
	Объект.НормаВыдачи 			= Параметры.СтруктураТекущихДанных.НормаВыдачи;
	Объект.НоменклатураНормы 	= Параметры.СтруктураТекущихДанных.НоменклатураНормы;
	
	Если Параметры.СтруктураТекущихДанных.Свойство("Сотрудник") Тогда
		
		//ЭтаФорма.АвтоЗаголовок = Ложь;
		//ЭтаФорма.Заголовок = СокрЛП(Параметры.СтруктураТекущихДанных.Сотрудник.Наименование) + " (Таб. №" + СокрЛП(Параметры.СтруктураТекущихДанных.Сотрудник.ТабельныйНомер) + ")";
		ЭтаФорма.Сотрудник = Параметры.СтруктураТекущихДанных.Сотрудник;
		
	Иначе
		
		Отказ = Истина;
		
	КонецЕсли;
	
	КомплектРазобран = ЗначениеЗаполнено(Параметры.СтруктураТекущихДанных.Комплект);
	
	Если Объект.Организация.ИспользоватьПроцентИзноса Тогда
		ЗаполнитьДеревоНоменклатурыСИзносом();
	Иначе
		ЗаполнитьДеревоНоменклатуры();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьДеревоДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоДанных()
	
	ЭлементыДерева = ЭтаФорма.ДеревоНоменклатуры.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		ЭтаФорма.Элементы.ДеревоНоменклатуры.Развернуть(ЭлементДерева.ПолучитьИдентификатор(),Ложь);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоНоменклатурыСИзносом()
	
	ДеревоДанных = РеквизитФормыВЗначение("ДеревоНоменклатуры");
	ДеревоДанных.Строки.Очистить();
	
	ТаблицаНоменклатурыНормСотрудников = НОВЫЙ ТаблицаЗначений;
	ТаблицаНоменклатурыНормСотрудников.Колонки.Добавить("Сотрудник",		Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаНоменклатурыНормСотрудников.Колонки.Добавить("НоменклатураНормы",Новый ОписаниеТипов("СправочникСсылка.НоменклатураНормОрганизации"));
	
	НоваяСтрока 					= ТаблицаНоменклатурыНормСотрудников.Добавить();
	НоваяСтрока.Сотрудник 			= Параметры.СтруктураТекущихДанных.Сотрудник;
	НоваяСтрока.НоменклатураНормы 	= Параметры.СтруктураТекущихДанных.НоменклатураНормы;
	
	ТаблицаРазмеров = ПроцедурыРаботыСНормамиСервер.ПодобратьРазмерыДляСотрудников(ТаблицаНоменклатурыНормСотрудников,Параметры.Дата,Параметры.Организация,Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	ОстаткиНоменклатурыОстатки.ПроцентИзноса КАК ПроцентИзноса
	|ПОМЕСТИТЬ ВТ_ОстаткиНаСкладе
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&ПериодРасчета,
	|			Организация = &ОрганизацияДляОстатков
	|				И Склад = &Склад) КАК ОстаткиНоменклатурыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры,
	|	ОстаткиНоменклатурыОстатки.ПроцентИзноса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРазмеров.Сотрудник КАК Сотрудник,
	|	ТаблицаРазмеров.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаРазмеров.Номенклатура КАК Номенклатура,
	|	ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаРазмеров.ПолНоменклатуры КАК ПолНоменклатуры,
	|	ТаблицаРазмеров.ЕстьРазмеры КАК ЕстьХарактеристики,
	|	ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетУсловия,
	|	ТаблицаРазмеров.Приоритет КАК ПриоритетСоответствия,
	|	ТаблицаРазмеров.ПриоритетРазмера КАК ПриоритетРазмера,
	|	ТаблицаРазмеров.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	|	ТаблицаРазмеров.ВидАнтропометрии КАК ВидАнтропометрии,
	|	ТаблицаРазмеров.ЗначениеАнтропометрии КАК ЗначениеАнтропометрии,
	|	ТаблицаРазмеров.Рост КАК Рост,
	|	ТаблицаРазмеров.ИспользоватьРост КАК ИспользоватьРост,
	|	ТаблицаРазмеров.ВидСИЗ КАК ВидСИЗ,
	|	ТаблицаРазмеров.Комплект КАК Комплект,
	|	ТаблицаРазмеров.КоличествоВКомплекте КАК КоличествоВКомплекте
	|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров
	|ИЗ
	|	&ТаблицаРазмеров КАК ТаблицаРазмеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура,
	|	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаНоменклатуры,
	|	ХарактеристикиНоменклатуры.Метрика КАК Метрика
	|ПОМЕСТИТЬ ВТ_ХарактеристикиНоменклатуры
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_ХарактеристикиНоменклатуры.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаРазмеров.ЕстьХарактеристики КАК ЕстьХарактеристики,
	|	ВТ_ТаблицаРазмеров.ПриоритетУсловия КАК ПриоритетУсловия,
	|	ВТ_ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ХарактеристикиНоменклатуры.ХарактеристикаНоменклатуры = ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК РазмерПодходит,
	|	ВТ_ТаблицаРазмеров.КоличествоВКомплекте КАК КоличествоВКомплекте,
	|	ВТ_ТаблицаРазмеров.Комплект КАК Комплект
	|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров_ВсеРазмеры
	|ИЗ
	|	ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ХарактеристикиНоменклатуры КАК ВТ_ХарактеристикиНоменклатуры
	|		ПО ВТ_ТаблицаРазмеров.Номенклатура = ВТ_ХарактеристикиНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
	|ПОМЕСТИТЬ ВТ_ЦеныНоменкдатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ПериодРасчета, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ВТ_ОстаткиНаСкладе.ПроцентИзноса, ЗНАЧЕНИЕ(Справочник.ПроцентыИзноса.ПустаяСсылка)) КАК ПроцентИзноса,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ЕстьХарактеристики КАК ЕстьХарактеристики,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ПриоритетУсловия КАК ПриоритетУсловия,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.РазмерПодходит КАК РазмерПодходит,
	|	ЕСТЬNULL(ВТ_ОстаткиНаСкладе.КоличествоОстаток, 0) КАК Остаток,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ОстаткиНаСкладе.КоличествоОстаток, 0) < &Количество
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьНаСкладе,
	|	ЕСТЬNULL(ВТ_ЦеныНоменкдатуры.Цена, 0) КАК Цена
	|ИЗ
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры КАК ВТ_ТаблицаРазмеров_ВсеРазмеры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиНаСкладе КАК ВТ_ОстаткиНаСкладе
	|		ПО ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура = ВТ_ОстаткиНаСкладе.Номенклатура
	|			И ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры = ВТ_ОстаткиНаСкладе.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменкдатуры КАК ВТ_ЦеныНоменкдатуры
	|		ПО ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура = ВТ_ЦеныНоменкдатуры.Номенклатура
	|ГДЕ
	|	НЕ ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура ЕСТЬ NULL
	|	И ВТ_ТаблицаРазмеров_ВсеРазмеры.КоличествоВКомплекте = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриоритетУсловия,
	|	ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры.КодSAP
	|ИТОГИ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры,
	|	ПроцентИзноса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.Комплект КАК Комплект,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.КоличествоВКомплекте КАК КоличествоВКомплекте,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ЕстьХарактеристики КАК ЕстьХарактеристики,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ВТ_ОстаткиНаСкладе.ПроцентИзноса, ЗНАЧЕНИЕ(Справочник.ПроцентыИзноса.ПустаяСсылка)) КАК ПроцентИзноса,
	|	МАКСИМУМ(ВТ_ТаблицаРазмеров_ВсеРазмеры.РазмерПодходит) КАК РазмерПодходит,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_ОстаткиНаСкладе.КоличествоОстаток, 0)) КАК Остаток,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_ОстаткиНаСкладе.КоличествоОстаток, 0) < ВТ_ТаблицаРазмеров_ВсеРазмеры.КоличествоВКомплекте * &Количество
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЕстьНаСкладе,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_ЦеныНоменкдатуры.Цена, 0)) КАК Цена
	|ИЗ
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры КАК ВТ_ТаблицаРазмеров_ВсеРазмеры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиНаСкладе КАК ВТ_ОстаткиНаСкладе
	|		ПО ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура = ВТ_ОстаткиНаСкладе.Номенклатура
	|			И ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры = ВТ_ОстаткиНаСкладе.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменкдатуры КАК ВТ_ЦеныНоменкдатуры
	|		ПО ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура = ВТ_ЦеныНоменкдатуры.Номенклатура
	|ГДЕ
	|	НЕ ВТ_ТаблицаРазмеров_ВсеРазмеры.КоличествоВКомплекте = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.Комплект,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.КоличествоВКомплекте,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ЕстьХарактеристики,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ВТ_ОстаткиНаСкладе.ПроцентИзноса, ЗНАЧЕНИЕ(Справочник.ПроцентыИзноса.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Комплект,
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры";
	
	Запрос.УстановитьПараметр("ПериодРасчета",				Параметры.Дата);
	Запрос.УстановитьПараметр("Организация",				Параметры.Организация);
	Запрос.УстановитьПараметр("Склад",						Параметры.Склад);
	Запрос.УстановитьПараметр("Количество",					Параметры.СтруктураТекущихДанных.Количество);
	Запрос.УстановитьПараметр("ТаблицаРазмеров", 			ТаблицаРазмеров);
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",		?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"),Справочники.Организации.ПустаяСсылка(),Параметры.Организация));

	КорневаяВетка = ДеревоДанных.Строки.Добавить();
	КорневаяВетка.Представление = "Данные для подбора в документ выдачи";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаКомплектующих = Результат[6].Выгрузить();
	
	ВыборкаПоНоменклатуре = Результат[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоНоменклатуре.Следующий() Цикл
		
		ВеткаНоменклатуры = КорневаяВетка.Строки.Добавить();
		ВеткаНоменклатуры.Номенклатура 	= ВыборкаПоНоменклатуре.Номенклатура;
		ВеткаНоменклатуры.Количество 	= Параметры.СтруктураТекущихДанных.Количество;
				
		ВеткаНоменклатурыЗаполнена = Ложь;
		
		ВыборкаПоХарактеристикам = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоХарактеристикам.Следующий() Цикл
			
			ВыборкаПоИзносу = ВыборкаПоХарактеристикам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоИзносу.Следующий() Цикл
				
				ВеткаРазмера = ВеткаНоменклатуры.Строки.Добавить();
				ВеткаРазмера.ХарактеристикаНоменклатуры = ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры;
				
				ВеткаРазмераЗаполнена = Ложь;
				
				ВыборкаПоОстаткам = ВыборкаПоИзносу.Выбрать();
				Пока ВыборкаПоОстаткам.Следующий() Цикл
					
					Если НЕ ВеткаНоменклатурыЗаполнена Тогда
						ВеткаНоменклатуры.Представление = СокрЛП(ВыборкаПоНоменклатуре.Номенклатура.Наименование) + " К выдаче: " + Параметры.СтруктураТекущихДанных.Количество;
						ВеткаНоменклатуры.Цена 			= ВыборкаПоОстаткам.Цена;
						ВеткаНоменклатурыЗаполнена = Истина;
					КонецЕсли;
					
					Если НЕ ВеткаРазмераЗаполнена Тогда
						Если ЗначениеЗаполнено(ВыборкаПоИзносу.ПроцентИзноса) Тогда
							Если ВыборкаПоОстаткам.ЕстьХарактеристики Тогда
								Если ВыборкаПоОстаткам.РазмерПодходит Тогда
									ВеткаРазмера.Представление 	= СокрЛП(ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры.Наименование) + " (подходит по антропометрии). Износ " + ВыборкаПоИзносу.ПроцентИзноса.Код + "%"; 
									ВеткаРазмера.РазмерПодходит = Истина;
								Иначе
									ВеткаРазмера.Представление = СокрЛП(ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры.Наименование) + " Износ " + ВыборкаПоИзносу.ПроцентИзноса.Код + "%";
								КонецЕсли;
							Иначе
								ВеткаРазмера.Представление = "Без размера. Износ "  + ВыборкаПоИзносу.ПроцентИзноса.Код + "%";
								ВеткаРазмера.РазмерПодходит = Истина;
							КонецЕсли;
						Иначе
							Если ВыборкаПоОстаткам.ЕстьХарактеристики Тогда
								Если ВыборкаПоОстаткам.РазмерПодходит Тогда
									ВеткаРазмера.Представление 	= СокрЛП(ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры.Наименование) + " (подходит по антропометрии). Без износа."; 
									ВеткаРазмера.РазмерПодходит = Истина;
								Иначе
									ВеткаРазмера.Представление = СокрЛП(ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры.Наименование) + " Без износа.";
								КонецЕсли;
							Иначе
								ВеткаРазмера.Представление = "Без размера. Без износа.";
								ВеткаРазмера.РазмерПодходит = Истина;
							КонецЕсли;
						КонецЕсли;
						ВеткаРазмераЗаполнена 		= Истина;
						ВеткаРазмера.Остаток 		= ВыборкаПоОстаткам.Остаток;
						ВеткаРазмера.ЕстьНаСкладе 	= ВыборкаПоОстаткам.ЕстьНаСкладе;
						ВеткаРазмера.ПроцентИзноса 	= ВыборкаПоИзносу.ПроцентИзноса;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если ВыборкаПоНоменклатуре.Номенклатура.Комплект Тогда //формируем ветку комплектующих
			
			СтруктураПоиска = Новый Структура("Комплект",ВыборкаПоНоменклатуре.Номенклатура);
			
			НайденныеСтроки = ТаблицаКомплектующих.НайтиСтроки(СтруктураПоиска);
			
			ТекущееКомплектующее = "";
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				Если НЕ ТекущееКомплектующее = НайденнаяСтрока.Номенклатура Тогда
					
					ВеткаКомплектующих 						= ВеткаНоменклатуры.Строки.Добавить();
					ВеткаКомплектующих.Номенклатура 		= НайденнаяСтрока.Номенклатура;
					ВеткаКомплектующих.Цена 				= НайденнаяСтрока.Цена;
					ВеткаКомплектующих.Комплект 			= НайденнаяСтрока.Комплект;
					ВеткаКомплектующих.Представление 		= СокрЛП(НайденнаяСтрока.Номенклатура.Наименование) + " В комплекте: " + НайденнаяСтрока.КоличествоВКомплекте;
					ВеткаКомплектующих.КоличествоВКомплекте	= НайденнаяСтрока.КоличествоВКомплекте;
					
					ТекущееКомплектующее = НайденнаяСтрока.Номенклатура;
					
				КонецЕсли;
				
				ВеткаРазмера = ВеткаКомплектующих.Строки.Добавить();
				ВеткаРазмера.ХарактеристикаНоменклатуры = НайденнаяСтрока.ХарактеристикаНоменклатуры;
				
				Если ЗначениеЗаполнено(НайденнаяСтрока.ПроцентИзноса) Тогда
					Если НайденнаяСтрока.ЕстьХарактеристики Тогда
						Если НайденнаяСтрока.РазмерПодходит Тогда
							ВеткаРазмера.Представление 	= СокрЛП(НайденнаяСтрока.ХарактеристикаНоменклатуры.Наименование) + " (подходит по антропометрии). Износ " + НайденнаяСтрока.ПроцентИзноса.Код + "%"; 
							ВеткаРазмера.РазмерПодходит = Истина;
						Иначе
							ВеткаРазмера.Представление = СокрЛП(НайденнаяСтрока.ХарактеристикаНоменклатуры.Наименование) + " Износ " + НайденнаяСтрока.ПроцентИзноса.Код + "%";
						КонецЕсли;
					Иначе
						ВеткаРазмера.Представление = "Без размера. Износ " + НайденнаяСтрока.ПроцентИзноса.Код + "%";
						ВеткаРазмера.РазмерПодходит = Истина;
					КонецЕсли;
				Иначе
					Если НайденнаяСтрока.ЕстьХарактеристики Тогда
						Если НайденнаяСтрока.РазмерПодходит Тогда
							ВеткаРазмера.Представление 	= СокрЛП(НайденнаяСтрока.ХарактеристикаНоменклатуры.Наименование) + " (подходит по антропометрии). Без износа."; 
							ВеткаРазмера.РазмерПодходит = Истина;
						Иначе
							ВеткаРазмера.Представление = СокрЛП(НайденнаяСтрока.ХарактеристикаНоменклатуры.Наименование) + " Без износа.";
						КонецЕсли;
					Иначе
						ВеткаРазмера.Представление = "Без размера. Без износа.";
						ВеткаРазмера.РазмерПодходит = Истина;
					КонецЕсли;
				КонецЕсли;
				
				ВеткаРазмераЗаполнена 		= Истина;
				ВеткаРазмера.Остаток 		= НайденнаяСтрока.Остаток;
				ВеткаРазмера.ЕстьНаСкладе 	= НайденнаяСтрока.ЕстьНаСкладе;
				ВеткаРазмера.Комплект 		= НайденнаяСтрока.Комплект;
				ВеткаРазмера.ПроцентИзноса 	= НайденнаяСтрока.ПроцентИзноса;
				
			КонецЦикла;
			
		КонецЕсли;	
		
	КонецЦикла;
			
	ЗначениеВРеквизитФормы(ДеревоДанных,"ДеревоНоменклатуры");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоНоменклатуры()
	
	ДеревоДанных = РеквизитФормыВЗначение("ДеревоНоменклатуры");
	ДеревоДанных.Строки.Очистить();
	
	ТаблицаНоменклатурыНормСотрудников = НОВЫЙ ТаблицаЗначений;
	ТаблицаНоменклатурыНормСотрудников.Колонки.Добавить("Сотрудник",		Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаНоменклатурыНормСотрудников.Колонки.Добавить("НоменклатураНормы",Новый ОписаниеТипов("СправочникСсылка.НоменклатураНормОрганизации"));
	
	НоваяСтрока 					= ТаблицаНоменклатурыНормСотрудников.Добавить();
	НоваяСтрока.Сотрудник 			= Параметры.СтруктураТекущихДанных.Сотрудник;
	НоваяСтрока.НоменклатураНормы 	= Параметры.СтруктураТекущихДанных.НоменклатураНормы;
	
	ТаблицаРазмеров = ПроцедурыРаботыСНормамиСервер.ПодобратьРазмерыДляСотрудников(ТаблицаНоменклатурыНормСотрудников,Параметры.Дата,Параметры.Организация,Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры,
	|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ОстаткиНаСкладе
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&ПериодРасчета,
	|			Организация = &ОрганизацияДляОстатков
	|				И Склад = &Склад) КАК ОстаткиНоменклатурыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРазмеров.Сотрудник,
	|	ТаблицаРазмеров.НоменклатураНормы,
	|	ТаблицаРазмеров.Номенклатура,
	|	ТаблицаРазмеров.ХарактеристикаНоменклатуры,
	|	ТаблицаРазмеров.ПолНоменклатуры,
	|	ТаблицаРазмеров.ЕстьРазмеры КАК ЕстьХарактеристики,
	|	ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетУсловия,
	|	ТаблицаРазмеров.Приоритет КАК ПриоритетСоответствия,
	|	ТаблицаРазмеров.ПриоритетРазмера,
	|	ТаблицаРазмеров.ТолькоДляСотрудника,
	|	ТаблицаРазмеров.ВидАнтропометрии,
	|	ТаблицаРазмеров.ЗначениеАнтропометрии,
	|	ТаблицаРазмеров.Рост,
	|	ТаблицаРазмеров.ИспользоватьРост,
	|	ТаблицаРазмеров.ВидСИЗ,
	|	ТаблицаРазмеров.Комплект,
	|	ТаблицаРазмеров.КоличествоВКомплекте КАК КоличествоВКомплекте
	|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров
	|ИЗ
	|	&ТаблицаРазмеров КАК ТаблицаРазмеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура,
	|	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаНоменклатуры,
	|	ХарактеристикиНоменклатуры.Метрика
	|ПОМЕСТИТЬ ВТ_ХарактеристикиНоменклатуры
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров.Номенклатура,
	|	ЕСТЬNULL(ВТ_ХарактеристикиНоменклатуры.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаРазмеров.ЕстьХарактеристики,
	|	ВТ_ТаблицаРазмеров.ПриоритетУсловия,
	|	ВТ_ТаблицаРазмеров.ПриоритетСоответствия,
	|	ВТ_ХарактеристикиНоменклатуры.ХарактеристикаНоменклатуры = ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК РазмерПодходит,
	|	ВТ_ТаблицаРазмеров.КоличествоВКомплекте,
	|	ВТ_ТаблицаРазмеров.Комплект
	|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров_ВсеРазмеры
	|ИЗ
	|	ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ХарактеристикиНоменклатуры КАК ВТ_ХарактеристикиНоменклатуры
	|		ПО ВТ_ТаблицаРазмеров.Номенклатура = ВТ_ХарактеристикиНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
	|ПОМЕСТИТЬ ВТ_ЦеныНоменкдатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ПериодРасчета, Организация = &Организация) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ЕстьХарактеристики,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ПриоритетУсловия КАК ПриоритетУсловия,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.РазмерПодходит,
	|	ЕСТЬNULL(ВТ_ОстаткиНаСкладе.КоличествоОстаток, 0) КАК Остаток,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ОстаткиНаСкладе.КоличествоОстаток, 0) < &Количество
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьНаСкладе,
	|	ЕСТЬNULL(ВТ_ЦеныНоменкдатуры.Цена, 0) КАК Цена
	|ИЗ
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры КАК ВТ_ТаблицаРазмеров_ВсеРазмеры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиНаСкладе КАК ВТ_ОстаткиНаСкладе
	|		ПО ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура = ВТ_ОстаткиНаСкладе.Номенклатура
	|			И ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры = ВТ_ОстаткиНаСкладе.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменкдатуры КАК ВТ_ЦеныНоменкдатуры
	|		ПО ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура = ВТ_ЦеныНоменкдатуры.Номенклатура
	|ГДЕ
	|	НЕ ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура ЕСТЬ NULL
	|	И ВТ_ТаблицаРазмеров_ВсеРазмеры.КоличествоВКомплекте = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриоритетУсловия,
	|	ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры.КодSAP
	|ИТОГИ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.Комплект КАК Комплект,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.КоличествоВКомплекте,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ЕстьХарактеристики,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	МАКСИМУМ(ВТ_ТаблицаРазмеров_ВсеРазмеры.РазмерПодходит) КАК РазмерПодходит,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_ОстаткиНаСкладе.КоличествоОстаток, 0)) КАК Остаток,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_ОстаткиНаСкладе.КоличествоОстаток, 0) < ВТ_ТаблицаРазмеров_ВсеРазмеры.КоличествоВКомплекте * &Количество
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ) КАК ЕстьНаСкладе,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_ЦеныНоменкдатуры.Цена, 0)) КАК Цена
	|ИЗ
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры КАК ВТ_ТаблицаРазмеров_ВсеРазмеры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиНаСкладе КАК ВТ_ОстаткиНаСкладе
	|		ПО ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура = ВТ_ОстаткиНаСкладе.Номенклатура
	|			И ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры = ВТ_ОстаткиНаСкладе.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменкдатуры КАК ВТ_ЦеныНоменкдатуры
	|		ПО ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура = ВТ_ЦеныНоменкдатуры.Номенклатура
	|ГДЕ
	|	НЕ ВТ_ТаблицаРазмеров_ВсеРазмеры.КоличествоВКомплекте = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.Комплект,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.Номенклатура,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.КоличествоВКомплекте,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ЕстьХарактеристики,
	|	ВТ_ТаблицаРазмеров_ВсеРазмеры.ХарактеристикаНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	Комплект,
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры";
	
	Запрос.УстановитьПараметр("ПериодРасчета",				Параметры.Дата);
	Запрос.УстановитьПараметр("Организация",				Параметры.Организация);
	Запрос.УстановитьПараметр("Склад",						Параметры.Склад);
	Запрос.УстановитьПараметр("Количество",					Параметры.СтруктураТекущихДанных.Количество);
	Запрос.УстановитьПараметр("ТаблицаРазмеров", 			ТаблицаРазмеров);
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",		?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"),Справочники.Организации.ПустаяСсылка(),Параметры.Организация));

	КорневаяВетка = ДеревоДанных.Строки.Добавить();
	КорневаяВетка.Представление = "Данные для подбора в документ выдачи";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаКомплектующих = Результат[6].Выгрузить();
	
	ВыборкаПоНоменклатуре = Результат[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоНоменклатуре.Следующий() Цикл
		
		ВеткаНоменклатуры = КорневаяВетка.Строки.Добавить();
		ВеткаНоменклатуры.Номенклатура 	= ВыборкаПоНоменклатуре.Номенклатура;
		ВеткаНоменклатуры.Количество 	= Параметры.СтруктураТекущихДанных.Количество;
				
		ВеткаНоменклатурыЗаполнена = Ложь;
		
		ВыборкаПоХарактеристикам = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоХарактеристикам.Следующий() Цикл
			
			ВеткаРазмера = ВеткаНоменклатуры.Строки.Добавить();
			ВеткаРазмера.ХарактеристикаНоменклатуры = ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры;
			
			ВеткаРазмераЗаполнена = Ложь;
			
			ВыборкаПоОстаткам = ВыборкаПоХарактеристикам.Выбрать();
			Пока ВыборкаПоОстаткам.Следующий() Цикл
				
				Если НЕ ВеткаНоменклатурыЗаполнена Тогда
					ВеткаНоменклатуры.Представление = СокрЛП(ВыборкаПоНоменклатуре.Номенклатура.Наименование) + " К выдаче: " + Параметры.СтруктураТекущихДанных.Количество;
					ВеткаНоменклатуры.Цена 			= ВыборкаПоОстаткам.Цена;
					ВеткаНоменклатурыЗаполнена = Истина;
				КонецЕсли;
				
				Если НЕ ВеткаРазмераЗаполнена Тогда
					Если ВыборкаПоОстаткам.ЕстьХарактеристики Тогда
						Если ВыборкаПоОстаткам.РазмерПодходит Тогда
							ВеткаРазмера.Представление 	= СокрЛП(ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры.Наименование) + " (подходит по антропометрии)"; 
							ВеткаРазмера.РазмерПодходит = Истина;
						Иначе
							ВеткаРазмера.Представление = СокрЛП(ВыборкаПоХарактеристикам.ХарактеристикаНоменклатуры.Наименование);
						КонецЕсли;
					Иначе
						ВеткаРазмера.Представление = "Без размера.";
						ВеткаРазмера.РазмерПодходит = Истина;
					КонецЕсли;
					ВеткаРазмераЗаполнена 		= Истина;
					ВеткаРазмера.Остаток 		= ВыборкаПоОстаткам.Остаток;
					ВеткаРазмера.ЕстьНаСкладе 	= ВыборкаПоОстаткам.ЕстьНаСкладе;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если ВыборкаПоНоменклатуре.Номенклатура.Комплект Тогда //формируем ветку комплектующих
			
			СтруктураПоиска = Новый Структура("Комплект",ВыборкаПоНоменклатуре.Номенклатура);
			
			НайденныеСтроки = ТаблицаКомплектующих.НайтиСтроки(СтруктураПоиска);
			
			ТекущееКомплектующее = "";
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				Если НЕ ТекущееКомплектующее = НайденнаяСтрока.Номенклатура Тогда
					
					ВеткаКомплектующих 						= ВеткаНоменклатуры.Строки.Добавить();
					ВеткаКомплектующих.Номенклатура 		= НайденнаяСтрока.Номенклатура;
					ВеткаКомплектующих.Цена 				= НайденнаяСтрока.Цена;
					ВеткаКомплектующих.Комплект 			= НайденнаяСтрока.Комплект;
					ВеткаКомплектующих.Представление 		= СокрЛП(НайденнаяСтрока.Номенклатура.Наименование) + " В комплекте: " + НайденнаяСтрока.КоличествоВКомплекте;
					ВеткаКомплектующих.КоличествоВКомплекте	= НайденнаяСтрока.КоличествоВКомплекте;
					
					ТекущееКомплектующее = НайденнаяСтрока.Номенклатура;
					
				КонецЕсли;
				
				ВеткаРазмера = ВеткаКомплектующих.Строки.Добавить();
				ВеткаРазмера.ХарактеристикаНоменклатуры = НайденнаяСтрока.ХарактеристикаНоменклатуры;
				
				Если НайденнаяСтрока.ЕстьХарактеристики Тогда
					Если НайденнаяСтрока.РазмерПодходит Тогда
						ВеткаРазмера.Представление 	= СокрЛП(НайденнаяСтрока.ХарактеристикаНоменклатуры.Наименование) + " (подходит по антропометрии)"; 
						ВеткаРазмера.РазмерПодходит = Истина;
					Иначе
						ВеткаРазмера.Представление = СокрЛП(НайденнаяСтрока.ХарактеристикаНоменклатуры.Наименование);
					КонецЕсли;
				Иначе
					ВеткаРазмера.Представление = "Без размера.";
					ВеткаРазмера.РазмерПодходит = Истина;
				КонецЕсли;
				ВеткаРазмераЗаполнена 		= Истина;
				ВеткаРазмера.Остаток 		= НайденнаяСтрока.Остаток;
				ВеткаРазмера.ЕстьНаСкладе 	= НайденнаяСтрока.ЕстьНаСкладе;
				ВеткаРазмера.Комплект 		= НайденнаяСтрока.Комплект;
				
			КонецЦикла;
			
		КонецЕсли;	
		
	КонецЦикла;
			
	ЗначениеВРеквизитФормы(ДеревоДанных,"ДеревоНоменклатуры");
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВдокумент(Команда)
	
	ДанныеДляПереносаВДокумент = ПолучитьДанныеДляПереносаВДокумент(); 
	
	Если ДанныеДляПереносаВДокумент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Структура = Новый Структура("АдресРезультатаПодбораВХранилище", ДанныеДляПереносаВДокумент);
	
	Закрыть(КодВозвратаДиалога.ОК);
	
	ОповеститьОВыборе(Структура);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДляПереносаВДокумент()
	
	ДеревоДанных = РеквизитФормыВЗначение("ДеревоНоменклатуры");
	
	ТаблицаДанныхДляПереносаВДокумент = Новый ТаблицаЗначений;
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("Комплект");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("Номенклатура");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("ХарактеристикаНоменклатуры");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("ПроцентИзноса");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("Количество");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("КоличествоВКомплекте");
	ТаблицаДанныхДляПереносаВДокумент.Колонки.Добавить("Цена");
	
	Для Каждого КорневаяСтрока Из ДеревоДанных.Строки Цикл
		
		Если КорневаяСтрока.Использовать = 0 Тогда
			Сообщить("Не подобраны данные для переноса в документ!");
			Возврат Неопределено;
		КонецЕсли;
		
		Для Каждого СтрокаНоменклатуры Из КорневаяСтрока.Строки Цикл
			
			Если СтрокаНоменклатуры.Использовать = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			КомплектующиеПодобраны = Истина;
			
			ОшибкаПодбора = "";
			
			Для Каждого СтрокаРазмераИлиКомплектующего Из СтрокаНоменклатуры.Строки Цикл
				
				Если ЗначениеЗаполнено(СтрокаРазмераИлиКомплектующего.ХарактеристикаНоменклатуры) ИЛИ (НЕ СтрНайти(СтрокаРазмераИлиКомплектующего.Представление,"Без размера.") = 0) Тогда
					
					Если СтрокаРазмераИлиКомплектующего.Использовать = 1 Тогда
						
						Если КомплектРазобран И НЕ ЗначениеЗаполнено(СтрокаРазмераИлиКомплектующего.Комплект) Тогда
							ОшибкаПодбора = "Соберите комплект в документе!";							
						КонецЕсли;
						
						Если НЕ КомплектРазобран И ЗначениеЗаполнено(СтрокаРазмераИлиКомплектующего.Комплект) Тогда
							ОшибкаПодбора = "Разберите комплект в документе!";							
						КонецЕсли;
						
						Если ОшибкаПодбора = "" Тогда
							
							СтрокаТаблицыДанныхДляПереносаВДокумент 							= ТаблицаДанныхДляПереносаВДокумент.Добавить();
							СтрокаТаблицыДанныхДляПереносаВДокумент.Комплект 					= СтрокаРазмераИлиКомплектующего.Комплект;
							СтрокаТаблицыДанныхДляПереносаВДокумент.Номенклатура 				= СтрокаНоменклатуры.Номенклатура;
							СтрокаТаблицыДанныхДляПереносаВДокумент.ХарактеристикаНоменклатуры 	= СтрокаРазмераИлиКомплектующего.ХарактеристикаНоменклатуры;
							СтрокаТаблицыДанныхДляПереносаВДокумент.ПроцентИзноса 				= СтрокаРазмераИлиКомплектующего.ПроцентИзноса;
							СтрокаТаблицыДанныхДляПереносаВДокумент.Количество 					= СтрокаНоменклатуры.Количество;
							СтрокаТаблицыДанныхДляПереносаВДокумент.Цена 						= СтрокаНоменклатуры.Цена;
							СтрокаТаблицыДанныхДляПереносаВДокумент.КоличествоВКомплекте 		= 0;
							
							АдресРезультатаПодбораВХранилище = ПоместитьВоВременноеХранилище(ТаблицаДанныхДляПереносаВДокумент, УникальныйИдентификатор);
							
							Возврат АдресРезультатаПодбораВХранилище;
							
						КонецЕсли;
					
					КонецЕсли;
					
				Иначе
					
					Если СтрокаРазмераИлиКомплектующего.Использовать = 0 Тогда 
						
						КомплектующиеПодобраны = Ложь;
						
					КонецЕсли;
					
					Для Каждого СтрокаРазмераКомплектующего Из СтрокаРазмераИлиКомплектующего.Строки Цикл
						
						Если СтрокаРазмераКомплектующего.Использовать = 1 Тогда
							
							Если КомплектРазобран И НЕ ЗначениеЗаполнено(СтрокаРазмераИлиКомплектующего.Комплект) Тогда
								ОшибкаПодбора = "Соберите комплект в документе!";							
							КонецЕсли;
							
							Если НЕ КомплектРазобран И ЗначениеЗаполнено(СтрокаРазмераИлиКомплектующего.Комплект) Тогда
								ОшибкаПодбора = "Разберите комплект в документе!";							
							КонецЕсли;
							
							Если ОшибкаПодбора = "" Тогда
								
								СтрокаТаблицыДанныхДляПереносаВДокумент 							= ТаблицаДанныхДляПереносаВДокумент.Добавить();
								СтрокаТаблицыДанныхДляПереносаВДокумент.Комплект 					= СтрокаРазмераКомплектующего.Комплект;
								СтрокаТаблицыДанныхДляПереносаВДокумент.Номенклатура 				= СтрокаРазмераИлиКомплектующего.Номенклатура;
								СтрокаТаблицыДанныхДляПереносаВДокумент.Цена 						= СтрокаРазмераИлиКомплектующего.Цена;
								СтрокаТаблицыДанныхДляПереносаВДокумент.ХарактеристикаНоменклатуры 	= СтрокаРазмераКомплектующего.ХарактеристикаНоменклатуры;
								СтрокаТаблицыДанныхДляПереносаВДокумент.ПроцентИзноса 				= СтрокаРазмераКомплектующего.ПроцентИзноса;
								СтрокаТаблицыДанныхДляПереносаВДокумент.Количество 					= СтрокаНоменклатуры.Количество;
								СтрокаТаблицыДанныхДляПереносаВДокумент.КоличествоВКомплекте 		= СтрокаРазмераИлиКомплектующего.КоличествоВКомплекте;
								
								Прервать;
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЦикла;
					
				Конецесли;
				
			КонецЦикла;
			
			Если НЕ ОшибкаПодбора = "" Тогда
				Сообщить(ОшибкаПодбора);
				Возврат Неопределено;
			КонецЕсли;
			
			//фрагмент кода отключен, т.к. неверно заполнялся документ
			//Если НЕ КомплектующиеПодобраны Тогда
			//	Сообщить("Не полностью подобраны комплектующие!");
			//	Возврат Неопределено;
			//Иначе
			//	АдресРезультатаПодбораВХранилище = ПоместитьВоВременноеХранилище(ТаблицаДанныхДляПереносаВДокумент, УникальныйИдентификатор);
			//	Возврат АдресРезультатаПодбораВХранилище;
			//КонецЕсли;	
			
			АдресРезультатаПодбораВХранилище = ПоместитьВоВременноеХранилище(ТаблицаДанныхДляПереносаВДокумент, УникальныйИдентификатор);
			Возврат АдресРезультатаПодбораВХранилище;
			
		КонецЦикла;
		
	КонецЦикла;	
	
КонецФункции

&НаКлиенте
Процедура ДеревоНоменклатурыИспользоватьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ХарактеристикаНоменклатуры) ИЛИ (НЕ СтрНайти(ТекущиеДанные.Представление,"Без размера.") = 0) Тогда
		
		Если ТекущиеДанные.Использовать = 0 ИЛИ ТекущиеДанные.Использовать = 2 Тогда //флажок снимать запрещено
			ТекущиеДанные.Использовать = 1;
			Возврат;
		КонецЕсли;
		
		ТекущийИдентификатор = ТекущиеДанные.ПолучитьИдентификатор();
		
		//изменена идеология управления флажками
		
		//было:
		////если это не комплектующее, снимаем все флажки, кроме текущего
		//Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Комплект) Тогда
		//	КорневаяВетка = ТекущиеДанные.ПолучитьРодителя().ПолучитьРодителя();
		//	КорневаяВетка.Использовать = 0;
		//	ВеткиНоменклатуры = КорневаяВетка.ПолучитьЭлементы();
		//	Для Каждого ВеткаНоменклатуры Из ВеткиНоменклатуры Цикл
		//		ВеткаНоменклатуры.Использовать = 0;
		//		ВеткиХарактеристик = ВеткаНоменклатуры.ПолучитьЭлементы();
		//		Для Каждого ВеткаХарактеристики Из ВеткиХарактеристик Цикл
		//			Если НЕ ВеткаХарактеристики.ПолучитьИдентификатор() = ТекущийИдентификатор Тогда
		//				ВеткаХарактеристики.Использовать = 0;
		//			КонецЕсли;
		//			ВеткиКомплектующих = ВеткаХарактеристики.ПолучитьЭлементы();
		//			Для Каждого ВеткаКомплектующих Из ВеткиКомплектующих Цикл
		//				ВеткаКомплектующих.Использовать = 0;
		//				ВеткиРазмеровКомплектующих = ВеткаКомплектующих.ПолучитьЭлементы();
		//				Для Каждого ВеткаРазмеровКомплектующих Из ВеткиРазмеровКомплектующих Цикл
		//					ВеткаРазмеровКомплектующих.Использовать = 0;
		//				КонецЦикла;
		//			КонецЦикла;
		//		КонецЦикла;
		//	КонецЦикла;
		//Иначе //соседнее комплектующее не трогаем
		//	КорневаяВетка = ТекущиеДанные.ПолучитьРодителя().ПолучитьРодителя().ПолучитьРодителя();
		//	КорневаяВетка.Использовать = 0;
		//	ВеткиКомплекта = КорневаяВетка.ПолучитьЭлементы();
		//	Для Каждого ВеткаКомплекта Из ВеткиКомплекта Цикл
		//		ВеткаКомплекта.Использовать = 0;
		//		ВеткиКомплектующихИРазмеров = ВеткаКомплекта.ПолучитьЭлементы();
		//		Для Каждого ВеткаКомплектующихИРазмеров Из ВеткиКомплектующихИРазмеров Цикл
		//			Если НЕ ВеткаКомплектующихИРазмеров.Комплект = ТекущиеДанные.Комплект Тогда
		//				ВеткаКомплектующихИРазмеров.Использовать = 0;
		//			КонецЕсли;
		//			ВеткиРазмеровКомплектующих = ВеткаКомплектующихИРазмеров.ПолучитьЭлементы();
		//			Для Каждого ВеткаРазмеровКомплектующих Из ВеткиРазмеровКомплектующих Цикл
		//				Если ВеткаРазмеровКомплектующих.Комплект = ТекущиеДанные.Комплект Тогда
		//					Если ТекущиеДанные.ПолучитьРодителя().Номенклатура = ВеткаКомплектующихИРазмеров.Номенклатура Тогда
		//						Если НЕ ВеткаРазмеровКомплектующих.ПолучитьИдентификатор() = ТекущийИдентификатор Тогда
		//							ВеткаРазмеровКомплектующих.Использовать = 0;
		//						КонецЕсли;
		//					КонецЕсли;
		//				Иначе
		//					ВеткаРазмеровКомплектующих.Использовать = 0;
		//				КонецЕсли;
		//			КонецЦикла;
		//		КонецЦикла;
		//	КонецЦикла;
		//КонецЕсли;
		
		//стало:
		КорневаяВетка = ТекущиеДанные.ПолучитьРодителя().ПолучитьРодителя();
		КорневаяВетка.Использовать = 0;
		ВеткиНоменклатуры = КорневаяВетка.ПолучитьЭлементы();
		Для Каждого ВеткаНоменклатуры Из ВеткиНоменклатуры Цикл
			ВеткаНоменклатуры.Использовать = 0;
			ВеткиХарактеристик = ВеткаНоменклатуры.ПолучитьЭлементы();
			Для Каждого ВеткаХарактеристики Из ВеткиХарактеристик Цикл
				Если НЕ ВеткаХарактеристики.ПолучитьИдентификатор() = ТекущийИдентификатор Тогда
					ВеткаХарактеристики.Использовать = 0;
				КонецЕсли;
				ВеткиКомплектующих = ВеткаХарактеристики.ПолучитьЭлементы();
				Для Каждого ВеткаКомплектующих Из ВеткиКомплектующих Цикл
					ВеткаКомплектующих.Использовать = 0;
					ВеткиРазмеровКомплектующих = ВеткаКомплектующих.ПолучитьЭлементы();
					Для Каждого ВеткаРазмеровКомплектующих Из ВеткиРазмеровКомплектующих Цикл
						ВеткаРазмеровКомплектующих.Использовать = 0;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		ПроцедурыРаботыСНормамиКлиент.ОбходДереваВверх(ТекущиеДанные);
		ПроцедурыРаботыСНормамиКлиент.ОбходДереваВниз(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНоменклатурыПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.ХарактеристикаНоменклатуры) ИЛИ (НЕ СтрНайти(ТекущиеДанные.Представление,"Без размера.") = 0) Тогда
			Отказ = Ложь;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда//открываем карточку номенклатуры
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Номенклатура);
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", ПараметрыФормы);
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.ХарактеристикаНоменклатуры) Тогда//открываем карточку характеристики номенклатуры
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.ХарактеристикаНоменклатуры);
		ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.Форма.ФормаЭлемента", ПараметрыФормы);	
	КонецЕсли;
	
КонецПроцедуры

//+++АСТБ_Горюшин_Алексей_19261
// Вывод в форме кода синхронизации номенклатуры
//---АСТБ_Горюшин_Алексей_19261