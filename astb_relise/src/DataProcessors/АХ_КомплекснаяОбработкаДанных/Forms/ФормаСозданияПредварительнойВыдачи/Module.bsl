#Область ОбработчикиСобытийФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		Если Поле.Гиперссылкаячейки Тогда
			СтруктураОткрытия = Новый Структура("Ключ",Элемент.ТекущиеДанные.Ссылка);
			ОткрытьФорму("Документ.ВыдачаСредствЗащитыСотруднику.Форма.ФормаДокумента",СтруктураОткрытия);
		КонецЕсли;
		
	КонецЕСли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьДокументыВыдачи(Команда)
	
	Если ПроверитьЗаполнение() Тогда 
		ЗаполнитьДокументыВыдачиНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПредварительнуюВыдачу(Команда)	
	
	Если ПроверитьЗаполнение() Тогда
				
		СтруктураОбработкиОшибок = АХ_ОбменКлиент.ИнициализироватьСтруктуруОбработкиОшибок();				
		СформироватьПредварительнуюВыдачуНаСервере(СтруктураОбработкиОшибок);		
		АХ_ОбменКлиент.РазобратьСтруктуруОбработкиОшибок(СтруктураОбработкиОшибок);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьПредварительнуюВыдачуНаСервере(СтруктураОбработкиОшибок)
	
	МассивДокументовВыдачи = ТаблицаДокументов.Выгрузить(,"Ссылка");
	Если МассивДокументовВыдачи.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(нСтр("ru='Нет данных для отправки'", "ru"),,,,СтруктураОбработкиОшибок.ЕстьОшибки);
		Возврат;
	КонецЕсли;

	//при формировании отправки, необходимо проверить корректность документов табличной части, на случай если что то изменяет в документах
	ТаблицаДокументовСОтбором = ПолучитьТаблицуДокументов();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТекущихДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	&ТаблицаТекущихДокументов КАК ТаблицаТекущихДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Ссылка КАК Ссылка
	|ИЗ
	|	вт КАК вт
	|ГДЕ
	|	НЕ вт.Ссылка В (&МассивДокуметовСОтбором)";
	
	Запрос.УстановитьПараметр("МассивДокуметовСОтбором", ТаблицаДокументовСОтбором.ВыгрузитьКолонку("Ссылка"));
	Запрос.УстановитьПараметр("ТаблицаТекущихДокументов", ТаблицаДокументов.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл 
			ТекстСообщения = нСтр("ru='Документ " + Выборка.Ссылка + " не соответствует отбору '", "ru");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,СтруктураОбработкиОшибок.ЕстьОшибки);
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыдачаСредствЗащитыСотрудникуТовары.Номенклатура КАК Номенклатура,
	|	ВыдачаСредствЗащитыСотрудникуТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ВыдачаСредствЗащитыСотрудникуТовары.Количество) КАК Количество
	|ИЗ
	|	Документ.ВыдачаСредствЗащитыСотруднику.Товары КАК ВыдачаСредствЗащитыСотрудникуТовары
	|ГДЕ
	|	ВыдачаСредствЗащитыСотрудникуТовары.Ссылка В(&МассивДокументов)
	|	И НЕ ВыдачаСредствЗащитыСотрудникуТовары.НеВыдано
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыдачаСредствЗащитыСотрудникуТовары.ХарактеристикаНоменклатуры,
	|	ВыдачаСредствЗащитыСотрудникуТовары.Номенклатура";
	
	Запрос.УстановитьПараметр("МассивДокументов",МассивДокументовВыдачи); 
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Если МассивДокументовВыдачи.Количество() = 0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(нСтр("ru='Нет данных для отправки'", "ru"),,,,СтруктураОбработкиОшибок.ЕстьОшибки);
			Возврат;
		КонецЕсли;
		
	Иначе
		
		Попытка  
			
			НачатьТранзакцию();
			
			// формируем перемещение		
			ДокументПеремещения = Документы.ПеремещениеНоменклатуры.СоздатьДокумент();
			ДокументПеремещения.Дата = ТекущаяДата();
			ДокументПеремещения.Заполнить(Неопределено);
			ДокументПеремещения.Организация = Организация;
			ДокументПеремещения.СкладОтправитель = Склад;
			ДокументПеремещения.МОЛСкладаОтправителя = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(ДокументПеремещения.СкладОтправитель,ДокументПеремещения.Организация);
			ДокументПеремещения.СкладПолучатель = Константы.АХ_СкладПредварительнойСборки.Получить();
			ДокументПеремещения.МОЛСкладаПолучателя = ПроцедурыРаботыСНормамиСервер.ПолучитьМОЛСклада(ДокументПеремещения.СкладПолучатель,ДокументПеремещения.Организация);
			
			ДокументПеремещения.Ответственный = Пользователи.ТекущийПользователь();
			ДокументПеремещения.Комментарий   = "ПРЕДВАРИТЕЛЬНАЯ СБОРКА";

			ДокументПеремещения.Товары.Загрузить(РезультатЗапроса.Выгрузить());
			ДокументПеремещения.Записать(РежимЗаписиДокумента.Запись);
			
			Для Каждого СтрокаСДокументом из МассивДокументовВыдачи Цикл
				
				ДокументВыдачи = СтрокаСДокументом.Ссылка;
				// меняем статусы документов, устанавливаем ссылку на перемещение, отменяем проведение
				ОбъектДокументаВыдачи = ДокументВыдачи.ПолучитьОбъект();
				ОбъектДокументаВыдачи.АХ_ПеремещениеПоПредварительнойСборке = ДокументПеремещения.Ссылка;
				ОбъектДокументаВыдачи.АХ_СтатусСборки = Перечисления.АХ_СтатусыСборкиТоваров.Подготовлено;
				ОбъектДокументаВыдачи.Записать(РежимЗаписиДокумента.ОтменаПроведения);			
				
			КонецЦикла;
			
			//проводим перемещение, передаем на склад
			ДокументПеремещения.Записать(РежимЗаписиДокумента.Проведение);
			
			Соответствие = Новый Соответствие;	
			Соответствие.Вставить("ПланСнятияИПоступление",ДокументПеремещения.Ссылка);
			
			МассивДанных = Новый Массив;
			МассивДанных.Добавить(Соответствие);
			
			АХ_ОбменВызовСервера.ПередатьДанныеВАдресноеХранение(МассивДанных,СтруктураОбработкиОшибок);
			
			Если СтруктураОбработкиОшибок.ЕстьОшибки Тогда
				ОтменитьТранзакцию();
			иначе
				ЗафиксироватьТранзакцию();
			КонецЕсли;
			
		Исключение
			
			СтруктураОбработкиОшибок.ЕстьОшибки = Истина;
			ОтменитьТранзакцию();
			
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуДокументов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыдачаСредствЗащитыСотруднику.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВыдачаСредствЗащитыСотруднику КАК ВыдачаСредствЗащитыСотруднику
	|ГДЕ
	|	ВыдачаСредствЗащитыСотруднику.Ссылка.ВидВыдачиСИЗ = ЗНАЧЕНИЕ(Перечисление.ВидыВыдачиСиз.Персональнаявыдача)
	|	И ВыдачаСредствЗащитыСотруднику.Ссылка.Проведен
	|	И ВыдачаСредствЗащитыСотруднику.Ссылка.АХ_СтатусСборки = ЗНАЧЕНИЕ(Перечисление.АХ_СтатусыСборкиТоваров.ПредварительнаяСборка)
	|	И ВыдачаСредствЗащитыСотруднику.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ВыдачаСредствЗащитыСотруднику.Склад = &Склад
	|	И ВыдачаСредствЗащитыСотруднику.Организация = &Организация";
	
	Запрос.УстановитьПараметр("ДатаНачала",Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Склад",Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДокументыВыдачиНаСервере()
	
	ТаблицаДокументов.Загрузить(ПолучитьТаблицуДокументов());

КонецПроцедуры

#КонецОбласти