#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("МассивПоступлений") Тогда
		
		СписокДокументов.ЗагрузитьЗначения(Параметры.МассивПоступлений);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура АХ_ПередатьНаСклад(Команда)
	
	МассивДанных = ПолучитьДанныеКОтправке();
	Если МассивДанных <> Неопределено Тогда
		
		СтруктураОбработкиОшибок = АХ_ОбменКлиент.ИнициализироватьСтруктуруОбработкиОшибок();
		СтруктураОбработкиОшибок.ТекстСообщенияУспешнойОтправки = нСтр("ru='Данные успешно переданы в адресное хранение'", "ru");
		
		АХ_ОбменКлиент.ПередатьДанныеВАдресноеХранение(МассивДанных,ложь,СтруктураОбработкиОшибок); 		
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеКОтправке()
	
	Отказ = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеНоменклатуры.Ссылка КАК Ссылка,
		|	ПоступлениеНоменклатуры.Склад КАК Склад,
		|	ПоступлениеНоменклатуры.Проведен КАК Проведен,
		|	ПоступлениеНоменклатуры.Склад.АХ_СлотовыйУчетПоСкладу КАК СкладАХ_СлотовыйУчетПоСкладу
		|ПОМЕСТИТЬ ВТ_Поступления
		|ИЗ
		|	Документ.ПоступлениеНоменклатуры КАК ПоступлениеНоменклатуры
		|ГДЕ
		|	ПоступлениеНоменклатуры.Ссылка В(&МассивПоступлений)
		|	И ПоступлениеНоменклатуры.Ссылка <> ЗНАЧЕНИЕ(Документ.ПоступлениеНоменклатуры.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеНоменклатуры.Ссылка,
		|	ПоступлениеНоменклатуры.Склад,
		|	ПоступлениеНоменклатуры.Проведен,
		|	ПоступлениеНоменклатуры.Склад.АХ_СлотовыйУчетПоСкладу
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Поступления.Ссылка КАК Ссылка,
		|	ВТ_Поступления.Склад КАК Склад,
		|	ВТ_Поступления.Проведен КАК Проведен,
		|	ВТ_Поступления.СкладАХ_СлотовыйУчетПоСкладу КАК СкладАХ_СлотовыйУчетПоСкладу
		|ИЗ
		|	ВТ_Поступления КАК ВТ_Поступления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Поступления.Ссылка КАК Ссылка
		|ИЗ
		|	ВТ_Поступления КАК ВТ_Поступления
		|ГДЕ
		|	НЕ ВТ_Поступления.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Поступления.Склад КАК Склад,
		|	ВТ_Поступления.СкладАХ_СлотовыйУчетПоСкладу КАК АХ_СлотовыйУчетПоСкладу
		|ИЗ
		|	ВТ_Поступления КАК ВТ_Поступления
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Поступления.СкладАХ_СлотовыйУчетПоСкладу,
		|	ВТ_Поступления.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АХ_ДанныеВАдресномХранении.Документ КАК Документ
		|ИЗ
		|	РегистрСведений.АХ_ДанныеВАдресномХранении КАК АХ_ДанныеВАдресномХранении
		|ГДЕ
		|	АХ_ДанныеВАдресномХранении.Документ В(&МассивПоступлений)
		|	И АХ_ДанныеВАдресномХранении.ВидАдресногоДокумента = ЗНАЧЕНИЕ(перечисление.АХ_ВидыДокументовАдресногоХранения.ПоступлениеТовара)";
	
	Запрос.УстановитьПараметр("МассивПоступлений", СписокДокументов.ВыгрузитьЗначения());
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаДанныхдокументов = МассивРезультатов[1].Выгрузить();
	Если ТаблицаДанныхдокументов.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(нСтр("ru='Нет данных для отправки'", "ru"),,,,Отказ);
		Возврат Неопределено;
	КонецЕсли;
	
	//проверяем непроведенные поступления.
	РезультатНепроведенныхПоступлений = МассивРезультатов[2];
	Если НЕ РезультатНепроведенныхПоступлений.Пустой() Тогда
		
		ВыборкаНепроведенныхПоступлений = РезультатНепроведенныхПоступлений.Выбрать();
		Пока ВыборкаНепроведенныхПоступлений.Следующий() цикл
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(нСтр("ru='Документ " + ВыборкаНепроведенныхПоступлений.Ссылка + " не  проведен. '", "ru"),ВыборкаНепроведенныхПоступлений.Ссылка,,,Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	//проверка на различные склады
	
	РезультатРазличныхСкладов = МассивРезультатов[3];
	
	ВыборкаРазличныхСкладов = РезультатРазличныхСкладов.Выбрать();
	Если ВыборкаРазличныхСкладов.Количество() > 1 Тогда
		
		Пока ВыборкаРазличныхСкладов.Следующий() цикл
			
			СтруктураПоиска = Новый Структура("Склад",ВыборкаРазличныхСкладов.Склад);
			
			МассивНайденныхСтрок = ТаблицаДанныхдокументов.НайтиСтроки(СтруктураПоиска);
			Для каждого НайденнаяСтрока из МассивНайденныхСтрок цикл
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(нСтр("ru='Различаются склады. Документ " + НайденнаяСтрока.Ссылка + " со скадом " + НайденнаяСтрока.Склад + ". '", "ru"),НайденнаяСтрока.Ссылка,,,Отказ);
				
			КонецЦикла
			
		КонецЦикла;
	иначе
		// все окей, нужно проверить на слотовость
		ВыборкаРазличныхСкладов.Следующий();
		Если НЕ ВыборкаРазличныхСкладов.АХ_СлотовыйУчетПоСкладу Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(нСтр("ru='Склад " + ВыборкаРазличныхСкладов.Склад + " не слотовый'", "ru"),,,,Отказ);			
		КонецЕсли;	
		
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат Неопределено;
	конецЕсли;
	
	//проверка на то, что документ учавствует в адресном хранении
	
	ВыборкаДокументовВАдресномХранении = МассивРезультатов[4].Выбрать();
	Пока ВыборкаДокументовВАдресномХранении.Следующий() цикл		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(нСтр("ru='Документ " + ВыборкаДокументовВАдресномХранении.Документ  + " уже участвует в адресном хранении'", "ru"),ВыборкаДокументовВАдресномХранении.Документ,,,Отказ);
	КонецЦикла;	
	
	Если НЕ Отказ Тогда		
		
		ДанныеКОтправке = Новый Соответствие;
		ДанныеКОтправке.Вставить("ПередачаТранспортнойПоставки",ТаблицаДанныхдокументов.ВыгрузитьКолонку("Ссылка"));
		
		МассивДанных = Новый массив;
		МассивДанных.Добавить(ДанныеКОтправке);
		
		Возврат МассивДанных
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
	
КонецФункции// ПроверитьВозможностьОтправки()

#КонецОбласти


