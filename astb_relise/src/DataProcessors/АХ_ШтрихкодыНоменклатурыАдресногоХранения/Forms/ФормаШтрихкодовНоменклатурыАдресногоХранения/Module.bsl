#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьКомпоновщикНастроек();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоОтбору(Команда)
	ЗаполнитьПоОтборуНаСервере();
КонецПроцедуры   

&НаКлиенте
Процедура ПолучитьШтрихкоды(Команда)
	
	ТабличныйДокумент = ПолучитьТабличныйДокументСоШтрихкодами();
	Если ТабличныйДокумент <> Неопределено Тогда
		
		КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ШтрихкодыНоменклатуры");		
		КоллекцияПечатныхФорм[0].Табличныйдокумент = ТабличныйДокумент;
		
		УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм,Новый СписокЗначений);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьКомпоновщикНастроек()
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	
	СКД_ОстаткиНоменклатуры = ОбъектОбработки.ПолучитьМакет("СКД_ОстаткиНоменклатуры");
	АдресВоВременномХранилище_ОстаткиНоменклатуры = ПоместитьВоВременноеХранилище(СКД_ОстаткиНоменклатуры,УникальныйИдентификатор);
	
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресВоВременномХранилище_ОстаткиНоменклатуры));	
	КомпоновщикНастроек.ЗагрузитьНастройки(СКД_ОстаткиНоменклатуры.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОтборуНаСервере()
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	СКД_ОстаткиНоменклатуры = ОбъектОбработки.ПолучитьМакет("СКД_ОстаткиНоменклатуры");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(СКД_ОстаткиНоменклатуры,КомпоновщикНастроек.ПолучитьНастройки(),,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпновки.Инициализировать(Макет);
	
	ТаблицаВывода = Новый ТаблицаЗначений;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаВывода);
	ПроцессорВывода.Вывести(ПроцессорКомпновки);
	
	ТаблицаНоменклатура.Загрузить(ТаблицаВывода);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТабличныйДокументСоШтрихкодами()
	
	СтруктураОтбора = Новый Структура("Пометка",Истина);
	
	МассивНайденныхСтрок = ТаблицаНоменклатура.НайтиСтроки(СтруктураОтбора);
	Если МассивНайденныхСтрок.Количество() = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет данных к получению");
		Возврат Неопределено;
		
	КонецЕсли;
		
	СтруктураОбработкиОшибок = АХ_ОбменВызовСервера.ИнициализироватьСтруктуруОбработкиОшибок();
	
	Прокси = АХ_ОбменВызовСервера.ПолучитьПрокси(СтруктураОбработкиОшибок);
	Если Прокси = Неопределено Тогда 
		Возврат неопределено;
	КонецЕсли;
	
	ТаблицаИдентификаторов = ПреобразоватьЗначенияТаблицыВИдентификаторы(МассивНайденныхСтрок);
	Хранилищеданных 	   = Новый ХранилищеЗначения(ТаблицаИдентификаторов);
	
	Данные = Прокси.ПФШтрихкодовНоменклатуры(Новый ХранилищеЗначения(ТаблицаИдентификаторов));
	
	Возврат Данные.Получить();
	
КонецФункции

Функция ПреобразоватьЗначенияТаблицыВИдентификаторы(МассивНайденныхСтрок)
	
	КС = Новый КвалификаторыСтроки(200);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	
	ТаблицаИдентификаторов = Новый ТаблицаЗначений;
	ТаблицаИдентификаторов.Колонки.Добавить("Номенклатура",ОписаниеТиповС);
	ТаблицаИдентификаторов.Колонки.Добавить("ХарактеристикаНоменклатуры",ОписаниеТиповС);
	
	Для Каждого СтрокаТаблицыНоменклатура из МассивНайденныхСтрок Цикл
		
		НоваяСтрока = ТаблицаИдентификаторов.Добавить();
		
		Попытка
			
			Если ЗначениеЗаполнено(СтрокаТаблицыНоменклатура.Номенклатура) Тогда
				НоваяСтрока.Номенклатура = Строка(СтрокаТаблицыНоменклатура.Номенклатура.УникальныйИдентификатор());
			иначе
				НоваяСтрока.Номенклатура = "";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаТаблицыНоменклатура.ХарактеристикаНоменклатуры) Тогда
				НоваяСтрока.ХарактеристикаНоменклатуры = Строка(СтрокаТаблицыНоменклатура.ХарактеристикаНоменклатуры.УникальныйИдентификатор());
			иначе
				НоваяСтрока.ХарактеристикаНоменклатуры = "";
			КонецЕсли;
		Исключение КонецПопытки;		
		
	КонецЦикла;
	
	Возврат ТаблицаИдентификаторов;
	
КонецФункции // ПреобразоватьЗначенияТаблицыВИдентификаторы()

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	Для Каждого СтрокаТаблицы из ТаблицаНоменклатура цикл
		СтрокаТаблицы.Пометка = Истина;
	Конеццикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для Каждого СтрокаТаблицы из ТаблицаНоменклатура цикл
		СтрокаТаблицы.Пометка = Ложь;
	Конеццикла;
	
КонецПроцедуры


#КонецОбласти