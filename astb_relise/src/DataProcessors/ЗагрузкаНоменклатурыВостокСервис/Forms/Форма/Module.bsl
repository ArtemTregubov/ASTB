&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

&НаКлиенте
Перем ТекущаяСтрокаДерева;

&НаКлиенте
Перем ЗапомнитьТекущуюСтрокуДерева;

&НаКлиенте
Перем СмещениеИндексов; //хранит количество строк в дереве номенклатуры для правильного определения текущей строки после обработки, т.к. индексы дерева не сбрасываются

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Объект.ТипИсточника 					= Перечисления.ТипыИсточниковДляЗагрузки.ЛокальныйРесурс;
	Объект.ФайлНоменклатурыВостокСервис 	= "xtovar.zip";
	
	ВосстановитьНастройкиПодключенияFTPНаСервере();
	
	УправлениеВидимостьюЭлементовФормы();      
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНоменклатуру(Команда)
	
	ЗапомнитьТекущуюСтрокуДерева = Ложь;
	
	Состояние(НСтр("ru = 'Выполняется загрузка номенклатуры'"));
	
	Результат = ВыполнитьЗагрузкуНоменклатурыНаСервере();
	
	Если НЕ Результат.ЗаданиеВыполнено Тогда
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресХранилища;
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания_Загрузка", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
	Иначе
		Если Результат.УспешнаяЗагрузка Тогда
			//ЭтаФорма.Закрыть();
			ОповеститьОбИзменении(Тип("СправочникСсылка.Номенклатура"));
		Иначе
			Сообщить("При загрузке номенклатуры произошли ошибки.");
		КонецЕсли;
		Если СмещениеИндексов = 0 Тогда
			СмещениеИндексов = ЭтаФорма.ДеревоНоменклатуры.ПолучитьЭлементы()[0].ПолучитьИдентификатор();
		КонецЕсли;
		Оповестить( , , ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ВыполнитьЗагрузкуНоменклатурыНаСервере()
	
	//Танцюра А.Н. -- №140570 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 1) -- 09.11.2021 <<<
	//ПараметрыЗагрузки = Новый Структура(
	//	"КаталогОбменаИнформацией, ТипИсточника, ФайлНоменклатурыВостокСервис, FTPСоединениеАдрес, FTPСоединениеПароль, FTPСоединениеПассивноеСоединение, FTPСоединениеПользователь, FTPСоединениеПорт, FTPСоединениеПуть, ДеревоДляЗагрузки, ТаблицаХарактеристик_, ТаблицаКомплектующих",
	//	Объект.КаталогОбменаИнформацией, Объект.ТипИсточника, Объект.ФайлНоменклатурыВостокСервис, Объект.FTPСоединениеАдрес, Объект.FTPСоединениеПароль, Объект.FTPСоединениеПассивноеСоединение, Объект.FTPСоединениеПользователь, Объект.FTPСоединениеПорт, Объект.FTPСоединениеПуть, РеквизитФормыВЗначение("ДеревоНоменклатуры"), РеквизитФормыВЗначение("ТаблицаХарактеристик",Тип("ТаблицаЗначений")), РеквизитФормыВЗначение("ТаблицаКомплектующих",Тип("ТаблицаЗначений")));
		
	ПараметрыЗагрузки = Новый Структура(
		"КаталогОбменаИнформацией, ТипИсточника, ФайлНоменклатурыВостокСервис, FTPСоединениеАдрес, FTPСоединениеПароль, FTPСоединениеПассивноеСоединение, FTPСоединениеПользователь, FTPСоединениеПорт, FTPСоединениеПуть, ДеревоДляЗагрузки, ТаблицаХарактеристик_, ТаблицаКомплектующих, Организация, ТаблицаНоменклатурныхНомеров",
		Объект.КаталогОбменаИнформацией, Объект.ТипИсточника, Объект.ФайлНоменклатурыВостокСервис, Объект.FTPСоединениеАдрес, Объект.FTPСоединениеПароль, Объект.FTPСоединениеПассивноеСоединение, Объект.FTPСоединениеПользователь, Объект.FTPСоединениеПорт, Объект.FTPСоединениеПуть, РеквизитФормыВЗначение("ДеревоНоменклатуры"), РеквизитФормыВЗначение("ТаблицаХарактеристик",Тип("ТаблицаЗначений")), РеквизитФормыВЗначение("ТаблицаКомплектующих",Тип("ТаблицаЗначений")), Объект.Организация, РеквизитФормыВЗначение("ТаблицаНоменклатурныхНомеров",Тип("ТаблицаЗначений")));	
	//Танцюра А.Н. -- №140570 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 1) -- 09.11.2021 <<<	

	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		Обработки.ЗагрузкаНоменклатурыВостокСервис.ВыполнитьЗагрузкуНоменклатуры(ПараметрыЗагрузки,АдресХранилища);
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
		
	Иначе
		НаименованиеЗадания = НСтр("ru = 'Загрузка номенклатуры '");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор,
			"Обработки.ЗагрузкаНоменклатурыВостокСервис.ВыполнитьЗагрузкуНоменклатуры", 
			ПараметрыЗагрузки,
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;
		
	КонецЕсли;
	
	УспешнаяЗагрузка = Ложь;
	
	Если Результат.ЗаданиеВыполнено Тогда
		УспешнаяЗагрузка = ЗагрузитьРезультатЗагрузки();
	КонецЕсли;

	Результат.Вставить("УспешнаяЗагрузка", УспешнаяЗагрузка);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания_Загрузка()
	
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			Если ПроверитьВыполнениеФоновогоЗаданияНаСервере(ИдентификаторЗадания) Тогда 
				УспешнаяЗагрузка = ЗагрузитьРезультатЗагрузки();
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
				Если УспешнаяЗагрузка Тогда
					//ЭтаФорма.Закрыть();
					ОповеститьОбИзменении(Тип("СправочникСсылка.Номенклатура"));
				Иначе
					Сообщить("При загрузке номенклатуры произошли ошибки.");
				КонецЕсли;
				Если СмещениеИндексов = 0 Тогда
					СмещениеИндексов = ЭтаФорма.ДеревоНоменклатуры.ПолучитьЭлементы()[0].ПолучитьИдентификатор();
				КонецЕсли;
				Оповестить( , , ЭтаФорма);
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания_Загрузка", 
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
					Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение;
	КонецПопытки;

КонецПроцедуры

&НаСервере
Функция ЗагрузитьРезультатЗагрузки()
	
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	ЗначениеВРеквизитФормы(Результат.ДеревоДляЗагрузки,"ДеревоНоменклатуры");
	ЗначениеВРеквизитФормы(Результат.ТаблицаХарактеристик,"ТаблицаХарактеристик");
	ЗначениеВРеквизитФормы(Результат.ТаблицаКомплектующих,"ТаблицаКомплектующих");
	
	Возврат Результат.УспешнаяЗагрузка;
	
КонецФункции

&НаКлиенте
Процедура ТипИсточникаПриИзменении(Элемент)
	
	УправлениеВидимостьюЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостьюЭлементовФормы()
	
	Если Объект.ТипИсточника = Перечисления.ТипыИсточниковДляЗагрузки.ЛокальныйРесурс Тогда
		Элементы.ГруппаФТПРесурс.Видимость 			= Ложь;
		Элементы.НастройкиПодключенияFTP.Видимость	= Ложь;
		Элементы.ГруппаЛокальныйРесурс.Видимость 	= Истина;
	Иначе
		Элементы.ГруппаФТПРесурс.Видимость 			= Истина;
		Элементы.НастройкиПодключенияFTP.Видимость	= Истина;
		Элементы.ГруппаЛокальныйРесурс.Видимость 	= Ложь;		
	КонецЕсли;                           
	
	//Танцюра А.Н. -- №140570 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 1) -- 09.11.2021 <<<
	Элементы.ГруппаНоменклатурныеНомера.Видимость = ЗначениеЗаполнено(Объект.Организация);                            
	//Танцюра А.Н. -- №140570 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 1) -- 09.11.2021 >>>
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлНоменклатуры(Команда)
	
	Элементы.ДеревоНоменклатуры.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗагрузитьНоменклатуру.Видимость = Ложь;
	Элементы.ГруппаТаблицаХарактеристик.Видимость = Ложь;
	
	Состояние(НСтр("ru = 'Выполняется чтение и анализ файла номенклатуры'"));

	//Танцюра А.Н. -- №140568 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 2) -- 08.11.2021 <<<
	
	Если НЕ ЗначениеЗаполнено(Объект.ФайлНоменклатурыВостокСервис) Тогда
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не определен файл номенклатуры."; 
		СообщениеПользователю.Сообщить();	
		Возврат;
	
	КонецЕсли;
	
	//Танцюра А.Н. -- №140568 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 2) -- 08.11.2021 >>>
	
	Результат = ВыполнитьЧтениеФайлаНаСервере();
	
	Если НЕ Результат.ЗаданиеВыполнено Тогда
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресХранилища;
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания_Чтение", 1, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
	Иначе
		Если Результат.МожноЗагружатьНоменклатуру Тогда
			Элементы.ДеревоНоменклатуры.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗагрузитьНоменклатуру.Видимость = Истина;
		КонецЕсли;
		Если СмещениеИндексов = 0 Тогда
			СмещениеИндексов = ЭтаФорма.ДеревоНоменклатуры.ПолучитьЭлементы()[0].ПолучитьИдентификатор();
		КонецЕсли;
		Оповестить( , , ЭтаФорма);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания_Чтение()
	
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			Если ПроверитьВыполнениеФоновогоЗаданияНаСервере(ИдентификаторЗадания) Тогда 
				МожноЗагружатьНоменклатуру = ЗагрузитьРезультатЧтения();
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
				Если МожноЗагружатьНоменклатуру Тогда
					Элементы.ДеревоНоменклатуры.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗагрузитьНоменклатуру.Видимость = Истина;
				КонецЕсли;
				Если СмещениеИндексов = 0 Тогда
					СмещениеИндексов = ЭтаФорма.ДеревоНоменклатуры.ПолучитьЭлементы()[0].ПолучитьИдентификатор();
				КонецЕсли;
				Оповестить( , , ЭтаФорма);
 			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания_Чтение", 
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
					Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение;
	КонецПопытки;

КонецПроцедуры	

&НаСервереБезКонтекста
Функция ПроверитьВыполнениеФоновогоЗаданияНаСервере(ФоновоеЗаданиеИдентификатор)
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ФоновоеЗаданиеИдентификатор);
КонецФункции

&НаСервере
Функция ВыполнитьЧтениеФайлаНаСервере()
	
	//Танцюра А.Н. -- №140568 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 2) -- 08.11.2021 <<<
	
	//ПараметрыЗагрузки = Новый Структура(
	//	"КаталогОбменаИнформацией, ТипИсточника, ФайлНоменклатурыВостокСервис, FTPСоединениеАдрес, FTPСоединениеПароль, FTPСоединениеПассивноеСоединение, FTPСоединениеПользователь, FTPСоединениеПорт, FTPСоединениеПуть, FTPСоединениеЗащищенноеСоединение",
	//	Объект.КаталогОбменаИнформацией, Объект.ТипИсточника, Объект.ФайлНоменклатурыВостокСервис, Объект.FTPСоединениеАдрес, Объект.FTPСоединениеПароль, Объект.FTPСоединениеПассивноеСоединение, Объект.FTPСоединениеПользователь, Объект.FTPСоединениеПорт, Объект.FTPСоединениеПуть, Объект.FTPСоединениеЗащищенноеСоединение);
		
	ПараметрыЗагрузки = Новый Структура(
		"КаталогОбменаИнформацией, ТипИсточника, ФайлНоменклатурыВостокСервис, FTPСоединениеАдрес, FTPСоединениеПароль, FTPСоединениеПассивноеСоединение, FTPСоединениеПользователь, FTPСоединениеПорт, FTPСоединениеПуть, FTPСоединениеЗащищенноеСоединение, Организация",
		Объект.КаталогОбменаИнформацией, Объект.ТипИсточника, Объект.ФайлНоменклатурыВостокСервис, Объект.FTPСоединениеАдрес, Объект.FTPСоединениеПароль, Объект.FTPСоединениеПассивноеСоединение, Объект.FTPСоединениеПользователь, Объект.FTPСоединениеПорт, Объект.FTPСоединениеПуть, Объект.FTPСоединениеЗащищенноеСоединение, Объект.Организация);	
		
	//Танцюра А.Н. -- №140568 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 2) -- 08.11.2021 >>>	
		
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
		Обработки.ЗагрузкаНоменклатурыВостокСервис.ВыполнитьЧтениеФайлаНоменклатуры(ПараметрыЗагрузки,АдресХранилища);
		Результат = Новый Структура("ЗаданиеВыполнено", Истина);
		
	Иначе
		НаименованиеЗадания = НСтр("ru = 'Чтение файла номенклатуры '");
		
		Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор,
			"Обработки.ЗагрузкаНоменклатурыВостокСервис.ВыполнитьЧтениеФайлаНоменклатуры", 
			ПараметрыЗагрузки,
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;
		
	КонецЕсли;
	
	МожноЗагружатьНоменклатуру = Ложь;
	
	Если Результат.ЗаданиеВыполнено Тогда
		МожноЗагружатьНоменклатуру = ЗагрузитьРезультатЧтения();
	КонецЕсли;

	Результат.Вставить("МожноЗагружатьНоменклатуру", МожноЗагружатьНоменклатуру);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ЗагрузитьРезультатЧтения()
	
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(Результат) = Тип("Строка") Тогда //это ошибка
		Сообщить(Результат);
		МожноЗагружатьНоменклатуру = Ложь;
	Иначе 
		ЗначениеВРеквизитФормы(Результат.ДеревоДляЗагрузки,		"ДеревоНоменклатуры");
		ЗначениеВРеквизитФормы(Результат.ТаблицаМетрик,			"ТаблицаХарактеристик");
		ЗначениеВРеквизитФормы(Результат.ТаблицаКомплектующих,	"ТаблицаКомплектующих");    
		//Танцюра А.Н. -- №140570 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 1) -- 09.11.2021 <<<
		ЗначениеВРеквизитФормы(Результат.ТаблицаНоменклатурныхНомеров,	"ТаблицаНоменклатурныхНомеров");
		//Танцюра А.Н. -- №140570 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 1) -- 09.11.2021 >>>
		МожноЗагружатьНоменклатуру = Истина;
	КонецЕсли;
	
	Возврат МожноЗагружатьНоменклатуру;
	
КонецФункции

&НаКлиенте
Процедура УстановитьFTPКаталогПоУмолчанию(Команда)
	
	Объект.FTPСоединениеПуть = "help-docs/Tovar";
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогОбменаИнформациейНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ОбработчикВыбораФайловогоКаталога(Объект, "КаталогОбменаИнформацией", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогОбменаИнформациейОткрытие(Элемент, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ОбработчикОткрытияФайлаИлиКаталога(Объект, "КаталогОбменаИнформацией", СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключениеFTP(Команда)
	
	ПроверитьПодключениеFTPНаСервере();
		
КонецПроцедуры

&НаСервере
Процедура ПроверитьПодключениеFTPНаСервере()
	
	ПараметрыЗагрузки = Новый Структура(
		"КаталогОбменаИнформацией, ТипИсточника, ФайлНоменклатурыВостокСервис, FTPСоединениеАдрес, FTPСоединениеПароль, FTPСоединениеПассивноеСоединение, FTPСоединениеПользователь, FTPСоединениеПорт, FTPСоединениеПуть, FTPСоединениеЗащищенноеСоединение",
		Объект.КаталогОбменаИнформацией, Объект.ТипИсточника, Объект.ФайлНоменклатурыВостокСервис, Объект.FTPСоединениеАдрес, Объект.FTPСоединениеПароль, Объект.FTPСоединениеПассивноеСоединение, Объект.FTPСоединениеПользователь, Объект.FTPСоединениеПорт, Объект.FTPСоединениеПуть, Объект.FTPСоединениеЗащищенноеСоединение);
	ЗаполнитьЗначенияСвойств(ПараметрыЗагрузки, ЭтаФорма);
	
	Если Обработки.ЗагрузкаНоменклатурыВостокСервис.УстановитьFTPСоединение(ПараметрыЗагрузки) = Неопределено Тогда
		Сообщить("Ошибка подключения к FTP!");
	Иначе
		Сообщить("Подключение к FTP выполнено успешно.");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиПодключенияFTP(Команда)
	
	СохранитьНастройкиПодключенияFTPНаСервере();
		
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиПодключенияFTPНаСервере() 
	
	ИдентификаторОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Обработка.ЗагрузкаНоменклатурыВостокСервис");
	
	Если ЗначениеЗаполнено(ИдентификаторОбработки) Тогда
		
		СтруктураНастроек = Новый Структура;
		СтруктураНастроек.Вставить("FTPСоединениеАдрес",				Объект.FTPСоединениеАдрес);
		СтруктураНастроек.Вставить("FTPСоединениеПароль",				Объект.FTPСоединениеПароль);
		СтруктураНастроек.Вставить("FTPСоединениеПассивноеСоединение",	Объект.FTPСоединениеПассивноеСоединение);
		СтруктураНастроек.Вставить("FTPСоединениеПользователь",			Объект.FTPСоединениеПользователь);
		СтруктураНастроек.Вставить("FTPСоединениеПорт",					Объект.FTPСоединениеПорт);
		СтруктураНастроек.Вставить("FTPСоединениеПуть",					Объект.FTPСоединениеПуть);
		СтруктураНастроек.Вставить("FTPСоединениеЗащищенноеСоединение",	Объект.FTPСоединениеЗащищенноеСоединение);
		
		НаборЗаписей = РегистрыСведений.НастройкиПодключенияFTPДляДополнительныхОбработок.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторОбъекта.Установить(ИдентификаторОбработки);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() = 0 Тогда
			НоваяЗапись 						= НаборЗаписей.Добавить();
			НоваяЗапись.ИдентификаторОбъекта 	= ИдентификаторОбработки;
			НоваяЗапись.НастройкиПодключенияFTP	= Новый ХранилищеЗначения(СтруктураНастроек);
		Иначе
			НаборЗаписей[0].ИдентификаторОбъекта	= ИдентификаторОбработки;
			НаборЗаписей[0].НастройкиПодключенияFTP	= Новый ХранилищеЗначения(СтруктураНастроек);
		КонецЕсли;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиПодключенияFTPНаСервере()
	
	ИдентификаторОбработки = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Обработка.ЗагрузкаНоменклатурыВостокСервис");
	
	Если ЗначениеЗаполнено(ИдентификаторОбработки) Тогда
		
		НаборЗаписей = РегистрыСведений.НастройкиПодключенияFTPДляДополнительныхОбработок.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторОбъекта.Установить(ИдентификаторОбработки);
		НаборЗаписей.Прочитать();
		
		Если НЕ НаборЗаписей.Количество() = 0 Тогда
			СтруктураНастроек 							= НаборЗаписей[0].НастройкиПодключенияFTP.Получить();
			Объект.FTPСоединениеАдрес 					= СтруктураНастроек.FTPСоединениеАдрес;
			Объект.FTPСоединениеПароль 					= СтруктураНастроек.FTPСоединениеПароль;
			Объект.FTPСоединениеПассивноеСоединение 	= СтруктураНастроек.FTPСоединениеПассивноеСоединение;
			Объект.FTPСоединениеПользователь 			= СтруктураНастроек.FTPСоединениеПользователь;
			Объект.FTPСоединениеПорт 					= СтруктураНастроек.FTPСоединениеПорт;
			Объект.FTPСоединениеПуть 					= СтруктураНастроек.FTPСоединениеПуть;
			Объект.FTPСоединениеЗащищенноеСоединение 	= ?(СтруктураНастроек.Свойство("FTPСоединениеЗащищенноеСоединение"),СтруктураНастроек.FTPСоединениеЗащищенноеСоединение,Ложь);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоНоменклатурыИспользоватьПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные.Использовать = 2 Тогда
		ТекущиеДанные.Использовать = 0;
	КонецЕсли;
	
	ПроцедурыРаботыСНормамиКлиент.ОбходДереваВверх(ТекущиеДанные);
	ПроцедурыРаботыСНормамиКлиент.ОбходДереваВниз(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлНоменклатурыВостокСервисПриИзменении(Элемент)
	
	Элементы.ДеревоНоменклатуры.КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗагрузитьНоменклатуру.Видимость = Ложь;
	Элементы.ГруппаТаблицаХарактеристик.Видимость = Ложь;
	ОчиститьДеревоНоменклатуры();
	ОчиститьТаблицуХарактеристик();
	ОчиститьТаблицуКомплектующих();
	
КонецПроцедуры
 
&НаСервере
Процедура ОчиститьДеревоНоменклатуры()
	
	ДеревоДляЗагрузки = РеквизитФормыВЗначение("ДеревоНоменклатуры");
	ДеревоДляЗагрузки.Строки.Очистить();
	ЗначениеВРеквизитФормы(ДеревоДляЗагрузки,"ДеревоНоменклатуры");
	 
КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицуХарактеристик()
	 
	ТаблицаХарактеристикНоменклатуры = РеквизитФормыВЗначение("ТаблицаХарактеристик");
	ТаблицаХарактеристикНоменклатуры.Очистить();
	ЗначениеВРеквизитФормы(ТаблицаХарактеристикНоменклатуры,"ТаблицаХарактеристик");
	 
КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицуКомплектующих()
	 
	ТаблицаКомплектующихНоменклатуры = РеквизитФормыВЗначение("ТаблицаКомплектующих");
	ТаблицаКомплектующихНоменклатуры.Очистить();
	ЗначениеВРеквизитФормы(ТаблицаКомплектующихНоменклатуры,"ТаблицаКомплектующих");
	 
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.КодГруппы) Тогда//открываем карточку группы
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Ссылка);
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаГруппы", ПараметрыФормы);
	Иначе
		Если ЗначениеЗаполнено(ТекущиеДанные.КодОракл) Тогда//открываем карточку товара
			ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Ссылка);
			ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНоменклатурыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоНоменклатуры.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено Тогда
		УстановитьОтборХарактеристик(ТекущиеДанные.КодОракл, ЭтаФорма);
		УстановитьОтборКомплектующих(ТекущиеДанные.КодОракл, ЭтаФорма);
		Элементы.ГруппаТаблицаХарактеристик.Видимость = Истина;
		Если ЗапомнитьТекущуюСтрокуДерева Тогда
			ТекущаяСтрокаДерева = Элементы.ДеревоНоменклатуры.ТекущаяСтрока;
		КонецЕсли;
	Иначе
		Если ЗапомнитьТекущуюСтрокуДерева Тогда
			ТекущаяСтрокаДерева = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборХарактеристик(КодНоменклатуры, Форма)
	
	Форма.Элементы.ТаблицаХарактеристик.ОтборСтрок = Новый ФиксированнаяСтруктура("КодОракл", КодНоменклатуры);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборКомплектующих(КодНоменклатуры, Форма)
	
	Форма.Элементы.ТаблицаКомплектующих.ОтборСтрок = Новый ФиксированнаяСтруктура("КодОраклКомплекта", КодНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТекущаяСтрокаДерева 			= 0;
	ЗапомнитьТекущуюСтрокуДерева 	= Истина;
	СмещениеИндексов				= 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаХарактеристикВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ТаблицаХарактеристик.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Существует Тогда
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Ссылка);
		ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.Форма.ФормаЭлемента", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Элементы.ДеревоНоменклатуры.Развернуть(ЭтаФорма.ДеревоНоменклатуры.ПолучитьЭлементы()[0].ПолучитьИдентификатор(),Истина);
	Элементы.ДеревоНоменклатуры.ТекущаяСтрока = СмещениеИндексов + ТекущаяСтрокаДерева;
	ЗапомнитьТекущуюСтрокуДерева = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКомплектующихВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ТаблицаКомплектующих.ТекущиеДанные;
	
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.КодОракл) Тогда//открываем карточку товара
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Ссылка);
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

//Танцюра А.Н. -- №140568 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 2) -- 08.11.2021 <<<

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()     

	УстановитьПривилегированныйРежим(Истина);
	
	ИНН = ?(ЗначениеЗаполнено(Объект.Организация.ИНН),Объект.Организация.ИНН,"НЕ ЗАПОЛНЕН!!!"); 
	КПП = ?(ЗначениеЗаполнено(Объект.Организация.КПП),Объект.Организация.КПП,"НЕ ЗАПОЛНЕН!!!"); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиПараметровОбменаСАП.DSTNM_Получателя КАК DSTNM
	|ИЗ
	|	РегистрСведений.НастройкиПараметровОбменаСАП КАК НастройкиПараметровОбменаСАП
	|ГДЕ
	|	НастройкиПараметровОбменаСАП.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);  
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		DSTNM = "НЕ ЗАДАН!!!";
		
	Иначе
		
		DSTNM = Результат.Выгрузить()[0].DSTNM;
		
		Если НЕ ЗначениеЗаполнено(DSTNM) Тогда
			
			DSTNM = "НЕ ЗАДАН!!!";	
			
		КонецЕсли;	
		
	КонецЕсли;
	
	ИнформацияПоОрганизации = "ИНН: " + ИНН + " КПП: " + КПП + " DSTNM: " + DSTNM;

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ОрганизацияПриИзмененииНаСервере();      
		
		Если СтрНайти(ИНН,"!!!") = 0 И СтрНайти(КПП,"!!!") = 0 И СтрНайти(DSTNM,"!!!") = 0 Тогда
			
			Объект.ФайлНоменклатурыВостокСервис = "xtovar_" + ИНН + "_" + КПП + "_" + DSTNM + ".zip";
			
		Иначе
			
			Объект.ФайлНоменклатурыВостокСервис = "";
			
		КонецЕсли;       
		
		Элементы.ГруппаНоменклатурныеНомера.Видимость = Истина;
		
	Иначе
		
		ИНН 	= "";
		КПП 	= "";
		DSTNM 	= "";
		
		ИнформацияПоОрганизации = "";
		
		Объект.ФайлНоменклатурыВостокСервис = "xtovar.zip"; 
		
		Элементы.ГруппаНоменклатурныеНомера.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

//Танцюра А.Н. -- №140568 Доработка в обработке "Загрузка номенклатуры "Восток-Сервис" (часть 2) -- 08.11.2021 >>>
