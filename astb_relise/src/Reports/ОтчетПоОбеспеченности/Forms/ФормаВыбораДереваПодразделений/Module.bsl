
&НаКлиенте
Процедура ВыбратьЗначения(Команда)
	ВыбранныеЗначения = ОбходДереваНаКлиенте();
	
	Для каждого Элемент Из ВыбранныеЗначения Цикл		
		Отчет.НПодразделения.Добавить(Элемент);		
	КонецЦикла;
	ОповеститьОВыборе(ВыбранныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗначение(Команда)	
	ПараметрыПодбора = Новый Структура;    
    ПараметрыПодбора.Вставить("ЗакрыватьПриВыборе", Истина);
    ПараметрыПодбора.Вставить("МножественныйВыбор", Истина);
	//ПараметрыПодбора.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.ГруппыИЭлементы);   
    ОткрытьФорму("Справочник.Подразделения.ФормаВыбора", ПараметрыПодбора, ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ДобавитьЗначенияВДерево(ВыбранныеЗначения)
	
	Если ВыбранныеЗначения.Количество()=0 Тогда	
		Возврат;	
	КонецЕсли;
	
	ДеревоЗн = РеквизитФормыВЗначение("ДеревоПодразделений");
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Подразделения.Ссылка КАК Ссылка,
		|	Подразделения.Родитель КАК Родитель,
		|	ВЫБОР
		|		КОГДА Подразделения.Ссылка В (&СписокПодразделений)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ВыборЗначения
		|ИЗ
		|	Справочник.Подразделения КАК Подразделения
		|ГДЕ
		|	Подразделения.Ссылка В ИЕРАРХИИ(&СписокПодразделений)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка ИЕРАРХИЯ";
	
	Запрос.УстановитьПараметр("СписокПодразделений", ВыбранныеЗначения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаНайдена = СтрокаСРодителем(ДеревоЗн.Строки, Выборка.Ссылка);
		
		Если СтрокаНайдена<>Неопределено Тогда
			НовыйЭлемент = СтрокаНайдена.Строки.Добавить();
		Иначе	
			НовыйЭлемент = ДеревоЗн.Строки.Добавить();			
		КонецЕсли;
		
		НовыйЭлемент.Подразделение=Выборка.Ссылка;
		НовыйЭлемент.ВыборЗначения=Выборка.ВыборЗначения;
		
	КонецЦикла;
	//
	ЗначениеВРеквизитФормы(ДеревоЗн, "ДеревоПодразделений");
КонецПроцедуры
	
&НаСервереБезКонтекста
Функция СтрокаСРодителем(ДеревоЗн,Элемент)
	НайденнаяСтрока = Неопределено;	
	ОбойтиУровеньДерева(ДеревоЗн, НайденнаяСтрока, Элемент);
	Возврат НайденнаяСтрока;
КонецФункции // ()

&НаСервереБезКонтекста
Процедура ОбойтиУровеньДерева(Строки, НайденнаяСтрока, Элемент)
  Для каждого Строка из Строки Цикл
     Если Строка.Подразделение = Элемент.Родитель Тогда	 
	 	  НайденнаяСтрока = Строка;
		  Прервать;	 
	 КонецЕсли;  
     ОбойтиУровеньДерева(Строка.Строки, НайденнаяСтрока, Элемент);
 КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ДобавитьЗначенияВДерево(ВыбранноеЗначение);
	РазвернутьДерево();
КонецПроцедуры

&НаКлиенте
Процедура ОбойтиДляПоискаВыбранных(Элементы, МассивВыбранных)
  Для каждого Строка из Элементы Цикл
     Если Строка.ВыборЗначения = Истина Тогда	 
	 	  МассивВыбранных.Добавить(Строка.Подразделение);
	 КонецЕсли;  
	 ЭлементыДерева = Строка.ПолучитьЭлементы();
     ОбойтиДляПоискаВыбранных(ЭлементыДерева, МассивВыбранных);
 КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Функция ОбходДереваНаКлиенте()

	МассивВыбранных = Новый Массив;
	ЭлементыДерева = ДеревоПодразделений.ПолучитьЭлементы();
	ОбойтиДляПоискаВыбранных(ЭлементыДерева, МассивВыбранных);
	
	Возврат МассивВыбранных;

КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СписокВыбранных = ЭтаФОрма.ВладелецФормы.Отчет.Нподразделения;
	Если СписокВыбранных.Количество()<>0  Тогда	
	    ДобавитьЗначенияВДерево(ЭтаФорма.ВладелецФормы.Отчет.НПодразделения);
		РазвернутьДерево();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево()
	
	КоллекцияЭлементовДерева = ДеревоПодразделений.ПолучитьЭлементы();
	
	Для Каждого Строка Из КоллекцияЭлементовДерева Цикл 			
		ИдентификаторСтроки=Строка.ПолучитьИдентификатор();				
		Элементы.ДеревоПодразделений.Развернуть(ИдентификаторСтроки);		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДерево(Команда)
	ОчиститьДеревонаСервере();
КонецПроцедуры
 
&НаСервере
Процедура ОчиститьДеревонаСервере()
	ДеревоЗн = РеквизитФормыВЗначение("ДеревоПодразделений");
	ДеревоЗн.Строки.Очистить();
	ЗначениеВРеквизитФормы(ДеревоЗн, "ДеревоПодразделений");
КонецПроцедуры

 
