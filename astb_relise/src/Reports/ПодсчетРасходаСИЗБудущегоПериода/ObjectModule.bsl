
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

    СтандартнаяОбработка = Ложь;

    ВнешниеНаборыДанных = Новый Структура;
	
	// Подготовим данные для отчета
	ПараметрыОтбора = Новый Структура;
	//ПараметрыОтбора.Вставить("ВыбраннаяДата", 	КонецМесяца(ДобавитьМесяц(ПолучитьЗначениеПараметраПользовтельскихНастроек("ВыбраннаяДата", КомпоновщикНастроек).Дата, 1)));
	ПараметрыОтбора.Вставить("ВыбраннаяДата", 	КонецМесяца(ДобавитьМесяц(ТекущаяДата(), 1)));
	ПараметрыОтбора.Вставить("Сотрудники", 		ПолучитьЗначениеПараметраПользовтельскихНастроек("ОтборПоСотрудникам", КомпоновщикНастроек, Истина));
	ПараметрыОтбора.Вставить("Организация", 	ПолучитьЗначениеПараметраПользовтельскихНастроек("ОтборПоОрганизациям", КомпоновщикНастроек, Ложь));
	ПараметрыОтбора.Вставить("Подразделения", 	ПолучитьЗначениеПараметраПользовтельскихНастроек("ОтборПоПодразделениям", КомпоновщикНастроек, Истина));
	ПараметрыОтбора.Вставить("Должности", 		ПолучитьЗначениеПараметраПользовтельскихНастроек("ОтборПоДолжностям", КомпоновщикНастроек, Истина));
	ПараметрыОтбора.Вставить("ВидыВыдачиСИЗ", 	ПолучитьЗначениеПараметраПользовтельскихНастроек("ОтборПоВидамВыдачи", КомпоновщикНастроек, Истина));
	ПараметрыОтбора.Вставить("НоменклатураНормы", ПолучитьЗначениеПараметраПользовтельскихНастроек("ОтборПоНоменклатруаНормы", КомпоновщикНастроек, Истина));
	ПараметрыОтбора.Вставить("СкладыВыдачи", 	ПолучитьЗначениеПараметраПользовтельскихНастроек("ОтборПоСкладам", КомпоновщикНастроек, Истина));
	
	УстановитьЗначениеПараметраПользовтельскихНастроек("ВыбраннаяДата", КомпоновщикНастроек, ПараметрыОтбора.ВыбраннаяДата); // Заменим значение параметра на вычисленное
		
	ТаблицаВыдачиСИЗ = ПодготовитьТаблицуВыдачиСИЗ(ПараметрыОтбора);
    
    ВнешниеНаборыДанных.Вставить("ТаблицаВыдачиСИЗ", ТаблицаВыдачиСИЗ);

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);

	ДокументРезультат.Очистить();

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры

Функция ПолучитьЗначениеПараметраПользовтельскихНастроек(ИмяПараметра, мКомпоновщикНастроек, ВозвращатьВСписке = Ложь)
	
	ПараметрДанных = мКомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	ПараметрПользовательскойНастройки = мКомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
	
	Если ПараметрПользовательскойНастройки.Использование Тогда
		Если ВозвращатьВСписке И ТипЗнч(ПараметрПользовательскойНастройки.Значение) <> Тип("СписокЗначений") Тогда
			ЗначениеПараметра = Новый СписокЗначений;
			ЗначениеПараметра.Добавить(ПараметрПользовательскойНастройки.Значение);
		Иначе
			ЗначениеПараметра = ПараметрПользовательскойНастройки.Значение;
		КонецЕсли;
	Иначе
		ЗначениеПараметра = Неопределено;
	КонецЕсли;

	Возврат ЗначениеПараметра;
	
КонецФункции

Процедура УстановитьЗначениеПараметраПользовтельскихНастроек(ИмяПараметра, мКомпоновщикНастроек, Значение)
	
	ПараметрДанных = мКомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	ПараметрПользовательскойНастройки = мКомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
	
	ПараметрДанных.Значение = Значение;
	ПараметрПользовательскойНастройки.Значение = Значение;
		
КонецПроцедуры

Функция ПодготовитьТаблицуВыдачиСИЗ(ПараметрыОтбора) 
	
	АлгоритмФормированияПотребности = ПроцедурыРаботыСНормамиСервер.ПолучитьАлгоритмФормированияПотребности(ПараметрыОтбора.Организация);
	
	Если АлгоритмФормированияПотребности = "0_0_0_3" ИЛИ АлгоритмФормированияПотребности = "0_0_0_4" Тогда
		ТаблицаВыдачиСИЗ = ПодготовитьТаблицуВыдачиСИЗ_Алгоритм3(ПараметрыОтбора);
	ИначеЕсли АлгоритмФормированияПотребности = "0_0_1_2" Тогда
		ТаблицаВыдачиСИЗ = ПодготовитьТаблицуВыдачиСИЗ_Алгоритм12(ПараметрыОтбора);
	Иначе
		ТаблицаВыдачиСИЗ = ИнициироватьТаблицуВыдачиСИЗ();
	КонецЕсли;
	
	Возврат ТаблицаВыдачиСИЗ;
	
КонецФункции

Функция ПересечениеЭлементовМассива(Массив1, Массив2) Экспорт

	МассивРезультат = Новый Массив;
	
	// Какой массив больше, тот и обходим
	Если Массив1.Количество() > Массив2.Количество() Тогда
		БольшойСписок 	= Массив1;
		МалыйСписок 	= Новый Соответствие;
		Для Каждого ЭлементМассива Из Массив2 Цикл
			МалыйСписок.Вставить(ЭлементМассива, ЭлементМассива);
		КонецЦикла;
	Иначе
		БольшойСписок 	= Массив2;
		МалыйСписок 	= Новый Соответствие;
		Для Каждого ЭлементМассива Из Массив1 Цикл
			МалыйСписок.Вставить(ЭлементМассива, ЭлементМассива);
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого ЭлементМассива Из БольшойСписок Цикл
		Если МалыйСписок.Получить(ЭлементМассива) <> Неопределено Тогда
			МассивРезультат.Добавить(ЭлементМассива);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивРезультат;
	
КонецФункции

Функция ПодготовитьТаблицуВыдачиСИЗ_Алгоритм3(ПараметрыОтбора)
	
	ПериодРасчета = Новый Граница(ПараметрыОтбора.ВыбраннаяДата, ВидГраницы.Включая);
	ПериодПотребности = ПараметрыОтбора.ВыбраннаяДата;
	
	МассивСотрудников 		= ПараметрыОтбора.Сотрудники;
	Организация		 		= ПараметрыОтбора.Организация;
	МассивПодразделений		= ПараметрыОтбора.Подразделения;
	МассивДолжностей		= ПараметрыОтбора.Должности;
	ВидыВыдачиСИЗ 			= ПараметрыОтбора.ВидыВыдачиСИЗ;
	МассивНоменклатураНормы = ПараметрыОтбора.НоменклатураНормы;
	МассивСкладовВыдачи		= ПараметрыОтбора.СкладыВыдачи;
	
	МассивСотрудников 		= ПолучитьМассивСотрудников(МассивСотрудников, МассивПодразделений, МассивДолжностей, ПериодРасчета);
	ТаблицаСкладовВыдачи 	= ПолучитьСкладыВыдачи(МассивСотрудников, ВидыВыдачиСИЗ, Организация);
	Если Не ЗначениеЗаполнено(МассивСкладовВыдачи) Тогда 
		// Если не задан отбор по складам, то определяем склады по сотрудникам
		МассивСкладовВыдачи	= ТаблицаСкладовВыдачи.ВыгрузитьКолонку("Склад");
	Иначе
		// Иначе ищем пересечение по складам
		МассивСкладовВыдачи = МассивСкладовВыдачи.ВыгрузитьЗначения();
		МассивСкладовВыдачиПоСотрудникам = ТаблицаСкладовВыдачи.ВыгрузитьКолонку("Склад");
		МассивСкладовВыдачи = ПересечениеЭлементовМассива(МассивСкладовВыдачи, МассивСкладовВыдачиПоСотрудникам);
	КонецЕсли;
	МассивСкладовВыдачи	= ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивСкладовВыдачи);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПотребностьВыдачиСИЗОстатки.Организация,
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник,
	|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи,
	|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы,
	|	ПотребностьВыдачиСИЗОстатки.ДатаПотребности,
	|	ПотребностьВыдачиСИЗОстатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_Потребность
	|ИЗ
	|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
	|			&ПериодРасчета,
	|			Организация = &Организация
	|				И Сотрудник В (&МассивСотрудников)
	|				И (&НеУчитыватьВидыВыдачи ИЛИ НормаВыдачи.ВидВыдачиСИЗ В (&ВидыВыдачиСИЗ))
	|				И (&НеУчитыватьНоменклатураНормы ИЛИ НоменклатураНормы В (&МассивНоменклатураНормы))
	|				И НАЧАЛОПЕРИОДА(ДатаПотребности, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&ПериодПотребности, МЕСЯЦ)) КАК ПотребностьВыдачиСИЗОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НормыВыдачиСИЗСоставНормы.Ссылка,
	|	НормыВыдачиСИЗСоставНормы.НоменклатураНормы,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи
	|ПОМЕСТИТЬ ВТ_СоставНормы
	|ИЗ
	|	Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Потребность.Организация КАК Организация,
	|	ВТ_Потребность.Сотрудник КАК Сотрудник,
	|	ВТ_Потребность.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_Потребность.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_Потребность.ДатаПотребности КАК ДатаВыдачи,
	|	ВТ_Потребность.КоличествоОстаток КАК Количество,
	|	ВТ_Потребность.КоличествоОстаток КАК КоличествоПотребность,
	|	ВТ_СоставНормы.ПериодичностьВыдачи
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	ВТ_Потребность КАК ВТ_Потребность
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоставНормы КАК ВТ_СоставНормы
	|		ПО ВТ_Потребность.НормаВыдачи = ВТ_СоставНормы.Ссылка
	|			И ВТ_Потребность.НоменклатураНормы = ВТ_СоставНормы.НоменклатураНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Результат.Организация КАК Организация,
	|	ВТ_Результат.Сотрудник КАК Сотрудник,
	|	ВТ_Результат.Сотрудник.ФизическоеЛицо.Пол КАК ПолСотрудника,
	|	ВТ_Результат.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_Результат.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_Результат.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_Результат.Количество КАК Количество,
	|	ВТ_Результат.КоличествоПотребность КАК КоличествоПотребность,
	|	ВТ_Результат.ПериодичностьВыдачи КАК ПериодичностьВыдачи
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Результат.Сотрудник.Наименование,
	|	НормаВыдачи,
	|	НоменклатураНормы,
	|	ДатаВыдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Результат.Сотрудник КАК Сотрудник,
	|	ВТ_Результат.НоменклатураНормы КАК НоменклатураНормы
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Результат.Сотрудник.Наименование,
	|	НоменклатураНормы";
	
	Запрос.УстановитьПараметр("ПериодРасчета",				ПериодРасчета);
	Запрос.УстановитьПараметр("ПериодПотребности",		 	ПериодПотребности);
	Запрос.УстановитьПараметр("Организация",				Организация);
	Запрос.УстановитьПараметр("МассивСотрудников",			МассивСотрудников);
	Запрос.УстановитьПараметр("ВидыВыдачиСИЗ",				ВидыВыдачиСИЗ);
	Запрос.УстановитьПараметр("НеУчитыватьВидыВыдачи",		НЕ ЗначениеЗаполнено(ВидыВыдачиСИЗ));
	Запрос.УстановитьПараметр("МассивНоменклатураНормы", 	МассивНоменклатураНормы);
	Запрос.УстановитьПараметр("НеУчитыватьНоменклатураНормы", НЕ ЗначениеЗаполнено(МассивНоменклатураНормы));
		
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаПотребности 					= Результат[3].Выгрузить();
	ТаблицаНоменклатурыНормСотрудников 	= Результат[4].Выгрузить();
	
	ТаблицаРазмеров = ПроцедурыРаботыСНормамиСервер.ПодобратьРазмерыДляСотрудников(ТаблицаНоменклатурыНормСотрудников, ПериодРасчета, Организация);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПотребности.Организация КАК Организация,
	|	ТаблицаПотребности.Сотрудник КАК Сотрудник,
	|	ТаблицаПотребности.ПолСотрудника КАК ПолСотрудника,
	|	ТаблицаПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ТаблицаПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ТаблицаПотребности.ПериодичностьВыдачи КАК ПериодичностьВыдачи,
	|	ТаблицаПотребности.Количество КАК Количество,
	|	ТаблицаПотребности.КоличествоПотребность КАК КоличествоПотребность
	|ПОМЕСТИТЬ ВТ_ТаблицаПотребности
	|ИЗ
	|	&ТаблицаПотребности КАК ТаблицаПотребности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРазмеров.Сотрудник КАК Сотрудник,
	|	ТаблицаРазмеров.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаРазмеров.Номенклатура КАК Номенклатура,
	|	ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаРазмеров.ПолНоменклатуры КАК ПолНоменклатуры,
	|	ТаблицаРазмеров.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ТаблицаРазмеров.Приоритет КАК Приоритет,
	|	ТаблицаРазмеров.ПриоритетРазмера КАК ПриоритетРазмера,
	|	ТаблицаРазмеров.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	|	ТаблицаРазмеров.ВидАнтропометрии КАК ВидАнтропометрии,
	|	ТаблицаРазмеров.ЗначениеАнтропометрии КАК ЗначениеАнтропометрии,
	|	ТаблицаРазмеров.Рост КАК Рост,
	|	ТаблицаРазмеров.ИспользоватьРост КАК ИспользоватьРост,
	|	ТаблицаРазмеров.ВидСИЗ КАК ВидСИЗ,
	|	ТаблицаРазмеров.Комплект КАК Комплект,
	|	ТаблицаРазмеров.КоличествоВКомплекте КАК Количество
	|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров
	|ИЗ
	|	&ТаблицаРазмеров КАК ТаблицаРазмеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Организация КАК Организация,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&ПериодРасчета,
	|			Организация = &ОрганизацияДляОстатков
	|				И Склад В (&МассивСкладов)
	|				И (Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_ТаблицаРазмеров.Номенклатура
	|					ИЗ
	|						ВТ_ТаблицаРазмеров)
	|				ИЛИ Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_ТаблицаРазмеров.Комплект
	|					ИЗ
	|						ВТ_ТаблицаРазмеров))) КАК ОстаткиНоменклатурыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры,
	|	ОстаткиНоменклатурыОстатки.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Организация КАК Организация,
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ ВТ_ЦеныНоменклатуры
	|ИЗ
	|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|		&ПериодРасчета,
	|		Организация = &Организация
	|			И Номенклатура В
	|				(ВЫБРАТЬ
	|					ВТ_ТаблицаРазмеров.Номенклатура КАК Номенклатура
	|				ИЗ
	|					ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров)) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Организация,
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.Комплект КАК ЭтоКомплект,
	|	Номенклатура.ВидУчетаКомплектаДляППС КАК ВидУчетаКомплекта
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПотребности.Организация КАК Организация,
	|	ВТ_ТаблицаПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ТаблицаПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_Номенклатура.ЭтоКомплект КАК ЭтоКомплект,
	|	ВТ_Номенклатура.ВидУчетаКомплекта КАК ВидУчетаКомплекта,
	|	ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ТаблицаПотребности.Количество КАК Количество,
	|	ВТ_ТаблицаПотребности.КоличествоПотребность КАК КоличествоПотребность,
	|	ВТ_ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров.Приоритет КАК Приоритет,
	|	ВТ_ТаблицаПотребности.ПериодичностьВыдачи КАК ПериодичностьВыдачи
	|ПОМЕСТИТЬ ВТ_ПотребностьБезКомплектующих
	|ИЗ
	|	ВТ_ТаблицаПотребности КАК ВТ_ТаблицаПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|			ПО ВТ_ТаблицаРазмеров.Номенклатура = ВТ_Номенклатура.Номенклатура
	|		ПО ВТ_ТаблицаПотребности.Сотрудник = ВТ_ТаблицаРазмеров.Сотрудник
	|			И ВТ_ТаблицаПотребности.НоменклатураНормы = ВТ_ТаблицаРазмеров.НоменклатураНормы
	|ГДЕ
	|	ЕСТЬNULL(ВТ_ТаблицаРазмеров.Количество, 0) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаРазмеров.Комплект КАК Комплект,
	|	Комплекты.ВидУчетаКомплектаДляППС КАК ВидУчетаКомплекта,
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаРазмеров.Количество КАК Количество,
	|	ЕСТЬNULL(ВТ_ОстаткиНоменклатуры.КоличествоОстаток, 0) КАК Остаток
	|ПОМЕСТИТЬ ВТ_КомплектующиеДляСотрудников
	|ИЗ
	|	ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиНоменклатуры КАК ВТ_ОстаткиНоменклатуры
	|		ПО ВТ_ТаблицаРазмеров.Номенклатура = ВТ_ОстаткиНоменклатуры.Номенклатура
	|			И ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры = ВТ_ОстаткиНоменклатуры.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО ВТ_ТаблицаРазмеров.Номенклатура = ВТ_Номенклатура.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Комплекты
	|		ПО ВТ_ТаблицаРазмеров.Комплект = Комплекты.Ссылка
	|ГДЕ
	|	НЕ ЕСТЬNULL(ВТ_ТаблицаРазмеров.Количество, 0) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураКомплектующие.Ссылка КАК Комплект,
	|	МАКСИМУМ(НоменклатураКомплектующие.НомерСтроки) КАК КоличествоКомплектующих
	|ПОМЕСТИТЬ ВТ_КоличествоКомплектующих
	|ИЗ
	|	Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураКомплектующие.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПотребностьБезКомплектующих.Сотрудник КАК Сотрудник,
	|	ВТ_ПотребностьБезКомплектующих.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ПотребностьБезКомплектующих.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ПотребностьБезКомплектующих.Номенклатура КАК Номенклатура,
	|	ВТ_ПотребностьБезКомплектующих.ЭтоКомплект КАК ЭтоКомплект,
	|	ВТ_ПотребностьБезКомплектующих.ВидУчетаКомплекта КАК ВидУчетаКомплекта,
	|	ВТ_ПотребностьБезКомплектующих.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ПотребностьБезКомплектующих.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ПотребностьБезКомплектующих.Количество КАК Количество,
	|	ВТ_ПотребностьБезКомплектующих.КоличествоПотребность КАК КоличествоПотребность,
	|	ВТ_ПотребностьБезКомплектующих.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ПотребностьБезКомплектующих.Приоритет КАК Приоритет,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) * ВТ_ПотребностьБезКомплектующих.Количество КАК Сумма,
	|	ВТ_ПотребностьБезКомплектующих.ПериодичностьВыдачи КАК ПериодичностьВыдачи
	|ИЗ
	|	ВТ_ПотребностьБезКомплектующих КАК ВТ_ПотребностьБезКомплектующих
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
	|		ПО ВТ_ПотребностьБезКомплектующих.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
	|			И ВТ_ПотребностьБезКомплектующих.Номенклатура.Поставщик = ВТ_ЦеныНоменклатуры.Поставщик
	|			И ВТ_ПотребностьБезКомплектующих.Организация = ВТ_ЦеныНоменклатуры.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	НормаВыдачи,
	|	НоменклатураНормы,
	|	ВТ_ПотребностьБезКомплектующих.ДатаВыдачи,
	|	ПриоритетСоответствия,
	|	Приоритет
	|ИТОГИ ПО
	|	Сотрудник,
	|	НормаВыдачи,
	|	НоменклатураНормы,
	|	ДатаВыдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КомплектующиеДляСотрудников.Сотрудник КАК Сотрудник,
	|	ВТ_КомплектующиеДляСотрудников.Комплект КАК Комплект,
	|	ВТ_КомплектующиеДляСотрудников.ВидУчетаКомплекта КАК ВидУчетаКомплекта,
	|	ВТ_КомплектующиеДляСотрудников.Номенклатура КАК Номенклатура,
	|	ВТ_КомплектующиеДляСотрудников.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_КомплектующиеДляСотрудников.Количество КАК КоличествоВКомплекте,
	|	СУММА(ВТ_КомплектующиеДляСотрудников.Остаток) КАК Остаток,
	|	ВТ_КоличествоКомплектующих.КоличествоКомплектующих КАК КоличествоКомплектующих,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) КАК Цена
	|ИЗ
	|	ВТ_КомплектующиеДляСотрудников КАК ВТ_КомплектующиеДляСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
	|		ПО ВТ_КомплектующиеДляСотрудников.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
	|			И ВТ_КомплектующиеДляСотрудников.Номенклатура.Поставщик = ВТ_ЦеныНоменклатуры.Поставщик
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоКомплектующих КАК ВТ_КоличествоКомплектующих
	|		ПО ВТ_КомплектующиеДляСотрудников.Комплект = ВТ_КоличествоКомплектующих.Комплект
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КомплектующиеДляСотрудников.Сотрудник,
	|	ВТ_КомплектующиеДляСотрудников.Комплект,
	|	ВТ_КомплектующиеДляСотрудников.ВидУчетаКомплекта,
	|	ВТ_КомплектующиеДляСотрудников.Номенклатура,
	|	ВТ_КомплектующиеДляСотрудников.ХарактеристикаНоменклатуры,
	|	ВТ_КоличествоКомплектующих.КоличествоКомплектующих,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0),
	|	ВТ_КомплектующиеДляСотрудников.Количество
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Комплект,
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВТ_ОстаткиНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ВТ_ОстаткиНоменклатуры.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	ВТ_ОстаткиНоменклатуры КАК ВТ_ОстаткиНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОстаткиНоменклатуры.Номенклатура,
	|	ВТ_ОстаткиНоменклатуры.ХарактеристикаНоменклатуры";
	
	Запрос.УстановитьПараметр("ТаблицаПотребности", 	ТаблицаПотребности);
	Запрос.УстановитьПараметр("ТаблицаРазмеров", 		ТаблицаРазмеров);
	Запрос.УстановитьПараметр("ПериодРасчета",			ПериодРасчета);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("МассивСкладов",			МассивСкладовВыдачи);
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",	?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"), Справочники.Организации.ПустаяСсылка(), Организация));
	
	ТаблицаВыдачиСИЗ = ИнициироватьТаблицуВыдачиСИЗ();
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаКомплектующих 	= Результат[9].Выгрузить();
	ТаблицаОстатков 		= Результат[10].Выгрузить();
	
	ВыборкаПоСотруднику = Результат[8].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоСотруднику.Следующий() Цикл
		
		ВыборкаПоНормеВыдачи = ВыборкаПоСотруднику.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоНормеВыдачи.Следующий() Цикл
			
			ВыборкаПоНоменклатуреНормы = ВыборкаПоНормеВыдачи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			СтрокаДобавлена = Ложь;
			
			Пока ВыборкаПоНоменклатуреНормы.Следующий() Цикл
				
				ВыборкаПоДате = ВыборкаПоНоменклатуреНормы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаПоДате.Следующий() Цикл
					
					СтрокаДобавлена = Ложь;
					
					//ВыборкаПоНоменклатуре = ВыборкаПоДате.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					ВыборкаПоНоменклатуре = ВыборкаПоДате.Выбрать(ОбходРезультатаЗапроса.Прямой);
					
					Пока ВыборкаПоНоменклатуре.Следующий() Цикл
						
						СтруктураПоиска = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры", ВыборкаПоНоменклатуре.Номенклатура, ВыборкаПоНоменклатуре.ХарактеристикаНоменклатуры);
						
						НайденныеСтрокиОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
						
						Если НайденныеСтрокиОстатков.Количество() = 0 ИЛИ НайденныеСтрокиОстатков[0].КоличествоОстаток < ВыборкаПоНоменклатуре.Количество Тогда
							СтруктураПоиска = Новый Структура("Сотрудник, Комплект", ВыборкаПоНоменклатуре.Сотрудник, ВыборкаПоНоменклатуре.Номенклатура);
							НайденныеСтроки = ТаблицаКомплектующих.НайтиСтроки(СтруктураПоиска);
							Если НайденныеСтроки.Количество() = 0 Тогда
								ДобавлятьКомплектующие = Ложь;
							Иначе
								Если НайденныеСтроки[0].КоличествоКомплектующих = НайденныеСтроки.Количество() Тогда
									ДобавлятьКомплектующие = Истина;
									КомплектУчтен = Ложь;
									Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
										Если НайденнаяСтрока.Остаток < НайденнаяСтрока.КоличествоВКомплекте * ВыборкаПоНоменклатуре.Количество Тогда
											ДобавлятьКомплектующие = Ложь;
										КонецЕсли;
									КонецЦикла;
								Иначе
									ДобавлятьКомплектующие = Ложь;
								КонецЕсли;
							КонецЕсли;
							Если ДобавлятьКомплектующие Тогда
								Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
									
									Если ВыборкаПоНоменклатуре.ВидУчетаКомплекта = Перечисления.ВидыУчетаКомплектов.УчитыватьКакКомплектующие Тогда
										НоваяСтрока = ТаблицаВыдачиСИЗ.Добавить();
										ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоНоменклатуре);
										НоваяСтрока.КоличествоСовпаденийНоменклатурыНормы = 1;
										ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока);
									Иначе
										Если НЕ КомплектУчтен Тогда
											НоваяСтрока = ТаблицаВыдачиСИЗ.Добавить();
											ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоНоменклатуре);
											НоваяСтрока.КоличествоСовпаденийНоменклатурыНормы = 1;
											КомплектУчтен = Истина;
										КонецЕсли;
										НоваяСтрока.Цена = НоваяСтрока.Цена + НайденнаяСтрока.Цена * НайденнаяСтрока.КоличествоВКомплекте; // При расчете цены комплекта учитываем количество комплектующих
									КонецЕсли;
									
									НоваяСтрока.Сумма = НоваяСтрока.Сумма + НайденнаяСтрока.Цена * НайденнаяСтрока.КоличествоВКомплекте * ВыборкаПоНоменклатуре.Количество;
									НайденнаяСтрока.Остаток = НайденнаяСтрока.Остаток - НайденнаяСтрока.КоличествоВКомплекте * ВыборкаПоНоменклатуре.Количество;

								КонецЦикла;
								СтрокаДобавлена = Истина;
								Прервать;
							КонецЕсли;
						Иначе
							НоваяСтрока = ТаблицаВыдачиСИЗ.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоНоменклатуре);
							НоваяСтрока.КоличествоСовпаденийНоменклатурыНормы = 1;
							НайденныеСтрокиОстатков[0].КоличествоОстаток = НайденныеСтрокиОстатков[0].КоличествоОстаток - ВыборкаПоНоменклатуре.Количество;
							СтрокаДобавлена = Истина;
							Прервать;
						КонецЕсли;
						
					КонецЦикла;
					
					Если НЕ СтрокаДобавлена Тогда
				
						ВыборкаПоНоменклатуре.Сбросить();
						Пока ВыборкаПоНоменклатуре.Следующий() Цикл
							НоваяСтрока = ТаблицаВыдачиСИЗ.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоНоменклатуре);
							НоваяСтрока.КоличествоСовпаденийНоменклатурыНормы 	= 1;  
							Если ЗначениеЗаполнено(ВидыВыдачиСИЗ) И ВидыВыдачиСИЗ[0] = Перечисления.ВидыВыдачиСИЗ.КоллективнаяВыдача Тогда
								НоваяСтрока.НеВыдано 							= Истина;
								НоваяСтрока.НеВыданоПоПричине                   = Справочники.ПричиныНевыдачиСИЗ.НетНаСкладе;
							КонецЕсли;
							НоваяСтрока.Номенклатура 							= Справочники.Номенклатура.ПустаяСсылка();
							НоваяСтрока.ХарактеристикаНоменклатуры 				= Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
							НоваяСтрока.Цена 									= 0;
							НоваяСтрока.Сумма 									= 0;
							Прервать;
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЦикла;
									
			КонецЦикла;
						
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаВыдачиСИЗ = ПроверитьДобавитьКолонкиТаблицы(ТаблицаВыдачиСИЗ);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВидВыдачиСИЗ", ?(ЗначениеЗаполнено(ВидыВыдачиСИЗ), ВидыВыдачиСИЗ[0], Неопределено));
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("МассивСотрудников", МассивСотрудников);
	СтруктураПараметров.Вставить("ПериодРасчета", ПериодРасчета);
	ТаблицаВыдачиСИЗ = ЗаполнитьКолонки_ТипУсловия_Основание(ТаблицаВыдачиСИЗ, СтруктураПараметров);
	
	Возврат ТаблицаВыдачиСИЗ;
	
КонецФункции

Функция ПодготовитьТаблицуВыдачиСИЗ_Алгоритм12(ПараметрыОтбора)
	
	ПериодРасчета = Новый Граница(ПараметрыОтбора.ВыбраннаяДата, ВидГраницы.Включая);
	ПериодПотребности = ПараметрыОтбора.ВыбраннаяДата;
	
	МассивСотрудников 		= ПараметрыОтбора.Сотрудники;
	Организация		 		= ПараметрыОтбора.Организация;
	МассивПодразделений		= ПараметрыОтбора.Подразделения;
	МассивДолжностей		= ПараметрыОтбора.Должности;
	ВидыВыдачиСИЗ 			= ПараметрыОтбора.ВидыВыдачиСИЗ;
	МассивНоменклатураНормы = ПараметрыОтбора.НоменклатураНормы;
	МассивСкладовВыдачи		= ПараметрыОтбора.СкладыВыдачи;
	
	МассивСотрудников 		= ПолучитьМассивСотрудников(МассивСотрудников, МассивПодразделений, МассивДолжностей, ПериодРасчета);
	ТаблицаСкладовВыдачи 	= ПолучитьСкладыВыдачи(МассивСотрудников, ВидыВыдачиСИЗ, Организация);
	Если Не ЗначениеЗаполнено(МассивСкладовВыдачи) Тогда 
		// Если не задан отбор по складам, то определяем склады по сотрудникам
		МассивСкладовВыдачи	= ТаблицаСкладовВыдачи.ВыгрузитьКолонку("Склад");
	Иначе
		// Иначе ищем пересечение по складам
		МассивСкладовВыдачи = МассивСкладовВыдачи.ВыгрузитьЗначения();
		МассивСкладовВыдачиПоСотрудникам = ТаблицаСкладовВыдачи.ВыгрузитьКолонку("Склад");
		МассивСкладовВыдачи = ПересечениеЭлементовМассива(МассивСкладовВыдачи, МассивСкладовВыдачиПоСотрудникам);
	КонецЕсли;
	МассивСкладовВыдачи	= ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивСкладовВыдачи);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПотребностьВыдачиСИЗОстатки.Организация,
	|	ПотребностьВыдачиСИЗОстатки.Сотрудник КАК Сотрудник,
	|	ПотребностьВыдачиСИЗОстатки.НормаВыдачи КАК НормаВыдачи,
	|	ПотребностьВыдачиСИЗОстатки.НоменклатураНормы КАК НоменклатураНормы,
	|	ПотребностьВыдачиСИЗОстатки.ДатаПотребности КАК ДатаПотребности,
	|	ПотребностьВыдачиСИЗОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_Потребность
	|ИЗ
	|	РегистрНакопления.ПотребностьВыдачиСИЗ.Остатки(
	|			&ПериодРасчета,
	|			Организация = &Организация
	|				И Сотрудник В (&МассивСотрудников)
	|				И (&НеУчитыватьВидыВыдачи ИЛИ НормаВыдачи.ВидВыдачиСИЗ В (&ВидыВыдачиСИЗ))
	|				И (&НеУчитыватьНоменклатураНормы ИЛИ НоменклатураНормы В (&МассивНоменклатураНормы))
	|				И НАЧАЛОПЕРИОДА(ДатаПотребности, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&ПериодПотребности, МЕСЯЦ)) КАК ПотребностьВыдачиСИЗОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыданныеСредстваЗащитыОстатки.Организация КАК Организация,
	|	ВыданныеСредстваЗащитыОстатки.Сотрудник КАК Сотрудник,
	|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи КАК НормаВыдачи,
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы КАК НоменклатураНормы,
	|	СУММА(ВыданныеСредстваЗащитыОстатки.КоличествоОстаток) КАК КоличествоВыдано,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи КАК ДатаВыдачи
	|ПОМЕСТИТЬ ВТ_Выдано
	|ИЗ
	|	РегистрНакопления.ВыданныеСредстваЗащиты.Остатки(
	|			&ПериодРасчета,
	|			Организация = &Организация
	|				И Сотрудник В (&МассивСотрудников)
	|				И (&НеУчитыватьВидыВыдачи ИЛИ НормаВыдачи.ВидВыдачиСИЗ В (&ВидыВыдачиСИЗ))
	|				И (&НеУчитыватьНоменклатураНормы ИЛИ НоменклатураНормы В (&МассивНоменклатураНормы))
	|				И НАЧАЛОПЕРИОДА(ДатаВыдачи, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&ПериодПотребности, МЕСЯЦ)) КАК ВыданныеСредстваЗащитыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыданныеСредстваЗащитыОстатки.Организация,
	|	ВыданныеСредстваЗащитыОстатки.Сотрудник,
	|	ВыданныеСредстваЗащитыОстатки.НормаВыдачи,
	|	ВыданныеСредстваЗащитыОстатки.НоменклатураНормы,
	|	ВыданныеСредстваЗащитыОстатки.ДатаВыдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Выдано.Организация КАК Организация,
	|	ВТ_Выдано.Сотрудник КАК Сотрудник,
	|	ВТ_Выдано.НоменклатураНормы КАК НоменклатураНормы,
	|	МАКСИМУМ(ВТ_Выдано.ДатаВыдачи) КАК ДатаВыдачи
	|ПОМЕСТИТЬ ВТ_МаксимальнаяДатаВыдачи
	|ИЗ
	|	ВТ_Выдано КАК ВТ_Выдано
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Выдано.Организация,
	|	ВТ_Выдано.Сотрудник,
	|	ВТ_Выдано.НоменклатураНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Выдано.Организация КАК Организация,
	|	ВТ_Выдано.Сотрудник КАК Сотрудник,
	|	ВТ_Выдано.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_Выдано.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_Выдано.КоличествоВыдано КАК КоличествоВыдано,
	|	ВТ_Выдано.ДатаВыдачи КАК ДатаВыдачи
	|ПОМЕСТИТЬ ВТ_ВыданоПоМаксимальнойДате
	|ИЗ
	|	ВТ_МаксимальнаяДатаВыдачи КАК ВТ_МаксимальнаяДатаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Выдано КАК ВТ_Выдано
	|		ПО ВТ_МаксимальнаяДатаВыдачи.Сотрудник = ВТ_Выдано.Сотрудник
	|			И ВТ_МаксимальнаяДатаВыдачи.НоменклатураНормы = ВТ_Выдано.НоменклатураНормы
	|			И ВТ_МаксимальнаяДатаВыдачи.ДатаВыдачи = ВТ_Выдано.ДатаВыдачи
	|			И ВТ_МаксимальнаяДатаВыдачи.Организация = ВТ_Выдано.Организация
	|ГДЕ
	|	НЕ ВТ_Выдано.Сотрудник ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НормыВыдачиСИЗСоставНормы.Ссылка.Владелец КАК Организация,
	|	НормыВыдачиСИЗСоставНормы.Ссылка КАК Ссылка,
	|	НормыВыдачиСИЗСоставНормы.НоменклатураНормы КАК НоменклатураНормы,
	|	НормыВыдачиСИЗСоставНормы.ПериодичностьВыдачи КАК ПериодичностьВыдачи
	|ПОМЕСТИТЬ ВТ_СоставНормы
	|ИЗ
	|	Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Потребность.Организация КАК Организация,
	|	ВТ_Потребность.Сотрудник КАК Сотрудник,
	|	ВТ_Потребность.НоменклатураНормы КАК НоменклатураНормы,
	|	МАКСИМУМ(ВТ_СоставНормы.ПериодичностьВыдачи.Приоритет) КАК ПериодичностьВыдачиПриоритет
	|ПОМЕСТИТЬ ВТ_МаксимальнаяПериодичностьПоПотребности
	|ИЗ
	|	ВТ_Потребность КАК ВТ_Потребность
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоставНормы КАК ВТ_СоставНормы
	|		ПО ВТ_Потребность.НормаВыдачи = ВТ_СоставНормы.Ссылка
	|			И ВТ_Потребность.НоменклатураНормы = ВТ_СоставНормы.НоменклатураНормы
	|			И ВТ_Потребность.Организация = ВТ_СоставНормы.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Потребность.Организация,
	|	ВТ_Потребность.Сотрудник,
	|	ВТ_Потребность.НоменклатураНормы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Потребность.Организация КАК Организация,
	|	ВТ_Потребность.Сотрудник КАК Сотрудник,
	|	ВТ_Потребность.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_Потребность.НоменклатураНормы КАК НоменклатураНормы,
	|	ВЫБОР
	|		КОГДА ВТ_ВыданоПоМаксимальнойДате.ДатаВыдачи ЕСТЬ NULL
	|			ТОГДА &ПериодПотребности
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ВЫБОР
	|							КОГДА ВТ_СоставНормы.ПериодичностьВыдачи.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|								ТОГДА ДОБАВИТЬКДАТЕ(ВТ_ВыданоПоМаксимальнойДате.ДатаВыдачи, МЕСЯЦ, ВТ_СоставНормы.ПериодичностьВыдачи.КоличествоПериодов * 12)
	|							ИНАЧЕ ДОБАВИТЬКДАТЕ(ВТ_ВыданоПоМаксимальнойДате.ДатаВыдачи, МЕСЯЦ, ВТ_СоставНормы.ПериодичностьВыдачи.КоличествоПериодов)
	|						КОНЕЦ, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&ПериодПотребности, МЕСЯЦ)
	|					ТОГДА &ПериодПотребности
	|				ИНАЧЕ ВТ_ВыданоПоМаксимальнойДате.ДатаВыдачи
	|			КОНЕЦ
	|	КОНЕЦ КАК ДатаВыдачи,
	|	ВЫБОР
	|		КОГДА ВТ_ВыданоПоМаксимальнойДате.ДатаВыдачи ЕСТЬ NULL
	|			ТОГДА ВТ_Потребность.КоличествоОстаток - ЕСТЬNULL(ВТ_ВыданоПоМаксимальнойДате.КоличествоВыдано, 0)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ВЫБОР
	|							КОГДА ВТ_СоставНормы.ПериодичностьВыдачи.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|								ТОГДА ДОБАВИТЬКДАТЕ(ВТ_ВыданоПоМаксимальнойДате.ДатаВыдачи, МЕСЯЦ, ВТ_СоставНормы.ПериодичностьВыдачи.КоличествоПериодов * 12)
	|							ИНАЧЕ ДОБАВИТЬКДАТЕ(ВТ_ВыданоПоМаксимальнойДате.ДатаВыдачи, МЕСЯЦ, ВТ_СоставНормы.ПериодичностьВыдачи.КоличествоПериодов)
	|						КОНЕЦ, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&ПериодПотребности, МЕСЯЦ)
	|					ТОГДА ВТ_Потребность.КоличествоОстаток
	|				ИНАЧЕ ВТ_Потребность.КоличествоОстаток - ЕСТЬNULL(ВТ_ВыданоПоМаксимальнойДате.КоличествоВыдано, 0)
	|			КОНЕЦ
	|	КОНЕЦ КАК Количество,
	|	ВТ_Потребность.КоличествоОстаток КАК КоличествоПотребность,
	|	ВТ_СоставНормы.ПериодичностьВыдачи КАК ПериодичностьВыдачи
	|ПОМЕСТИТЬ ВТ_Результат
	|ИЗ
	|	ВТ_Потребность КАК ВТ_Потребность
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыданоПоМаксимальнойДате КАК ВТ_ВыданоПоМаксимальнойДате
	|		ПО ВТ_Потребность.Сотрудник = ВТ_ВыданоПоМаксимальнойДате.Сотрудник
	|			И ВТ_Потребность.НоменклатураНормы = ВТ_ВыданоПоМаксимальнойДате.НоменклатураНормы
	|			И ВТ_Потребность.Организация = ВТ_ВыданоПоМаксимальнойДате.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МаксимальнаяПериодичностьПоПотребности КАК ВТ_МаксимальнаяПериодичностьПоПотребности
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоставНормы КАК ВТ_СоставНормы
	|			ПО ВТ_МаксимальнаяПериодичностьПоПотребности.НоменклатураНормы = ВТ_СоставНормы.НоменклатураНормы
	|				И ВТ_МаксимальнаяПериодичностьПоПотребности.ПериодичностьВыдачиПриоритет = ВТ_СоставНормы.ПериодичностьВыдачи.Приоритет
	|				И ВТ_МаксимальнаяПериодичностьПоПотребности.Организация = ВТ_СоставНормы.Организация
	|		ПО ВТ_Потребность.Сотрудник = ВТ_МаксимальнаяПериодичностьПоПотребности.Сотрудник
	|			И ВТ_Потребность.НоменклатураНормы = ВТ_МаксимальнаяПериодичностьПоПотребности.НоменклатураНормы
	|			И ВТ_Потребность.Организация = ВТ_МаксимальнаяПериодичностьПоПотребности.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Результат.Организация КАК Организация,
	|	ВТ_Результат.Сотрудник КАК Сотрудник,
	|	ВТ_Результат.Сотрудник.ФизическоеЛицо.Пол КАК ПолСотрудника,
	|	ВТ_Результат.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_Результат.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_Результат.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_Результат.Количество КАК Количество,
	|	ВТ_Результат.КоличествоПотребность КАК КоличествоПотребность,
	|	ВТ_Результат.ПериодичностьВыдачи КАК ПериодичностьВыдачи,
	|	ВТ_СоставНормы.ПериодичностьВыдачи.Приоритет КАК ПриоритетПериодичностиВыдачи
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СоставНормы КАК ВТ_СоставНормы
	|		ПО ВТ_Результат.НормаВыдачи = ВТ_СоставНормы.Ссылка
	|			И ВТ_Результат.НоменклатураНормы = ВТ_СоставНормы.НоменклатураНормы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Результат.Организация,
	|	ВТ_Результат.Сотрудник.Наименование,
	|	НоменклатураНормы,
	|	ПриоритетПериодичностиВыдачи УБЫВ,
	|	ДатаВыдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Результат.Сотрудник КАК Сотрудник,
	|	ВТ_Результат.НоменклатураНормы КАК НоменклатураНормы
	|ИЗ
	|	ВТ_Результат КАК ВТ_Результат
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Результат.Сотрудник.Наименование,
	|	НоменклатураНормы";
	
	Запрос.УстановитьПараметр("ПериодРасчета",				ПериодРасчета);
	Запрос.УстановитьПараметр("ПериодПотребности",		 	ПериодПотребности);
	Запрос.УстановитьПараметр("Организация",				Организация);
	Запрос.УстановитьПараметр("МассивСотрудников",			МассивСотрудников);
	Запрос.УстановитьПараметр("ВидыВыдачиСИЗ",				ВидыВыдачиСИЗ);
	Запрос.УстановитьПараметр("НеУчитыватьВидыВыдачи",		НЕ ЗначениеЗаполнено(ВидыВыдачиСИЗ));
	Запрос.УстановитьПараметр("МассивНоменклатураНормы", 	МассивНоменклатураНормы);
	Запрос.УстановитьПараметр("НеУчитыватьНоменклатураНормы", НЕ ЗначениеЗаполнено(МассивНоменклатураНормы));
		
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаПотребности 					= Результат[7].Выгрузить();
	ТаблицаНоменклатурыНормСотрудников 	= Результат[8].Выгрузить();
	
	ТаблицаРазмеров = ПроцедурыРаботыСНормамиСервер.ПодобратьРазмерыДляСотрудников(ТаблицаНоменклатурыНормСотрудников, ПериодРасчета, Организация);

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПотребности.Организация КАК Организация,
	|	ТаблицаПотребности.Сотрудник КАК Сотрудник,
	|	ТаблицаПотребности.ПолСотрудника КАК ПолСотрудника,
	|	ТаблицаПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ТаблицаПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ТаблицаПотребности.ПериодичностьВыдачи КАК ПериодичностьВыдачи,
	|	ТаблицаПотребности.ПриоритетПериодичностиВыдачи КАК ПриоритетПериодичностиВыдачи,
	|	ТаблицаПотребности.Количество КАК Количество,
	|	ТаблицаПотребности.КоличествоПотребность КАК КоличествоПотребность
	|ПОМЕСТИТЬ ВТ_ТаблицаПотребности
	|ИЗ
	|	&ТаблицаПотребности КАК ТаблицаПотребности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРазмеров.Сотрудник КАК Сотрудник,
	|	ТаблицаРазмеров.НоменклатураНормы КАК НоменклатураНормы,
	|	ТаблицаРазмеров.Номенклатура КАК Номенклатура,
	|	ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаРазмеров.ПолНоменклатуры КАК ПолНоменклатуры,
	|	ТаблицаРазмеров.ЕстьРазмеры КАК ЕстьРазмеры,
	|	ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ТаблицаРазмеров.Приоритет КАК Приоритет,
	|	ТаблицаРазмеров.ПриоритетРазмера КАК ПриоритетРазмера,
	|	ТаблицаРазмеров.ТолькоДляСотрудника КАК ТолькоДляСотрудника,
	|	ТаблицаРазмеров.ВидАнтропометрии КАК ВидАнтропометрии,
	|	ТаблицаРазмеров.ЗначениеАнтропометрии КАК ЗначениеАнтропометрии,
	|	ТаблицаРазмеров.Рост КАК Рост,
	|	ТаблицаРазмеров.ИспользоватьРост КАК ИспользоватьРост,
	|	ТаблицаРазмеров.ВидСИЗ КАК ВидСИЗ,
	|	ТаблицаРазмеров.Комплект КАК Комплект,
	|	ТаблицаРазмеров.КоличествоВКомплекте КАК Количество
	|ПОМЕСТИТЬ ВТ_ТаблицаРазмеров
	|ИЗ
	|	&ТаблицаРазмеров КАК ТаблицаРазмеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.Организация КАК Организация,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ОстаткиНоменклатурыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_ОстаткиНоменклатуры
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
	|			&ПериодРасчета,
	|			Организация = &ОрганизацияДляОстатков
	|				И Склад В (&МассивСкладов)
	|				И (Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_ТаблицаРазмеров.Номенклатура
	|					ИЗ
	|						ВТ_ТаблицаРазмеров)
	|				ИЛИ Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_ТаблицаРазмеров.Комплект
	|					ИЗ
	|						ВТ_ТаблицаРазмеров))) КАК ОстаткиНоменклатурыОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатурыОстатки.Организация,
	|	ОстаткиНоменклатурыОстатки.Номенклатура,
	|	ОстаткиНоменклатурыОстатки.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Организация КАК Организация,
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ ВТ_ЦеныНоменклатуры
	|ИЗ
	|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|		&ПериодРасчета,
	|		Организация = &Организация
	|			И Номенклатура В
	|				(ВЫБРАТЬ
	|					ВТ_ТаблицаРазмеров.Номенклатура КАК Номенклатура
	|				ИЗ
	|					ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров)) КАК ЦеныНоменклатурыСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Организация,
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Поставщик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.Комплект КАК ЭтоКомплект,
	|	Номенклатура.ВидУчетаКомплектаДляППС КАК ВидУчетаКомплекта
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПотребности.Организация КАК Организация,
	|	ВТ_ТаблицаПотребности.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаПотребности.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ТаблицаПотребности.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_Номенклатура.ЭтоКомплект КАК ЭтоКомплект,
	|	ВТ_Номенклатура.ВидУчетаКомплекта КАК ВидУчетаКомплекта,
	|	ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаПотребности.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ТаблицаПотребности.Количество КАК Количество,
	|	ВТ_ТаблицаПотребности.КоличествоПотребность КАК КоличествоПотребность,
	|	ВТ_ТаблицаРазмеров.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ТаблицаРазмеров.Приоритет КАК Приоритет,
	|	ВТ_ТаблицаПотребности.ПериодичностьВыдачи КАК ПериодичностьВыдачи,
	|	ВТ_ТаблицаПотребности.ПриоритетПериодичностиВыдачи КАК ПриоритетПериодичностиВыдачи
	|ПОМЕСТИТЬ ВТ_ПотребностьБезКомплектующих
	|ИЗ
	|	ВТ_ТаблицаПотребности КАК ВТ_ТаблицаПотребности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|			ПО ВТ_ТаблицаРазмеров.Номенклатура = ВТ_Номенклатура.Номенклатура
	|		ПО ВТ_ТаблицаПотребности.Сотрудник = ВТ_ТаблицаРазмеров.Сотрудник
	|			И ВТ_ТаблицаПотребности.НоменклатураНормы = ВТ_ТаблицаРазмеров.НоменклатураНормы
	|ГДЕ
	|	ЕСТЬNULL(ВТ_ТаблицаРазмеров.Количество, 0) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРазмеров.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаРазмеров.Комплект КАК Комплект,
	|	Комплекты.ВидУчетаКомплектаДляППС КАК ВидУчетаКомплекта,
	|	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТаблицаРазмеров.Количество КАК Количество,
	|	ЕСТЬNULL(ВТ_ОстаткиНоменклатуры.КоличествоОстаток, 0) КАК Остаток
	|ПОМЕСТИТЬ ВТ_КомплектующиеДляСотрудников
	|ИЗ
	|	ВТ_ТаблицаРазмеров КАК ВТ_ТаблицаРазмеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиНоменклатуры КАК ВТ_ОстаткиНоменклатуры
	|		ПО ВТ_ТаблицаРазмеров.Номенклатура = ВТ_ОстаткиНоменклатуры.Номенклатура
	|			И ВТ_ТаблицаРазмеров.ХарактеристикаНоменклатуры = ВТ_ОстаткиНоменклатуры.ХарактеристикаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО ВТ_ТаблицаРазмеров.Номенклатура = ВТ_Номенклатура.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Комплекты
	|		ПО ВТ_ТаблицаРазмеров.Комплект = Комплекты.Ссылка
	|ГДЕ
	|	НЕ ЕСТЬNULL(ВТ_ТаблицаРазмеров.Количество, 0) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураКомплектующие.Ссылка КАК Комплект,
	|	МАКСИМУМ(НоменклатураКомплектующие.НомерСтроки) КАК КоличествоКомплектующих
	|ПОМЕСТИТЬ ВТ_КоличествоКомплектующих
	|ИЗ
	|	Справочник.Номенклатура.Комплектующие КАК НоменклатураКомплектующие
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураКомплектующие.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПотребностьБезКомплектующих.Сотрудник КАК Сотрудник,
	|	ВТ_ПотребностьБезКомплектующих.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ПотребностьБезКомплектующих.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_ПотребностьБезКомплектующих.Номенклатура КАК Номенклатура,
	|	ВТ_ПотребностьБезКомплектующих.ЭтоКомплект КАК ЭтоКомплект,
	|	ВТ_ПотребностьБезКомплектующих.ВидУчетаКомплекта КАК ВидУчетаКомплекта,
	|	ВТ_ПотребностьБезКомплектующих.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ПотребностьБезКомплектующих.ДатаВыдачи КАК ДатаВыдачи,
	|	ВТ_ПотребностьБезКомплектующих.Количество КАК Количество,
	|	ВТ_ПотребностьБезКомплектующих.КоличествоПотребность КАК КоличествоПотребность,
	|	ВТ_ПотребностьБезКомплектующих.ПриоритетСоответствия КАК ПриоритетСоответствия,
	|	ВТ_ПотребностьБезКомплектующих.Приоритет КАК Приоритет,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) * ВТ_ПотребностьБезКомплектующих.Количество КАК Сумма,
	|	ВТ_ПотребностьБезКомплектующих.ПериодичностьВыдачи КАК ПериодичностьВыдачи,
	|	ВТ_ПотребностьБезКомплектующих.ПриоритетПериодичностиВыдачи КАК ПриоритетПериодичностиВыдачи
	|ИЗ
	|	ВТ_ПотребностьБезКомплектующих КАК ВТ_ПотребностьБезКомплектующих
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
	|		ПО ВТ_ПотребностьБезКомплектующих.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
	|			И ВТ_ПотребностьБезКомплектующих.Номенклатура.Поставщик = ВТ_ЦеныНоменклатуры.Поставщик
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	НоменклатураНормы,
	|	ВТ_ПотребностьБезКомплектующих.ПриоритетПериодичностиВыдачи УБЫВ,
	|	ПриоритетСоответствия,
	|	Приоритет
	|ИТОГИ ПО
	|	Сотрудник,
	|	НормаВыдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КомплектующиеДляСотрудников.Сотрудник КАК Сотрудник,
	|	ВТ_КомплектующиеДляСотрудников.Комплект КАК Комплект,
	|	ВТ_КомплектующиеДляСотрудников.ВидУчетаКомплекта КАК ВидУчетаКомплекта,
	|	ВТ_КомплектующиеДляСотрудников.Номенклатура КАК Номенклатура,
	|	ВТ_КомплектующиеДляСотрудников.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_КомплектующиеДляСотрудников.Количество КАК КоличествоВКомплекте,
	|	СУММА(ВТ_КомплектующиеДляСотрудников.Остаток) КАК Остаток,
	|	ВТ_КоличествоКомплектующих.КоличествоКомплектующих КАК КоличествоКомплектующих,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0) КАК Цена
	|ИЗ
	|	ВТ_КомплектующиеДляСотрудников КАК ВТ_КомплектующиеДляСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЦеныНоменклатуры КАК ВТ_ЦеныНоменклатуры
	|		ПО ВТ_КомплектующиеДляСотрудников.Номенклатура = ВТ_ЦеныНоменклатуры.Номенклатура
	|			И ВТ_КомплектующиеДляСотрудников.Номенклатура.Поставщик = ВТ_ЦеныНоменклатуры.Поставщик
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоКомплектующих КАК ВТ_КоличествоКомплектующих
	|		ПО ВТ_КомплектующиеДляСотрудников.Комплект = ВТ_КоличествоКомплектующих.Комплект
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КомплектующиеДляСотрудников.Сотрудник,
	|	ВТ_КомплектующиеДляСотрудников.Комплект,
	|	ВТ_КомплектующиеДляСотрудников.ВидУчетаКомплекта,
	|	ВТ_КомплектующиеДляСотрудников.Номенклатура,
	|	ВТ_КомплектующиеДляСотрудников.ХарактеристикаНоменклатуры,
	|	ВТ_КоличествоКомплектующих.КоличествоКомплектующих,
	|	ЕСТЬNULL(ВТ_ЦеныНоменклатуры.Цена, 0),
	|	ВТ_КомплектующиеДляСотрудников.Количество
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Комплект,
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВТ_ОстаткиНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ВТ_ОстаткиНоменклатуры.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	ВТ_ОстаткиНоменклатуры КАК ВТ_ОстаткиНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОстаткиНоменклатуры.Номенклатура,
	|	ВТ_ОстаткиНоменклатуры.ХарактеристикаНоменклатуры";
	
	Запрос.УстановитьПараметр("ТаблицаПотребности", 	ТаблицаПотребности);
	Запрос.УстановитьПараметр("ТаблицаРазмеров", 		ТаблицаРазмеров);
	Запрос.УстановитьПараметр("ПериодРасчета",			ПериодРасчета);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("МассивСкладов",			МассивСкладовВыдачи);
	Запрос.УстановитьПараметр("ОрганизацияДляОстатков",	?(ПолучитьФункциональнуюОпцию("НеВестиУчетОстатковНоменклатурыПоОрганизации"), Справочники.Организации.ПустаяСсылка(), Организация));
	
	ТаблицаВыдачиСИЗ = ИнициироватьТаблицуВыдачиСИЗ();
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаКомплектующих 	= Результат[9].Выгрузить();
	ТаблицаОстатков 		= Результат[10].Выгрузить();
	
	ВыборкаПоСотруднику = Результат[8].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоСотруднику.Следующий() Цикл
		
		ВыборкаПоНормеВыдачи = ВыборкаПоСотруднику.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоНормеВыдачи.Следующий() Цикл
			
			ВыборкаПоНоменклатуреНормы = ВыборкаПоНормеВыдачи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			СтрокаДобавлена = Ложь;
			
			Пока ВыборкаПоНоменклатуреНормы.Следующий() Цикл
				
				СтруктураПоиска = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры", ВыборкаПоНоменклатуреНормы.Номенклатура, ВыборкаПоНоменклатуреНормы.ХарактеристикаНоменклатуры);
				
				НайденныеСтрокиОстатков = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
				
				Если НайденныеСтрокиОстатков.Количество() = 0 ИЛИ НайденныеСтрокиОстатков[0].КоличествоОстаток < ВыборкаПоНоменклатуреНормы.Количество Тогда
					СтруктураПоиска = Новый Структура("Сотрудник, Комплект", ВыборкаПоНоменклатуреНормы.Сотрудник, ВыборкаПоНоменклатуреНормы.Номенклатура);
					НайденныеСтроки = ТаблицаКомплектующих.НайтиСтроки(СтруктураПоиска);
					Если НайденныеСтроки.Количество() = 0 Тогда
						ДобавлятьКомплектующие = Ложь;
					Иначе
						Если НайденныеСтроки[0].КоличествоКомплектующих = НайденныеСтроки.Количество() Тогда
							ДобавлятьКомплектующие = Истина;
							КомплектУчтен = Ложь;
							Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
								Если НайденнаяСтрока.Остаток < НайденнаяСтрока.КоличествоВКомплекте * ВыборкаПоНоменклатуреНормы.Количество Тогда
									ДобавлятьКомплектующие = Ложь;
								КонецЕсли;
							КонецЦикла;
						Иначе
							ДобавлятьКомплектующие = Ложь;
						КонецЕсли;
					КонецЕсли;
					Если ДобавлятьКомплектующие Тогда
						Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
							
							Если ВыборкаПоНоменклатуреНормы.ВидУчетаКомплекта = Перечисления.ВидыУчетаКомплектов.УчитыватьКакКомплектующие Тогда
								НоваяСтрока = ТаблицаВыдачиСИЗ.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоНоменклатуреНормы);
								НоваяСтрока.КоличествоСовпаденийНоменклатурыНормы = 1;
								ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока);
							Иначе
								Если НЕ КомплектУчтен Тогда
									НоваяСтрока = ТаблицаВыдачиСИЗ.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоНоменклатуреНормы);
									НоваяСтрока.КоличествоСовпаденийНоменклатурыНормы = 1;
									КомплектУчтен = Истина;
								КонецЕсли;
								НоваяСтрока.Цена = НоваяСтрока.Цена + НайденнаяСтрока.Цена * НайденнаяСтрока.КоличествоВКомплекте; // При расчете цены комплекта учитываем количество комплектующих
							КонецЕсли;
							
							НоваяСтрока.Сумма = НоваяСтрока.Сумма + НайденнаяСтрока.Цена * НайденнаяСтрока.КоличествоВКомплекте * ВыборкаПоНоменклатуреНормы.Количество;
							НайденнаяСтрока.Остаток = НайденнаяСтрока.Остаток - НайденнаяСтрока.КоличествоВКомплекте * ВыборкаПоНоменклатуреНормы.Количество;
							
						КонецЦикла;
						СтрокаДобавлена = Истина;
						Прервать;
					КонецЕсли;
				Иначе
					НоваяСтрока = ТаблицаВыдачиСИЗ.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоНоменклатуреНормы);
					НоваяСтрока.КоличествоСовпаденийНоменклатурыНормы = 1;
					НайденныеСтрокиОстатков[0].КоличествоОстаток = НайденныеСтрокиОстатков[0].КоличествоОстаток - ВыборкаПоНоменклатуреНормы.Количество;
					СтрокаДобавлена = Истина;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			Если НЕ СтрокаДобавлена Тогда
				
				ВыборкаПоНоменклатуреНормы.Сбросить();
				Пока ВыборкаПоНоменклатуреНормы.Следующий() Цикл
					НоваяСтрока = ТаблицаВыдачиСИЗ.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоНоменклатуреНормы);
					НоваяСтрока.КоличествоСовпаденийНоменклатурыНормы 	= 1;  
					Если ЗначениеЗаполнено(ВидыВыдачиСИЗ) И ВидыВыдачиСИЗ[0] = Перечисления.ВидыВыдачиСИЗ.КоллективнаяВыдача Тогда
						НоваяСтрока.НеВыдано 							= Истина;
						НоваяСтрока.НеВыданоПоПричине                   = Справочники.ПричиныНевыдачиСИЗ.НетНаСкладе;
					КонецЕсли;
					НоваяСтрока.Номенклатура 							= Справочники.Номенклатура.ПустаяСсылка();
					НоваяСтрока.ХарактеристикаНоменклатуры 				= Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
					НоваяСтрока.Цена 									= 0;
					НоваяСтрока.Сумма 									= 0;
					Прервать;
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаВыдачиСИЗ = ПроцедурыРаботыСНормамиСервер.ПроверитьСовпадающуюНоменклатуруНормы(ТаблицаВыдачиСИЗ);
	
	ТаблицаВыдачиСИЗ = ПроверитьДобавитьКолонкиТаблицы(ТаблицаВыдачиСИЗ);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВидВыдачиСИЗ", ?(ЗначениеЗаполнено(ВидыВыдачиСИЗ), ВидыВыдачиСИЗ[0], Неопределено));
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("МассивСотрудников", МассивСотрудников);
	СтруктураПараметров.Вставить("ПериодРасчета", ПериодРасчета);
	ТаблицаВыдачиСИЗ = ЗаполнитьКолонки_ТипУсловия_Основание(ТаблицаВыдачиСИЗ, СтруктураПараметров);
	
	Возврат ТаблицаВыдачиСИЗ;
		
КонецФункции

Функция ПолучитьМассивСотрудников(МассивСотрудников, МассивПодразделений, МассивДолжностей, ДатаАнализа) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
	|			&ДатаАнализа,
	|			(&НеУчитыватьПодразделения
	|				ИЛИ Подразделение В (&МассивПодразделений))
	|				И (&НеУчитыватьДолжности
	|					ИЛИ Должность В (&МассивДолжностей))
	|				И (&НеУчитыватьСотрудников
	|					ИЛИ Сотрудник В (&МассивСотрудников))) КАК ЗанятыеРабочиеМестаОстатки
	|ГДЕ
	|	ЗанятыеРабочиеМестаОстатки.КоличествоОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗанятыеРабочиеМестаОстатки.Сотрудник.Наименование";
	
	Запрос.УстановитьПараметр("ДатаАнализа",				ДатаАнализа);
	Запрос.УстановитьПараметр("МассивПодразделений",		МассивПодразделений);
	Запрос.УстановитьПараметр("НеУчитыватьПодразделения",	НЕ ЗначениеЗаполнено(МассивПодразделений));
	Запрос.УстановитьПараметр("МассивДолжностей",			МассивДолжностей);
	Запрос.УстановитьПараметр("НеУчитыватьДолжности",		НЕ ЗначениеЗаполнено(МассивДолжностей));
	Запрос.УстановитьПараметр("МассивСотрудников",			МассивСотрудников);
	Запрос.УстановитьПараметр("НеУчитыватьСотрудников",		НЕ ЗначениеЗаполнено(МассивСотрудников));
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
	
КонецФункции

Функция ПолучитьСкладыВыдачи(МассивСотрудников, ВидыВыдачиСИЗ, Организация) 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Сотрудник,
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.Подразделение
	|ПОМЕСТИТЬ ВТ_ПодразделенияСотрудников
	|ИЗ
	|	РегистрСведений.ОсновноеМестоРаботыСотрудника.СрезПоследних(
	|			,
	|			(Организация = &Организация)
	|				И Сотрудник В (&МассивСотрудников)) КАК ОсновноеМестоРаботыСотрудникаСрезПоследних
	|ГДЕ
	|	ОсновноеМестоРаботыСотрудникаСрезПоследних.ОсновноеМестоРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СкладыВыдачиСредствЗащиты.Склад,
	|	СкладыВыдачиСредствЗащиты.Получатель,
	|	СкладыВыдачиСредствЗащиты.ВидВыдачиСИЗ
	|ПОМЕСТИТЬ ВТ_СкладыВыдачи
	|ИЗ
	|	РегистрСведений.СкладыВыдачиСредствЗащиты КАК СкладыВыдачиСредствЗащиты
	|ГДЕ
	|	(&НеУчитыватьВидыВыдачи ИЛИ СкладыВыдачиСредствЗащиты.ВидВыдачиСИЗ В (&ВидыВыдачиСИЗ))
	|	И СкладыВыдачиСредствЗащиты.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПодразделенияСотрудников.Сотрудник,
	|	ВТ_СкладыВыдачи.Склад,
	|	ВТ_СкладыВыдачи.ВидВыдачиСИЗ
	|ПОМЕСТИТЬ ВТ_СкладыВыдачиПоСотрудникам
	|ИЗ
	|	ВТ_ПодразделенияСотрудников КАК ВТ_ПодразделенияСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкладыВыдачи КАК ВТ_СкладыВыдачи
	|		ПО ВТ_ПодразделенияСотрудников.Сотрудник = ВТ_СкладыВыдачи.Получатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПодразделенияСотрудников.Сотрудник,
	|	ВТ_СкладыВыдачи.Склад,
	|	ВТ_СкладыВыдачи.ВидВыдачиСИЗ
	|ПОМЕСТИТЬ ВТ_СкладыВыдачиПоПодразделениям
	|ИЗ
	|	ВТ_ПодразделенияСотрудников КАК ВТ_ПодразделенияСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкладыВыдачи КАК ВТ_СкладыВыдачи
	|		ПО ВТ_ПодразделенияСотрудников.Подразделение = ВТ_СкладыВыдачи.Получатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_СкладыВыдачи.Склад
	|ПОМЕСТИТЬ ВТ_СкладыБезПолучателя
	|ИЗ
	|	ВТ_СкладыВыдачи КАК ВТ_СкладыВыдачи
	|ГДЕ
	|	(ВТ_СкладыВыдачи.Получатель = НЕОПРЕДЕЛЕНО
	|			ИЛИ ВТ_СкладыВыдачи.Получатель = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|			ИЛИ ВТ_СкладыВыдачи.Получатель = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПодразделенияСотрудников.Сотрудник КАК Сотрудник,
	|	ВТ_ПодразделенияСотрудников.Подразделение,
	|	ВТ_СкладыВыдачиПоСотрудникам.Склад КАК СкладВыдачиПоСотруднику,
	|	NULL КАК СкладВыдачиПоПодразделению,
	|	NULL КАК СкладВыдачиБезПолучателя,
	|	ВТ_СкладыВыдачиПоСотрудникам.ВидВыдачиСИЗ КАК ВидВыдачиСИЗ
	|ПОМЕСТИТЬ ВТ_ВсеСкладыВыдачи
	|ИЗ
	|	ВТ_ПодразделенияСотрудников КАК ВТ_ПодразделенияСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкладыВыдачиПоСотрудникам КАК ВТ_СкладыВыдачиПоСотрудникам
	|		ПО ВТ_ПодразделенияСотрудников.Сотрудник = ВТ_СкладыВыдачиПоСотрудникам.Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПодразделенияСотрудников.Сотрудник,
	|	ВТ_ПодразделенияСотрудников.Подразделение,
	|	NULL,
	|	ВТ_СкладыВыдачиПоПодразделениям.Склад,
	|	NULL,
	|	ВТ_СкладыВыдачиПоПодразделениям.ВидВыдачиСИЗ
	|ИЗ
	|	ВТ_ПодразделенияСотрудников КАК ВТ_ПодразделенияСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СкладыВыдачиПоПодразделениям КАК ВТ_СкладыВыдачиПоПодразделениям
	|		ПО ВТ_ПодразделенияСотрудников.Сотрудник = ВТ_СкладыВыдачиПоПодразделениям.Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПодразделенияСотрудников.Сотрудник,
	|	ВТ_ПодразделенияСотрудников.Подразделение,
	|	NULL,
	|	NULL,
	|	ВТ_СкладыБезПолучателя.Склад,
	|	NULL
	|ИЗ
	|	ВТ_ПодразделенияСотрудников КАК ВТ_ПодразделенияСотрудников,
	|	ВТ_СкладыБезПолучателя КАК ВТ_СкладыБезПолучателя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеСкладыВыдачи.Сотрудник,
	|	ВТ_ВсеСкладыВыдачи.Подразделение,
	|	ЕСТЬNULL(ВТ_ВсеСкладыВыдачи.СкладВыдачиПоСотруднику, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК СкладВыдачиПоСотруднику,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_ВсеСкладыВыдачи.СкладВыдачиПоПодразделению, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))) КАК СкладВыдачиПоПодразделению,
	|	МАКСИМУМ(ЕСТЬNULL(ВТ_ВсеСкладыВыдачи.СкладВыдачиБезПолучателя, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))) КАК СкладВыдачиБезПолучателя,
	|	ВТ_ВсеСкладыВыдачи.ВидВыдачиСИЗ
	|ИЗ
	|	ВТ_ВсеСкладыВыдачи КАК ВТ_ВсеСкладыВыдачи
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВсеСкладыВыдачи.Сотрудник,
	|	ВТ_ВсеСкладыВыдачи.Подразделение,
	|   ЕСТЬNULL(ВТ_ВсеСкладыВыдачи.СкладВыдачиПоСотруднику, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)),
	|	ВТ_ВсеСкладыВыдачи.ВидВыдачиСИЗ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ВсеСкладыВыдачи.Сотрудник.Наименование";
	
	Запрос.УстановитьПараметр("МассивСотрудников",		МассивСотрудников);
	Запрос.УстановитьПараметр("Организация",			Организация);
	Запрос.УстановитьПараметр("ВидыВыдачиСИЗ",			ВидыВыдачиСИЗ);
	Запрос.УстановитьПараметр("НеУчитыватьВидыВыдачи",	НЕ ЗначениеЗаполнено(ВидыВыдачиСИЗ));
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблицаСкладов = Новый ТаблицаЗначений;
	ТаблицаСкладов.Колонки.Добавить("Сотрудник",	Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаСкладов.Колонки.Добавить("Склад",		Новый ОписаниеТипов("СправочникСсылка.Склады"));
	
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		НоваяСтрока = ТаблицаСкладов.Добавить();
		НоваяСтрока.Сотрудник = СтрокаТаблицыЗапроса.Сотрудник;
		
		Если ЗначениеЗаполнено(СтрокаТаблицыЗапроса.СкладВыдачиПоСотруднику) Тогда
			НоваяСтрока.Склад = СтрокаТаблицыЗапроса.СкладВыдачиПоСотруднику;
		Иначе
			Если ЗначениеЗаполнено(СтрокаТаблицыЗапроса.СкладВыдачиПоПодразделению) Тогда
				НоваяСтрока.Склад = СтрокаТаблицыЗапроса.СкладВыдачиПоПодразделению;
				Продолжить;
			КонецЕсли;
			
			СтруктураДанных = НайтиСкладВыдачиГоловногоПодразделения(СтрокаТаблицыЗапроса.Подразделение, СтрокаТаблицыЗапроса.ВидВыдачиСИЗ);
			СкладВыдачиГоловногоПодразделения = СтруктураДанных.Склад;
			
			Если ЗначениеЗаполнено(СкладВыдачиГоловногоПодразделения) Тогда
				НоваяСтрока.Склад = СкладВыдачиГоловногоПодразделения;
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаТаблицыЗапроса.СкладВыдачиБезПолучателя) Тогда
				НоваяСтрока.Склад = СтрокаТаблицыЗапроса.СкладВыдачиБезПолучателя;
			Иначе
				НоваяСтрока.Склад = Справочники.Склады.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаСкладов;
	
КонецФункции

Функция НайтиСкладВыдачиГоловногоПодразделения(Подразделение, ВидВыдачиСИЗ)
	
	Если ЗначениеЗаполнено(Подразделение.Родитель) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СкладыВыдачиСредствЗащиты.Склад
		|ИЗ
		|	РегистрСведений.СкладыВыдачиСредствЗащиты КАК СкладыВыдачиСредствЗащиты
		|ГДЕ
		|	СкладыВыдачиСредствЗащиты.Получатель = &Получатель
		|	И СкладыВыдачиСредствЗащиты.ВидВыдачиСИЗ = &ВидВыдачиСИЗ";
		
		Запрос.УстановитьПараметр("Получатель",		Подразделение.Родитель);
		Запрос.УстановитьПараметр("ВидВыдачиСИЗ",	ВидВыдачиСИЗ);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Возврат Новый Структура("Склад,Получатель,ВидВыдачиСИЗ",Выборка.Склад,Подразделение.Родитель,ВидВыдачиСИЗ);
		Иначе
			Возврат НайтиСкладВыдачиГоловногоПодразделения(Подразделение.Родитель,ВидВыдачиСИЗ);
		КонецЕсли;
	Иначе
		Возврат Новый Структура("Склад,Получатель,ВидВыдачиСИЗ",Справочники.Склады.ПустаяСсылка(),Подразделение,ВидВыдачиСИЗ);
	КонецЕсли;	
	
КонецФункции

Функция ИнициироватьТаблицуВыдачиСИЗ()
	
	ТаблицаВыдачиСИЗ = Новый ТаблицаЗначений;
	ТаблицаВыдачиСИЗ.Колонки.Добавить("НеВыдано", Новый ОписаниеТипов("Булево"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("НеВыданоПоПричине", Новый ОписаниеТипов("СправочникСсылка.ПричиныНевыдачиСИЗ"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("НормаВыдачи", Новый ОписаниеТипов("СправочникСсылка.НормыВыдачиСИЗ"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("НоменклатураНормы", Новый ОписаниеТипов("СправочникСсылка.НоменклатураНормОрганизации"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("ХарактеристикаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("ДатаВыдачи", Новый ОписаниеТипов("Дата"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("КоличествоПотребность", Новый ОписаниеТипов("Число"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("Комплект", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("КоличествоВКомплекте", Новый ОписаниеТипов("Число"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("КоличествоСовпаденийНоменклатурыНормы", Новый ОписаниеТипов("Число"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("ПериодичностьВыдачи", Новый ОписаниеТипов("СправочникСсылка.ПериодичностьВыдачиСИЗ"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("ДобавленаКопированием", Новый ОписаниеТипов("Булево"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("ПроцентИзноса", Новый ОписаниеТипов("СправочникСсылка.ПроцентыИзноса"));
	ТаблицаВыдачиСИЗ.Колонки.Добавить("ВыдачаСверхНорм", Новый ОписаниеТипов("Булево"));
	
	ТаблицаВыдачиСИЗ.Колонки.Добавить("Условие", Новый ОписаниеТипов("СправочникСсылка.УсловияНорм"));
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ПунктыТОН"));
	МассивТипов.Добавить(Тип("Строка"));
	ПараметрыСтроки = Новый КвалификаторыСтроки(100);
	ТаблицаВыдачиСИЗ.Колонки.Добавить("Основание", Новый ОписаниеТипов(МассивТипов,,ПараметрыСтроки));
	
	Возврат ТаблицаВыдачиСИЗ;
	
КонецФункции

Функция ЗаполнитьКолонки_ТипУсловия_Основание(ТаблицаВыдачиСИЗ, СтруктураПараметров)
	
	ВидВыдачиСИЗ 		= СтруктураПараметров.ВидВыдачиСИЗ;
	Организация			= СтруктураПараметров.Организация;
	МассивСотрудников 	= СтруктураПараметров.МассивСотрудников;
	ПериодАнализа		= СтруктураПараметров.ПериодРасчета;
	
	Если ВидВыдачиСИЗ = Перечисления.ВидыВыдачиСИЗ.ПроизвольнаяВыдача ИЛИ ВидВыдачиСИЗ = Перечисления.ВидыВыдачиСИЗ.УпрощеннаяВыдача Тогда
		Возврат ТаблицаВыдачиСИЗ;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗанятыеРабочиеМестаОстатки.Подразделение КАК Подразделение,
	|	ЗанятыеРабочиеМестаОстатки.Должность КАК Должность,
	|	ЗанятыеРабочиеМестаОстатки.РабочееМесто КАК РабочееМесто
	|ИЗ
	|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(
	|			&ПериодАнализа,
	|			Организация = &Организация
	|				И Сотрудник В (&МассивСотрудников)) КАК ЗанятыеРабочиеМестаОстатки";
	
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("МассивСотрудников",	МассивСотрудников);
	Запрос.УстановитьПараметр("ПериодАнализа",		ПериодАнализа);
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	МассивПодразделений = ТаблицаЗапроса.ВыгрузитьКолонку("Подразделение");
	МассивДолжностей 	= ТаблицаЗапроса.ВыгрузитьКолонку("Должность");
	МассивРабочихМест 	= ТаблицаЗапроса.ВыгрузитьКолонку("РабочееМесто");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВыдачи.Сотрудник КАК Сотрудник,
	|	ТаблицаВыдачи.НормаВыдачи КАК НормаВыдачи
	|ПОМЕСТИТЬ ВТ_ТаблицаВыдачи
	|ИЗ
	|	&ТаблицаВыдачи КАК ТаблицаВыдачи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Подразделение КАК Подразделение,
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Должность КАК Должность,
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Условие КАК Условие
	|ПОМЕСТИТЬ ВТ_ДУР
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоступныеУсловияРаботыСотрудникаСрезПоследних.Сотрудник КАК Сотрудник,
	|		ДоступныеУсловияРаботыСотрудникаСрезПоследних.Подразделение КАК Подразделение,
	|		ДоступныеУсловияРаботыСотрудникаСрезПоследних.Должность КАК Должность,
	|		ДоступныеУсловияРаботыСотрудникаСрезПоследних.РабочееМесто КАК РабочееМесто,
	|		ДоступныеУсловияРаботыСотрудникаСрезПоследних.Условие КАК Условие,
	|		МАКСИМУМ(ДоступныеУсловияРаботыСотрудникаСрезПоследних.Период) КАК Период
	|	ИЗ
	|		РегистрСведений.ДоступныеУсловияРаботыСотрудника.СрезПоследних(&ПериодАнализа, Сотрудник В (&МассивСотрудников)) КАК ДоступныеУсловияРаботыСотрудникаСрезПоследних
	|	ГДЕ
	|		ДоступныеУсловияРаботыСотрудникаСрезПоследних.Использовать
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДоступныеУсловияРаботыСотрудникаСрезПоследних.Сотрудник,
	|		ДоступныеУсловияРаботыСотрудникаСрезПоследних.Подразделение,
	|		ДоступныеУсловияРаботыСотрудникаСрезПоследних.Должность,
	|		ДоступныеУсловияРаботыСотрудникаСрезПоследних.РабочееМесто,
	|		ДоступныеУсловияРаботыСотрудникаСрезПоследних.Условие) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеУсловияРаботыСотрудника.СрезПоследних(&ПериодАнализа, Сотрудник В (&МассивСотрудников)) КАК ДоступныеУсловияРаботыСотрудникаСрезПоследних
	|		ПО ВложенныйЗапрос.Сотрудник = ДоступныеУсловияРаботыСотрудникаСрезПоследних.Сотрудник
	|			И ВложенныйЗапрос.Период = ДоступныеУсловияРаботыСотрудникаСрезПоследних.Период
	|			И ВложенныйЗапрос.Подразделение = ДоступныеУсловияРаботыСотрудникаСрезПоследних.Подразделение
	|			И ВложенныйЗапрос.Должность = ДоступныеУсловияРаботыСотрудникаСрезПоследних.Должность
	|			И ВложенныйЗапрос.РабочееМесто = ДоступныеУсловияРаботыСотрудникаСрезПоследних.РабочееМесто
	|			И ВложенныйЗапрос.Условие = ДоступныеУсловияРаботыСотрудникаСрезПоследних.Условие
	|ГДЕ
	|	ДоступныеУсловияРаботыСотрудникаСрезПоследних.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.Подразделение КАК Подразделение,
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.Должность КАК Должность,
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.УсловиеНормы КАК УсловиеНормы,
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.НормаВыдачи КАК НормаВыдачи
	|ПОМЕСТИТЬ ВТ_УН
	|ИЗ
	|	РегистрСведений.УстановленныеНормыВыдачиСИЗ.СрезПоследних(
	|			&ПериодАнализа,
	|			Организация = &Организация
	|				И (Подразделение В (&МассивПодразделений)
	|					ИЛИ Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|				И (Должность В (&МассивДолжностей)
	|					ИЛИ Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
	|				И (РабочееМесто В (&МассивРабочихМест)
	|					ИЛИ РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))) КАК УстановленныеНормыВыдачиСИЗСрезПоследних
	|ГДЕ
	|	УстановленныеНормыВыдачиСИЗСрезПоследних.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НормыВыдачиСИЗ.Ссылка КАК НормаВыдачи,
	|	НормыВыдачиСИЗ.ОснованиеНормы КАК ОснованиеНормы
	|ПОМЕСТИТЬ ВТ_НормыВыдачи
	|ИЗ
	|	Справочник.НормыВыдачиСИЗ КАК НормыВыдачиСИЗ
	|ГДЕ
	|	НормыВыдачиСИЗ.Владелец = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УточненныеОснованияНормВыдачи.НормаВыдачи КАК НормаВыдачи,
	|	УточненныеОснованияНормВыдачи.Подразделение КАК Подразделение,
	|	УточненныеОснованияНормВыдачи.Должность КАК Должность,
	|	УточненныеОснованияНормВыдачи.РабочееМесто КАК РабочееМесто,
	|	УточненныеОснованияНормВыдачи.Основание КАК Основание
	|ПОМЕСТИТЬ ВТ_УточненныеОснования
	|ИЗ
	|	РегистрСведений.УточненныеОснованияНормВыдачи КАК УточненныеОснованияНормВыдачи
	|ГДЕ
	|	УточненныеОснованияНормВыдачи.Организация = &Организация
	|	И (УточненныеОснованияНормВыдачи.Подразделение В (&МассивПодразделений)
	|			ИЛИ УточненныеОснованияНормВыдачи.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|	И (УточненныеОснованияНормВыдачи.Должность В (&МассивДолжностей)
	|			ИЛИ УточненныеОснованияНормВыдачи.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
	|	И (УточненныеОснованияНормВыдачи.РабочееМесто В (&МассивРабочихМест)
	|			ИЛИ УточненныеОснованияНормВыдачи.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаВыдачи.Сотрудник КАК Сотрудник,
	|	ВТ_ТаблицаВыдачи.НормаВыдачи КАК НормаВыдачи,
	|	ВТ_ДУР.Подразделение КАК Подразделение,
	|	ВТ_ДУР.Должность КАК Должность,
	|	ВТ_ДУР.РабочееМесто КАК РабочееМесто,
	|	ВТ_ДУР.Условие КАК Условие
	|ПОМЕСТИТЬ ВТ_ДУРпоДокументу
	|ИЗ
	|	ВТ_ТаблицаВыдачи КАК ВТ_ТаблицаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДУР КАК ВТ_ДУР
	|		ПО ВТ_ТаблицаВыдачи.Сотрудник = ВТ_ДУР.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДУРпоДокументу.Сотрудник КАК Сотрудник,
	|	ВТ_ДУРпоДокументу.НормаВыдачи КАК НормаВыдачи,
	|	ВЫБОР
	|		КОГДА ВТ_УН.УсловиеНормы ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_УН.УсловиеНормы.ТипУсловия = ЗНАЧЕНИЕ(Перечисление.ТипыУсловийНорм.ЗимойДополнительно)
	|					ТОГДА 1
	|				КОГДА ВТ_УН.УсловиеНормы.ТипУсловия = ЗНАЧЕНИЕ(Перечисление.ТипыУсловийНорм.ПриУсловии)
	|					ТОГДА 2
	|				КОГДА ВТ_УН.УсловиеНормы.ТипУсловия = ЗНАЧЕНИЕ(Перечисление.ТипыУсловийНорм.ПриУсловииЗимойДополнительно)
	|					ТОГДА 3
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ТипУсловия,
	|	ВТ_УН.УсловиеНормы КАК УсловиеНормы,
	|	ЕСТЬNULL(ВТ_УточненныеОснования.Основание, ВТ_НормыВыдачи.ОснованиеНормы) КАК Основание
	|ИЗ
	|	ВТ_ДУРпоДокументу КАК ВТ_ДУРпоДокументу
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УН КАК ВТ_УН
	|		ПО ВТ_ДУРпоДокументу.НормаВыдачи = ВТ_УН.НормаВыдачи
	|			И (ВТ_ДУРпоДокументу.Подразделение = ВТ_УН.Подразделение
	|				ИЛИ ВТ_УН.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|			И (ВТ_ДУРпоДокументу.Должность = ВТ_УН.Должность
	|				ИЛИ ВТ_УН.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
	|			И (ВТ_ДУРпоДокументу.РабочееМесто = ВТ_УН.РабочееМесто
	|				ИЛИ ВТ_УН.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
	|			И ВТ_ДУРпоДокументу.Условие = ВТ_УН.УсловиеНормы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НормыВыдачи КАК ВТ_НормыВыдачи
	|		ПО ВТ_ДУРпоДокументу.НормаВыдачи = ВТ_НормыВыдачи.НормаВыдачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УточненныеОснования КАК ВТ_УточненныеОснования
	|		ПО ВТ_ДУРпоДокументу.НормаВыдачи = ВТ_УточненныеОснования.НормаВыдачи
	|			И (ВТ_ДУРпоДокументу.Подразделение = ВТ_УточненныеОснования.Подразделение
	|				ИЛИ ВТ_УточненныеОснования.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|			И (ВТ_ДУРпоДокументу.Должность = ВТ_УточненныеОснования.Должность
	|				ИЛИ ВТ_УточненныеОснования.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
	|			И (ВТ_ДУРпоДокументу.РабочееМесто = ВТ_УточненныеОснования.РабочееМесто
	|				ИЛИ ВТ_УточненныеОснования.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
	|ГДЕ
	|	НЕ ВТ_УН.УсловиеНормы ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("ТаблицаВыдачи",		ТаблицаВыдачиСИЗ);
	Запрос.УстановитьПараметр("Организация",		Организация);
	Запрос.УстановитьПараметр("МассивСотрудников",	МассивСотрудников);
	Запрос.УстановитьПараметр("ПериодАнализа",		ПериодАнализа);
	Запрос.УстановитьПараметр("МассивПодразделений",МассивПодразделений);
	Запрос.УстановитьПараметр("МассивДолжностей",	МассивДолжностей);
	Запрос.УстановитьПараметр("МассивРабочихМест",	МассивРабочихМест);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	// Обходим результата запроса. В текущей таблице ищем строки по "Сотрудник" и "Норма выдачи", и заполняем новые поля.
	Пока Выборка.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Сотрудник, НормаВыдачи", Выборка.Сотрудник, Выборка.НормаВыдачи);
		НайденныеСтроки = ТаблицаВыдачиСИЗ.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НайденнаяСтрока.Условие = Выборка.УсловиеНормы;
			НайденнаяСтрока.Основание = Выборка.Основание;
		КонецЦикла;
		
	КонецЦикла;
		
	Возврат ТаблицаВыдачиСИЗ;
	
КонецФункции

Функция ПроверитьДобавитьКолонкиТаблицы(ТаблицаВыдачиСИЗ)
	
	// Добавим новые колонки в таблицу, если они остутствуют
	
	Если ТаблицаВыдачиСИЗ.Колонки.Найти("Условие") = Неопределено Тогда
		ТаблицаВыдачиСИЗ.Колонки.Добавить("Условие", Новый ОписаниеТипов("СправочникСсылка.УсловияНорм"));
	КонецЕсли;
	
	Если ТаблицаВыдачиСИЗ.Колонки.Найти("Основание") = Неопределено Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.ПунктыТОН"));
		МассивТипов.Добавить(Тип("Строка"));
		ПараметрыСтроки = Новый КвалификаторыСтроки(100);
		ТаблицаВыдачиСИЗ.Колонки.Добавить("Основание", Новый ОписаниеТипов(МассивТипов,,ПараметрыСтроки));
	КонецЕсли;
	
	Если ТаблицаВыдачиСИЗ.Колонки.Найти("ПроцентИзноса") = Неопределено Тогда
		ТаблицаВыдачиСИЗ.Колонки.Добавить("ПроцентИзноса", Новый ОписаниеТипов("СправочникСсылка.ПроцентыИзноса"));
	КонецЕсли;
	
	Возврат ТаблицаВыдачиСИЗ;
	
КонецФункции

