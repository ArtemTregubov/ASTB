
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; // отключаем стандартный вывод отчета - будем выводить программно 
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();// Получаем настройки отчета
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; // Создаем данные расшифровки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; // Создаем компоновщик макета 

	//инициализируем настройки параметров отчета
	ПараметрОрганизация = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Организация"));
	Если не ПараметрОрганизация = Неопределено Тогда
		Организация = ПараметрОрганизация.Значение;
		ПараметрОрганизация.Использование = Истина;
	Иначе
		Отказ = Истина;
	КонецЕсли;

	Запрос = Новый Запрос;
	
	ПараметрСотрудник = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Сотрудник"));
	Если НЕ ПараметрСотрудник = Неопределено Тогда
		МассивСотрудников = Новый Массив;
		МассивСотрудников.Добавить(ПараметрСотрудник.Значение);
		ПараметрСотрудник.Использование = Истина;
	Иначе
		Отказ = истина;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Организация",Организация);
	
	ДатаАнализа = ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу("");
	
	ТаблицаЗанятыхРМ 			= ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуЗанятыхРабочихМестСУсловиями(МассивСотрудников,Организация,ДатаАнализа);
	ТаблицаУстановленныхНорм1 	= ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуУстановленныхНорм(Организация,ДатаАнализа,ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Подразделение"),ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Должность"));
	ТаблицаУстановленныхНорм2 	= ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуУстановленныхНорм(Организация,ДатаАнализа,ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Подразделение"),ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Должность"),Ложь);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаУстановленныхНорм2,ТаблицаУстановленныхНорм1);
	ТаблицаСНормами 			= ПроцедурыРаботыСНормамиСервер.ПодобратьНормы(ТаблицаЗанятыхРМ,ТаблицаУстановленныхНорм1,Организация,ДатаАнализа,"Сотрудник,Подразделение,Должность,УсловиеНормы,НормаВыдачи,НоменклатураНормы,Использовать");
	
	ТаблицаСоответствия = ПроцедурыРаботыСНормамиСервер.ПолучитьСоответствияНоменклатурыДляСотрудников(ТаблицаСНормами,ДатаАнализа);
	
	ВыходнаяТаблица = Новый ТаблицаЗначений;
	ВыходнаяТаблица.Колонки.Добавить("Организация",			Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ВыходнаяТаблица.Колонки.Добавить("Сотрудник",			Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ВыходнаяТаблица.Колонки.Добавить("Подразделение",		Новый ОписаниеТипов("СправочникСсылка.Подразделения"));
	ВыходнаяТаблица.Колонки.Добавить("Должность",			Новый ОписаниеТипов("СправочникСсылка.ДолжностиИПрофессии"));
	ВыходнаяТаблица.Колонки.Добавить("УсловиеНормы",		Новый ОписаниеТипов("СправочникСсылка.УсловияНорм"));
	ВыходнаяТаблица.Колонки.Добавить("НормаВыдачи",			Новый ОписаниеТипов("СправочникСсылка.НормыВыдачиСИЗ"));
	ВыходнаяТаблица.Колонки.Добавить("НоменклатураНормы",	Новый ОписаниеТипов("СправочникСсылка.НоменклатураНормОрганизации"));
	ВыходнаяТаблица.Колонки.Добавить("Номенклатура",		Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	//+++АСТБ_Горюшин_Алексей_22228
	КЧ = Новый КвалификаторыЧисла(3,0);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	ВыходнаяТаблица.Колонки.Добавить("Приоритет",			ОписаниеТиповЧ);
	//---АСТБ_Горюшин_Алексей_22228
	
	Для Каждого СтрокаТаблицыСНормами Из ТаблицаСНормами Цикл
		
		СтруктураПоиска = НОВЫЙ Структура("Сотрудник, НоменклатураНормы",СтрокаТаблицыСНормами.Сотрудник,СтрокаТаблицыСНормами.НоменклатураНормы);
		
		НайденныеСтроки = ТаблицаСоответствия.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			ЗаполнитьЗначенияСвойств(ВыходнаяТаблица.Добавить(),СтрокаТаблицыСНормами);
			Продолжить;
			
		КонецЕсли;	
		
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
			НоваяСтрока = ВыходнаяТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыСНормами);
			НоваяСтрока.Номенклатура = НайденнаяСтрока.Номенклатура;
			//+++АСТБ_Горюшин_Алексей_22228
			НоваяСтрока.Приоритет = НайденнаяСтрока.Приоритет;
			//---АСТБ_Горюшин_Алексей_22228
			
		КонецЦикла;		
		
	КонецЦикла;
	
	ВыходнаяТаблица.ЗаполнитьЗначения(Организация,"Организация");
	
	НаборыВнешнихДанных = Новый Структура;
	НаборыВнешнихДанных.Вставить("ТаблицаНорм",ВыходнаяТаблица);
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	// Скомпонуем результат
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	
	//Инициализировать(<Макет>, <ВнешниеНаборыДанных>, <ДанныеРасшифровки>, <ВозможностьИспользованияВнешнихФункций>) 
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,НаборыВнешнихДанных , ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

//+++АСТБ_Горюшин_Алексей_22228
// В схему ОсновнаяСхемаКомпоновкиДанных в поля набора данных НаборДанных1 добавлено поле Приоритет.
// В вариант НормыПоСотрудникуСНоменклатуройВыдачи добавлено поле Приоритет
//---АСТБ_Горюшин_Алексей_22228
