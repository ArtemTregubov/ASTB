Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки КАК ЗанятыеРабочиеМестаОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗанятыеРабочиеМестаОстатки.Сотрудник.Наименование";
	
	МассивСотрудников = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
	
	СтандартнаяОбработка = Ложь; // отключаем стандартный вывод отчета - будем выводить программно 
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();// Получаем настройки отчета
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; // Создаем данные расшифровки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; // Создаем компоновщик макета 
	
	ТаблицаСкладовПерсональнойВыдачи = Новый ТаблицаЗначений;
	ТаблицаСкладовПерсональнойВыдачи.Колонки.Добавить("Сотрудник");
	ТаблицаСкладовПерсональнойВыдачи.Колонки.Добавить("СкладПерсональнойВыдачи");
	ТаблицаСкладовПерсональнойВыдачи.Колонки.Добавить("МОЛСкладаПерсональнойВыдачи");
	
	ТаблицаСкладовКоллективнойВыдачи = Новый ТаблицаЗначений;
	ТаблицаСкладовКоллективнойВыдачи.Колонки.Добавить("Сотрудник");
	ТаблицаСкладовКоллективнойВыдачи.Колонки.Добавить("СкладКоллективнойВыдачи");
	ТаблицаСкладовКоллективнойВыдачи.Колонки.Добавить("МОЛСкладаКоллективнойВыдачи");
	
	Для Каждого ТекущийСотрудник Из МассивСотрудников Цикл
		
		ТаблицаСкладовВыдачиСотрудника = ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуСкладовВыдачи(ТекущийСотрудник);
		
		Для Каждого СтрокаТаблицыСкладовВыдачиСотрудника Из ТаблицаСкладовВыдачиСотрудника Цикл
			
			Если СтрокаТаблицыСкладовВыдачиСотрудника.Склад.МатериальноОтветственныеЛица.Количество() = 0 Тогда
				
				
				Если СтрокаТаблицыСкладовВыдачиСотрудника.ВидВыдачиСИЗ = Перечисления.ВидыВыдачиСИЗ.КоллективнаяВыдача Тогда
					НоваяСтрока = ТаблицаСкладовКоллективнойВыдачи.Добавить();
					НоваяСтрока.Сотрудник = ТекущийСотрудник;
					НоваяСтрока.СкладКоллективнойВыдачи = СтрокаТаблицыСкладовВыдачиСотрудника.Склад;
					НоваяСтрока.МОЛСкладаКоллективнойВыдачи = Справочники.Сотрудники.ПустаяСсылка();
				ИначеЕсли СтрокаТаблицыСкладовВыдачиСотрудника.ВидВыдачиСИЗ = Перечисления.ВидыВыдачиСИЗ.ПерсональнаяВыдача Тогда
					НоваяСтрока = ТаблицаСкладовПерсональнойВыдачи.Добавить();
					НоваяСтрока.Сотрудник = ТекущийСотрудник;
					НоваяСтрока.СкладПерсональнойВыдачи = СтрокаТаблицыСкладовВыдачиСотрудника.Склад;
					НоваяСтрока.МОЛСкладаПерсональнойВыдачи = Справочники.Сотрудники.ПустаяСсылка();
				КонецЕсли;
				
			Иначе
				
				Для Каждого МОЛСклада Из СтрокаТаблицыСкладовВыдачиСотрудника.Склад.МатериальноОтветственныеЛица Цикл
					
					Если СтрокаТаблицыСкладовВыдачиСотрудника.ВидВыдачиСИЗ = Перечисления.ВидыВыдачиСИЗ.КоллективнаяВыдача Тогда
						НоваяСтрока = ТаблицаСкладовКоллективнойВыдачи.Добавить();
						НоваяСтрока.Сотрудник = ТекущийСотрудник;
						НоваяСтрока.СкладКоллективнойВыдачи = СтрокаТаблицыСкладовВыдачиСотрудника.Склад;
						НоваяСтрока.МОЛСкладаКоллективнойВыдачи = МОЛСклада.МОЛ;
					ИначеЕсли СтрокаТаблицыСкладовВыдачиСотрудника.ВидВыдачиСИЗ = Перечисления.ВидыВыдачиСИЗ.ПерсональнаяВыдача Тогда
						НоваяСтрока = ТаблицаСкладовПерсональнойВыдачи.Добавить();
						НоваяСтрока.Сотрудник = ТекущийСотрудник;
						НоваяСтрока.СкладПерсональнойВыдачи = СтрокаТаблицыСкладовВыдачиСотрудника.Склад;
						НоваяСтрока.МОЛСкладаПерсональнойВыдачи = МОЛСклада.МОЛ;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
		
		КонецЦикла;	
		
	КонецЦикла;

	НаборыВнешнихДанных = Новый Структура;
	НаборыВнешнихДанных.Вставить("ТаблицаСкладовПерсональнойВыдачи",ТаблицаСкладовПерсональнойВыдачи);
	НаборыВнешнихДанных.Вставить("ТаблицаСкладовКоллективнойВыдачи",ТаблицаСкладовКоллективнойВыдачи);
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	// Скомпонуем результат
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	
	//Инициализировать(<Макет>, <ВнешниеНаборыДанных>, <ДанныеРасшифровки>, <ВозможностьИспользованияВнешнихФункций>) 
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,НаборыВнешнихДанных , ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры