Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;  
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	ПараметрОрганизация = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Организация"));
	Если не ПараметрОрганизация = Неопределено Тогда
		Организация = ПараметрОрганизация.Значение;
		ПараметрОрганизация.Использование = Истина;
	Иначе
		Возврат;
	КонецЕсли;
	
	ПараметрПериод = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	Если не ПараметрПериод = Неопределено Тогда
		ДатаНачала 		= ПараметрПериод.Значение.ДатаНачала;
		ДатаОкончания 	= ПараметрПериод.Значение.ДатаОкончания;
		ПараметрПериод.Использование = Истина;
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗанятыеРабочиеМестаОстатки.Организация КАК Организация,
	|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник,
	|	ЗанятыеРабочиеМестаОстатки.Подразделение КАК Подразделение,
	|	ЗанятыеРабочиеМестаОстатки.Должность КАК Должность,
	|	ЗанятыеРабочиеМестаОстатки.РабочееМесто КАК РабочееМесто
	|ПОМЕСТИТЬ ВТ_ЗРМ
	|ИЗ
	|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнструктажиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	|	ИнструктажиСотрудниковСрезПоследних.Подразделение КАК Подразделение,
	|	ИнструктажиСотрудниковСрезПоследних.Должность КАК Должность,
	|	ИнструктажиСотрудниковСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ИнструктажиСотрудниковСрезПоследних.Инструктаж КАК Инструктаж,
	|	ИнструктажиСотрудниковСрезПоследних.ДатаИнструктажа КАК ДатаИнструктажа,
	|	ИнструктажиСотрудниковСрезПоследних.Ответственный КАК Ответственный
	|ПОМЕСТИТЬ ВТ_ПервичныеИнструктажи
	|ИЗ
	|	РегистрСведений.ИнструктажиСотрудников.СрезПоследних(, Организация = &Организация) КАК ИнструктажиСотрудниковСрезПоследних
	|ГДЕ
	|	ИнструктажиСотрудниковСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Первичный)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнструктажиСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	|	ИнструктажиСотрудниковСрезПоследних.Подразделение КАК Подразделение,
	|	ИнструктажиСотрудниковСрезПоследних.Должность КАК Должность,
	|	ИнструктажиСотрудниковСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ИнструктажиСотрудниковСрезПоследних.Инструктаж КАК Инструктаж,
	|	ИнструктажиСотрудниковСрезПоследних.ДатаИнструктажа КАК ДатаИнструктажа,
	|	ИнструктажиСотрудниковСрезПоследних.Ответственный КАК Ответственный
	|ПОМЕСТИТЬ ВТ_ПовторныеИнструктажи
	|ИЗ
	|	РегистрСведений.ИнструктажиСотрудников.СрезПоследних(, Организация = &Организация) КАК ИнструктажиСотрудниковСрезПоследних
	|ГДЕ
	|	ИнструктажиСотрудниковСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриказыНаИнструктажиСрезПоследних.Подразделение КАК Подразделение,
	|	ПриказыНаИнструктажиСрезПоследних.Должность КАК Должность,
	|	ПриказыНаИнструктажиСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ПриказыНаИнструктажиСрезПоследних.Инструктаж КАК Инструктаж,
	|	ПриказыНаИнструктажиСрезПоследних.Периодичность КАК Периодичность,
	|	ПриказыНаИнструктажиСрезПоследних.Ответственный КАК Ответственный
	|ПОМЕСТИТЬ ВТ_ПриказыНаИнструктажи
	|ИЗ
	|	РегистрСведений.ПриказыНаИнструктажи.СрезПоследних(, Организация = &Организация) КАК ПриказыНаИнструктажиСрезПоследних
	|ГДЕ
	|	ПриказыНаИнструктажиСрезПоследних.Проводить
	|	И ПриказыНаИнструктажиСрезПоследних.Инструктаж.ВидИнструктажа = ЗНАЧЕНИЕ(Перечисление.ВидыИнструктажей.Повторный)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗРМ.Организация КАК Организация,
	|	ВТ_ЗРМ.Сотрудник КАК Сотрудник,
	|	ВТ_ЗРМ.Подразделение КАК Подразделение,
	|	ВТ_ЗРМ.Должность КАК Должность,
	|	ВТ_ЗРМ.РабочееМесто КАК РабочееМесто,
	|	ВТ_ПриказыНаИнструктажи.Инструктаж КАК Инструктаж,
	|	ВТ_ПриказыНаИнструктажи.Периодичность КАК Периодичность,
	|	ВТ_ПриказыНаИнструктажи.Ответственный КАК Ответственный
	|ПОМЕСТИТЬ ВТ_ДействующиеИнструктажи
	|ИЗ
	|	ВТ_ЗРМ КАК ВТ_ЗРМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриказыНаИнструктажи КАК ВТ_ПриказыНаИнструктажи
	|		ПО (ВТ_ЗРМ.Подразделение = ВТ_ПриказыНаИнструктажи.Подразделение
	|				ИЛИ ВТ_ПриказыНаИнструктажи.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка))
	|			И (ВТ_ЗРМ.Должность = ВТ_ПриказыНаИнструктажи.Должность
	|				ИЛИ ВТ_ПриказыНаИнструктажи.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка))
	|			И (ВТ_ЗРМ.РабочееМесто = ВТ_ПриказыНаИнструктажи.РабочееМесто
	|				ИЛИ ВТ_ПриказыНаИнструктажи.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка))
	|ГДЕ
	|	НЕ ВТ_ПриказыНаИнструктажи.Инструктаж ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДействующиеИнструктажи.Организация КАК Организация,
	|	ВТ_ДействующиеИнструктажи.Сотрудник КАК Сотрудник,
	|	ВТ_ДействующиеИнструктажи.Подразделение КАК Подразделение,
	|	ВТ_ДействующиеИнструктажи.Должность КАК Должность,
	|	ВТ_ДействующиеИнструктажи.РабочееМесто КАК РабочееМесто,
	|	ВТ_ДействующиеИнструктажи.Инструктаж КАК Инструктаж,
	|	ВТ_ДействующиеИнструктажи.Ответственный КАК Ответственный,
	|	ВЫБОР
	|		КОГДА ВТ_ПовторныеИнструктажи.ДатаИнструктажа ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ПервичныеИнструктажи.ДатаИнструктажа ЕСТЬ NULL
	|						ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|					ИНАЧЕ НАЧАЛОПЕРИОДА(ВТ_ПервичныеИнструктажи.ДатаИнструктажа, МЕСЯЦ)
	|				КОНЕЦ
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(ВТ_ПовторныеИнструктажи.ДатаИнструктажа, МЕСЯЦ)
	|	КОНЕЦ КАК ДатаИнструктажа,
	|	ВЫБОР
	|		КОГДА ВТ_ДействующиеИнструктажи.Периодичность = ЗНАЧЕНИЕ(Справочник.ПериодичностьВыдачиСИЗ.ПустаяСсылка)
	|			ТОГДА 6
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_ДействующиеИнструктажи.Периодичность.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|					ТОГДА ВТ_ДействующиеИнструктажи.Периодичность.КоличествоПериодов * 12 / ВТ_ДействующиеИнструктажи.Периодичность.КоличествоВПериоде
	|				ИНАЧЕ ВТ_ДействующиеИнструктажи.Периодичность.КоличествоПериодов / ВТ_ДействующиеИнструктажи.Периодичность.КоличествоВПериоде
	|			КОНЕЦ
	|	КОНЕЦ КАК ИнтервалВМесяцах,
	|	1 КАК Количество
	|ИЗ
	|	ВТ_ДействующиеИнструктажи КАК ВТ_ДействующиеИнструктажи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПовторныеИнструктажи КАК ВТ_ПовторныеИнструктажи
	|		ПО ВТ_ДействующиеИнструктажи.Сотрудник = ВТ_ПовторныеИнструктажи.Сотрудник
	|			И ВТ_ДействующиеИнструктажи.Подразделение = ВТ_ПовторныеИнструктажи.Подразделение
	|			И ВТ_ДействующиеИнструктажи.Должность = ВТ_ПовторныеИнструктажи.Должность
	|			И ВТ_ДействующиеИнструктажи.РабочееМесто = ВТ_ПовторныеИнструктажи.РабочееМесто
	|			И ВТ_ДействующиеИнструктажи.Инструктаж = ВТ_ПовторныеИнструктажи.Инструктаж
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервичныеИнструктажи КАК ВТ_ПервичныеИнструктажи
	|		ПО ВТ_ДействующиеИнструктажи.Сотрудник = ВТ_ПервичныеИнструктажи.Сотрудник
	|			И ВТ_ДействующиеИнструктажи.Подразделение = ВТ_ПервичныеИнструктажи.Подразделение
	|			И ВТ_ДействующиеИнструктажи.Должность = ВТ_ПервичныеИнструктажи.Должность
	|			И ВТ_ДействующиеИнструктажи.РабочееМесто = ВТ_ПервичныеИнструктажи.РабочееМесто
	|			И ВТ_ДействующиеИнструктажи.Инструктаж.ПервичныйИнструктаж = ВТ_ПервичныеИнструктажи.Инструктаж
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаИнструктажа";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	
	//предварительная таблица
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	//результат для передачи в СКД
	ТаблицаДляВывода = ТаблицаЗапроса.Скопировать();
	ТаблицаДляВывода.Очистить();
	
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		Если НачалоМесяца(ДатаНачала) < СтрокаТаблицыЗапроса.ДатаИнструктажа Тогда
		    ЗаполнитьЗначенияСвойств(ТаблицаДляВывода.Добавить(),СтрокаТаблицыЗапроса);
		КонецЕсли;
		
		СледующаяДатаИнструктажа = ДобавитьМесяц(СтрокаТаблицыЗапроса.ДатаИнструктажа,СтрокаТаблицыЗапроса.ИнтервалВМесяцах);
		
		Пока НачалоМесяца(СледующаяДатаИнструктажа) <= НачалоМесяца(ДатаОкончания) Цикл
			
			Если НачалоМесяца(ДатаНачала) < НачалоМесяца(СледующаяДатаИнструктажа) Тогда
				НоваяСтрока = ТаблицаДляВывода.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыЗапроса);
				НоваяСтрока.ДатаИнструктажа = НачалоМесяца(СледующаяДатаИнструктажа);
			КонецЕсли;
			
			СледующаяДатаИнструктажа = ДобавитьМесяц(НачалоМесяца(СледующаяДатаИнструктажа),СтрокаТаблицыЗапроса.ИнтервалВМесяцах);
			
		КонецЦикла;	
		
	КонецЦикла;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	// Скомпонуем результат
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	
	НаборыВнешнихДанных = Новый Структура;
	НаборыВнешнихДанных.Вставить("ТаблицаДляВывода",ТаблицаДляВывода);
	
	//Инициализировать(<Макет>, <ВнешниеНаборыДанных>, <ДанныеРасшифровки>, <ВозможностьИспользованияВнешнихФункций>) 
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,НаборыВнешнихДанных , ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры	