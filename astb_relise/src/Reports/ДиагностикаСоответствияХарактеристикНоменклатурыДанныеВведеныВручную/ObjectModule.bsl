
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтандартнаяОбработка = Ложь;
	
	НаборыВнешнихДанных = Новый Структура;
	НаборыВнешнихДанных.Вставить("ЗашитыеДанные",ПолучитьТаблицуСоответствийХарактеристик());
	
	Настройка = СхемаКомпоновкиДанных.ВариантыНастроек[0];
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройка.Настройки,ДанныеРасшифровки,,Тип("ГенераторМакетаКомпоновкиДанных"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,НаборыВнешнихДанных,ДанныеРасшифровки,Истина);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

Функция ПолучитьТаблицуСоответствийХарактеристик()
	
	ТаблицаСоответствий = Новый ТаблицаЗначений;
	ТаблицаСоответствий.Колонки.Добавить("РазмерКонф");
	ТаблицаСоответствий.Колонки.Добавить("РостКонф");
	ТаблицаСоответствий.Колонки.Добавить("ПолКонф");
	ТаблицаСоответствий.Колонки.Добавить("ДополнительноеУсловиеКонф");
	ТаблицаСоответствий.Колонки.Добавить("МетрикаКонф");
	
	//чтение схемы из макета
	ВременныйФайлСхемы = ПолучитьИмяВременногоФайла();
	
	МакетСхемы = РегистрыСведений.СоответствияХарактеристикНоменклатуры.ПолучитьМакет("СхемаXML");
	МакетСхемы.Записать(ВременныйФайлСхемы);
	
	ЧтениеСхемы = Новый ЧтениеXML;
	ЧтениеСхемы.ОткрытьФайл(ВременныйФайлСхемы);

	Построитель_DOM = Новый ПостроительDOM;
	Документ_DOM 	= Построитель_DOM.Прочитать(ЧтениеСхемы);
	
	ПостроительСхем_XML = Новый ПостроительСхемXML;
	Схема_XML 			= ПостроительСхем_XML.СоздатьСхемуXML(Документ_DOM);
	
	НаборСхем = Новый НаборСхемXML;
	НаборСхем.Добавить(Схема_XML);
	
	НоваяФабрика = Новый ФабрикаXDTO(НаборСхем);
	
	//чтение данных из макета
	ВременныйФайлНоменклатуры 	= ПолучитьИмяВременногоФайла();
	МакетДанных 				= РегистрыСведений.СоответствияХарактеристикНоменклатуры.ПолучитьМакет("ДанныеXML");
	МакетДанных.Записать(ВременныйФайлНоменклатуры);
	
	Чтение = Новый ЧтениеXML;
	Чтение.ОткрытьФайл(ВременныйФайлНоменклатуры);
	
	Попытка
		Данные = НоваяФабрика.ПрочитатьXML(Чтение);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат ТаблицаСоответствий;
	КонецПопытки;
	
	Если Данные = Неопределено Тогда
		Возврат ТаблицаСоответствий;
	КонецЕсли;
	
	Для Каждого Элемент Из Данные.size_item Цикл
		
		Рост = ?(ЗначениеЗаполнено(Элемент.lengt),Число(Элемент.lengt),0);
		Попытка
			Размер = Число(Элемент.size);
		Исключение
			Размер = Элемент.size;
		КонецПопытки;
		
		Если Элемент.sex = "M" Тогда
			Пол = Перечисления.ПолФизическогоЛица.Мужской;
		ИначеЕсли Элемент.sex = "W" Тогда
			Пол = Перечисления.ПолФизическогоЛица.Женский;
		Иначе
			Пол = Перечисления.ПолФизическогоЛица.ПустаяСсылка();
		КонецЕсли;
		
		ДополнительноеУсловие = ?(ЗначениеЗаполнено(Элемент.vid_SIZ),Справочники.ВидыСИЗ.НайтиПоНаименованию(СокрЛП(Элемент.vid_SIZ),Истина),Справочники.ВидыСИЗ.ПустаяСсылка());
		
		Если ТипЗнч(Элемент.metrika_item) = Тип("ОбъектXDTO") Тогда
			
			НаименованиеМетрики = Элемент.metrika_item.metrika_name;
			КодМетрики 			= Число(Элемент.metrika_item.metrika_no);
			Метрика 			= ПроцедурыРаботыСНормамиСервер.ПолучитьМетрику(КодМетрики,НаименованиеМетрики);
			
			НоваяСтрока 							= ТаблицаСоответствий.Добавить();
			НоваяСтрока.РазмерКонф					= Размер;
			НоваяСтрока.РостКонф					= Рост;
			НоваяСтрока.ПолКонф						= Пол;
			НоваяСтрока.ДополнительноеУсловиеКонф 	= ДополнительноеУсловие;
			НоваяСтрока.МетрикаКонф 				= Метрика;
			
		Иначе
			
			Для Каждого ТекущийРазмер Из Элемент.metrika_item Цикл
				
				НаименованиеМетрики = ТекущийРазмер.metrika_name;
				КодМетрики 			= Число(ТекущийРазмер.metrika_no);
				Метрика 			= ПроцедурыРаботыСНормамиСервер.ПолучитьМетрику(КодМетрики,НаименованиеМетрики);
			
				НоваяСтрока 							= ТаблицаСоответствий.Добавить();
				НоваяСтрока.РазмерКонф					= Размер;
				НоваяСтрока.РостКонф					= Рост;
				НоваяСтрока.ПолКонф						= Пол;
				НоваяСтрока.ДополнительноеУсловиеКонф 	= ДополнительноеУсловие;
				НоваяСтрока.МетрикаКонф 				= Метрика;
				
			КонецЦикла;
			
		КонецЕсли;
			
	КонецЦикла;
	
	Возврат ТаблицаСоответствий;
	
КонецФункции