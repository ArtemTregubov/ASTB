Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;  
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	ПараметрОрганизация = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Организация"));
	Если не ПараметрОрганизация = Неопределено Тогда
		Организация = ПараметрОрганизация.Значение;
		ПараметрОрганизация.Использование = Истина;
	Иначе
		Возврат;
	КонецЕсли;
	
	ПараметрПериод = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	Если не ПараметрПериод = Неопределено Тогда
		ДатаНачала 		= ПараметрПериод.Значение.ДатаНачала;
		ДатаОкончания 	= ПараметрПериод.Значение.ДатаОкончания;
		ПараметрПериод.Использование = Истина;
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВредныеИОпасныеПроизводственныеРаботыВрачи.Ссылка КАК ФакторРабота,
	|	ВредныеИОпасныеПроизводственныеРаботыВрачи.Периодичность.Приоритет КАК ПериодичностьПриоритет
	|ПОМЕСТИТЬ ВТ_ПриоритетПериодичностиФакторовРабот
	|ИЗ
	|	Справочник.ВредныеИОпасныеПроизводственныеРаботы.Врачи КАК ВредныеИОпасныеПроизводственныеРаботыВрачи
	|ГДЕ
	|	НЕ ВредныеИОпасныеПроизводственныеРаботыВрачи.Периодичность ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВредныеИОпасныеПроизводственныеФакторыВрачи.Ссылка,
	|	МАКСИМУМ(ВредныеИОпасныеПроизводственныеФакторыВрачи.Периодичность.Приоритет)
	|ИЗ
	|	Справочник.ВредныеИОпасныеПроизводственныеФакторы.Врачи КАК ВредныеИОпасныеПроизводственныеФакторыВрачи
	|ГДЕ
	|	НЕ ВредныеИОпасныеПроизводственныеФакторыВрачи.Периодичность ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВредныеИОпасныеПроизводственныеФакторыВрачи.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПриоритетПериодичностиФакторовРабот.ФакторРабота КАК ФакторРабота,
	|	ПериодичностьВыдачиСИЗ.Ссылка КАК Периодичность
	|ПОМЕСТИТЬ ВТ_ПериодичностьФакторовРабот
	|ИЗ
	|	ВТ_ПриоритетПериодичностиФакторовРабот КАК ВТ_ПриоритетПериодичностиФакторовРабот
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПериодичностьВыдачиСИЗ КАК ПериодичностьВыдачиСИЗ
	|		ПО ВТ_ПриоритетПериодичностиФакторовРабот.ПериодичностьПриоритет = ПериодичностьВыдачиСИЗ.Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПриказыНаПроведениеМедицинскихОсмотровСрезПоследних.Подразделение КАК Подразделение,
	|	ПриказыНаПроведениеМедицинскихОсмотровСрезПоследних.Должность КАК Должность,
	|	ПриказыНаПроведениеМедицинскихОсмотровСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ПриказыНаПроведениеМедицинскихОсмотровСрезПоследних.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_ПриказыНаМедосмотры
	|ИЗ
	|	РегистрСведений.ПриказыНаПроведениеМедицинскихОсмотров.СрезПоследних(, Организация = &Организация) КАК ПриказыНаПроведениеМедицинскихОсмотровСрезПоследних
	|ГДЕ
	|	ПриказыНаПроведениеМедицинскихОсмотровСрезПоследних.Проводить
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗанятыеРабочиеМестаОбороты.Подразделение КАК Подразделение,
	|	ЗанятыеРабочиеМестаОбороты.Должность КАК Должность,
	|	ЗанятыеРабочиеМестаОбороты.РабочееМесто КАК РабочееМесто,
	|	ЗанятыеРабочиеМестаОбороты.Сотрудник КАК Сотрудник,
	|	НАЧАЛОПЕРИОДА(ЗанятыеРабочиеМестаОбороты.Период, МЕСЯЦ) КАК МесяцПриемаНаРаботу,
	|	СУММА(ЗанятыеРабочиеМестаОбороты.КоличествоПриход) КАК КоличествоПриход
	|ПОМЕСТИТЬ ВТ_ПриемНаРаботу
	|ИЗ
	|	РегистрНакопления.ЗанятыеРабочиеМеста.Обороты(, , Регистратор, Организация = &Организация) КАК ЗанятыеРабочиеМестаОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗанятыеРабочиеМестаОбороты.Подразделение,
	|	ЗанятыеРабочиеМестаОбороты.Должность,
	|	ЗанятыеРабочиеМестаОбороты.РабочееМесто,
	|	ЗанятыеРабочиеМестаОбороты.Сотрудник,
	|	НАЧАЛОПЕРИОДА(ЗанятыеРабочиеМестаОбороты.Период, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗанятыеРабочиеМестаОстатки.Подразделение КАК Подразделение,
	|	ЗанятыеРабочиеМестаОстатки.Должность КАК Должность,
	|	ЗанятыеРабочиеМестаОстатки.РабочееМесто КАК РабочееМесто,
	|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник,
	|	ВТ_ПриемНаРаботу.МесяцПриемаНаРаботу КАК МесяцПриемаНаРаботу
	|ПОМЕСТИТЬ ВТ_Сотрудники
	|ИЗ
	|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриемНаРаботу КАК ВТ_ПриемНаРаботу
	|		ПО ЗанятыеРабочиеМестаОстатки.Подразделение = ВТ_ПриемНаРаботу.Подразделение
	|			И ЗанятыеРабочиеМестаОстатки.Должность = ВТ_ПриемНаРаботу.Должность
	|			И ЗанятыеРабочиеМестаОстатки.РабочееМесто = ВТ_ПриемНаРаботу.РабочееМесто
	|			И ЗанятыеРабочиеМестаОстатки.Сотрудник = ВТ_ПриемНаРаботу.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.Организация КАК Организация,
	|	ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.Подразделение КАК Подразделение,
	|	ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.Должность КАК Должность,
	|	ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.РабочееМесто КАК РабочееМесто,
	|	ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.ФакторРабота КАК ФакторРабота,
	|	ВТ_Сотрудники.Сотрудник КАК Сотрудник,
	|	ВТ_Сотрудники.МесяцПриемаНаРаботу КАК ДатаМедосмотра,
	|	ВЫБОР
	|		КОГДА ВТ_ПериодичностьФакторовРабот.Периодичность.ТипПериода = ЗНАЧЕНИЕ(Перечисление.ДоступныеПериодыОтчета.Год)
	|			ТОГДА 12 * ВТ_ПериодичностьФакторовРабот.Периодичность.КоличествоПериодов / ВТ_ПериодичностьФакторовРабот.Периодичность.КоличествоВПериоде
	|		ИНАЧЕ ВТ_ПериодичностьФакторовРабот.Периодичность.КоличествоПериодов / ВТ_ПериодичностьФакторовРабот.Периодичность.КоличествоВПериоде
	|	КОНЕЦ КАК ИнтервалВМесяцах,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыМедосмотров.Периодический) КАК ВидМедосмотра,
	|	1 КАК Проходить
	|ИЗ
	|	РегистрСведений.ВредныеИОпасныеФакторыИРаботыНаРабочихМестах.СрезПоследних(, Организация = &Организация) КАК ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриказыНаМедосмотры КАК ВТ_ПриказыНаМедосмотры
	|		ПО (ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|				ИЛИ ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.Подразделение = ВТ_ПриказыНаМедосмотры.Подразделение)
	|			И (ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|				ИЛИ ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.Должность = ВТ_ПриказыНаМедосмотры.Должность)
	|			И (ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|				ИЛИ ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.РабочееМесто = ВТ_ПриказыНаМедосмотры.РабочееМесто)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодичностьФакторовРабот КАК ВТ_ПериодичностьФакторовРабот
	|		ПО ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.ФакторРабота = ВТ_ПериодичностьФакторовРабот.ФакторРабота
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сотрудники КАК ВТ_Сотрудники
	|		ПО (ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка)
	|				ИЛИ ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.Подразделение = ВТ_Сотрудники.Подразделение)
	|			И (ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.Должность = ЗНАЧЕНИЕ(Справочник.ДолжностиИПрофессии.ПустаяСсылка)
	|				ИЛИ ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.Должность = ВТ_Сотрудники.Должность)
	|			И (ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМестаАСТБ.ПустаяСсылка)
	|				ИЛИ ВредныеИОпасныеФакторыИРаботыНаРабочихМестахСрезПоследних.РабочееМесто = ВТ_Сотрудники.РабочееМесто)
	|ГДЕ
	|	НЕ ВТ_ПриказыНаМедосмотры.Организация ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаМедосмотра";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	
	//предварительная таблица
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	//результат для передачи в СКД
	ТаблицаДляВывода = ТаблицаЗапроса.Скопировать();
	ТаблицаДляВывода.Очистить();
	
	Для Каждого СтрокаТаблицыЗапроса Из ТаблицаЗапроса Цикл
		
		Если НачалоМесяца(ДатаНачала) <= СтрокаТаблицыЗапроса.ДатаМедосмотра Тогда
			НоваяСтрока 				= ТаблицаДляВывода.Добавить();
		    ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыЗапроса);
			НоваяСтрока.ВидМедосмотра 	= Перечисления.ВидыМедосмотров.Предварительный;
		КонецЕсли;
		
		СледующаяДатаМедосмотра = ДобавитьМесяц(СтрокаТаблицыЗапроса.ДатаМедосмотра,СтрокаТаблицыЗапроса.ИнтервалВМесяцах);
		
		Пока НачалоМесяца(СледующаяДатаМедосмотра) <= НачалоМесяца(ДатаОкончания) Цикл
			
			Если НачалоМесяца(ДатаНачала) <= НачалоМесяца(СледующаяДатаМедосмотра) Тогда
				НоваяСтрока = ТаблицаДляВывода.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицыЗапроса);
				НоваяСтрока.ДатаМедосмотра = НачалоМесяца(СледующаяДатаМедосмотра);
			КонецЕсли;
			
			СледующаяДатаМедосмотра = ДобавитьМесяц(НачалоМесяца(СледующаяДатаМедосмотра),СтрокаТаблицыЗапроса.ИнтервалВМесяцах);
			
		КонецЦикла;	
		
	КонецЦикла;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	// Скомпонуем результат
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	
	НаборыВнешнихДанных = Новый Структура;
	НаборыВнешнихДанных.Вставить("ТаблицаДляВывода",ТаблицаДляВывода);
	
	//Инициализировать(<Макет>, <ВнешниеНаборыДанных>, <ДанныеРасшифровки>, <ВозможностьИспользованияВнешнихФункций>) 
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,НаборыВнешнихДанных , ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры	