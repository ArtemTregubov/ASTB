
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь; // отключаем стандартный вывод отчета - будем выводить программно 
	
	УстановитьПривилегированныйРежим(Истина);
		
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();// Получаем настройки отчета
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; // Создаем данные расшифровки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; // Создаем компоновщик макета 

	//инициализируем настройки параметров отчета
	Параметр = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаАнализа"));
	Если не Параметр = Неопределено Тогда
		ДатаАнализа = КонецДня(Параметр.Значение.Дата);
		Параметр.Использование = Истина;
	Иначе
		Возврат;
	КонецЕсли;
	
	Параметр = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Организация"));
	Если не Параметр = Неопределено Тогда
		Организация = Параметр.Значение;
		Параметр.Использование = Истина;
	Иначе
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЗанятыеРабочиеМестаОстатки.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрНакопления.ЗанятыеРабочиеМеста.Остатки(&ДатаАнализа, Организация = &Организация) КАК ЗанятыеРабочиеМестаОстатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗанятыеРабочиеМестаОстатки.Сотрудник.Наименование";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ДатаАнализа",ДатаАнализа);
	
	МассивСотрудников = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
	
	ГраницаАнализа = ПроцедурыРаботыСНормамиСервер.ПолучитьГраницуАнализаПоДокументу(Неопределено);
	
	ТаблицаЗанятыхРМ 			= ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуЗанятыхРабочихМестСУсловиями(МассивСотрудников,Организация,ГраницаАнализа);
	ТаблицаУстановленныхНорм 	= ПроцедурыРаботыСНормамиСервер.ПолучитьТаблицуУстановленныхНорм(Организация,ГраницаАнализа,ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Подразделение"),ТаблицаЗанятыхРМ.ВыгрузитьКолонку("Должность"),Неопределено);
	ТаблицаСНормами 			= ПроцедурыРаботыСНормамиСервер.ПодобратьНормы(ТаблицаЗанятыхРМ,ТаблицаУстановленныхНорм,Организация,ГраницаАнализа);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНормСотрудников.Сотрудник КАК Сотрудник,
	|	ТаблицаНормСотрудников.Подразделение КАК Подразделение,
	|	ТаблицаНормСотрудников.НормаВыдачи КАК НормаВыдачи,
	|	ТаблицаНормСотрудников.НоменклатураНормы КАК НоменклатураНормы
	|ПОМЕСТИТЬ ВТ_НормыСотрудников
	|ИЗ
	|	&ТаблицаНормСотрудников КАК ТаблицаНормСотрудников
	|ГДЕ
	|	ТаблицаНормСотрудников.Использовать
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	ВТ_НормыСотрудников.Подразделение КАК Подразделение,
	|	НормыВыдачиСИЗСоставНормы.НоменклатураНормы КАК НоменклатураНормы,
	|	1 КАК КоличествоСотрудников
	|ПОМЕСТИТЬ ВТ_НоменклатураНормСотрудников
	|ИЗ
	|	ВТ_НормыСотрудников КАК ВТ_НормыСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НормыВыдачиСИЗ.СоставНормы КАК НормыВыдачиСИЗСоставНормы
	|		ПО ВТ_НормыСотрудников.НормаВыдачи = НормыВыдачиСИЗСоставНормы.Ссылка
	|			И ВТ_НормыСотрудников.НоменклатураНормы = НормыВыдачиСИЗСоставНормы.НоменклатураНормы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО ВТ_НормыСотрудников.Сотрудник = Сотрудники.Ссылка
	|ГДЕ
	|	НормыВыдачиСИЗСоставНормы.Ссылка.ВидРасчета = ЗНАЧЕНИЕ(Перечисление.ВидыРасчетаНорм.Дежурный)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НоменклатураНормСотрудников.Подразделение КАК Подразделение,
	|	ВТ_НоменклатураНормСотрудников.НоменклатураНормы КАК НоменклатураНормы,
	|	ВТ_НоменклатураНормСотрудников.Сотрудник КАК Сотрудник,
	|	СУММА(ВТ_НоменклатураНормСотрудников.КоличествоСотрудников) КАК КоличествоСотрудников
	|ИЗ
	|	ВТ_НоменклатураНормСотрудников КАК ВТ_НоменклатураНормСотрудников
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НоменклатураНормСотрудников.Подразделение,
	|	ВТ_НоменклатураНормСотрудников.НоменклатураНормы,
	|	ВТ_НоменклатураНормСотрудников.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_НоменклатураНормСотрудников.НоменклатураНормы.Наименование,
	|	ВТ_НоменклатураНормСотрудников.Подразделение,
	|	ВТ_НоменклатураНормСотрудников.Сотрудник.Наименование";
	
	Запрос.УстановитьПараметр("ТаблицаНормСотрудников",	ТаблицаСНормами);
	
	ТаблицаДляВывода = Запрос.Выполнить().Выгрузить();
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	// Скомпонуем результат
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	
	НаборыВнешнихДанных = Новый Структура;
	НаборыВнешнихДанных.Вставить("ТаблицаДляВывода",ТаблицаДляВывода);
	
	//Инициализировать(<Макет>, <ВнешниеНаборыДанных>, <ДанныеРасшифровки>, <ВозможностьИспользованияВнешнихФункций>) 
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,НаборыВнешнихДанных , ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры
